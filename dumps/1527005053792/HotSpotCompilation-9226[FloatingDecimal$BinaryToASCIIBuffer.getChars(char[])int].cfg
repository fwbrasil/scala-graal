begin_compilation
  name " HotSpotCompilation-9226[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])]"
  method "HotSpotCompilation-9226[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])]"
  date 1527005200762
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1303 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1303  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1317 ?124 v1318 ?310 ?74 v1321 ?131 ?95 v1322 v1323 ?266 ?151 ?49 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1303 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1322 
=== Succesors ===
next: i1304 
=== Usages ===
v801 a587 v1324 v1350 v1351 a1353 a1354 a1355 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1322 #next: i1304  <|@  <|@
f <@~|@floating>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1304 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1323 
=== Succesors ===
next: i1305 
=== Usages ===
j1090 i59 v611 v419 v1329 i138 v641 v552 v594 j1301 j1302 
=== Predecessor ===
a1303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1323 #next: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1305 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1321 
=== Succesors ===
next: i1306 
=== Usages ===
i812 v238 v51 i56 v134 i145 j1117 i360 i616 i551 i610 v605 i119 i1289 j1296 
=== Predecessor ===
i1304 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1321 #next: i1306  <|@  <|@
f <@~|@floating>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1306 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1318 
=== Succesors ===
next: i1307 
=== Usages ===
v97 i162 v44 v20 i107 v26 i812 v238 i165 v83 i837 
=== Predecessor ===
i1305 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1318 #next: i1307  <|@  <|@
f <@~|@floating>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1317 
=== Succesors ===
next: v10 
=== Usages ===
i369 
=== Predecessor ===
i1306 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1317 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1307 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1307  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 v459 i322 v97 i323 v378 v470 v605 v594 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i369 
y: i5 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i369 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i322 v20 i46 i178 i282 i329 i162 i138 i148 i274 v1201 i323 i327 j969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1306 
y: i4 
=== Succesors ===
=== Usages ===
v23 v352 v156 v79 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1306 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1304 
y: i5 
=== Succesors ===
=== Usages ===
v597 v538 v405 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1304 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1303 
=== Succesors ===
=== Usages ===
i1310 i1312 i1313 i1314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1303  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i237 i273 i281 i333 i335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j971 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i64 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i64
value: long[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
j973 j975 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j956 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j965 j979 j980 j981 j1206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j977 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j981 j1206 v1254 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j383 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j974 j972 j973 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 i225 i335 i234 i235 i287 i297 i327 i333 i329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i796 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
rawvalue: 48
stableDimension: 0
stamp: i16 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i16
value: short[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 v518 v1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i794 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
rawvalue: 46
stableDimension: 0
stamp: i16 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i16
value: short[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v454 v526 v663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i790 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v387 v787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a995 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v998 v1060 a1023 a1023 v1070 v1006 v1014 a1023 a1023 a1023 a1023 v1042 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1320 v1352 ?310 ?255 ?151 ?266 j1094 ?49 ?171 ?124 ?74 j1121 v1332 ?131 ?95 v1319 v1331 v1325 v1326 j1106 v1334 v1327 v1328 v1335 j1115 j1132 v1333 v1330 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1308 i1309 i1311 i1315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
stamp: void
trueSuccessorProbability: 0.9997646283481617
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
i1307 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180298760650383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
stamp: void
trueSuccessorProbability: 0.8245601647543395
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v350 
falseSuccessor: v351 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v350 #falseSuccessor: v351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 4605600449146731052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
v350 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595487418746212747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid j976 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j979 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552815705264164864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1308 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1308  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 906
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - 
=== Succesors ===
=== Usages ===
v998 i1308 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1308 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1319 
=== Succesors ===
next: v859 
=== Usages ===
v378 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1319 #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1308 
y: i5 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1308 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v858 
falseSuccessor: v856 
=== Usages ===
=== Predecessor ===
i1308 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v858 #falseSuccessor: v856  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@~|@floating>@ <|@
tid i1000 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -201755
stableDimension: 0
stamp: i32 [-201755] ⇊00000000fffcebe5 ⇈00000000fffcebe5
stampKind: i32
value: int[-201755|0xfffffffffffcebe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v998 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1000 
speculation: a995 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1000 speculation: a995  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552815705264164864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
v387 
=== Predecessor ===
v859 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v856 
address: v1320 
value: i790 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v856 address: v1320 value: i790 stateAfter: - lastLocationAccess: - #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid j963 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i64 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j965 j980 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
stamp: void
trueSuccessorProbability: 0.8245601647543395
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v21 #falseSuccessor: v22  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B36" 
    xhandlers
    flags 
    probability 4551292241656806685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid j389 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j975 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541218679191522188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B35" 
    xhandlers
    flags 
    probability 4595488906503641808
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j980 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v308 
values: j963 j956 
=== Succesors ===
=== Usages ===
j965 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: j963 j956  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v308 
values: i4 i5 
=== Succesors ===
=== Usages ===
v425 v1337 ?310 i42 i323 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: i4 i5  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v308 
values: i133 i4 
=== Succesors ===
=== Usages ===
i327 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: i133 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i335 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v308 
values: i236 i133 
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: i236 i133  <|@  <|@
f <@~|@floating>@ <|@
tid j981 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 2] ⇈0000000000000002
valueDescription: i64
=== Inputs ===
merge: v308 
values: j956 j977 
=== Succesors ===
=== Usages ===
j972 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: j956 j977  <|@  <|@
f <@~|@floating>@ <|@
tid j979 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [1 - 2] ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v308 
values: j956 j976 
=== Succesors ===
=== Usages ===
j969 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: j956 j976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v309 v311 
=== Succesors ===
next: v32 
=== Usages ===
j980 i322 i329 i335 j981 j979 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v309 v311 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 54]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1306 
y: i25 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1306 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
stamp: void
trueSuccessorProbability: 0.9952377758400965
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v31 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v27 #falseSuccessor: v31  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1351 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1351  <|@  <|@
tid ?310 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 912
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i322 - - 
=== Succesors ===
=== Usages ===
v1070 v1351 v1352 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i322 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?310 
object: a1303 
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?310 object: a1303 #next: v1352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?310 
object: a2 
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v1351 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?310 object: a2 #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1306 
y: i1305 
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1306 y: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid i812 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v238 
trueValue: i1306 
falseValue: i1305 
=== Succesors ===
=== Usages ===
i424 i418 j1099 i59 i42 v44 ?49 v51 i56 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v238 trueValue: i1306 falseValue: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i812 
y: i1306 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i812 y: i1306  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v870 
falseSuccessor: v868 
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v870 #falseSuccessor: v868  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1073 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1073  <|@  <|@
f <@~|@floating>@ <|@
tid i1074 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -112915
stableDimension: 0
stamp: i32 [-112915] ⇊00000000fffe46ed ⇈00000000fffe46ed
stampKind: i32
value: int[-112915|0xfffffffffffe46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1068 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v870 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B33" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1309 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1309 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1319 
=== Succesors ===
next: v875 
=== Usages ===
v446 v499 i481 i424 
=== Predecessor ===
v868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1319 #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
stamp: i32
=== Inputs ===
x: i322 
y: i812 
=== Succesors ===
=== Usages ===
i46 v1325 i225 v446 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i322 y: i812  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i1309 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i1309  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v872 
falseSuccessor: v874 
=== Usages ===
=== Predecessor ===
i1309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v872 #falseSuccessor: v874  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v405 
=== Usages ===
v454 
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid i1078 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -110177
stableDimension: 0
stamp: i32 [-110177] ⇊00000000fffe519f ⇈00000000fffe519f
stampKind: i32
value: int[-110177|0xfffffffffffe519f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1068 i1068 i1068 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v594 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v403 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v594 #trueSuccessor: v404 #falseSuccessor: v403  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565695027361111979
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4595395897179245049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1310 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1310 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1324 
=== Succesors ===
next: v423 
=== Usages ===
i418 i475 
=== Predecessor ===
v403 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1324 #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: i32
=== Inputs ===
x: i1310 
y: i812 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1310 y: i812  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i418 
y: i1304 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i418 y: i1304  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v419 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
i1310 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v419 #trueSuccessor: v422 #falseSuccessor: v420  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565614505316490279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@*|@fixed>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595333618410357953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: i32
=== Inputs ===
x: i1309 
y: i812 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1309 y: i812  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i322 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i424 y: i322  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v426 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v428 #falseSuccessor: v426  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565534788492314796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1079 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1079  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v428 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B29" 
    xhandlers
    flags 
    probability 4595271962429159728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1089 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1089  <|@  <|@
f <@~|@floating>@ <|@
tid a1355 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1303 
=== Succesors ===
=== Usages ===
j1089 j1101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: i64
=== Inputs ===
object: a1355 
=== Succesors ===
next: j1094 
=== Usages ===
v1336 
=== Predecessor ===
v426 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1355 #next: j1094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v1100 
=== Usages ===
v1337 
=== Predecessor ===
j1089 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2 #next: v1100  <|@  <|@
f <@~|@floating>@ <|@
tid j1090 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1304 
=== Succesors ===
=== Usages ===
v1336 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1304  <|@  <|@
f <@~|@floating>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1089 
index: j1090 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1089 index: j1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1094 
index: i322 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1094 index: i322  <|@  <|@
f <@~|@floating>@ <|@
tid j1099 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i812 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1336 v1337 j1099 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
j1094 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1336 v1337 j1099 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i42 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v872 
address: v1325 
value: i794 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v872 address: v1325 value: i794 stateAfter: - lastLocationAccess: - #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
stamp: i32
=== Inputs ===
x: i42 
y: i4 
=== Succesors ===
=== Usages ===
?49 j1107 v499 i62 v1326 v482 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i42 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i812 
y: i1305 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i812 y: i1305  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 150]
stamp: void
trueSuccessorProbability: 0.07837983555735273
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4578808437478284942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:926) [bci: 153]
stamp: void
=== Inputs ===
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 170]
stamp: i32
=== Inputs ===
x: i812 
y: i1304 
=== Succesors ===
=== Usages ===
j1102 v459 v476 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i812 y: i1304  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i5 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i59 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i1008 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124769
stableDimension: 0
stamp: i32 [-124769] ⇊00000000fffe189f ⇈00000000fffe189f
stampKind: i32
value: int[-124769|0xfffffffffffe189f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1004 i1004 i1004 i1004 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v459 
=== Succesors ===
trueSuccessor: v461 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v459 #trueSuccessor: v461 #falseSuccessor: v460  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B32" 
    xhandlers
    flags 
    probability 4549031106063058630
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1007 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1007  <|@  <|@
f <@*|@fixed>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v461 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4578731889321312627
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:926) [bci: 158]
stamp: i32
=== Inputs ===
x: i1305 
y: i812 
=== Succesors ===
=== Usages ===
j1111 i481 i62 v470 i475 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1305 y: i812  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i56 
y: i5 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i56 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v470 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v470 #trueSuccessor: v473 #falseSuccessor: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548982115242596348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1084 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1084  <|@  <|@
f <@*|@fixed>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4578656106645910035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: i32
=== Inputs ===
x: i1310 
y: i56 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1310 y: i56  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i475 
y: i59 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i475 y: i59  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v477 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v479 #falseSuccessor: v477  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548933614330338689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v479 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4578581081797261469
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: i32
=== Inputs ===
x: i1309 
y: i56 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1309 y: i56  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i481 
y: i46 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i481 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v483 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v485 #falseSuccessor: v483  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548885598427203607
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4578506807197099389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1101 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: i64
=== Inputs ===
object: a1355 
=== Succesors ===
next: j1106 
=== Usages ===
v1338 
=== Predecessor ===
v483 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1355 #next: j1106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v1112 
=== Usages ===
v1339 
=== Predecessor ===
j1101 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2 #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid j1102 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i59 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i59  <|@  <|@
f <@~|@floating>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1101 
index: j1102 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1101 index: j1102  <|@  <|@
f <@~|@floating>@ <|@
tid j1107 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i46 
=== Succesors ===
=== Usages ===
v1339 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i46  <|@  <|@
f <@~|@floating>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1106 
index: j1107 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1106 index: j1107  <|@  <|@
f <@~|@floating>@ <|@
tid j1111 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i56 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i56  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1338 v1339 j1111 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
j1106 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1338 v1339 j1111 #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:928) [bci: 181]
stamp: i32
=== Inputs ===
x: i46 
y: i56 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i46 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i62 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i62 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4594793536448082759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 186]
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i46 
y: i1309 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i46 y: i1309  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v876 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v876 #falseSuccessor: v878  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4594793536448082759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
v507 
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i46 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v876 
address: v1326 
value: i796 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v876 address: v1326 value: i796 stateAfter: - lastLocationAccess: - #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 188]
stamp: i32
=== Inputs ===
x: i42 
y: i133 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i42 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i225 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i225 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid i1003 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128027
stableDimension: 0
stamp: i32 [-128027] ⇊00000000fffe0be5 ⇈00000000fffe0be5
stampKind: i32
value: int[-128027|0xfffffffffffe0be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1004 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v878 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B21" "B27" "B25" "B23" 
    successors 
    xhandlers
    flags 
    probability 4557965307770540310
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1004 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-128027 - -124769] ⇊00000000fffe0885 ⇈00000000fffe1bff
valueDescription: i32
=== Inputs ===
merge: v1001 
values: i1003 i1008 i1008 i1008 i1008 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1001 values: i1003 i1008 i1008 i1008 i1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1002 v1007 v1082 v1083 v1084 
=== Succesors ===
next: v1006 
=== Usages ===
i1004 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1002 v1007 v1082 v1083 v1084 #next: v1006  <|@  <|@
tid ?49 <|@
d <@d|@=== Debug Properties ===
bci: 145
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 925
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i46 i812 - 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i46 i812 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?49 
actionAndReason: i1004 
speculation: a995 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?49 actionAndReason: i1004 speculation: a995  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid i1076 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -114459
stableDimension: 0
stamp: i32 [-114459] ⇊00000000fffe40e5 ⇈00000000fffe40e5
stampKind: i32
value: int[-114459|0xfffffffffffe40e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1068 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B11" "B33" "B14" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4572628985271955744
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1068 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-114459 - -110177] ⇊00000000fffe4085 ⇈00000000fffe5fff
valueDescription: i32
=== Inputs ===
merge: v1065 
values: i1074 i1076 i1078 i1078 i1078 
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1065 values: i1074 i1076 i1078 i1078 i1078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1073 v1075 v1077 v1079 v1080 
=== Succesors ===
next: v1070 
=== Usages ===
i1068 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1073 v1075 v1077 v1079 v1080 #next: v1070  <|@  <|@
f <@*|@fixed>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?310 
actionAndReason: i1068 
speculation: a995 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?310 actionAndReason: i1068 speculation: a995  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4560845201392801771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid j969 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
stamp: i64 [2 - 4] ⇈0000000000000006
=== Inputs ===
x: j979 
y: i4 
=== Succesors ===
=== Usages ===
j974 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j979 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j974 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
=== Inputs ===
x: j969 
y: j383 
=== Succesors ===
=== Usages ===
j975 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j969 y: j383  <|@  <|@
f <@~|@floating>@ <|@
tid j972 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
=== Inputs ===
x: j981 
y: j383 
=== Succesors ===
=== Usages ===
j973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j981 y: j383  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
v31 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B35" "B2" 
    successors "B37" "B86" 
    xhandlers
    flags 
    probability 4605609722615999826
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j965 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v29 
values: j963 j980 j956 
=== Succesors ===
=== Usages ===
j841 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v29 values: j963 j980 j956  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v29 
values: i4 i322 i5 
=== Succesors ===
=== Usages ===
?74 v654 v512 ?124 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v29 values: i4 i322 i5  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v29 
values: i133 i329 i4 
=== Succesors ===
=== Usages ===
v520 v660 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v29 values: i133 i329 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v29 
values: i236 i335 i133 
=== Succesors ===
=== Usages ===
?95 v267 v1345 ?266 i107 i360 ?131 v558 v847 i146 v1335 v844 v693 v1341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v29 values: i236 i335 i133  <|@  <|@
f <@~|@floating>@ <|@
tid j973 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v29 
values: j971 j972 j383 
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v29 values: j971 j972 j383  <|@  <|@
f <@~|@floating>@ <|@
tid j975 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v29 
values: j389 j974 j971 
=== Succesors ===
=== Usages ===
v1328 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v29 values: j389 j974 j971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v28 v30 v353 
=== Succesors ===
next: v79 
=== Usages ===
j965 i323 i327 i333 j973 j975 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v28 v30 v353 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j975 
=== Succesors ===
=== Usages ===
v526 v663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j975  <|@  <|@
f <@~|@floating>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j973 
=== Succesors ===
=== Usages ===
v518 v658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j973  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 191]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i218 ?255 i212 i179 i1347 i199 i1348 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 201]
stamp: void
trueSuccessorProbability: 0.998987666642903
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v78 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v77 #falseSuccessor: v78  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605602196420547892
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 204]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1306 
y: i82 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1306 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
stamp: void
trueSuccessorProbability: 0.008891362676257342
=== Inputs ===
condition: v83 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v83 #trueSuccessor: v88 #falseSuccessor: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B87" 
    xhandlers
    flags 
    probability 4575102623111918487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B84" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 213]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1311 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1311  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 197
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 933
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i323 - - 
=== Succesors ===
=== Usages ===
v1014 i1311 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i323 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1311 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?74 
guard: - 
address: v1319 
=== Succesors ===
next: v887 
=== Usages ===
v512 v520 v269 v844 i616 j834 i1289 
=== Predecessor ===
v87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?74 guard: - address: v1319 #next: v887  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i323 
y: i1311 
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i323 y: i1311  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v512 
=== Succesors ===
trueSuccessor: v884 
falseSuccessor: v886 
=== Usages ===
=== Predecessor ===
i1311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v512 #trueSuccessor: v884 #falseSuccessor: v886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B83" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
v518 
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i327 
y: i1311 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i327 y: i1311  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v520 
=== Succesors ===
trueSuccessor: v888 
falseSuccessor: v890 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v520 #trueSuccessor: v888 #falseSuccessor: v890  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B51" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
v526 
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v884 
address: v1327 
value: i796 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v884 address: v1327 value: i796 stateAfter: - lastLocationAccess: - #next: v526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v888 
address: v1328 
value: i794 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v888 address: v1328 value: i794 stateAfter: - lastLocationAccess: - #next: v100  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
bci: 229
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 936
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i333 - - 
=== Succesors ===
=== Usages ===
v1024 v1350 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i333 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1306 
y: i5 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1306 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1305 
y: i5 
=== Succesors ===
=== Usages ===
v609 v550 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1305 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
stamp: void
trueSuccessorProbability: 0.8206833988509223
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604216221566683794
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?95 
object: a1303 
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?95 object: a1303 #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid i1036 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144225
stableDimension: 0
stamp: i32 [-144225] ⇊00000000fffdcc9f ⇈00000000fffdcc9f
stampKind: i32
value: int[-144225|0xfffffffffffdcc9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1022 i1022 i1022 i1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v594 
=== Succesors ===
trueSuccessor: v537 
falseSuccessor: v536 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v594 #trueSuccessor: v537 #falseSuccessor: v536  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574382504741084395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v537 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604155811546469720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v605 
=== Succesors ===
trueSuccessor: v549 
falseSuccessor: v547 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v605 #trueSuccessor: v549 #falseSuccessor: v547  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574305179915210380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v549 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4604096005626457787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1312 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1312 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1324 
=== Succesors ===
next: v556 
=== Usages ===
i551 
=== Predecessor ===
v547 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1324 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i32
=== Inputs ===
x: i1312 
y: i1305 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1312 y: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i551 
y: i1304 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i551 y: i1304  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v552 
=== Succesors ===
trueSuccessor: v555 
falseSuccessor: v553 
=== Usages ===
=== Predecessor ===
i1312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v552 #trueSuccessor: v555 #falseSuccessor: v553  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574228628337595106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1087  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4604036797765645973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid i1289 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i32
=== Inputs ===
x: i1311 
y: i1305 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1311 y: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1289 
y: i333 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1289 y: i333  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v558 
=== Succesors ===
trueSuccessor: v561 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v558 #trueSuccessor: v561 #falseSuccessor: v559  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574152842275755984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@*|@fixed>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4603978181983442277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1113 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1113  <|@  <|@
f <@~|@floating>@ <|@
tid a1353 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1303 
=== Succesors ===
=== Usages ===
j1113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i64
=== Inputs ===
object: a1353 
=== Succesors ===
next: j1115 
=== Usages ===
v1340 
=== Predecessor ===
v559 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1353 #next: j1115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v1118 
=== Usages ===
v1341 
=== Predecessor ===
j1113 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2 #next: v1118  <|@  <|@
f <@~|@floating>@ <|@
tid j1301 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1304 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1304  <|@  <|@
f <@~|@floating>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1113 
index: j1301 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1113 index: j1301  <|@  <|@
f <@~|@floating>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1115 
index: i333 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1115 index: i333  <|@  <|@
f <@~|@floating>@ <|@
tid j1117 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1305 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1340 v1341 j1117 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
j1115 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1340 v1341 j1117 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:941) [bci: 278]
stamp: i32
=== Inputs ===
x: i333 
y: i1305 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i333 y: i1305  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i360 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1118 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i360 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 236]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1280 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1280  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 254]
stamp: i32
=== Inputs ===
x: i333 
y: i1306 
=== Succesors ===
=== Usages ===
i119 v617 v267 v269 ?255 j1122 v847 ?255 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i333 y: i1306  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i333 
y: i107 
=== Succesors ===
=== Usages ===
v1280 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i333 y: i107  <|@  <|@
f <@~|@floating>@ <|@
tid i837 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
stamp: i32
=== Inputs ===
value: i1306 
=== Succesors ===
=== Usages ===
j838 v1201 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i1306  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i837 
=== Succesors ===
=== Usages ===
j840 j1253 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i837  <|@  <|@
f <@~|@floating>@ <|@
tid j839 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j840 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j840 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j838 
y: j839 
=== Succesors ===
=== Usages ===
j841 v1256 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j838 y: j839  <|@  <|@
f <@*|@fixed>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v847 
=== Succesors ===
trueSuccessor: v1279 
falseSuccessor: v1276 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v847 #trueSuccessor: v1279 #falseSuccessor: v1276  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B56" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1288 
=== Usages ===
=== Predecessor ===
v1280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1288  <|@  <|@
f <@~|@floating>@ <|@
tid j841 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483647 - 2147483649]
=== Inputs ===
x: j840 
y: j965 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j840 y: j965  <|@  <|@
f <@~|@floating>@ <|@
tid j834 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1311 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1311  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j841 
y: j834 
=== Succesors ===
=== Usages ===
v1288 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j841 y: j834  <|@  <|@
f <@~|@floating>@ <|@
tid a1030 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@575684881
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@575684881]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1023 a1023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1029 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148251
stableDimension: 0
stamp: i32 [-148251] ⇊00000000fffdbce5 ⇈00000000fffdbce5
stampKind: i32
value: int[-148251|0xfffffffffffdbce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1022 i1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v843 
=== Succesors ===
trueSuccessor: v1287 
falseSuccessor: v1284 
=== Usages ===
=== Predecessor ===
v1279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v843 #trueSuccessor: v1287 #falseSuccessor: v1284  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1286 
=== Usages ===
=== Predecessor ===
v1288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1286  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i333 
y: i1311 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i333 y: i1311  <|@  <|@
f <@*|@fixed>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v844 
=== Succesors ===
trueSuccessor: v1277 
falseSuccessor: v1285 
=== Usages ===
=== Predecessor ===
v1287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v844 #trueSuccessor: v1277 #falseSuccessor: v1285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1275 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1275  <|@  <|@
f <@*|@fixed>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1273 
=== Predecessor ===
v1277 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1349 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1349  <|@  <|@
f <@*|@fixed>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v1285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v1288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v1284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1274 
=== Usages ===
=== Predecessor ===
v1280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1273 
=== Predecessor ===
v1276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B54" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1274 v1275 
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1274 v1275 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.api.directives.GraalDirectives.guardingNonNull(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:117) [bci: 1]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
value: a1303 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1303  <|@  <|@
f <@*|@fixed>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.api.directives.GraalDirectives.guardingNonNull(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:117) [bci: 1]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v801 
=== Succesors ===
trueSuccessor: v902 
falseSuccessor: v900 
=== Usages ===
=== Predecessor ===
v1273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v801 #trueSuccessor: v902 #falseSuccessor: v900  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.api.directives.GraalDirectives.guardingNonNull(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:117) [bci: 1]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1025 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1025  <|@  <|@
f <@~|@floating>@ <|@
tid a1027 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1242173179
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1242173179]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1026 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -160011
stableDimension: 0
stamp: i32 [-160011] ⇊00000000fffd8ef5 ⇈00000000fffd8ef5
stampKind: i32
value: int[-160011|0xfffffffffffd8ef5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v902 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.api.directives.GraalDirectives.guardingNonNull(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:117) [bci: 1]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i333 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i107 y: i333  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v906 
falseSuccessor: v904 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v906 #falseSuccessor: v904  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid i1032 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147219
stableDimension: 0
stamp: i32 [-147219] ⇊00000000fffdc0ed ⇈00000000fffdc0ed
stampKind: i32
value: int[-147219|0xfffffffffffdc0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v906 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B65" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1311 
y: i107 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1311 y: i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v910 
falseSuccessor: v908 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v910 #falseSuccessor: v908  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid i1034 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147475
stableDimension: 0
stamp: i32 [-147475] ⇊00000000fffdbfed ⇈00000000fffdbfed
stampKind: i32
value: int[-147475|0xfffffffffffdbfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v910 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" "B56" "B61" "B63" "B43" "B49" "B47" "B45" "B55" 
    successors 
    xhandlers
    flags 
    probability 4583274488072152459
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1022 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-160011 - -144225] ⇊00000000fffd8085 ⇈00000000fffdffff
valueDescription: i32
=== Inputs ===
merge: v1019 
values: i1026 i1029 i1032 i1034 i1036 i1036 i1036 i1036 i1029 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1019 values: i1026 i1029 i1032 i1034 i1036 i1036 i1036 i1036 i1029  <|@  <|@
f <@~|@floating>@ <|@
tid a1023 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1019 
values: a1027 a1030 a995 a995 a995 a995 a995 a995 a1030 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1019 values: a1027 a1030 a995 a995 a995 a995 a995 a995 a1030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1025 v1028 v1031 v1033 v1035 v1086 v1087 v1088 v1349 
=== Succesors ===
next: v1024 
=== Usages ===
i1022 a1023 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1025 v1028 v1031 v1033 v1035 v1086 v1087 v1088 v1349 #next: v1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?95 
actionAndReason: i1022 
speculation: a1023 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?95 actionAndReason: i1022 speculation: a1023  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1203 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1143 
=== Usages ===
j1205 
=== Predecessor ===
v908 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1143  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i837 
y: i4 
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i837 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1201 
=== Succesors ===
trueSuccessor: v1141 
falseSuccessor: v1142 
=== Usages ===
=== Predecessor ===
v1203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1201 #trueSuccessor: v1141 #falseSuccessor: v1142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B73" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1159  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v1141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1191 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1191  <|@  <|@
f <@~|@floating>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i333 
=== Succesors ===
=== Usages ===
j1205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i333  <|@  <|@
f <@~|@floating>@ <|@
tid j1205 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1203 
address: v1335 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1203 address: v1335  <|@  <|@
f <@~|@floating>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1205 
index: - 
=== Succesors ===
=== Usages ===
v1261 v1263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1205 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1252 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1253 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1253 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j838 
y: j1252 
=== Succesors ===
=== Usages ===
v1254 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j838 y: j1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1253 
y: j977 
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1253 y: j977  <|@  <|@
f <@*|@fixed>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1254 
=== Succesors ===
trueSuccessor: v1190 
falseSuccessor: v1189 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1254 #trueSuccessor: v1190 #falseSuccessor: v1189  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580936977043935467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1194 
=== Usages ===
=== Predecessor ===
v1191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1194  <|@  <|@
f <@*|@fixed>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
v1190 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588080454489061728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1263 
=== Usages ===
=== Predecessor ===
v1191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1263  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <48,48>
stableDimension: 0
stamp: <i16 [48] ⇊0000000000000030 ⇈0000000000000030,i16 [48] ⇊0000000000000030 ⇈0000000000000030>
stampKind: <i16,i16>
value: SIMD<48,48>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1263 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1346 
value: v1270 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1346 value: v1270 stateAfter: - lastLocationAccess: - #next: v1173  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
v1263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1206 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 2] ⇈0000000000000002
valueDescription: i64
=== Inputs ===
merge: v1174 
values: j956 j977 
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1174 values: j956 j977  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1173 v1194 
=== Succesors ===
next: v1197 
=== Usages ===
j1206 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1173 v1194 #next: v1197  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j840 
y: j1206 
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j840 y: j1206  <|@  <|@
f <@*|@fixed>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1256 
=== Succesors ===
trueSuccessor: v1196 
falseSuccessor: v1195 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1256 #trueSuccessor: v1196 #falseSuccessor: v1195  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580936977043935467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1200 
=== Usages ===
=== Predecessor ===
v1197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1200  <|@  <|@
f <@*|@fixed>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v1196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4588080454489061728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1261 
=== Usages ===
=== Predecessor ===
v1197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1346 
value: i796 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1176 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1346 value: i796 stateAfter: - lastLocationAccess: - #next: v1176  <|@  <|@
f <@*|@fixed>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v1261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B66" "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1159 v1176 v1200 
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1159 v1176 v1200 #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v594 
=== Succesors ===
trueSuccessor: v596 
falseSuccessor: v595 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v594 #trueSuccessor: v596 #falseSuccessor: v595  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564400910112396718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4594394978369691840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v605 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v606 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v605 #trueSuccessor: v608 #falseSuccessor: v606  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564333329240262170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4594342708788900276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1313 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1324 
=== Succesors ===
next: v615 
=== Usages ===
i610 
=== Predecessor ===
v606 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1324 #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid i610 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i32
=== Inputs ===
x: i1313 
y: i1305 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1313 y: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i610 
y: i1304 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i610 y: i1304  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v611 
=== Succesors ===
trueSuccessor: v614 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
i1313 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v611 #trueSuccessor: v614 #falseSuccessor: v612  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564266424176848968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B82" 
    xhandlers
    flags 
    probability 4594290961903916627
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid i616 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i32
=== Inputs ===
x: i1311 
y: i1305 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1311 y: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i616 
y: i107 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i616 y: i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v617 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v618 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v617 #trueSuccessor: v620 #falseSuccessor: v618  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564200188164069898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B74" "B76" "B78" "B80" 
    successors 
    xhandlers
    flags 
    probability 4573307412178135430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v600 v607 v613 v619 
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v600 v607 v613 v619 #next: v622  <|@  <|@
tid ?266 <|@
d <@d|@=== Debug Properties ===
bci: 246
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 937
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i333 - - 
=== Succesors ===
=== Usages ===
?255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i333 - -  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Arrays.fill(char[], int, int, char)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Arrays.java
sourceLine: 2974
stackSize: 0
=== Inputs ===
outerFrameState: ?266 
values: a2 - i107 i65 i107 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a2 - i107 i65 i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?255 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?255  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 4594239732487782815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1119 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1119  <|@  <|@
f <@~|@floating>@ <|@
tid a587 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1303 
=== Succesors ===
=== Usages ===
j1119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i64
=== Inputs ===
object: a587 
=== Succesors ===
next: j1121 
=== Usages ===
v1342 
=== Predecessor ===
v618 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a587 #next: j1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v1126 
=== Usages ===
v1343 
=== Predecessor ===
j1119 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2 #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid j1302 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1304 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1304  <|@  <|@
f <@~|@floating>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1119 
index: j1302 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1119 index: j1302  <|@  <|@
f <@~|@floating>@ <|@
tid j1122 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i107 
=== Succesors ===
=== Usages ===
v1343 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i107  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1121 
index: j1122 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1121 index: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid j1296 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1305 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1342 v1343 j1296 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
j1121 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1342 v1343 j1296 #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:941) [bci: 278]
stamp: i32
=== Inputs ===
x: i107 
y: i1305 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i107 y: i1305  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i119 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i119 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1017 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid i1018 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -133403
stableDimension: 0
stamp: i32 [-133403] ⇊00000000fffdf6e5 ⇈00000000fffdf6e5
stampKind: i32
value: int[-133403|0xfffffffffffdf6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
v890 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1015 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid i1016 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131355
stableDimension: 0
stamp: i32 [-131355] ⇊00000000fffdfee5 ⇈00000000fffdfee5
stampKind: i32
value: int[-131355|0xfffffffffffdfee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
v886 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1012 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-133403 - -130059] ⇊00000000fffc02e5 ⇈00000000fffffff5
valueDescription: i32
=== Inputs ===
merge: v1009 
values: i1016 i1018 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1009 values: i1016 i1018  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1015 v1017 
=== Succesors ===
next: v1014 
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1015 v1017 #next: v1014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?74 
actionAndReason: i1012 
speculation: a995 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?74 actionAndReason: i1012 speculation: a995  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B87" 
    xhandlers
    flags 
    probability 4560846047414351627
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B38" 
    successors "B88" "B118" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v84 v86 
=== Succesors ===
next: i1314 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v84 v86 #next: i1314  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 943
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i323 - - 
=== Succesors ===
=== Usages ===
v1042 i1314 i1315 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i323 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?124 
guard: - 
address: v1324 
=== Succesors ===
next: v919 
=== Usages ===
i686 v641 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?124 guard: - address: v1324 #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1304 
y: i1314 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1304 y: i1314  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v641 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v918 
=== Usages ===
=== Predecessor ===
i1314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v641 #trueSuccessor: v916 #falseSuccessor: v918  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B117" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1315 
=== Usages ===
i1316 
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?124 
guard: - 
address: v1319 
=== Succesors ===
next: v927 
=== Usages ===
i692 v654 v660 v710 v780 v770 v760 v750 
=== Predecessor ===
v916 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?124 guard: - address: v1319 #next: v927  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i323 
y: i1315 
=== Succesors ===
=== Usages ===
v927 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i323 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v654 
=== Succesors ===
trueSuccessor: v924 
falseSuccessor: v926 
=== Usages ===
=== Predecessor ===
i1315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v654 #trueSuccessor: v924 #falseSuccessor: v926  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B116" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
stamp: void
=== Inputs ===
=== Succesors ===
next: v931 
=== Usages ===
v658 
=== Predecessor ===
v927 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i327 
y: i1315 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i327 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v928 
falseSuccessor: v930 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v928 #falseSuccessor: v930  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
stamp: void
=== Inputs ===
=== Succesors ===
next: v935 
=== Usages ===
v663 
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1305 
y: i133 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1305 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v932 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v934 #falseSuccessor: v932  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1047 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid i1048 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -170259
stableDimension: 0
stamp: i32 [-170259] ⇊00000000fffd66ed ⇈00000000fffd66ed
stampKind: i32
value: int[-170259|0xfffffffffffd66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1040 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B115" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 331]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i165 i145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 341]
stamp: i32
=== Inputs ===
x: i1305 
y: i140 
=== Succesors ===
=== Usages ===
i146 j1134 i692 i686 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1305 y: i140  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 342]
stamp: i32
=== Inputs ===
x: i145 
y: i333 
=== Succesors ===
=== Usages ===
i148 v1330 i234 v710 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i145 y: i333  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i146 
y: i1315 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i146 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v710 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v938 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v710 #trueSuccessor: v936 #falseSuccessor: v938  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1316 
=== Usages ===
v718 
=== Predecessor ===
v939 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1316  <|@  <|@
f <@~|@floating>@ <|@
tid a1354 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1303 
=== Succesors ===
=== Usages ===
v1329 j1127 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1303  <|@  <|@
f <@~|@floating>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1354 
index: i1304 
=== Succesors ===
=== Usages ===
i1316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1354 index: i1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v916 
address: v1329 
=== Succesors ===
next: v658 
=== Usages ===
v658 
=== Predecessor ===
v936 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v916 address: v1329 #next: v658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v924 
address: v1327 
value: i1316 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
i1316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v924 address: v1327 value: i1316 stateAfter: - lastLocationAccess: - #next: v663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v928 
address: v1328 
value: i794 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v928 address: v1328 value: i794 stateAfter: - lastLocationAccess: - #next: v691  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: i32
=== Inputs ===
x: i1314 
y: i145 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1314 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 323]
stamp: i32
=== Inputs ===
x: i1304 
y: i4 
=== Succesors ===
=== Usages ===
j1128 v687 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1304 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i686 
y: i138 
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i686 y: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v687 
=== Succesors ===
trueSuccessor: v690 
falseSuccessor: v688 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v687 #trueSuccessor: v690 #falseSuccessor: v688  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4545654634934153134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4575814518999214557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: i32
=== Inputs ===
x: i1315 
y: i145 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1315 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i692 
y: i333 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i692 y: i333  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v693 
=== Succesors ===
trueSuccessor: v696 
falseSuccessor: v694 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v693 #trueSuccessor: v696 #falseSuccessor: v694  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4545594372828706203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4550128103508800164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v689 v695 
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v689 v695 #next: v698  <|@  <|@
tid ?131 <|@
d <@d|@=== Debug Properties ===
bci: 306
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 945
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i333 - - 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i333 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?131 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B99" "B102" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1127 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: i64
=== Inputs ===
object: a1354 
=== Succesors ===
next: j1132 
=== Usages ===
v1344 
=== Predecessor ===
v694 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1354 #next: j1132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v1135 
=== Usages ===
v1345 
=== Predecessor ===
j1127 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2 #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid j1128 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i138 
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i138  <|@  <|@
f <@~|@floating>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1127 
index: j1128 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1127 index: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1132 
index: i333 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1132 index: i333  <|@  <|@
f <@~|@floating>@ <|@
tid j1134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i145 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1344 v1345 j1134 
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
j1132 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1344 v1345 j1134 #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i146 
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i146  <|@  <|@
f <@~|@floating>@ <|@
tid i804 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
rawvalue: 69
stableDimension: 0
stamp: i16 [69] ⇊0000000000000045 ⇈0000000000000045
stampKind: i16
value: short[69|0x45]
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v936 
address: v1330 
value: i804 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v1135 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v936 address: v1330 value: i804 stateAfter: - lastLocationAccess: - #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 357]
stamp: i32
=== Inputs ===
x: i146 
y: i4 
=== Succesors ===
=== Usages ===
?151 i169 v1334 v780 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i146 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 367]
stamp: void
trueSuccessorProbability: 0.8976945244956772
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v154 #falseSuccessor: v155  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4574934464739404074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 370]
stamp: void
=== Inputs ===
=== Succesors ===
next: v943 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i148 
y: i1315 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i148 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v940 
falseSuccessor: v942 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v940 #falseSuccessor: v942  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B103" 
    xhandlers
    flags 
    probability 4574934464739404074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
v787 
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i148 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v940 
address: v1334 
value: i790 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v940 address: v1334 value: i790 stateAfter: - lastLocationAccess: - #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 372]
stamp: i32
=== Inputs ===
x: i146 
y: i133 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i146 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:955) [bci: 384]
stamp: i32
=== Inputs ===
x: i4 
y: i1306 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4 y: i1306  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
v787 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
tid ?151 <|@
d <@d|@=== Debug Properties ===
bci: 363
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 953
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i148 - - 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i148 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 781
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?151 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 4560692294521474510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 389]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 394]
stamp: i32
=== Inputs ===
x: i1306 
y: i140 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1306 y: i140  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
v155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" "B102" 
    successors "B104" "B113" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v167 
values: i234 i148 
=== Succesors ===
=== Usages ===
?171 i178 i237 v750 v1331 i235 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v167 values: i234 i148  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v167 
values: i162 i165 
=== Succesors ===
=== Usages ===
?171 v174 i179 i300 v187 i301 i279 i276 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v167 values: i162 i165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v166 v168 
=== Succesors ===
next: v947 
=== Usages ===
i169 i170 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v166 v168 #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i169 
y: i1315 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i169 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v750 
=== Succesors ===
trueSuccessor: v944 
falseSuccessor: v946 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v750 #trueSuccessor: v944 #falseSuccessor: v946  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
v738 v728 v758 
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 404]
stamp: i32
=== Inputs ===
x: i169 
y: i4 
=== Succesors ===
=== Usages ===
v1332 v230 v760 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i169 
=== Succesors ===
=== Usages ===
v758 v738 v728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i169  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i173 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i170 y: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
stamp: void
trueSuccessorProbability: 0.9769452449567724
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v176 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v175 #falseSuccessor: v176  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4575661528741823044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 402]
stamp: void
=== Inputs ===
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v728  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 410]
stamp: i32
=== Inputs ===
x: i170 
y: i65 
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i170 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 411]
resultBits: 16
stamp: i16
=== Inputs ===
value: i179 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 412]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v944 
address: v1331 
value: i180 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v944 address: v1331 value: i180 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i178 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i178 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B112" 
    xhandlers
    flags 
    probability 4550940426270264190
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 416]
stamp: void
=== Inputs ===
=== Succesors ===
next: v951 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v951  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i1315 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i178 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v760 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v950 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v760 #trueSuccessor: v948 #falseSuccessor: v950  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4550940426270264190
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
v768 v748 
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 438]
stamp: i32
=== Inputs ===
x: i169 
y: i133 
=== Succesors ===
=== Usages ===
v770 v231 v1333 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i178 
=== Succesors ===
=== Usages ===
v768 v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i178  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i186 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i170 y: i186  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1717986919
stableDimension: 0
stamp: i32 [1717986919] ⇊0000000066666667 ⇈0000000066666667
stampKind: i32
value: int[1717986919|0x66666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
i300 i302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
stamp: void
trueSuccessorProbability: 0.625
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v948 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 4548138927206252126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 422]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i170 
y: i285 
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i170 y: i285  <|@  <|@
f <@~|@floating>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i300 
y: i133 
=== Succesors ===
=== Usages ===
i273 i1347 i274 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i300 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i1347 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 433]
stamp: i32 [-536870864 - 536870959]
=== Inputs ===
x: i287 
y: i65 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i287 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 434]
resultBits: 16
stamp: i16
=== Inputs ===
value: i1347 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 435]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v944 
address: v1331 
value: i193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v944 address: v1331 value: i193 stateAfter: - lastLocationAccess: - #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i287 
y: i236 
=== Succesors ===
=== Usages ===
i275 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i287 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i287 
y: i4 
=== Succesors ===
=== Usages ===
i275 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i287 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i273 
y: i274 
=== Succesors ===
=== Usages ===
i276 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i273 y: i274  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i170 
y: i275 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i170 y: i275  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 447]
stamp: i32
=== Inputs ===
x: i276 
y: i65 
=== Succesors ===
=== Usages ===
i747 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i276 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i747 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
resultBits: 16
stamp: i16
=== Inputs ===
value: i199 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v948 
address: v1332 
value: i747 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v948 address: v1332 value: i747 stateAfter: - lastLocationAccess: - #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i235 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i235 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4544734726079535262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 453]
stamp: void
=== Inputs ===
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i235 
y: i1315 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i235 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v770 
=== Succesors ===
trueSuccessor: v952 
falseSuccessor: v954 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v770 #trueSuccessor: v952 #falseSuccessor: v954  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4544734726079535262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
stamp: void
=== Inputs ===
=== Succesors ===
next: v758 
=== Usages ===
v778 
=== Predecessor ===
v955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid i291 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i301 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i170 
y: i291 
=== Succesors ===
=== Usages ===
i294 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i170 y: i291  <|@  <|@
f <@~|@floating>@ <|@
tid i293 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i301 
y: i293 
=== Succesors ===
=== Usages ===
i278 i1348 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i301 y: i293  <|@  <|@
f <@~|@floating>@ <|@
tid i1348 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 464]
stamp: i32 [-67108816 - 67108911]
=== Inputs ===
x: i294 
y: i65 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i294 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 465]
resultBits: 16
stamp: i16
=== Inputs ===
value: i1348 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v944 
address: v1331 
value: i206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v944 address: v1331 value: i206 stateAfter: - lastLocationAccess: - #next: v768  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
stamp: i32
=== Inputs ===
x: i294 
y: i186 
=== Succesors ===
=== Usages ===
i279 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i294 y: i186  <|@  <|@
f <@~|@floating>@ <|@
tid i279 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i170 
y: i278 
=== Succesors ===
=== Usages ===
i298 i302 i284 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i170 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i279 
y: i285 
=== Succesors ===
=== Usages ===
i297 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i279 y: i285  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i302 
y: i133 
=== Succesors ===
=== Usages ===
i299 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i302 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i279 
y: i288 
=== Succesors ===
=== Usages ===
i299 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i279 y: i288  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-536870912 - 536870912]
=== Inputs ===
x: i297 
y: i298 
=== Succesors ===
=== Usages ===
i212 i281 i282 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i297 y: i298  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 483]
stamp: i32 [-536870864 - 536870960]
=== Inputs ===
x: i299 
y: i65 
=== Succesors ===
=== Usages ===
i767 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i299 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
resultBits: 16
stamp: i16
=== Inputs ===
value: i212 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v948 
address: v1332 
value: i767 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v948 address: v1332 value: i767 stateAfter: - lastLocationAccess: - #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i235 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i235  <|@  <|@
f <@~|@floating>@ <|@
tid i281 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i299 
y: i236 
=== Succesors ===
=== Usages ===
i283 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i299 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i299 
y: i4 
=== Succesors ===
=== Usages ===
i283 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i299 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i283 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i281 
y: i282 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i281 y: i282  <|@  <|@
f <@~|@floating>@ <|@
tid i284 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i279 
y: i283 
=== Succesors ===
=== Usages ===
i218 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i279 y: i283  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 497]
stamp: i32
=== Inputs ===
x: i284 
y: i65 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i284 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i777 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
resultBits: 16
stamp: i16
=== Inputs ===
value: i218 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v952 
address: v1333 
value: i777 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v952 address: v1333 value: i777 stateAfter: - lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
stamp: i32
=== Inputs ===
x: i169 
y: i236 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i236  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i237 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i237 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1063 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1063  <|@  <|@
f <@~|@floating>@ <|@
tid i1064 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -197403
stableDimension: 0
stamp: i32 [-197403] ⇊00000000fffcfce5 ⇈00000000fffcfce5
stampKind: i32
value: int[-197403|0xfffffffffffcfce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1058 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
v954 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1061 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid i1062 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -211739
stableDimension: 0
stamp: i32 [-211739] ⇊00000000fffcc4e5 ⇈00000000fffcc4e5
stampKind: i32
value: int[-211739|0xfffffffffffcc4e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1058 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
v950 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid i1057 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -211995
stableDimension: 0
stamp: i32 [-211995] ⇊00000000fffcc3e5 ⇈00000000fffcc3e5
stampKind: i32
value: int[-211995|0xfffffffffffcc3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1058 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
v946 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" "B111" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1058 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-211995 - -197403] ⇊00000000fffcc0e5 ⇈00000000fffcffe5
valueDescription: i32
=== Inputs ===
merge: v1055 
values: i1057 i1062 i1064 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1055 values: i1057 i1062 i1064  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1056 v1061 v1063 
=== Succesors ===
next: v1060 
=== Usages ===
i1058 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1056 v1061 v1063 #next: v1060  <|@  <|@
tid ?171 <|@
d <@d|@=== Debug Properties ===
bci: 396
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 960
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 i169 i170 - 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i169 i170 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?171 
actionAndReason: i1058 
speculation: a995 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?171 actionAndReason: i1058 speculation: a995  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1053  <|@  <|@
f <@~|@floating>@ <|@
tid i1054 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -182043
stableDimension: 0
stamp: i32 [-182043] ⇊00000000fffd38e5 ⇈00000000fffd38e5
stampKind: i32
value: int[-182043|0xfffffffffffd38e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1040 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v938 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid i1052 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -169243
stableDimension: 0
stamp: i32 [-169243] ⇊00000000fffd6ae5 ⇈00000000fffd6ae5
stampKind: i32
value: int[-169243|0xfffffffffffd6ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1040 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1049 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1049  <|@  <|@
f <@~|@floating>@ <|@
tid i1050 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -167707
stableDimension: 0
stamp: i32 [-167707] ⇊00000000fffd70e5 ⇈00000000fffd70e5
stampKind: i32
value: int[-167707|0xfffffffffffd70e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1040 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v926 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid i1046 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -164379
stableDimension: 0
stamp: i32 [-164379] ⇊00000000fffd7de5 ⇈00000000fffd7de5
stampKind: i32
value: int[-164379|0xfffffffffffd7de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1040 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v918 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B91" "B117" "B116" "B115" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1040 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-182043 - -163083] ⇊00000000fffd00e5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v1037 
values: i1046 i1048 i1050 i1052 i1054 
=== Succesors ===
=== Usages ===
v1042 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1037 values: i1046 i1048 i1050 i1052 i1054  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1045 v1047 v1049 v1051 v1053 
=== Succesors ===
next: v1042 
=== Usages ===
i1040 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1045 v1047 v1049 v1051 v1053 #next: v1042  <|@  <|@
f <@*|@fixed>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?124 
actionAndReason: i1040 
speculation: a995 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?124 actionAndReason: i1040 speculation: a995  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1303 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1303  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1317 ?124 v1318 ?310 ?74 v1321 ?131 ?95 v1322 v1323 ?266 ?151 ?49 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1322 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1303 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1322 
=== Succesors ===
next: i1304 
=== Usages ===
v801 a587 v1324 v1350 v1351 a1353 a1354 a1355 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1322 #next: i1304  <|@  <|@
f <@~|@floating>@ <|@
tid v1323 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1304 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1323 
=== Succesors ===
next: i1305 
=== Usages ===
j1090 i59 v611 v419 v1329 i138 v641 v552 v594 j1301 j1302 
=== Predecessor ===
a1303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1323 #next: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1305 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1321 
=== Succesors ===
next: i1306 
=== Usages ===
i812 v238 v51 i56 v134 i145 j1117 i360 i616 i551 i610 v605 i119 i1289 j1296 
=== Predecessor ===
i1304 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1321 #next: i1306  <|@  <|@
f <@~|@floating>@ <|@
tid v1318 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1306 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1318 
=== Succesors ===
next: i1307 
=== Usages ===
v97 i162 v44 v20 i107 v26 i812 v238 i165 v83 i837 
=== Predecessor ===
i1305 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1318 #next: i1307  <|@  <|@
f <@~|@floating>@ <|@
tid v1317 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1307 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1317 
=== Succesors ===
next: v10 
=== Usages ===
i369 
=== Predecessor ===
i1306 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1317 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1307 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1307  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 v459 i322 v97 i323 v378 v470 v605 v594 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i369 
y: i5 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i369 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i322 v20 i46 i178 i282 i329 i162 i138 i148 i274 v1201 i323 i327 j969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1306 
y: i4 
=== Succesors ===
=== Usages ===
v23 v352 v156 v79 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1306 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1304 
y: i5 
=== Succesors ===
=== Usages ===
v597 v538 v405 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1304 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v1324 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1303 
=== Succesors ===
=== Usages ===
i1310 i1312 i1313 i1314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1303  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i237 i273 i281 i333 i335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j971 <|@
result long[18|0x12] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i64 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i64
value: long[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
j973 j975 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j956 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j965 j979 j980 j981 j1206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j977 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j981 j1206 v1254 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j383 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j974 j972 j973 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 i225 i335 i234 i235 i287 i297 i327 i333 i329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i796 <|@
result short[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
rawvalue: 48
stableDimension: 0
stamp: i16 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i16
value: short[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 v518 v1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i794 <|@
result short[46|0x2e] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
rawvalue: 46
stableDimension: 0
stamp: i16 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i16
value: short[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v454 v526 v663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i790 <|@
result short[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v387 v787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a995 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v998 v1060 a1023 a1023 v1070 v1006 v1014 a1023 a1023 a1023 a1023 v1042 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1320 v1352 ?310 ?255 ?151 ?266 j1094 ?49 ?171 ?124 ?74 j1121 v1332 ?131 ?95 v1319 v1331 v1325 v1326 j1106 v1334 v1327 v1328 v1335 j1115 j1132 v1333 v1330 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1319 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1308 i1309 i1311 i1315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
stamp: void
trueSuccessorProbability: 0.9997646283481617
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
i1307 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e0c8e1e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997646283481617 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180298760650383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
stamp: void
trueSuccessorProbability: 0.8245601647543395
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v350 
falseSuccessor: v351 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v350 #falseSuccessor: v351  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8245601647543395 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 4605600449146731052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
v350 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2], int[0|0x0], int[1|0x1], int[2|0x2], long[16|0x10], long[18|0x12]] destination: B2 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595487418746212747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid j976 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j979 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2], int[0|0x0], int[1|0x1], int[2|0x2], long[0|0x0], long[1|0x1]] destination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552815705264164864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1308 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1308  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 906
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - 
=== Succesors ===
=== Usages ===
v998 i1308 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1308 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1319 
=== Succesors ===
next: v859 
=== Usages ===
v378 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1319 #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1308 
y: i5 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1308 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v858 
falseSuccessor: v856 
=== Usages ===
=== Predecessor ===
i1308 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v858 #falseSuccessor: v856  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction CMP [v1|QWORD[.] + 12] y: 0 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@~|@floating>@ <|@
tid i1000 <|@
result int[-201755|0xfffffffffffcebe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -201755
stableDimension: 0
stamp: i32 [-201755] ⇊00000000fffcebe5 ⇈00000000fffcebe5
stampKind: i32
value: int[-201755|0xfffffffffffcebe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v998 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1000 
speculation: a995 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1000 speculation: a995  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -201755 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552815705264164864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
v387 
=== Predecessor ===
v859 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v1320 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v856 
address: v1320 
value: i790 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v856 address: v1320 value: i790 stateAfter: - lastLocationAccess: - #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid j963 <|@
result long[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i64 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j965 j980 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
stamp: void
trueSuccessorProbability: 0.8245601647543395
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v21 #falseSuccessor: v22  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8245601647543395 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B36" 
    xhandlers
    flags 
    probability 4551292241656806685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid j389 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j975 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[3|0x3], int[1|0x1], int[2|0x2], int[3|0x3], long[18|0x12], long[20|0x14]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541218679191522188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[3|0x3], int[1|0x1], int[2|0x2], int[3|0x3], long[2|0x2], long[2|0x2]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B35" 
    xhandlers
    flags 
    probability 4595488906503641808
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j980 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v308 
values: j963 j956 
=== Succesors ===
=== Usages ===
j965 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: j963 j956  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v308 
values: i4 i5 
=== Succesors ===
=== Usages ===
v425 v1337 ?310 i42 i323 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: i4 i5  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v308 
values: i133 i4 
=== Succesors ===
=== Usages ===
i327 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: i133 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i335 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v308 
values: i236 i133 
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: i236 i133  <|@  <|@
f <@~|@floating>@ <|@
tid j981 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 2] ⇈0000000000000002
valueDescription: i64
=== Inputs ===
merge: v308 
values: j956 j977 
=== Succesors ===
=== Usages ===
j972 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: j956 j977  <|@  <|@
f <@~|@floating>@ <|@
tid j979 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [1 - 2] ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v308 
values: j956 j976 
=== Succesors ===
=== Usages ===
j969 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: j956 j976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v309 v311 
=== Succesors ===
next: v32 
=== Usages ===
j980 i322 i329 i335 j981 j979 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v309 v311 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 54]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1306 
y: i25 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1306 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
stamp: void
trueSuccessorProbability: 0.9952377758400965
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v31 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v27 #falseSuccessor: v31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD, v8|DWORD, v9|DWORD, v10|DWORD, v11|QWORD, v12|QWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9952377758400965 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1351 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1351  <|@  <|@
tid ?310 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 912
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i322 - - 
=== Succesors ===
=== Usages ===
v1070 v1351 v1352 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i322 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?310 
object: a1303 
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?310 object: a1303 #next: v1352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?310 
object: a2 
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v1351 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?310 object: a2 #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1306 
y: i1305 
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1306 y: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid i812 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v238 
trueValue: i1306 
falseValue: i1305 
=== Succesors ===
=== Usages ===
i424 i418 j1099 i59 i42 v44 ?49 v51 i56 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v238 trueValue: i1306 falseValue: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i812 
y: i1306 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i812 y: i1306  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v870 
falseSuccessor: v868 
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v870 #falseSuccessor: v868  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:43] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:43] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v5|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1073 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1073  <|@  <|@
f <@~|@floating>@ <|@
tid i1074 <|@
result int[-112915|0xfffffffffffe46ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -112915
stableDimension: 0
stamp: i32 [-112915] ⇊00000000fffe46ed ⇈00000000fffe46ed
stampKind: i32
value: int[-112915|0xfffffffffffe46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1068 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v870 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-112915|0xfffffffffffe46ed]] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B33" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1309 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1309 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1319 
=== Succesors ===
next: v875 
=== Usages ===
v446 v499 i481 i424 
=== Predecessor ===
v868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1319 #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
stamp: i32
=== Inputs ===
x: i322 
y: i812 
=== Succesors ===
=== Usages ===
i46 v1325 i225 v446 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i322 y: i812  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i1309 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i1309  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v872 
falseSuccessor: v874 
=== Usages ===
=== Predecessor ===
i1309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v872 #falseSuccessor: v874  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v8|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v405 
=== Usages ===
v454 
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid i1078 <|@
result int[-110177|0xfffffffffffe519f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -110177
stableDimension: 0
stamp: i32 [-110177] ⇊00000000fffe519f ⇈00000000fffe519f
stampKind: i32
value: int[-110177|0xfffffffffffe519f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1068 i1068 i1068 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v594 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v403 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v594 #trueSuccessor: v404 #falseSuccessor: v403  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565695027361111979
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110177|0xfffffffffffe519f]] destination: B14 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4595395897179245049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1310 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1310 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1324 
=== Succesors ===
next: v423 
=== Usages ===
i418 i475 
=== Predecessor ===
v403 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1324 #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: i32
=== Inputs ===
x: i1310 
y: i812 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1310 y: i812  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i418 
y: i1304 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i418 y: i1304  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v419 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
i1310 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v419 #trueSuccessor: v422 #falseSuccessor: v420  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565614505316490279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@*|@fixed>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110177|0xfffffffffffe519f]] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595333618410357953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: i32
=== Inputs ===
x: i1309 
y: i812 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1309 y: i812  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i322 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i424 y: i322  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v426 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v428 #falseSuccessor: v426  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v14|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565534788492314796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1079 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1079  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v428 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110177|0xfffffffffffe519f]] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B29" 
    xhandlers
    flags 
    probability 4595271962429159728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1089 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1089  <|@  <|@
f <@~|@floating>@ <|@
tid a1355 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1303 
=== Succesors ===
=== Usages ===
j1089 j1101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1089 <|@
result v20|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: i64
=== Inputs ===
object: a1355 
=== Succesors ===
next: j1094 
=== Usages ===
v1336 
=== Predecessor ===
v426 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1355 #next: j1094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1094 <|@
result v21|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v1100 
=== Usages ===
v1337 
=== Predecessor ===
j1089 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2 #next: v1100  <|@  <|@
f <@~|@floating>@ <|@
tid j1090 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1304 
=== Succesors ===
=== Usages ===
v1336 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1304  <|@  <|@
f <@~|@floating>@ <|@
tid v1336 <|@
result [v20|QWORD[*] + v22|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1089 
index: j1090 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1089 index: j1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1337 <|@
result [v21|QWORD[*] + v8|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1094 
index: i322 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1094 index: i322  <|@  <|@
f <@~|@floating>@ <|@
tid j1099 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i812 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1336 v1337 j1099 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
j1094 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1336 v1337 j1099 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v1325 <|@
result [v1|QWORD[.] + v15|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i42 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v872 
address: v1325 
value: i794 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v872 address: v1325 value: i794 stateAfter: - lastLocationAccess: - #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
stamp: i32
=== Inputs ===
x: i42 
y: i4 
=== Succesors ===
=== Usages ===
?49 j1107 v499 i62 v1326 v482 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i42 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 150]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i812 
y: i1305 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i812 y: i1305  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 150]
stamp: void
trueSuccessorProbability: 0.07837983555735273
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v20|QWORD[*] + v22|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v21|QWORD[*] + v8|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v15|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07837983555735273 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4578808437478284942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:926) [bci: 153]
stamp: void
=== Inputs ===
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 170]
stamp: i32
=== Inputs ===
x: i812 
y: i1304 
=== Succesors ===
=== Usages ===
j1102 v459 v476 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i812 y: i1304  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i5 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i59 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i1008 <|@
result int[-124769|0xfffffffffffe189f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124769
stableDimension: 0
stamp: i32 [-124769] ⇊00000000fffe189f ⇈00000000fffe189f
stampKind: i32
value: int[-124769|0xfffffffffffe189f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1004 i1004 i1004 i1004 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v459 
=== Succesors ===
trueSuccessor: v461 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v459 #trueSuccessor: v461 #falseSuccessor: v460  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B32" 
    xhandlers
    flags 
    probability 4549031106063058630
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1007 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1007  <|@  <|@
f <@*|@fixed>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v461 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124769|0xfffffffffffe189f]] destination: B21 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4578731889321312627
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:926) [bci: 158]
stamp: i32
=== Inputs ===
x: i1305 
y: i812 
=== Succesors ===
=== Usages ===
j1111 i481 i62 v470 i475 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1305 y: i812  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i56 
y: i5 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i56 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v470 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v470 #trueSuccessor: v473 #falseSuccessor: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SUB (x: v4|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548982115242596348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1084 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1084  <|@  <|@
f <@*|@fixed>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124769|0xfffffffffffe189f]] destination: B23 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4578656106645910035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: i32
=== Inputs ===
x: i1310 
y: i56 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1310 y: i56  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i475 
y: i59 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i475 y: i59  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v477 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v479 #falseSuccessor: v477  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v16|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548933614330338689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v479 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124769|0xfffffffffffe189f]] destination: B25 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4578581081797261469
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: i32
=== Inputs ===
x: i1309 
y: i56 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1309 y: i56  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i481 
y: i46 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i481 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v483 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v485 #falseSuccessor: v483  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v14|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548885598427203607
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124769|0xfffffffffffe189f]] destination: B27 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4578506807197099389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1101 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1101 <|@
result v29|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: i64
=== Inputs ===
object: a1355 
=== Succesors ===
next: j1106 
=== Usages ===
v1338 
=== Predecessor ===
v483 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1355 #next: j1106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1106 <|@
result v30|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v1112 
=== Usages ===
v1339 
=== Predecessor ===
j1101 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2 #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid j1102 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i59 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i59  <|@  <|@
f <@~|@floating>@ <|@
tid v1338 <|@
result [v29|QWORD[*] + v31|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1101 
index: j1102 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1101 index: j1102  <|@  <|@
f <@~|@floating>@ <|@
tid j1107 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i46 
=== Succesors ===
=== Usages ===
v1339 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i46  <|@  <|@
f <@~|@floating>@ <|@
tid v1339 <|@
result [v30|QWORD[*] + v32|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1106 
index: j1107 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1106 index: j1107  <|@  <|@
f <@~|@floating>@ <|@
tid j1111 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i56 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i56  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1338 v1339 j1111 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
j1106 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1338 v1339 j1111 #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:928) [bci: 181]
stamp: i32
=== Inputs ===
x: i46 
y: i56 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i46 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i62 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i62 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v29|QWORD[*] + v31|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v30|QWORD[*] + v32|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = ADD (x: v24|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v34|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4594793536448082759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 186]
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i46 
y: i1309 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i46 y: i1309  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v876 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v876 #falseSuccessor: v878  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4594793536448082759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
v507 
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid v1326 <|@
result [v1|QWORD[.] + v24|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i46 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v876 
address: v1326 
value: i796 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v876 address: v1326 value: i796 stateAfter: - lastLocationAccess: - #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 188]
stamp: i32
=== Inputs ===
x: i42 
y: i133 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i42 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i225 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i225 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v24|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v15|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid i1003 <|@
result int[-128027|0xfffffffffffe0be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128027
stableDimension: 0
stamp: i32 [-128027] ⇊00000000fffe0be5 ⇈00000000fffe0be5
stampKind: i32
value: int[-128027|0xfffffffffffe0be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1004 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v878 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128027|0xfffffffffffe0be5]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B21" "B27" "B25" "B23" 
    successors 
    xhandlers
    flags 
    probability 4557965307770540310
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1004 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-128027 - -124769] ⇊00000000fffe0885 ⇈00000000fffe1bff
valueDescription: i32
=== Inputs ===
merge: v1001 
values: i1003 i1008 i1008 i1008 i1008 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1001 values: i1003 i1008 i1008 i1008 i1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1002 v1007 v1082 v1083 v1084 
=== Succesors ===
next: v1006 
=== Usages ===
i1004 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1002 v1007 v1082 v1083 v1084 #next: v1006  <|@  <|@
tid ?49 <|@
d <@d|@=== Debug Properties ===
bci: 145
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 925
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i46 i812 - 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i46 i812 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?49 
actionAndReason: i1004 
speculation: a995 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?49 actionAndReason: i1004 speculation: a995  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: v0|QWORD[.] v1|QWORD[.] v24|DWORD v13|DWORD - 
>@ <|@ instruction DEOPT info [bci:145] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid i1076 <|@
result int[-114459|0xfffffffffffe40e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -114459
stableDimension: 0
stamp: i32 [-114459] ⇊00000000fffe40e5 ⇈00000000fffe40e5
stampKind: i32
value: int[-114459|0xfffffffffffe40e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1068 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-114459|0xfffffffffffe40e5]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B11" "B33" "B14" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4572628985271955744
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1068 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-114459 - -110177] ⇊00000000fffe4085 ⇈00000000fffe5fff
valueDescription: i32
=== Inputs ===
merge: v1065 
values: i1074 i1076 i1078 i1078 i1078 
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1065 values: i1074 i1076 i1078 i1078 i1078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1073 v1075 v1077 v1079 v1080 
=== Succesors ===
next: v1070 
=== Usages ===
i1068 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1073 v1075 v1077 v1079 v1080 #next: v1070  <|@  <|@
f <@*|@fixed>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?310 
actionAndReason: i1068 
speculation: a995 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?310 actionAndReason: i1068 speculation: a995  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:43] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4560845201392801771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid j969 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
stamp: i64 [2 - 4] ⇈0000000000000006
=== Inputs ===
x: j979 
y: i4 
=== Succesors ===
=== Usages ===
j974 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j979 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j974 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
=== Inputs ===
x: j969 
y: j383 
=== Succesors ===
=== Usages ===
j975 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j969 y: j383  <|@  <|@
f <@~|@floating>@ <|@
tid j972 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
=== Inputs ===
x: j981 
y: j383 
=== Succesors ===
=== Usages ===
j973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j981 y: j383  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
v31 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = SHL v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v38|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v11|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD, v8|DWORD, v9|DWORD, v10|DWORD, v40|QWORD, v39|QWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B35" "B2" 
    successors "B37" "B86" 
    xhandlers
    flags 
    probability 4605609722615999826
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j965 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v29 
values: j963 j980 j956 
=== Succesors ===
=== Usages ===
j841 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v29 values: j963 j980 j956  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v29 
values: i4 i322 i5 
=== Succesors ===
=== Usages ===
?74 v654 v512 ?124 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v29 values: i4 i322 i5  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v29 
values: i133 i329 i4 
=== Succesors ===
=== Usages ===
v520 v660 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v29 values: i133 i329 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v29 
values: i236 i335 i133 
=== Succesors ===
=== Usages ===
?95 v267 v1345 ?266 i107 i360 ?131 v558 v847 i146 v1335 v844 v693 v1341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v29 values: i236 i335 i133  <|@  <|@
f <@~|@floating>@ <|@
tid j973 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v29 
values: j971 j972 j383 
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v29 values: j971 j972 j383  <|@  <|@
f <@~|@floating>@ <|@
tid j975 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v29 
values: j389 j974 j971 
=== Succesors ===
=== Usages ===
v1328 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v29 values: j389 j974 j971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v28 v30 v353 
=== Succesors ===
next: v79 
=== Usages ===
j965 i323 i327 i333 j973 j975 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v28 v30 v353 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid v1328 <|@
result [v1|QWORD[.] + v46|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j975 
=== Succesors ===
=== Usages ===
v526 v663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j975  <|@  <|@
f <@~|@floating>@ <|@
tid v1327 <|@
result [v1|QWORD[.] + v45|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j973 
=== Succesors ===
=== Usages ===
v518 v658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j973  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
result int[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 191]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i218 ?255 i212 i179 i1347 i199 i1348 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 201]
stamp: void
trueSuccessorProbability: 0.998987666642903
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v78 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v77 #falseSuccessor: v78  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD, v42|DWORD, v43|DWORD, v44|DWORD, v45|QWORD, v46|QWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.998987666642903 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605602196420547892
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 204]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1306 
y: i82 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1306 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
stamp: void
trueSuccessorProbability: 0.008891362676257342
=== Inputs ===
condition: v83 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v83 #trueSuccessor: v88 #falseSuccessor: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.008891362676257342 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B87" 
    xhandlers
    flags 
    probability 4575102623111918487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B84" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 213]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1311 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1311  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 197
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 933
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i323 - - 
=== Succesors ===
=== Usages ===
v1014 i1311 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i323 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1311 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?74 
guard: - 
address: v1319 
=== Succesors ===
next: v887 
=== Usages ===
v512 v520 v269 v844 i616 j834 i1289 
=== Predecessor ===
v87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?74 guard: - address: v1319 #next: v887  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i323 
y: i1311 
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i323 y: i1311  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v512 
=== Succesors ===
trueSuccessor: v884 
falseSuccessor: v886 
=== Usages ===
=== Predecessor ===
i1311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v512 #trueSuccessor: v884 #falseSuccessor: v886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v0|QWORD[.] v1|QWORD[.] v42|DWORD - - 
>@ <|@ instruction v47|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:197] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B83" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
v518 
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i327 
y: i1311 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i327 y: i1311  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v520 
=== Succesors ===
trueSuccessor: v888 
falseSuccessor: v890 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v520 #trueSuccessor: v888 #falseSuccessor: v890  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B51" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
v526 
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v884 
address: v1327 
value: i796 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v884 address: v1327 value: i796 stateAfter: - lastLocationAccess: - #next: v526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v888 
address: v1328 
value: i794 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v888 address: v1328 value: i794 stateAfter: - lastLocationAccess: - #next: v100  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
bci: 229
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 936
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i333 - - 
=== Succesors ===
=== Usages ===
v1024 v1350 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i333 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1306 
y: i5 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1306 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1305 
y: i5 
=== Succesors ===
=== Usages ===
v609 v550 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1305 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
stamp: void
trueSuccessorProbability: 0.8206833988509223
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v45|QWORD * 1] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v46|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8206833988509223 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604216221566683794
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?95 
object: a1303 
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?95 object: a1303 #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid i1036 <|@
result int[-144225|0xfffffffffffdcc9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144225
stableDimension: 0
stamp: i32 [-144225] ⇊00000000fffdcc9f ⇈00000000fffdcc9f
stampKind: i32
value: int[-144225|0xfffffffffffdcc9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1022 i1022 i1022 i1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v594 
=== Succesors ===
trueSuccessor: v537 
falseSuccessor: v536 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v594 #trueSuccessor: v537 #falseSuccessor: v536  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: v0|QWORD[.] v1|QWORD[.] v44|DWORD - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:229] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574382504741084395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v537 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144225|0xfffffffffffdcc9f], Object[null]] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604155811546469720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v605 
=== Succesors ===
trueSuccessor: v549 
falseSuccessor: v547 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v605 #trueSuccessor: v549 #falseSuccessor: v547  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574305179915210380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v549 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144225|0xfffffffffffdcc9f], Object[null]] destination: B45 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4604096005626457787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1312 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1312 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1324 
=== Succesors ===
next: v556 
=== Usages ===
i551 
=== Predecessor ===
v547 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1324 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i32
=== Inputs ===
x: i1312 
y: i1305 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1312 y: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i551 
y: i1304 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i551 y: i1304  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v552 
=== Succesors ===
trueSuccessor: v555 
falseSuccessor: v553 
=== Usages ===
=== Predecessor ===
i1312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v552 #trueSuccessor: v555 #falseSuccessor: v553  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = SUB (x: v48|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574228628337595106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1087  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144225|0xfffffffffffdcc9f], Object[null]] destination: B47 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4604036797765645973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid i1289 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i32
=== Inputs ===
x: i1311 
y: i1305 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1311 y: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1289 
y: i333 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1289 y: i333  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v558 
=== Succesors ===
trueSuccessor: v561 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v558 #trueSuccessor: v561 #falseSuccessor: v559  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SUB (x: v47|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574152842275755984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@*|@fixed>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144225|0xfffffffffffdcc9f], Object[null]] destination: B49 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4603978181983442277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1113 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1113  <|@  <|@
f <@~|@floating>@ <|@
tid a1353 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1303 
=== Succesors ===
=== Usages ===
j1113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1113 <|@
result v52|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i64
=== Inputs ===
object: a1353 
=== Succesors ===
next: j1115 
=== Usages ===
v1340 
=== Predecessor ===
v559 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1353 #next: j1115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1115 <|@
result v53|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v1118 
=== Usages ===
v1341 
=== Predecessor ===
j1113 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2 #next: v1118  <|@  <|@
f <@~|@floating>@ <|@
tid j1301 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1304 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1304  <|@  <|@
f <@~|@floating>@ <|@
tid v1340 <|@
result [v52|QWORD[*] + v54|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1113 
index: j1301 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1113 index: j1301  <|@  <|@
f <@~|@floating>@ <|@
tid v1341 <|@
result [v53|QWORD[*] + v44|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1115 
index: i333 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1115 index: i333  <|@  <|@
f <@~|@floating>@ <|@
tid j1117 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1305 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1340 v1341 j1117 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
j1115 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1340 v1341 j1117 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:941) [bci: 278]
stamp: i32
=== Inputs ===
x: i333 
y: i1305 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i333 y: i1305  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i360 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1118 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i360 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v52|QWORD[*] + v54|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v53|QWORD[*] + v44|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v44|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 236]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1280 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1280  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 254]
stamp: i32
=== Inputs ===
x: i333 
y: i1306 
=== Succesors ===
=== Usages ===
i119 v617 v267 v269 ?255 j1122 v847 ?255 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i333 y: i1306  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i333 
y: i107 
=== Succesors ===
=== Usages ===
v1280 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i333 y: i107  <|@  <|@
f <@~|@floating>@ <|@
tid i837 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
stamp: i32
=== Inputs ===
value: i1306 
=== Succesors ===
=== Usages ===
j838 v1201 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i1306  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i837 
=== Succesors ===
=== Usages ===
j840 j1253 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i837  <|@  <|@
f <@~|@floating>@ <|@
tid j839 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j840 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j840 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j838 
y: j839 
=== Succesors ===
=== Usages ===
j841 v1256 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j838 y: j839  <|@  <|@
f <@*|@fixed>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v847 
=== Succesors ===
trueSuccessor: v1279 
falseSuccessor: v1276 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v847 #trueSuccessor: v1279 #falseSuccessor: v1276  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = SUB (x: v44|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = NEG v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVSXD v58|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = DEC v59|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B56" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1288 
=== Usages ===
=== Predecessor ===
v1280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1288  <|@  <|@
f <@~|@floating>@ <|@
tid j841 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483647 - 2147483649]
=== Inputs ===
x: j840 
y: j965 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j840 y: j965  <|@  <|@
f <@~|@floating>@ <|@
tid j834 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1311 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1311  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j841 
y: j834 
=== Succesors ===
=== Usages ===
v1288 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j841 y: j834  <|@  <|@
f <@~|@floating>@ <|@
tid a1030 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@575684881
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@575684881]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1023 a1023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1029 <|@
result int[-148251|0xfffffffffffdbce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148251
stableDimension: 0
stamp: i32 [-148251] ⇊00000000fffdbce5 ⇈00000000fffdbce5
stampKind: i32
value: int[-148251|0xfffffffffffdbce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1022 i1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v843 
=== Succesors ===
trueSuccessor: v1287 
falseSuccessor: v1284 
=== Usages ===
=== Predecessor ===
v1279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v843 #trueSuccessor: v1287 #falseSuccessor: v1284  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOV v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@575684881] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1286 
=== Usages ===
=== Predecessor ===
v1288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1286  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i333 
y: i1311 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i333 y: i1311  <|@  <|@
f <@*|@fixed>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v844 
=== Succesors ===
trueSuccessor: v1277 
falseSuccessor: v1285 
=== Usages ===
=== Predecessor ===
v1287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v844 #trueSuccessor: v1277 #falseSuccessor: v1285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1275 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1275  <|@  <|@
f <@*|@fixed>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1273 
=== Predecessor ===
v1277 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1349 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1349  <|@  <|@
f <@*|@fixed>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v1285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148251|0xfffffffffffdbce5], v63|QWORD[.]] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v1288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v1284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148251|0xfffffffffffdbce5], v63|QWORD[.]] destination: B56 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1274 
=== Usages ===
=== Predecessor ===
v1280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1273 
=== Predecessor ===
v1276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B54" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1274 v1275 
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1274 v1275 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.api.directives.GraalDirectives.guardingNonNull(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:117) [bci: 1]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
value: a1303 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1303  <|@  <|@
f <@*|@fixed>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.api.directives.GraalDirectives.guardingNonNull(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:117) [bci: 1]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v801 
=== Succesors ===
trueSuccessor: v902 
falseSuccessor: v900 
=== Usages ===
=== Predecessor ===
v1273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v801 #trueSuccessor: v902 #falseSuccessor: v900  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.api.directives.GraalDirectives.guardingNonNull(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:117) [bci: 1]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1025 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1025  <|@  <|@
f <@~|@floating>@ <|@
tid a1027 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1242173179
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1242173179]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1026 <|@
result int[-160011|0xfffffffffffd8ef5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -160011
stableDimension: 0
stamp: i32 [-160011] ⇊00000000fffd8ef5 ⇈00000000fffd8ef5
stampKind: i32
value: int[-160011|0xfffffffffffd8ef5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v902 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1242173179] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-160011|0xfffffffffffd8ef5], v64|QWORD[.]] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.api.directives.GraalDirectives.guardingNonNull(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:117) [bci: 1]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i333 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i107 y: i333  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v906 
falseSuccessor: v904 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v906 #falseSuccessor: v904  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid i1032 <|@
result int[-147219|0xfffffffffffdc0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147219
stableDimension: 0
stamp: i32 [-147219] ⇊00000000fffdc0ed ⇈00000000fffdc0ed
stampKind: i32
value: int[-147219|0xfffffffffffdc0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v906 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147219|0xfffffffffffdc0ed], Object[null]] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B65" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1311 
y: i107 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1311 y: i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v910 
falseSuccessor: v908 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v910 #falseSuccessor: v908  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid i1034 <|@
result int[-147475|0xfffffffffffdbfed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147475
stableDimension: 0
stamp: i32 [-147475] ⇊00000000fffdbfed ⇈00000000fffdbfed
stampKind: i32
value: int[-147475|0xfffffffffffdbfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
v910 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147475|0xfffffffffffdbfed], Object[null]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" "B56" "B61" "B63" "B43" "B49" "B47" "B45" "B55" 
    successors 
    xhandlers
    flags 
    probability 4583274488072152459
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1022 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-160011 - -144225] ⇊00000000fffd8085 ⇈00000000fffdffff
valueDescription: i32
=== Inputs ===
merge: v1019 
values: i1026 i1029 i1032 i1034 i1036 i1036 i1036 i1036 i1029 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1019 values: i1026 i1029 i1032 i1034 i1036 i1036 i1036 i1036 i1029  <|@  <|@
f <@~|@floating>@ <|@
tid a1023 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1019 
values: a1027 a1030 a995 a995 a995 a995 a995 a995 a1030 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1019 values: a1027 a1030 a995 a995 a995 a995 a995 a995 a1030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1025 v1028 v1031 v1033 v1035 v1086 v1087 v1088 v1349 
=== Succesors ===
next: v1024 
=== Usages ===
i1022 a1023 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1025 v1028 v1031 v1033 v1035 v1086 v1087 v1088 v1349 #next: v1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?95 
actionAndReason: i1022 
speculation: a1023 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?95 actionAndReason: i1022 speculation: a1023  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: v0|QWORD[.] v1|QWORD[.] v44|DWORD - - 
>@ <|@ instruction DEOPT info [bci:229] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1203 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1143 
=== Usages ===
j1205 
=== Predecessor ===
v908 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1143  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i837 
y: i4 
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i837 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1201 
=== Succesors ===
trueSuccessor: v1141 
falseSuccessor: v1142 
=== Usages ===
=== Predecessor ===
v1203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1201 #trueSuccessor: v1141 #falseSuccessor: v1142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v58|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B73" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1159  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v1141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1191 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1191  <|@  <|@
f <@~|@floating>@ <|@
tid v1335 <|@
result [v1|QWORD[.] + v44|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i333 
=== Succesors ===
=== Usages ===
j1205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i333  <|@  <|@
f <@~|@floating>@ <|@
tid j1205 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1203 
address: v1335 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1203 address: v1335  <|@  <|@
f <@~|@floating>@ <|@
tid v1346 <|@
result [v67|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1205 
index: - 
=== Succesors ===
=== Usages ===
v1261 v1263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1205 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1252 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1253 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1253 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j838 
y: j1252 
=== Succesors ===
=== Usages ===
v1254 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j838 y: j1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1253 
y: j977 
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1253 y: j977  <|@  <|@
f <@*|@fixed>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1254 
=== Succesors ===
trueSuccessor: v1190 
falseSuccessor: v1189 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1254 #trueSuccessor: v1190 #falseSuccessor: v1189  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = LEA [v1|QWORD[.] + v44|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v59|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v68|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580936977043935467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1194 
=== Usages ===
=== Predecessor ===
v1191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1194  <|@  <|@
f <@*|@fixed>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
v1190 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588080454489061728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1263 
=== Usages ===
=== Predecessor ===
v1191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1263  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
result v69|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <48,48>
stableDimension: 0
stamp: <i16 [48] ⇊0000000000000030 ⇈0000000000000030,i16 [48] ⇊0000000000000030 ⇈0000000000000030>
stampKind: <i16,i16>
value: SIMD<48,48>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1263 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1346 
value: v1270 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1346 value: v1270 stateAfter: - lastLocationAccess: - #next: v1173  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
v1263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v67|QWORD[.]], input: v69|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1206 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 2] ⇈0000000000000002
valueDescription: i64
=== Inputs ===
merge: v1174 
values: j956 j977 
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1174 values: j956 j977  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1173 v1194 
=== Succesors ===
next: v1197 
=== Usages ===
j1206 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1173 v1194 #next: v1197  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j840 
y: j1206 
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j840 y: j1206  <|@  <|@
f <@*|@fixed>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1256 
=== Succesors ===
trueSuccessor: v1196 
falseSuccessor: v1195 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1256 #trueSuccessor: v1196 #falseSuccessor: v1195  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580936977043935467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1200 
=== Usages ===
=== Predecessor ===
v1197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1200  <|@  <|@
f <@*|@fixed>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v1196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4588080454489061728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1261 
=== Usages ===
=== Predecessor ===
v1197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1346 
value: i796 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1176 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1346 value: i796 stateAfter: - lastLocationAccess: - #next: v1176  <|@  <|@
f <@*|@fixed>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v1261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v67|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B66" "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1159 v1176 v1200 
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1159 v1176 v1200 #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v594 
=== Succesors ===
trueSuccessor: v596 
falseSuccessor: v595 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v594 #trueSuccessor: v596 #falseSuccessor: v595  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564400910112396718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4594394978369691840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v605 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v606 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v605 #trueSuccessor: v608 #falseSuccessor: v606  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564333329240262170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4594342708788900276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1313 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1313 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1324 
=== Succesors ===
next: v615 
=== Usages ===
i610 
=== Predecessor ===
v606 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1324 #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid i610 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i32
=== Inputs ===
x: i1313 
y: i1305 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1313 y: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i610 
y: i1304 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i610 y: i1304  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v611 
=== Succesors ===
trueSuccessor: v614 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
i1313 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v611 #trueSuccessor: v614 #falseSuccessor: v612  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SUB (x: v71|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564266424176848968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B82" 
    xhandlers
    flags 
    probability 4594290961903916627
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid i616 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i32
=== Inputs ===
x: i1311 
y: i1305 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1311 y: i1305  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i616 
y: i107 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i616 y: i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v617 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v618 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v617 #trueSuccessor: v620 #falseSuccessor: v618  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v47|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564200188164069898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B74" "B76" "B78" "B80" 
    successors 
    xhandlers
    flags 
    probability 4573307412178135430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v600 v607 v613 v619 
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v600 v607 v613 v619 #next: v622  <|@  <|@
tid ?266 <|@
d <@d|@=== Debug Properties ===
bci: 246
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 937
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i333 - - 
=== Succesors ===
=== Usages ===
?255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i333 - -  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Arrays.fill(char[], int, int, char)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Arrays.java
sourceLine: 2974
stackSize: 0
=== Inputs ===
outerFrameState: ?266 
values: a2 - i107 i65 i107 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?266 values: a2 - i107 i65 i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?255 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?255  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -159329 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:2974) [bci: 10]
locals: v1|QWORD[.] - v57|DWORD int[48|0x30] v57|DWORD 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
locals: v0|QWORD[.] v1|QWORD[.] v44|DWORD - - 
>@ <|@ instruction DEOPT info [bci:10, 246] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 4594239732487782815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1119 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1119  <|@  <|@
f <@~|@floating>@ <|@
tid a587 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1303 
=== Succesors ===
=== Usages ===
j1119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1119 <|@
result v75|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i64
=== Inputs ===
object: a587 
=== Succesors ===
next: j1121 
=== Usages ===
v1342 
=== Predecessor ===
v618 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a587 #next: j1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1121 <|@
result v76|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v1126 
=== Usages ===
v1343 
=== Predecessor ===
j1119 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2 #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid j1302 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1304 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1304  <|@  <|@
f <@~|@floating>@ <|@
tid v1342 <|@
result [v75|QWORD[*] + v77|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1119 
index: j1302 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1119 index: j1302  <|@  <|@
f <@~|@floating>@ <|@
tid j1122 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i107 
=== Succesors ===
=== Usages ===
v1343 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i107  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
result [v76|QWORD[*] + v78|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1121 
index: j1122 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1121 index: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid j1296 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1305 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1342 v1343 j1296 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
j1121 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1342 v1343 j1296 #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:941) [bci: 278]
stamp: i32
=== Inputs ===
x: i107 
y: i1305 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i107 y: i1305  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i119 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i119 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOVSXD v57|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v75|QWORD[*] + v77|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v76|QWORD[*] + v78|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v79|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ADD (x: v57|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v80|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1017 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid i1018 <|@
result int[-133403|0xfffffffffffdf6e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -133403
stableDimension: 0
stamp: i32 [-133403] ⇊00000000fffdf6e5 ⇈00000000fffdf6e5
stampKind: i32
value: int[-133403|0xfffffffffffdf6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
v890 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133403|0xfffffffffffdf6e5]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1015 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid i1016 <|@
result int[-131355|0xfffffffffffdfee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131355
stableDimension: 0
stamp: i32 [-131355] ⇊00000000fffdfee5 ⇈00000000fffdfee5
stampKind: i32
value: int[-131355|0xfffffffffffdfee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
v886 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131355|0xfffffffffffdfee5]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1012 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-133403 - -130059] ⇊00000000fffc02e5 ⇈00000000fffffff5
valueDescription: i32
=== Inputs ===
merge: v1009 
values: i1016 i1018 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1009 values: i1016 i1018  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1015 v1017 
=== Succesors ===
next: v1014 
=== Usages ===
i1012 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1015 v1017 #next: v1014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?74 
actionAndReason: i1012 
speculation: a995 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?74 actionAndReason: i1012 speculation: a995  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v0|QWORD[.] v1|QWORD[.] v42|DWORD - - 
>@ <|@ instruction DEOPT info [bci:197] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B87" 
    xhandlers
    flags 
    probability 4560846047414351627
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B38" 
    successors "B88" "B118" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v84 v86 
=== Succesors ===
next: i1314 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v84 v86 #next: i1314  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 943
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i323 - - 
=== Succesors ===
=== Usages ===
v1042 i1314 i1315 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i323 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1314 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?124 
guard: - 
address: v1324 
=== Succesors ===
next: v919 
=== Usages ===
i686 v641 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?124 guard: - address: v1324 #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1304 
y: i1314 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1304 y: i1314  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v641 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v918 
=== Usages ===
=== Predecessor ===
i1314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v641 #trueSuccessor: v916 #falseSuccessor: v918  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v1|QWORD[.] v42|DWORD - - 
>@ <|@ instruction v82|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:283] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B117" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1315 
=== Usages ===
i1316 
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1315 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?124 
guard: - 
address: v1319 
=== Succesors ===
next: v927 
=== Usages ===
i692 v654 v660 v710 v780 v770 v760 v750 
=== Predecessor ===
v916 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?124 guard: - address: v1319 #next: v927  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i323 
y: i1315 
=== Succesors ===
=== Usages ===
v927 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i323 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v654 
=== Succesors ===
trueSuccessor: v924 
falseSuccessor: v926 
=== Usages ===
=== Predecessor ===
i1315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v654 #trueSuccessor: v924 #falseSuccessor: v926  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v1|QWORD[.] v42|DWORD - - 
>@ <|@ instruction v83|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:283] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B116" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
stamp: void
=== Inputs ===
=== Succesors ===
next: v931 
=== Usages ===
v658 
=== Predecessor ===
v927 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i327 
y: i1315 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i327 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v928 
falseSuccessor: v930 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v928 #falseSuccessor: v930  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
stamp: void
=== Inputs ===
=== Succesors ===
next: v935 
=== Usages ===
v663 
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1305 
y: i133 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1305 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v932 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v934 #falseSuccessor: v932  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1047 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid i1048 <|@
result int[-170259|0xfffffffffffd66ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -170259
stableDimension: 0
stamp: i32 [-170259] ⇊00000000fffd66ed ⇈00000000fffd66ed
stampKind: i32
value: int[-170259|0xfffffffffffd66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1040 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-170259|0xfffffffffffd66ed]] destination: B91 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B115" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 331]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i165 i145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 341]
stamp: i32
=== Inputs ===
x: i1305 
y: i140 
=== Succesors ===
=== Usages ===
i146 j1134 i692 i686 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1305 y: i140  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 342]
stamp: i32
=== Inputs ===
x: i145 
y: i333 
=== Succesors ===
=== Usages ===
i148 v1330 i234 v710 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i145 y: i333  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i146 
y: i1315 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i146 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v710 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v938 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v710 #trueSuccessor: v936 #falseSuccessor: v938  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1316 
=== Usages ===
v718 
=== Predecessor ===
v939 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1316  <|@  <|@
f <@~|@floating>@ <|@
tid a1354 <|@
result v86|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1303 
=== Succesors ===
=== Usages ===
v1329 j1127 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1303  <|@  <|@
f <@~|@floating>@ <|@
tid v1329 <|@
result [v86|QWORD[.] + v3|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1354 
index: i1304 
=== Succesors ===
=== Usages ===
i1316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1354 index: i1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1316 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v916 
address: v1329 
=== Succesors ===
next: v658 
=== Usages ===
v658 
=== Predecessor ===
v936 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v916 address: v1329 #next: v658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v924 
address: v1327 
value: i1316 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
i1316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v924 address: v1327 value: i1316 stateAfter: - lastLocationAccess: - #next: v663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v928 
address: v1328 
value: i794 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v928 address: v1328 value: i794 stateAfter: - lastLocationAccess: - #next: v691  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: i32
=== Inputs ===
x: i1314 
y: i145 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1314 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 323]
stamp: i32
=== Inputs ===
x: i1304 
y: i4 
=== Succesors ===
=== Usages ===
j1128 v687 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1304 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i686 
y: i138 
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i686 y: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v687 
=== Succesors ===
trueSuccessor: v690 
falseSuccessor: v688 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v687 #trueSuccessor: v690 #falseSuccessor: v688  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVSX [v86|QWORD[.] + v3|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v45|QWORD * 1], y: v87|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v46|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v82|DWORD, ~y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4545654634934153134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4575814518999214557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: i32
=== Inputs ===
x: i1315 
y: i145 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1315 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i692 
y: i333 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i692 y: i333  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v693 
=== Succesors ===
trueSuccessor: v696 
falseSuccessor: v694 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v693 #trueSuccessor: v696 #falseSuccessor: v694  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SUB (x: v83|DWORD, ~y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4545594372828706203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4550128103508800164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v689 v695 
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v689 v695 #next: v698  <|@  <|@
tid ?131 <|@
d <@d|@=== Debug Properties ===
bci: 306
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 945
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i333 - - 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i333 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?131 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -178785 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: v0|QWORD[.] v1|QWORD[.] v44|DWORD - - 
>@ <|@ instruction DEOPT info [bci:306] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B99" "B102" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1127 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1127 <|@
result v91|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: i64
=== Inputs ===
object: a1354 
=== Succesors ===
next: j1132 
=== Usages ===
v1344 
=== Predecessor ===
v694 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1354 #next: j1132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1132 <|@
result v92|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v1135 
=== Usages ===
v1345 
=== Predecessor ===
j1127 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2 #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid j1128 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i138 
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i138  <|@  <|@
f <@~|@floating>@ <|@
tid v1344 <|@
result [v91|QWORD[*] + v93|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1127 
index: j1128 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1127 index: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1345 <|@
result [v92|QWORD[*] + v44|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1132 
index: i333 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1132 index: i333  <|@  <|@
f <@~|@floating>@ <|@
tid j1134 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i145 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1344 v1345 j1134 
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
j1132 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1344 v1345 j1134 #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
result [v1|QWORD[.] + v85|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i146 
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i146  <|@  <|@
f <@~|@floating>@ <|@
tid i804 <|@
result short[69|0x45] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
rawvalue: 69
stableDimension: 0
stamp: i16 [69] ⇊0000000000000045 ⇈0000000000000045
stampKind: i16
value: short[69|0x45]
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v936 
address: v1330 
value: i804 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v1135 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v936 address: v1330 value: i804 stateAfter: - lastLocationAccess: - #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 357]
stamp: i32
=== Inputs ===
x: i146 
y: i4 
=== Succesors ===
=== Usages ===
?151 i169 v1334 v780 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i146 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 367]
stamp: void
trueSuccessorProbability: 0.8976945244956772
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v154 #falseSuccessor: v155  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[*] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOVSXD v89|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOVSXD v84|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v91|QWORD[*] + v93|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v92|QWORD[*] + v44|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v85|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = INC v85|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8976945244956772 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4574934464739404074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 370]
stamp: void
=== Inputs ===
=== Succesors ===
next: v943 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i148 
y: i1315 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i148 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v940 
falseSuccessor: v942 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v940 #falseSuccessor: v942  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v95|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B103" 
    xhandlers
    flags 
    probability 4574934464739404074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
v787 
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v1334 <|@
result [v1|QWORD[.] + v95|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i148 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v940 
address: v1334 
value: i790 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v940 address: v1334 value: i790 stateAfter: - lastLocationAccess: - #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 372]
stamp: i32
=== Inputs ===
x: i146 
y: i133 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i146 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:955) [bci: 384]
stamp: i32
=== Inputs ===
x: i4 
y: i1306 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4 y: i1306  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
v787 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v95|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = LEA [v85|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SUB (x: v97|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|DWORD, v98|DWORD] destination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
tid ?151 <|@
d <@d|@=== Debug Properties ===
bci: 363
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 953
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i148 - - 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i148 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 781
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?151 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -199963 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: v0|QWORD[.] v1|QWORD[.] v95|DWORD - - 
>@ <|@ instruction DEOPT info [bci:363] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 4560692294521474510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 389]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 394]
stamp: i32
=== Inputs ===
x: i1306 
y: i140 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1306 y: i140  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
v155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|DWORD, v99|DWORD] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" "B102" 
    successors "B104" "B113" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i169 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v167 
values: i234 i148 
=== Succesors ===
=== Usages ===
?171 i178 i237 v750 v1331 i235 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v167 values: i234 i148  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v167 
values: i162 i165 
=== Succesors ===
=== Usages ===
?171 v174 i179 i300 v187 i301 i279 i276 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v167 values: i162 i165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v166 v168 
=== Succesors ===
next: v947 
=== Usages ===
i169 i170 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v166 v168 #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i169 
y: i1315 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i169 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v750 
=== Succesors ===
trueSuccessor: v944 
falseSuccessor: v946 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v750 #trueSuccessor: v944 #falseSuccessor: v946  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD, v101|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
v738 v728 v758 
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 404]
stamp: i32
=== Inputs ===
x: i169 
y: i4 
=== Succesors ===
=== Usages ===
v1332 v230 v760 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1331 <|@
result [v1|QWORD[.] + v100|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i169 
=== Succesors ===
=== Usages ===
v758 v738 v728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i169  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i173 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i170 y: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
stamp: void
trueSuccessorProbability: 0.9769452449567724
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v176 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v175 #falseSuccessor: v176  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = INC v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v101|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9769452449567724 condition: < trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4575661528741823044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 402]
stamp: void
=== Inputs ===
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v728  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 410]
stamp: i32
=== Inputs ===
x: i170 
y: i65 
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i170 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 411]
resultBits: 16
stamp: i16
=== Inputs ===
value: i179 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v728 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 412]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v944 
address: v1331 
value: i180 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v944 address: v1331 value: i180 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i178 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i178 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = LEA [v101|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v100|DWORD * 2 + 16], y: v103|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B112" 
    xhandlers
    flags 
    probability 4550940426270264190
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 416]
stamp: void
=== Inputs ===
=== Succesors ===
next: v951 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v951  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i1315 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i178 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v760 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v950 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v760 #trueSuccessor: v948 #falseSuccessor: v950  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B106 -> B107 falseDestination: B106 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4550940426270264190
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
v768 v748 
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 438]
stamp: i32
=== Inputs ===
x: i169 
y: i133 
=== Succesors ===
=== Usages ===
v770 v231 v1333 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v1332 <|@
result [v1|QWORD[.] + v102|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i178 
=== Succesors ===
=== Usages ===
v768 v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i178  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
result int[100|0x64] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i186 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i170 y: i186  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
result int[1717986919|0x66666667] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1717986919
stableDimension: 0
stamp: i32 [1717986919] ⇊0000000066666667 ⇈0000000066666667
stampKind: i32
value: int[1717986919|0x66666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
i300 i302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
stamp: void
trueSuccessorProbability: 0.625
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v948 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = LEA [v100|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v101|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 4548138927206252126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 422]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i170 
y: i285 
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i170 y: i285  <|@  <|@
f <@~|@floating>@ <|@
tid i287 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i300 
y: i133 
=== Succesors ===
=== Usages ===
i273 i1347 i274 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i300 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i1347 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 433]
stamp: i32 [-536870864 - 536870959]
=== Inputs ===
x: i287 
y: i65 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i287 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 434]
resultBits: 16
stamp: i16
=== Inputs ===
value: i1347 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v738 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 435]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v944 
address: v1331 
value: i193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v944 address: v1331 value: i193 stateAfter: - lastLocationAccess: - #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i287 
y: i236 
=== Succesors ===
=== Usages ===
i275 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i287 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i287 
y: i4 
=== Succesors ===
=== Usages ===
i275 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i287 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i273 
y: i274 
=== Succesors ===
=== Usages ===
i276 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i273 y: i274  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i170 
y: i275 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i170 y: i275  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 447]
stamp: i32
=== Inputs ===
x: i276 
y: i65 
=== Succesors ===
=== Usages ===
i747 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i276 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i747 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
resultBits: 16
stamp: i16
=== Inputs ===
value: i199 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v948 
address: v1332 
value: i747 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v948 address: v1332 value: i747 stateAfter: - lastLocationAccess: - #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i235 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i235 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v101|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = SAR v106|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = LEA [v107|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v100|DWORD * 2 + 16], y: v108|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SHL v107|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = SHL v107|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v109|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SUB (x: v101|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = LEA [v112|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v102|DWORD * 2 + 16], y: v113|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v104|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4544734726079535262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 453]
stamp: void
=== Inputs ===
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i235 
y: i1315 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i235 y: i1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v770 
=== Succesors ===
trueSuccessor: v952 
falseSuccessor: v954 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v770 #trueSuccessor: v952 #falseSuccessor: v954  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4544734726079535262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
stamp: void
=== Inputs ===
=== Succesors ===
next: v758 
=== Usages ===
v778 
=== Predecessor ===
v955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid i291 <|@
result int[1374389535|0x51eb851f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i301 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i170 
y: i291 
=== Succesors ===
=== Usages ===
i294 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i170 y: i291  <|@  <|@
f <@~|@floating>@ <|@
tid i293 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i301 
y: i293 
=== Succesors ===
=== Usages ===
i278 i1348 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i301 y: i293  <|@  <|@
f <@~|@floating>@ <|@
tid i1348 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 464]
stamp: i32 [-67108816 - 67108911]
=== Inputs ===
x: i294 
y: i65 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i294 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 465]
resultBits: 16
stamp: i16
=== Inputs ===
value: i1348 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v944 
address: v1331 
value: i206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v944 address: v1331 value: i206 stateAfter: - lastLocationAccess: - #next: v768  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
stamp: i32
=== Inputs ===
x: i294 
y: i186 
=== Succesors ===
=== Usages ===
i279 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i294 y: i186  <|@  <|@
f <@~|@floating>@ <|@
tid i279 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i170 
y: i278 
=== Succesors ===
=== Usages ===
i298 i302 i284 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i170 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i279 
y: i285 
=== Succesors ===
=== Usages ===
i297 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i279 y: i285  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i302 
y: i133 
=== Succesors ===
=== Usages ===
i299 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i302 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
result int[31|0x1f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i279 
y: i288 
=== Succesors ===
=== Usages ===
i299 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i279 y: i288  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-536870912 - 536870912]
=== Inputs ===
x: i297 
y: i298 
=== Succesors ===
=== Usages ===
i212 i281 i282 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i297 y: i298  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 483]
stamp: i32 [-536870864 - 536870960]
=== Inputs ===
x: i299 
y: i65 
=== Succesors ===
=== Usages ===
i767 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i299 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
resultBits: 16
stamp: i16
=== Inputs ===
value: i212 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v948 
address: v1332 
value: i767 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v948 address: v1332 value: i767 stateAfter: - lastLocationAccess: - #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v1333 <|@
result [v1|QWORD[.] + v104|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i235 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i235  <|@  <|@
f <@~|@floating>@ <|@
tid i281 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i299 
y: i236 
=== Succesors ===
=== Usages ===
i283 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i299 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i299 
y: i4 
=== Succesors ===
=== Usages ===
i283 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i299 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i283 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i281 
y: i282 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i281 y: i282  <|@  <|@
f <@~|@floating>@ <|@
tid i284 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i279 
y: i283 
=== Succesors ===
=== Usages ===
i218 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i279 y: i283  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 497]
stamp: i32
=== Inputs ===
x: i284 
y: i65 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i284 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i777 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
resultBits: 16
stamp: i16
=== Inputs ===
value: i218 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v952 
address: v1333 
value: i777 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v952 address: v1333 value: i777 stateAfter: - lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
stamp: i32
=== Inputs ===
x: i169 
y: i236 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i236  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:972) [bci: 500]
stamp: void
=== Inputs ===
result: i237 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i237 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v101|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SAR v115|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = LEA [v116|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v100|DWORD * 2 + 16], y: v117|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = IMUL v116|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = SUB (x: v101|DWORD, ~y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v119|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = SAR v121|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = SHR v119|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = ADD (x: v122|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = LEA [v124|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v102|DWORD * 2 + 16], y: v125|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = SHL v124|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = SHL v124|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = ADD (x: v126|DWORD, y: v127|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = SUB (x: v119|DWORD, ~y: v128|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = LEA [v129|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v104|DWORD * 2 + 16], y: v130|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = LEA [v100|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v131|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1063 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1063  <|@  <|@
f <@~|@floating>@ <|@
tid i1064 <|@
result int[-197403|0xfffffffffffcfce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -197403
stableDimension: 0
stamp: i32 [-197403] ⇊00000000fffcfce5 ⇈00000000fffcfce5
stampKind: i32
value: int[-197403|0xfffffffffffcfce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1058 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
v954 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197403|0xfffffffffffcfce5]] destination: B111 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1061 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid i1062 <|@
result int[-211739|0xfffffffffffcc4e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -211739
stableDimension: 0
stamp: i32 [-211739] ⇊00000000fffcc4e5 ⇈00000000fffcc4e5
stampKind: i32
value: int[-211739|0xfffffffffffcc4e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1058 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
v950 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-211739|0xfffffffffffcc4e5]] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid i1057 <|@
result int[-211995|0xfffffffffffcc3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -211995
stableDimension: 0
stamp: i32 [-211995] ⇊00000000fffcc3e5 ⇈00000000fffcc3e5
stampKind: i32
value: int[-211995|0xfffffffffffcc3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1058 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
v946 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-211995|0xfffffffffffcc3e5]] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" "B111" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1058 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-211995 - -197403] ⇊00000000fffcc0e5 ⇈00000000fffcffe5
valueDescription: i32
=== Inputs ===
merge: v1055 
values: i1057 i1062 i1064 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1055 values: i1057 i1062 i1064  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1056 v1061 v1063 
=== Succesors ===
next: v1060 
=== Usages ===
i1058 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1056 v1061 v1063 #next: v1060  <|@  <|@
tid ?171 <|@
d <@d|@=== Debug Properties ===
bci: 396
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 960
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 i169 i170 - 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i169 i170 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?171 
actionAndReason: i1058 
speculation: a995 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?171 actionAndReason: i1058 speculation: a995  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v132|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - v1|QWORD[.] v100|DWORD v101|DWORD - 
>@ <|@ instruction DEOPT info [bci:396] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1053  <|@  <|@
f <@~|@floating>@ <|@
tid i1054 <|@
result int[-182043|0xfffffffffffd38e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -182043
stableDimension: 0
stamp: i32 [-182043] ⇊00000000fffd38e5 ⇈00000000fffd38e5
stampKind: i32
value: int[-182043|0xfffffffffffd38e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1040 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v938 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-182043|0xfffffffffffd38e5]] destination: B115 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid i1052 <|@
result int[-169243|0xfffffffffffd6ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -169243
stableDimension: 0
stamp: i32 [-169243] ⇊00000000fffd6ae5 ⇈00000000fffd6ae5
stampKind: i32
value: int[-169243|0xfffffffffffd6ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1040 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-169243|0xfffffffffffd6ae5]] destination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1049 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1049  <|@  <|@
f <@~|@floating>@ <|@
tid i1050 <|@
result int[-167707|0xfffffffffffd70e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -167707
stableDimension: 0
stamp: i32 [-167707] ⇊00000000fffd70e5 ⇈00000000fffd70e5
stampKind: i32
value: int[-167707|0xfffffffffffd70e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1040 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v926 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-167707|0xfffffffffffd70e5]] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid i1046 <|@
result int[-164379|0xfffffffffffd7de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -164379
stableDimension: 0
stamp: i32 [-164379] ⇊00000000fffd7de5 ⇈00000000fffd7de5
stampKind: i32
value: int[-164379|0xfffffffffffd7de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1040 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
v918 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-164379|0xfffffffffffd7de5]] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B91" "B117" "B116" "B115" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1040 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-182043 - -163083] ⇊00000000fffd00e5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v1037 
values: i1046 i1048 i1050 i1052 i1054 
=== Succesors ===
=== Usages ===
v1042 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1037 values: i1046 i1048 i1050 i1052 i1054  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1045 v1047 v1049 v1051 v1053 
=== Succesors ===
next: v1042 
=== Usages ===
i1040 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1045 v1047 v1049 v1051 v1053 #next: v1042  <|@  <|@
f <@*|@fixed>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?124 
actionAndReason: i1040 
speculation: a995 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?124 actionAndReason: i1040 speculation: a995  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v133|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v1|QWORD[.] v42|DWORD - - 
>@ <|@ instruction DEOPT info [bci:283] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e0c8e1e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997646283481617 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180298760650383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8245601647543395 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 4605600449146731052
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2], int[0|0x0], int[1|0x1], int[2|0x2], long[16|0x10], long[18|0x12]] destination: B2 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B35" "B2" 
    successors "B37" "B86" 
    xhandlers
    flags 
    probability 4605609722615999826
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD, v42|DWORD, v43|DWORD, v44|DWORD, v45|QWORD, v46|QWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.998987666642903 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605602196420547892
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.008891362676257342 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B84" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v0|QWORD[.] v1|QWORD[.] v42|DWORD - - 
>@ <|@ instruction v47|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:197] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B83" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B51" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v45|QWORD * 1] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v46|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8206833988509223 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604216221566683794
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: v0|QWORD[.] v1|QWORD[.] v44|DWORD - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:229] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604155811546469720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4604096005626457787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = SUB (x: v48|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4604036797765645973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SUB (x: v47|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4603978181983442277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v52|QWORD[*] + v54|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v53|QWORD[*] + v44|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v44|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595487418746212747
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2], int[0|0x0], int[1|0x1], int[2|0x2], long[0|0x0], long[1|0x1]] destination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B35" 
    xhandlers
    flags 
    probability 4595488906503641808
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD, v8|DWORD, v9|DWORD, v10|DWORD, v11|QWORD, v12|QWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9952377758400965 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:43] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:43] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v5|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B33" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v8|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4595395897179245049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595333618410357953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v14|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B29" 
    xhandlers
    flags 
    probability 4595271962429159728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v20|QWORD[*] + v22|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v21|QWORD[*] + v8|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v15|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07837983555735273 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4594793536448082759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4594793536448082759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v24|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v15|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = SUB (x: v44|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = NEG v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVSXD v58|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = DEC v59|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B54" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B65" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v58|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = LEA [v1|QWORD[.] + v44|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v59|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v68|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588080454489061728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v67|QWORD[.]], input: v69|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4588080454489061728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v67|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B66" "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4594394978369691840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4594342708788900276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SUB (x: v71|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B82" 
    xhandlers
    flags 
    probability 4594290961903916627
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v47|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 4594239732487782815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOVSXD v57|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v75|QWORD[*] + v77|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v76|QWORD[*] + v78|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v79|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ADD (x: v57|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v80|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B56" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOV v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B73" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580936977043935467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580936977043935467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4578808437478284942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4578731889321312627
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SUB (x: v4|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4578656106645910035
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v16|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4578581081797261469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v14|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4578506807197099389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v29|QWORD[*] + v31|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v30|QWORD[*] + v32|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = ADD (x: v24|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v34|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B87" 
    xhandlers
    flags 
    probability 4575102623111918487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B38" 
    successors "B88" "B118" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v1|QWORD[.] v42|DWORD - - 
>@ <|@ instruction v82|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:283] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B117" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v1|QWORD[.] v42|DWORD - - 
>@ <|@ instruction v83|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:283] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B116" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B115" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVSX [v86|QWORD[.] + v3|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v45|QWORD * 1], y: v87|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v46|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v82|DWORD, ~y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4575814518999214557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SUB (x: v83|DWORD, ~y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B99" "B102" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[*] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOVSXD v89|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOVSXD v84|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v91|QWORD[*] + v93|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v92|QWORD[*] + v44|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v85|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = INC v85|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8976945244956772 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4574934464739404074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v95|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B103" 
    xhandlers
    flags 
    probability 4574934464739404074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + v95|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = LEA [v85|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SUB (x: v97|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|DWORD, v98|DWORD] destination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" "B102" 
    successors "B104" "B113" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD, v101|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = INC v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v101|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9769452449567724 condition: < trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4575661528741823044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = LEA [v101|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v100|DWORD * 2 + 16], y: v103|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574382504741084395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144225|0xfffffffffffdcc9f], Object[null]] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" "B56" "B61" "B63" "B43" "B49" "B47" "B45" "B55" 
    successors 
    xhandlers
    flags 
    probability 4583274488072152459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: v0|QWORD[.] v1|QWORD[.] v44|DWORD - - 
>@ <|@ instruction DEOPT info [bci:229] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574305179915210380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144225|0xfffffffffffdcc9f], Object[null]] destination: B45 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574228628337595106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144225|0xfffffffffffdcc9f], Object[null]] destination: B47 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574152842275755984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144225|0xfffffffffffdcc9f], Object[null]] destination: B49 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565695027361111979
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110177|0xfffffffffffe519f]] destination: B14 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B11" "B33" "B14" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4572628985271955744
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:43] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565614505316490279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110177|0xfffffffffffe519f]] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565534788492314796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110177|0xfffffffffffe519f]] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564400910112396718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B74" "B76" "B78" "B80" 
    successors 
    xhandlers
    flags 
    probability 4573307412178135430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -159329 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:2974) [bci: 10]
locals: v1|QWORD[.] - v57|DWORD int[48|0x30] v57|DWORD 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
locals: v0|QWORD[.] v1|QWORD[.] v44|DWORD - - 
>@ <|@ instruction DEOPT info [bci:10, 246] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564333329240262170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564266424176848968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564200188164069898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B87" 
    xhandlers
    flags 
    probability 4560846047414351627
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4560845201392801771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = SHL v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v38|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v11|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD, v8|DWORD, v9|DWORD, v10|DWORD, v40|QWORD, v39|QWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 4560692294521474510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|DWORD, v99|DWORD] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552815705264164864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction CMP [v1|QWORD[.] + 12] y: 0 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552815705264164864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|QWORD[.] + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8245601647543395 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B36" 
    xhandlers
    flags 
    probability 4551292241656806685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[3|0x3], int[1|0x1], int[2|0x2], int[3|0x3], long[18|0x12], long[20|0x14]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B112" 
    xhandlers
    flags 
    probability 4550940426270264190
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B106 -> B107 falseDestination: B106 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4550940426270264190
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = LEA [v100|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v101|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 4548138927206252126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v101|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = SAR v106|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = LEA [v107|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v100|DWORD * 2 + 16], y: v108|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SHL v107|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = SHL v107|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v109|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SUB (x: v101|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = LEA [v112|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v102|DWORD * 2 + 16], y: v113|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v104|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B32" 
    xhandlers
    flags 
    probability 4549031106063058630
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124769|0xfffffffffffe189f]] destination: B21 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B21" "B27" "B25" "B23" 
    successors 
    xhandlers
    flags 
    probability 4557965307770540310
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: v0|QWORD[.] v1|QWORD[.] v24|DWORD v13|DWORD - 
>@ <|@ instruction DEOPT info [bci:145] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548982115242596348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124769|0xfffffffffffe189f]] destination: B23 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548933614330338689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124769|0xfffffffffffe189f]] destination: B25 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548885598427203607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124769|0xfffffffffffe189f]] destination: B27 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4545654634934153134
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4550128103508800164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -178785 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: v0|QWORD[.] v1|QWORD[.] v44|DWORD - - 
>@ <|@ instruction DEOPT info [bci:306] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4545594372828706203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4544734726079535262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4544734726079535262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v101|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SAR v115|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = LEA [v116|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v100|DWORD * 2 + 16], y: v117|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = IMUL v116|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = SUB (x: v101|DWORD, ~y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v119|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = SAR v121|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = SHR v119|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = ADD (x: v122|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = LEA [v124|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v102|DWORD * 2 + 16], y: v125|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = SHL v124|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = SHL v124|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = ADD (x: v126|DWORD, y: v127|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = SUB (x: v119|DWORD, ~y: v128|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = LEA [v129|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + v104|DWORD * 2 + 16], y: v130|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = LEA [v100|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v131|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541218679191522188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[3|0x3], int[1|0x1], int[2|0x2], int[3|0x3], long[2|0x2], long[2|0x2]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-169243|0xfffffffffffd6ae5]] destination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B91" "B117" "B116" "B115" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v133|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v1|QWORD[.] v42|DWORD - - 
>@ <|@ instruction DEOPT info [bci:283] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1242173179] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-160011|0xfffffffffffd8ef5], v64|QWORD[.]] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147475|0xfffffffffffdbfed], Object[null]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197403|0xfffffffffffcfce5]] destination: B111 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" "B111" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v132|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - v1|QWORD[.] v100|DWORD v101|DWORD - 
>@ <|@ instruction DEOPT info [bci:396] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147219|0xfffffffffffdc0ed], Object[null]] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -201755 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -199963 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: v0|QWORD[.] v1|QWORD[.] v95|DWORD - - 
>@ <|@ instruction DEOPT info [bci:363] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@575684881] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148251|0xfffffffffffdbce5], v135|QWORD[.]] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-164379|0xfffffffffffd7de5]] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-114459|0xfffffffffffe40e5]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-112915|0xfffffffffffe46ed]] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133403|0xfffffffffffdf6e5]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v0|QWORD[.] v1|QWORD[.] v42|DWORD - - 
>@ <|@ instruction DEOPT info [bci:197] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-170259|0xfffffffffffd66ed]] destination: B91 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131355|0xfffffffffffdfee5]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-182043|0xfffffffffffd38e5]] destination: B115 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-211739|0xfffffffffffcc4e5]] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-167707|0xfffffffffffd70e5]] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-211995|0xfffffffffffcc3e5]] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@575684881] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148251|0xfffffffffffdbce5], v134|QWORD[.]] destination: B56 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128027|0xfffffffffffe0be5]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          27
     6: aload_0       
     7: getfield      #10         // nDigits:int
    10: bipush        19
    12: if_icmple     27
    15: new           #21         // java.lang.AssertionError
    18: dup           
    19: aload_0       
    20: getfield      #10         // nDigits:int
    23: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
    26: athrow        
    27: iconst_0      
    28: istore_2      
    29: aload_0       
    30: getfield      #7          // isNegative:boolean
    33: ifeq          43
    36: aload_1       
    37: iconst_0      
    38: bipush        45
    40: castore       
    41: iconst_1      
    42: istore_2      
    43: aload_0       
    44: getfield      #8          // decExponent:int
    47: ifle          197
    50: aload_0       
    51: getfield      #8          // decExponent:int
    54: bipush        8
    56: if_icmpge     197
    59: aload_0       
    60: getfield      #10         // nDigits:int
    63: aload_0       
    64: getfield      #8          // decExponent:int
    67: invokestatic  #26         // java.lang.Math.min:(int, int)int
    70: istore_3      
    71: aload_0       
    72: getfield      #6          // digits:char[]
    75: aload_0       
    76: getfield      #9          // firstDigitIndex:int
    79: aload_1       
    80: iload_2       
    81: iload_3       
    82: invokestatic  #17         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    85: iload_2       
    86: iload_3       
    87: iadd          
    88: istore_2      
    89: iload_3       
    90: aload_0       
    91: getfield      #8          // decExponent:int
    94: if_icmpge     137
    97: aload_0       
    98: getfield      #8          // decExponent:int
   101: iload_3       
   102: isub          
   103: istore_3      
   104: aload_1       
   105: iload_2       
   106: iload_2       
   107: iload_3       
   108: iadd          
   109: bipush        48
   111: invokestatic  #42         // java.util.Arrays.fill:(char[], int, int, char)void
   114: iload_2       
   115: iload_3       
   116: iadd          
   117: istore_2      
   118: aload_1       
   119: iload_2       
   120: iinc          
   123: bipush        46
   125: castore       
   126: aload_1       
   127: iload_2       
   128: iinc          
   131: bipush        48
   133: castore       
   134: goto          194
   137: aload_1       
   138: iload_2       
   139: iinc          
   142: bipush        46
   144: castore       
   145: iload_3       
   146: aload_0       
   147: getfield      #10         // nDigits:int
   150: if_icmpge     186
   153: aload_0       
   154: getfield      #10         // nDigits:int
   157: iload_3       
   158: isub          
   159: istore        4
   161: aload_0       
   162: getfield      #6          // digits:char[]
   165: aload_0       
   166: getfield      #9          // firstDigitIndex:int
   169: iload_3       
   170: iadd          
   171: aload_1       
   172: iload_2       
   173: iload         4
   175: invokestatic  #17         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   178: iload_2       
   179: iload         4
   181: iadd          
   182: istore_2      
   183: goto          194
   186: aload_1       
   187: iload_2       
   188: iinc          
   191: bipush        48
   193: castore       
   194: goto          500
   197: aload_0       
   198: getfield      #8          // decExponent:int
   201: ifgt          283
   204: aload_0       
   205: getfield      #8          // decExponent:int
   208: bipush        -3
   210: if_icmple     283
   213: aload_1       
   214: iload_2       
   215: iinc          
   218: bipush        48
   220: castore       
   221: aload_1       
   222: iload_2       
   223: iinc          
   226: bipush        46
   228: castore       
   229: aload_0       
   230: getfield      #8          // decExponent:int
   233: ifeq          256
   236: aload_1       
   237: iload_2       
   238: iload_2       
   239: aload_0       
   240: getfield      #8          // decExponent:int
   243: isub          
   244: bipush        48
   246: invokestatic  #42         // java.util.Arrays.fill:(char[], int, int, char)void
   249: iload_2       
   250: aload_0       
   251: getfield      #8          // decExponent:int
   254: isub          
   255: istore_2      
   256: aload_0       
   257: getfield      #6          // digits:char[]
   260: aload_0       
   261: getfield      #9          // firstDigitIndex:int
   264: aload_1       
   265: iload_2       
   266: aload_0       
   267: getfield      #10         // nDigits:int
   270: invokestatic  #17         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   273: iload_2       
   274: aload_0       
   275: getfield      #10         // nDigits:int
   278: iadd          
   279: istore_2      
   280: goto          500
   283: aload_1       
   284: iload_2       
   285: iinc          
   288: aload_0       
   289: getfield      #6          // digits:char[]
   292: aload_0       
   293: getfield      #9          // firstDigitIndex:int
   296: caload        
   297: castore       
   298: aload_1       
   299: iload_2       
   300: iinc          
   303: bipush        46
   305: castore       
   306: aload_0       
   307: getfield      #10         // nDigits:int
   310: iconst_1      
   311: if_icmple     347
   314: aload_0       
   315: getfield      #6          // digits:char[]
   318: aload_0       
   319: getfield      #9          // firstDigitIndex:int
   322: iconst_1      
   323: iadd          
   324: aload_1       
   325: iload_2       
   326: aload_0       
   327: getfield      #10         // nDigits:int
   330: iconst_1      
   331: isub          
   332: invokestatic  #17         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   335: iload_2       
   336: aload_0       
   337: getfield      #10         // nDigits:int
   340: iconst_1      
   341: isub          
   342: iadd          
   343: istore_2      
   344: goto          355
   347: aload_1       
   348: iload_2       
   349: iinc          
   352: bipush        48
   354: castore       
   355: aload_1       
   356: iload_2       
   357: iinc          
   360: bipush        69
   362: castore       
   363: aload_0       
   364: getfield      #8          // decExponent:int
   367: ifgt          389
   370: aload_1       
   371: iload_2       
   372: iinc          
   375: bipush        45
   377: castore       
   378: aload_0       
   379: getfield      #8          // decExponent:int
   382: ineg          
   383: iconst_1      
   384: iadd          
   385: istore_3      
   386: goto          396
   389: aload_0       
   390: getfield      #8          // decExponent:int
   393: iconst_1      
   394: isub          
   395: istore_3      
   396: iload_3       
   397: bipush        9
   399: if_icmpgt     416
   402: aload_1       
   403: iload_2       
   404: iinc          
   407: iload_3       
   408: bipush        48
   410: iadd          
   411: i2c           
   412: castore       
   413: goto          500
   416: iload_3       
   417: bipush        99
   419: if_icmpgt     453
   422: aload_1       
   423: iload_2       
   424: iinc          
   427: iload_3       
   428: bipush        10
   430: idiv          
   431: bipush        48
   433: iadd          
   434: i2c           
   435: castore       
   436: aload_1       
   437: iload_2       
   438: iinc          
   441: iload_3       
   442: bipush        10
   444: irem          
   445: bipush        48
   447: iadd          
   448: i2c           
   449: castore       
   450: goto          500
   453: aload_1       
   454: iload_2       
   455: iinc          
   458: iload_3       
   459: bipush        100
   461: idiv          
   462: bipush        48
   464: iadd          
   465: i2c           
   466: castore       
   467: iload_3       
   468: bipush        100
   470: irem          
   471: istore_3      
   472: aload_1       
   473: iload_2       
   474: iinc          
   477: iload_3       
   478: bipush        10
   480: idiv          
   481: bipush        48
   483: iadd          
   484: i2c           
   485: castore       
   486: aload_1       
   487: iload_2       
   488: iinc          
   491: iload_3       
   492: bipush        10
   494: irem          
   495: bipush        48
   497: iadd          
   498: i2c           
   499: castore       
   500: iload_2       
   501: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e0c8e1e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ instruction stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   18  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.9997646283481617 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180298760650383
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.8245601647543395 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 4605600449146731052
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r13|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   38  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B2 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B35" "B2" 
    successors "B37" "B86" 
    xhandlers
    flags 
    probability 4605609722615999826
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr  474  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.998987666642903 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4605602196420547892
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction CMP r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.008891362676257342 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B84" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction r14|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:197] <|@ <|@
      nr  498  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B83" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B51" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction MOV [rdx|QWORD[.] + rbp|QWORD * 1] y: 48 size: WORD <|@ <|@
      nr  512  <|@ instruction MOV [rdx|QWORD[.] + r13|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr  514  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.8206833988509223 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604216221566683794
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: rsi|QWORD[.] rdx|QWORD[.] rax|DWORD - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:229] <|@ <|@
      nr  522  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604155811546469720
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4604096005626457787
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction rdi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4604036797765645973
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4603978181983442277
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  600  <|@ instruction r11|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  602  <|@ instruction rdi|QWORD = LEA [r10|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  612  <|@ instruction rax|DWORD = ADD (x: stack:80|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595487418746212747
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rbp|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   58  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B35" 
    xhandlers
    flags 
    probability 4595488906503641808
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr  146  <|@ instruction CMP r9|DWORD y: 8 size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.9952377758400965 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:48]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:43] <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:48]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:43] <|@ <|@
      nr  158  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B33" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4595395897179245049
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  202  <|@ instruction rdi|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595333618410357953
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rdi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B29" 
    xhandlers
    flags 
    probability 4595271962429159728
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction stack:52|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction stack:72|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdi|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r13|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r14|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  252  <|@ instruction r10|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + r14|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA [r13|QWORD[*] + rbx|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction MOV [rdx|QWORD[.] + rax|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  272  <|@ instruction r10|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: stack:80|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.07837983555735273 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4594793536448082759
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4594793536448082759
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction MOV [rdx|QWORD[.] + r10|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  406  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction r9|DWORD = NEG r9|DWORD size: DWORD <|@ <|@
      nr  626  <|@ instruction rdi|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  630  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B54" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B65" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction r9|QWORD[.] = LEA [rdx|QWORD[.] + rax|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr  754  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588080454489061728
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr  768  <|@ instruction J (address: [r9|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  770  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  776  <|@ instruction CMP (x: rdi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4588080454489061728
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction MOV [r9|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B66" "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4594394978369691840
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4594342708788900276
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction rdi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  818  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMP (x: rsi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B82" 
    xhandlers
    flags 
    probability 4594290961903916627
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 4594239732487782815
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  860  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = LEA [r10|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  872  <|@ instruction r11|DWORD = ADD (x: stack:76|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B56" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction rcx|QWORD = ADD (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  640  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B73" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction JUMP ~[] destination: B66 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580936977043935467
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580936977043935467
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4578808437478284942
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = ADD (x: stack:80|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4578731889321312627
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = SUB (x: r11|DWORD, ~y: stack:80|DWORD) size: DWORD <|@ <|@
      nr  308  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4578656106645910035
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction rbp|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4578581081797261469
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4578506807197099389
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  370  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  372  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r11|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  386  <|@ instruction r10|DWORD = ADD (x: stack:56|DWORD, y: stack:52|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B87" 
    xhandlers
    flags 
    probability 4575102623111918487
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B38 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B38" 
    successors "B88" "B118" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:32, stack:48]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:48|QWORD[.] rdx|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:283] <|@ <|@
      nr  920  <|@ instruction CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B117" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:32, stack:48]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:48|QWORD[.] rdx|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:283] <|@ <|@
      nr  928  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B116" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction CMP (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction CMP r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  942  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B115" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction rdi|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  956  <|@ instruction r11|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  960  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr  966  <|@ instruction rbx|DWORD = MOVSX [r10|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [rdx|QWORD[.] + rbp|QWORD * 1], y: rbx|DWORD) size: WORD <|@ <|@
      nr  970  <|@ instruction MOV [rdx|QWORD[.] + r13|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr  972  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  974  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  976  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4575814518999214557
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction r8|DWORD = SUB (x: rcx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  992  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B99" "B102" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 1024  <|@ instruction rdi|QWORD = LEA [r10|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rsi|QWORD = LEA [r8|QWORD[*] + rax|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1032  <|@ instruction r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction MOV [r9|QWORD[.] + r11|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr 1038  <|@ instruction r10|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction CMP stack:40|DWORD y: 1 size: DWORD <|@ <|@
      nr 1042  <|@ instruction BRANCH trueDestinationProbability: 0.8976945244956772 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4574934464739404074
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B103" 
    xhandlers
    flags 
    probability 4574934464739404074
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr 1056  <|@ instruction rax|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr 1058  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1060  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" "B102" 
    successors "B104" "B113" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1090  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1096  <|@ instruction CMP r11|DWORD y: 10 size: DWORD <|@ <|@
      nr 1098  <|@ instruction BRANCH trueDestinationProbability: 0.9769452449567724 condition: < trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4575661528741823044
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1102  <|@ instruction rax|DWORD = LEA [r11|DWORD + 48] size: DWORD <|@ <|@
      nr 1104  <|@ instruction MOV (x: [r9|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1106  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574382504741084395
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f] <|@ <|@
      nr  530  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" "B56" "B61" "B63" "B43" "B49" "B47" "B45" "B55" 
    successors 
    xhandlers
    flags 
    probability 4583274488072152459
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 668], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [rdx:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: stack:48|QWORD[.] rdx|QWORD[.] rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:229] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574305179915210380
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f] <|@ <|@
      nr  546  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B45 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574228628337595106
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f] <|@ <|@
      nr  566  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B47 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574152842275755984
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f] <|@ <|@
      nr  584  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B49 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565695027361111979
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|DWORD = MOVE input: int[-110177|0xfffffffffffe519f] <|@ <|@
      nr  194  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B14 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B11" "B33" "B14" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4572628985271955744
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 668], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [rdx:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: stack:48|QWORD[.] rdx|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:43] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565614505316490279
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|DWORD = MOVE input: int[-110177|0xfffffffffffe519f] <|@ <|@
      nr  212  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565534788492314796
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rdi|DWORD = MOVE input: int[-110177|0xfffffffffffe519f] <|@ <|@
      nr  228  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564400910112396718
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B74 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B74" "B76" "B78" "B80" 
    successors 
    xhandlers
    flags 
    probability 4573307412178135430
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction MOV [r15|QWORD + 668] y: -159329 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@reference-map: [rdx:0, stack:32]
live-base-pointers: []
java.util.Arrays.fill(Arrays.java:2974) [bci: 10]
locals: rdx|QWORD[.] - r11|DWORD int[48|0x30] r11|DWORD 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
locals: stack:48|QWORD[.] rdx|QWORD[.] rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:10, 246] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564333329240262170
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B76 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564266424176848968
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 4564200188164069898
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B87" 
    xhandlers
    flags 
    probability 4560846047414351627
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4560845201392801771
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|QWORD = SHL rbp|QWORD size: QWORD <|@ <|@
      nr  456  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  460  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 4560692294521474510
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = DEC stack:40|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552815705264164864
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:32, stack:48]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
locals: stack:48|QWORD[.] r9|QWORD[.] - - - 
>@ <|@ instruction CMP [r9|QWORD[.] + 12] y: 0 size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552815705264164864
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV [r9|QWORD[.] + 16] y: 45 size: WORD <|@ <|@
      nr   90  <|@ instruction CMP stack:40|DWORD y: 1 size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.8245601647543395 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B36" 
    xhandlers
    flags 
    probability 4551292241656806685
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r13|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   98  <|@ instruction rbp|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  102  <|@ instruction rdi|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  104  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction rcx|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  108  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B112" 
    xhandlers
    flags 
    probability 4550940426270264190
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1112  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B106 -> B107 falseDestination: B106 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4550940426270264190
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction rbx|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr 1120  <|@ instruction CMP r11|DWORD y: 100 size: DWORD <|@ <|@
      nr 1122  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 4548138927206252126
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1130  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV (x: [r9|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1138  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1140  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1142  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rax|DWORD = LEA [r11|DWORD + 48] size: DWORD <|@ <|@
      nr 1148  <|@ instruction MOV (x: [r9|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1150  <|@ instruction rax|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B32" 
    xhandlers
    flags 
    probability 4549031106063058630
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f] <|@ <|@
      nr  296  <|@ instruction stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B21 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B21" "B27" "B25" "B23" 
    successors 
    xhandlers
    flags 
    probability 4557965307770540310
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  424  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: stack:48|QWORD[.] r9|QWORD[.] stack:56|DWORD stack:80|DWORD - 
>@ <|@ instruction DEOPT info [bci:145] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548982115242596348
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f] <|@ <|@
      nr  316  <|@ instruction stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B23 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548933614330338689
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f] <|@ <|@
      nr  336  <|@ instruction stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548885598427203607
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f] <|@ <|@
      nr  354  <|@ instruction stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B27 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4545654634934153134
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4550128103508800164
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 668] y: -178785 size: DWORD <|@ <|@
      nr 1004  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: stack:48|QWORD[.] r9|QWORD[.] rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:306] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4545594372828706203
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  996  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4544734726079535262
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1158  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4544734726079535262
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1162  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr 1166  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr 1170  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV (x: [r9|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1174  <|@ instruction rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1176  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1182  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1186  <|@ instruction rax|DWORD = SHR r11|DWORD y: 31 size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1190  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r9|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1194  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1196  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction rax|DWORD = LEA [r11|DWORD + 48] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r9|QWORD[.] + rbx|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1206  <|@ instruction rax|DWORD = LEA [r10|DWORD + 3] size: DWORD <|@ <|@
      nr 1208  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541218679191522188
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction rbp|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  124  <|@ instruction r8|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  126  <|@ instruction rax|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  128  <|@ instruction rdi|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  130  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  134  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1246  <|@ instruction r10|DWORD = MOVE input: int[-169243|0xfffffffffffd6ae5] <|@ <|@
      nr 1248  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~[] destination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B91" "B117" "B116" "B115" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1272  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1274  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:48|QWORD[.] r9|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:283] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1242173179] <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOVE input: int[-160011|0xfffffffffffd8ef5] <|@ <|@
      nr  696  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rdi|DWORD = MOVE input: int[-147475|0xfffffffffffdbfed] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1212  <|@ instruction r8|DWORD = MOVE input: int[-197403|0xfffffffffffcfce5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B111 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" "B111" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1230  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1234  <|@ st <@st|@reference-map: [r9:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - r9|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:396] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  710  <|@ instruction rdi|DWORD = MOVE input: int[-147219|0xfffffffffffdc0ed] <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r15|QWORD + 668] y: -201755 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
locals: stack:48|QWORD[.] r9|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 668] y: -199963 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: stack:48|QWORD[.] r9|QWORD[.] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:363] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@575684881] <|@ <|@
      nr  660  <|@ instruction rdi|DWORD = MOVE input: int[-148251|0xfffffffffffdbce5] <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction r10|DWORD = MOVE input: int[-164379|0xfffffffffffd7de5] <|@ <|@
      nr 1264  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1266  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = MOVE input: int[-114459|0xfffffffffffe40e5] <|@ <|@
      nr  430  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = MOVE input: int[-112915|0xfffffffffffe46ed] <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction r10|DWORD = MOVE input: int[-133403|0xfffffffffffdf6e5] <|@ <|@
      nr  882  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  884  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  900  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  904  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:48|QWORD[.] r9|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:197] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction r10|DWORD = MOVE input: int[-170259|0xfffffffffffd66ed] <|@ <|@
      nr  948  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B91 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD = MOVE input: int[-131355|0xfffffffffffdfee5] <|@ <|@
      nr  892  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-182043|0xfffffffffffd38e5] <|@ <|@
      nr 1240  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~[] destination: B115 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-211739|0xfffffffffffcc4e5] <|@ <|@
      nr 1220  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-167707|0xfffffffffffd70e5] <|@ <|@
      nr 1256  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1258  <|@ instruction JUMP ~[] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1224  <|@ instruction r8|DWORD = MOVE input: int[-211995|0xfffffffffffcc3e5] <|@ <|@
      nr 1226  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@575684881] <|@ <|@
      nr  672  <|@ instruction rdi|DWORD = MOVE input: int[-148251|0xfffffffffffdbce5] <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B56 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|DWORD = MOVE input: int[-128027|0xfffffffffffe0be5] <|@ <|@
      nr  412  <|@ instruction stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          27
     6: aload_0       
     7: getfield      #10         // nDigits:int
    10: bipush        19
    12: if_icmple     27
    15: new           #21         // java.lang.AssertionError
    18: dup           
    19: aload_0       
    20: getfield      #10         // nDigits:int
    23: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
    26: athrow        
    27: iconst_0      
    28: istore_2      
    29: aload_0       
    30: getfield      #7          // isNegative:boolean
    33: ifeq          43
    36: aload_1       
    37: iconst_0      
    38: bipush        45
    40: castore       
    41: iconst_1      
    42: istore_2      
    43: aload_0       
    44: getfield      #8          // decExponent:int
    47: ifle          197
    50: aload_0       
    51: getfield      #8          // decExponent:int
    54: bipush        8
    56: if_icmpge     197
    59: aload_0       
    60: getfield      #10         // nDigits:int
    63: aload_0       
    64: getfield      #8          // decExponent:int
    67: invokestatic  #26         // java.lang.Math.min:(int, int)int
    70: istore_3      
    71: aload_0       
    72: getfield      #6          // digits:char[]
    75: aload_0       
    76: getfield      #9          // firstDigitIndex:int
    79: aload_1       
    80: iload_2       
    81: iload_3       
    82: invokestatic  #17         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    85: iload_2       
    86: iload_3       
    87: iadd          
    88: istore_2      
    89: iload_3       
    90: aload_0       
    91: getfield      #8          // decExponent:int
    94: if_icmpge     137
    97: aload_0       
    98: getfield      #8          // decExponent:int
   101: iload_3       
   102: isub          
   103: istore_3      
   104: aload_1       
   105: iload_2       
   106: iload_2       
   107: iload_3       
   108: iadd          
   109: bipush        48
   111: invokestatic  #42         // java.util.Arrays.fill:(char[], int, int, char)void
   114: iload_2       
   115: iload_3       
   116: iadd          
   117: istore_2      
   118: aload_1       
   119: iload_2       
   120: iinc          
   123: bipush        46
   125: castore       
   126: aload_1       
   127: iload_2       
   128: iinc          
   131: bipush        48
   133: castore       
   134: goto          194
   137: aload_1       
   138: iload_2       
   139: iinc          
   142: bipush        46
   144: castore       
   145: iload_3       
   146: aload_0       
   147: getfield      #10         // nDigits:int
   150: if_icmpge     186
   153: aload_0       
   154: getfield      #10         // nDigits:int
   157: iload_3       
   158: isub          
   159: istore        4
   161: aload_0       
   162: getfield      #6          // digits:char[]
   165: aload_0       
   166: getfield      #9          // firstDigitIndex:int
   169: iload_3       
   170: iadd          
   171: aload_1       
   172: iload_2       
   173: iload         4
   175: invokestatic  #17         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   178: iload_2       
   179: iload         4
   181: iadd          
   182: istore_2      
   183: goto          194
   186: aload_1       
   187: iload_2       
   188: iinc          
   191: bipush        48
   193: castore       
   194: goto          500
   197: aload_0       
   198: getfield      #8          // decExponent:int
   201: ifgt          283
   204: aload_0       
   205: getfield      #8          // decExponent:int
   208: bipush        -3
   210: if_icmple     283
   213: aload_1       
   214: iload_2       
   215: iinc          
   218: bipush        48
   220: castore       
   221: aload_1       
   222: iload_2       
   223: iinc          
   226: bipush        46
   228: castore       
   229: aload_0       
   230: getfield      #8          // decExponent:int
   233: ifeq          256
   236: aload_1       
   237: iload_2       
   238: iload_2       
   239: aload_0       
   240: getfield      #8          // decExponent:int
   243: isub          
   244: bipush        48
   246: invokestatic  #42         // java.util.Arrays.fill:(char[], int, int, char)void
   249: iload_2       
   250: aload_0       
   251: getfield      #8          // decExponent:int
   254: isub          
   255: istore_2      
   256: aload_0       
   257: getfield      #6          // digits:char[]
   260: aload_0       
   261: getfield      #9          // firstDigitIndex:int
   264: aload_1       
   265: iload_2       
   266: aload_0       
   267: getfield      #10         // nDigits:int
   270: invokestatic  #17         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   273: iload_2       
   274: aload_0       
   275: getfield      #10         // nDigits:int
   278: iadd          
   279: istore_2      
   280: goto          500
   283: aload_1       
   284: iload_2       
   285: iinc          
   288: aload_0       
   289: getfield      #6          // digits:char[]
   292: aload_0       
   293: getfield      #9          // firstDigitIndex:int
   296: caload        
   297: castore       
   298: aload_1       
   299: iload_2       
   300: iinc          
   303: bipush        46
   305: castore       
   306: aload_0       
   307: getfield      #10         // nDigits:int
   310: iconst_1      
   311: if_icmple     347
   314: aload_0       
   315: getfield      #6          // digits:char[]
   318: aload_0       
   319: getfield      #9          // firstDigitIndex:int
   322: iconst_1      
   323: iadd          
   324: aload_1       
   325: iload_2       
   326: aload_0       
   327: getfield      #10         // nDigits:int
   330: iconst_1      
   331: isub          
   332: invokestatic  #17         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   335: iload_2       
   336: aload_0       
   337: getfield      #10         // nDigits:int
   340: iconst_1      
   341: isub          
   342: iadd          
   343: istore_2      
   344: goto          355
   347: aload_1       
   348: iload_2       
   349: iinc          
   352: bipush        48
   354: castore       
   355: aload_1       
   356: iload_2       
   357: iinc          
   360: bipush        69
   362: castore       
   363: aload_0       
   364: getfield      #8          // decExponent:int
   367: ifgt          389
   370: aload_1       
   371: iload_2       
   372: iinc          
   375: bipush        45
   377: castore       
   378: aload_0       
   379: getfield      #8          // decExponent:int
   382: ineg          
   383: iconst_1      
   384: iadd          
   385: istore_3      
   386: goto          396
   389: aload_0       
   390: getfield      #8          // decExponent:int
   393: iconst_1      
   394: isub          
   395: istore_3      
   396: iload_3       
   397: bipush        9
   399: if_icmpgt     416
   402: aload_1       
   403: iload_2       
   404: iinc          
   407: iload_3       
   408: bipush        48
   410: iadd          
   411: i2c           
   412: castore       
   413: goto          500
   416: iload_3       
   417: bipush        99
   419: if_icmpgt     453
   422: aload_1       
   423: iload_2       
   424: iinc          
   427: iload_3       
   428: bipush        10
   430: idiv          
   431: bipush        48
   433: iadd          
   434: i2c           
   435: castore       
   436: aload_1       
   437: iload_2       
   438: iinc          
   441: iload_3       
   442: bipush        10
   444: irem          
   445: bipush        48
   447: iadd          
   448: i2c           
   449: castore       
   450: goto          500
   453: aload_1       
   454: iload_2       
   455: iinc          
   458: iload_3       
   459: bipush        100
   461: idiv          
   462: bipush        48
   464: iadd          
   465: i2c           
   466: castore       
   467: iload_3       
   468: bipush        100
   470: irem          
   471: istore_3      
   472: aload_1       
   473: iload_2       
   474: iinc          
   477: iload_3       
   478: bipush        10
   480: idiv          
   481: bipush        48
   483: iadd          
   484: i2c           
   485: castore       
   486: aload_1       
   487: iload_2       
   488: iinc          
   491: iload_3       
   492: bipush        10
   494: irem          
   495: bipush        48
   497: iadd          
   498: i2c           
   499: castore       
   500: iload_2       
   501: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e0c8e1e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ instruction stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   18  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.9997646283481617 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180298760650383
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.8245601647543395 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 4605600449146731052
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r13|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   38  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   40  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B2 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B35" "B2" 
    successors "B37" "B87" 
    xhandlers
    flags 
    probability 4605609722615999826
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr  474  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.998987666642903 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B87" "B39" 
    xhandlers
    flags 
    probability 4605602196420547892
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction CMP r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.008891362676257342 condition: < trueDestination: B37 -> B87 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B84" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction r14|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:197] <|@ <|@
      nr  498  <|@ instruction CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B83" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B51" 
    xhandlers
    flags 
    probability 4605536160475561677
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction MOV [rdx|QWORD[.] + rbp|QWORD * 1] y: 48 size: WORD <|@ <|@
      nr  512  <|@ instruction MOV [rdx|QWORD[.] + r13|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr  514  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.8206833988509223 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604216221566683794
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: rsi|QWORD[.] rdx|QWORD[.] rax|DWORD - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:229] <|@ <|@
      nr  522  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604155811546469720
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4604096005626457787
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction rdi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  556  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4604036797765645973
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4603978181983442277
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  600  <|@ instruction r11|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  602  <|@ instruction rdi|QWORD = LEA [r10|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  612  <|@ instruction rax|DWORD = ADD (x: stack:80|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595487418746212747
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rbp|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   52  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   58  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B35" 
    xhandlers
    flags 
    probability 4595488906503641808
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr  146  <|@ instruction CMP r9|DWORD y: 8 size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.9952377758400965 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:48]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:43] <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:48]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:43] <|@ <|@
      nr  158  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B33" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4595458805026605752
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4595395897179245049
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  202  <|@ instruction rdi|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595333618410357953
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rdi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B29" 
    xhandlers
    flags 
    probability 4595271962429159728
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction stack:52|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction stack:72|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdi|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r13|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r14|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  252  <|@ instruction r10|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + r14|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA [r13|QWORD[*] + rbx|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction MOV [rdx|QWORD[.] + rax|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  272  <|@ instruction r10|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: stack:80|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.07837983555735273 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4594793536448082759
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4594793536448082759
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction MOV [rdx|QWORD[.] + r10|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  406  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B52" "B58" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction r9|DWORD = NEG r9|DWORD size: DWORD <|@ <|@
      nr  626  <|@ instruction rdi|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  630  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B65" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B73" "B67" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B65 -> B73 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction r9|QWORD[.] = LEA [rdx|QWORD[.] + rax|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr  754  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588080454489061728
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr  768  <|@ instruction J (address: [r9|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  770  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B73" "B72" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  776  <|@ instruction CMP (x: rdi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4588080454489061728
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction MOV [r9|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B65" "B72" "B70" 
    successors "B81" "B75" 
    xhandlers
    flags 
    probability 4594447775926046955
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B73 -> B81 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B81" "B77" 
    xhandlers
    flags 
    probability 4594394978369691840
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B75 -> B81 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B81" "B79" 
    xhandlers
    flags 
    probability 4594342708788900276
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction rdi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  818  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMP (x: rsi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B77 -> B81 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4594290961903916627
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B79 -> B81 falseDestination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 4594239732487782815
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  860  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = LEA [r10|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  872  <|@ instruction r11|DWORD = ADD (x: stack:76|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B56" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction rcx|QWORD = ADD (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  640  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" "B55" 
    xhandlers
    flags 
    probability 4589944176298676459
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B58 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580936977043935467
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4578808437478284942
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = ADD (x: stack:80|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4578731889321312627
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = SUB (x: r11|DWORD, ~y: stack:80|DWORD) size: DWORD <|@ <|@
      nr  308  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4578656106645910035
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction rbp|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4578581081797261469
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 4578506807197099389
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  370  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  372  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r11|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  386  <|@ instruction r10|DWORD = ADD (x: stack:56|DWORD, y: stack:52|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B36" "B37" 
    successors "B88" "B118" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:32, stack:48]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:48|QWORD[.] rdx|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:283] <|@ <|@
      nr  920  <|@ instruction CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B117" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:32, stack:48]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:48|QWORD[.] rdx|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:283] <|@ <|@
      nr  928  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B116" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction CMP (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction CMP r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  942  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B115" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction rdi|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  956  <|@ instruction r11|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  960  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4575861598769094972
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3 <|@ <|@
      nr  966  <|@ instruction rbx|DWORD = MOVSX [r10|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [rdx|QWORD[.] + rbp|QWORD * 1], y: rbx|DWORD) size: WORD <|@ <|@
      nr  970  <|@ instruction MOV [rdx|QWORD[.] + r13|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr  972  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  974  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  976  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B93 -> B97 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4575814518999214557
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction r8|DWORD = SUB (x: rcx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  992  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B95 -> B97 falseDestination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B99" "B102" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 1024  <|@ instruction rdi|QWORD = LEA [r10|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rsi|QWORD = LEA [r8|QWORD[*] + rax|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1032  <|@ instruction r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction MOV [r9|QWORD[.] + r11|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr 1038  <|@ instruction r10|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction CMP stack:40|DWORD y: 1 size: DWORD <|@ <|@
      nr 1046  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction BRANCH trueDestinationProbability: 0.8976945244956772 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4574934464739404074
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1048  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B103" 
    xhandlers
    flags 
    probability 4574934464739404074
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr 1056  <|@ instruction rax|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr 1058  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1060  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" "B102" 
    successors "B104" "B113" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1090  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4575767910027032946
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1096  <|@ instruction CMP r11|DWORD y: 10 size: DWORD <|@ <|@
      nr 1098  <|@ instruction BRANCH trueDestinationProbability: 0.9769452449567724 condition: < trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4575661528741823044
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1102  <|@ instruction rax|DWORD = LEA [r11|DWORD + 48] size: DWORD <|@ <|@
      nr 1104  <|@ instruction MOV (x: [r9|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1106  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574382504741084395
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f] <|@ <|@
      nr  530  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" "B56" "B61" "B63" "B43" "B49" "B47" "B45" "B55" 
    successors 
    xhandlers
    flags 
    probability 4583274488072152459
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 668], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [rdx:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: stack:48|QWORD[.] rdx|QWORD[.] rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:229] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574305179915210380
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f] <|@ <|@
      nr  546  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B45 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574228628337595106
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f] <|@ <|@
      nr  566  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B47 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B64" 
    xhandlers
    flags 
    probability 4574152842275755984
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f] <|@ <|@
      nr  584  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B49 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565695027361111979
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|DWORD = MOVE input: int[-110177|0xfffffffffffe519f] <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B14 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B11" "B33" "B14" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4572628985271955744
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 668], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [rdx:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: stack:48|QWORD[.] rdx|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:43] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565614505316490279
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|DWORD = MOVE input: int[-110177|0xfffffffffffe519f] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4565534788492314796
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rdi|DWORD = MOVE input: int[-110177|0xfffffffffffe519f] <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" 
    successors 
    xhandlers
    flags 
    probability 4573307412178135430
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction MOV [r15|QWORD + 668] y: -159329 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@reference-map: [rdx:0, stack:32]
live-base-pointers: []
java.util.Arrays.fill(Arrays.java:2974) [bci: 10]
locals: rdx|QWORD[.] - r11|DWORD int[48|0x30] r11|DWORD 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
locals: stack:48|QWORD[.] rdx|QWORD[.] rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:10, 246] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4560845201392801771
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|QWORD = SHL rbp|QWORD size: QWORD <|@ <|@
      nr  456  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 16] size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  460  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 4560692294521474510
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = DEC stack:40|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552815705264164864
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:32, stack:48]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
locals: stack:48|QWORD[.] r9|QWORD[.] - - - 
>@ <|@ instruction CMP [r9|QWORD[.] + 12] y: 0 size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552815705264164864
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV [r9|QWORD[.] + 16] y: 45 size: WORD <|@ <|@
      nr   90  <|@ instruction CMP stack:40|DWORD y: 1 size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.8245601647543395 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B36" 
    xhandlers
    flags 
    probability 4551292241656806685
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r13|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   98  <|@ instruction rbp|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  102  <|@ instruction rdi|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  104  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction rcx|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  110  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B112" 
    xhandlers
    flags 
    probability 4550940426270264190
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1112  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B106 -> B107 falseDestination: B106 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    probability 4550940426270264190
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction rbx|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr 1120  <|@ instruction CMP r11|DWORD y: 100 size: DWORD <|@ <|@
      nr 1122  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 4548138927206252126
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1130  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV (x: [r9|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1138  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1140  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1142  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rax|DWORD = LEA [r11|DWORD + 48] size: DWORD <|@ <|@
      nr 1148  <|@ instruction MOV (x: [r9|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1150  <|@ instruction rax|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B32" 
    xhandlers
    flags 
    probability 4549031106063058630
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B21 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B21" "B27" "B25" "B23" 
    successors 
    xhandlers
    flags 
    probability 4557965307770540310
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  412  <|@ instruction stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  424  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: stack:48|QWORD[.] r9|QWORD[.] stack:56|DWORD stack:80|DWORD - 
>@ <|@ instruction DEOPT info [bci:145] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548982115242596348
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f] <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B23 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548933614330338689
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f] <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4548885598427203607
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f] <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B27 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4550128103508800164
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 668] y: -178785 size: DWORD <|@ <|@
      nr 1004  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: stack:48|QWORD[.] r9|QWORD[.] rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:306] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4544734726079535262
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1158  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4544734726079535262
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1162  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr 1166  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr 1170  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV (x: [r9|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1174  <|@ instruction rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1176  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1182  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1184  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1186  <|@ instruction rax|DWORD = SHR r11|DWORD y: 31 size: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1190  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r9|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1194  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1196  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1198  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction rax|DWORD = LEA [r11|DWORD + 48] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [r9|QWORD[.] + rbx|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1206  <|@ instruction rax|DWORD = LEA [r10|DWORD + 3] size: DWORD <|@ <|@
      nr 1208  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541218679191522188
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction rbp|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  124  <|@ instruction r8|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  126  <|@ instruction rax|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  128  <|@ instruction rdi|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  130  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  134  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1246  <|@ instruction r10|DWORD = MOVE input: int[-169243|0xfffffffffffd6ae5] <|@ <|@
      nr 1250  <|@ instruction JUMP ~[] destination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B91" "B117" "B116" "B115" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1272  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1274  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:48|QWORD[.] r9|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:283] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1242173179] <|@ <|@
      nr  694  <|@ instruction rdi|DWORD = MOVE input: int[-160011|0xfffffffffffd8ef5] <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  724  <|@ instruction rdi|DWORD = MOVE input: int[-147475|0xfffffffffffdbfed] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1212  <|@ instruction r8|DWORD = MOVE input: int[-197403|0xfffffffffffcfce5] <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B111 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" "B111" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1230  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1234  <|@ st <@st|@reference-map: [r9:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - r9|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:396] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  710  <|@ instruction rdi|DWORD = MOVE input: int[-147219|0xfffffffffffdc0ed] <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r15|QWORD + 668] y: -201755 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
locals: stack:48|QWORD[.] r9|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 668] y: -199963 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: stack:48|QWORD[.] r9|QWORD[.] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:363] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@575684881] <|@ <|@
      nr  660  <|@ instruction rdi|DWORD = MOVE input: int[-148251|0xfffffffffffdbce5] <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction r10|DWORD = MOVE input: int[-164379|0xfffffffffffd7de5] <|@ <|@
      nr 1266  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = MOVE input: int[-114459|0xfffffffffffe40e5] <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = MOVE input: int[-112915|0xfffffffffffe46ed] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction r10|DWORD = MOVE input: int[-133403|0xfffffffffffdf6e5] <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  892  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  904  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:48|QWORD[.] r9|QWORD[.] rbx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:197] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction r10|DWORD = MOVE input: int[-170259|0xfffffffffffd66ed] <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B91 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD = MOVE input: int[-131355|0xfffffffffffdfee5] <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-182043|0xfffffffffffd38e5] <|@ <|@
      nr 1242  <|@ instruction JUMP ~[] destination: B115 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-211739|0xfffffffffffcc4e5] <|@ <|@
      nr 1220  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-167707|0xfffffffffffd70e5] <|@ <|@
      nr 1258  <|@ instruction JUMP ~[] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B114" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1224  <|@ instruction r8|DWORD = MOVE input: int[-211995|0xfffffffffffcc3e5] <|@ <|@
      nr 1226  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@575684881] <|@ <|@
      nr  672  <|@ instruction rdi|DWORD = MOVE input: int[-148251|0xfffffffffffdbce5] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B56 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|DWORD = MOVE input: int[-128027|0xfffffffffffe0be5] <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          27
     6: aload_0       
     7: getfield      #10         // nDigits:int
    10: bipush        19
    12: if_icmple     27
    15: new           #21         // java.lang.AssertionError
    18: dup           
    19: aload_0       
    20: getfield      #10         // nDigits:int
    23: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
    26: athrow        
    27: iconst_0      
    28: istore_2      
    29: aload_0       
    30: getfield      #7          // isNegative:boolean
    33: ifeq          43
    36: aload_1       
    37: iconst_0      
    38: bipush        45
    40: castore       
    41: iconst_1      
    42: istore_2      
    43: aload_0       
    44: getfield      #8          // decExponent:int
    47: ifle          197
    50: aload_0       
    51: getfield      #8          // decExponent:int
    54: bipush        8
    56: if_icmpge     197
    59: aload_0       
    60: getfield      #10         // nDigits:int
    63: aload_0       
    64: getfield      #8          // decExponent:int
    67: invokestatic  #26         // java.lang.Math.min:(int, int)int
    70: istore_3      
    71: aload_0       
    72: getfield      #6          // digits:char[]
    75: aload_0       
    76: getfield      #9          // firstDigitIndex:int
    79: aload_1       
    80: iload_2       
    81: iload_3       
    82: invokestatic  #17         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    85: iload_2       
    86: iload_3       
    87: iadd          
    88: istore_2      
    89: iload_3       
    90: aload_0       
    91: getfield      #8          // decExponent:int
    94: if_icmpge     137
    97: aload_0       
    98: getfield      #8          // decExponent:int
   101: iload_3       
   102: isub          
   103: istore_3      
   104: aload_1       
   105: iload_2       
   106: iload_2       
   107: iload_3       
   108: iadd          
   109: bipush        48
   111: invokestatic  #42         // java.util.Arrays.fill:(char[], int, int, char)void
   114: iload_2       
   115: iload_3       
   116: iadd          
   117: istore_2      
   118: aload_1       
   119: iload_2       
   120: iinc          
   123: bipush        46
   125: castore       
   126: aload_1       
   127: iload_2       
   128: iinc          
   131: bipush        48
   133: castore       
   134: goto          194
   137: aload_1       
   138: iload_2       
   139: iinc          
   142: bipush        46
   144: castore       
   145: iload_3       
   146: aload_0       
   147: getfield      #10         // nDigits:int
   150: if_icmpge     186
   153: aload_0       
   154: getfield      #10         // nDigits:int
   157: iload_3       
   158: isub          
   159: istore        4
   161: aload_0       
   162: getfield      #6          // digits:char[]
   165: aload_0       
   166: getfield      #9          // firstDigitIndex:int
   169: iload_3       
   170: iadd          
   171: aload_1       
   172: iload_2       
   173: iload         4
   175: invokestatic  #17         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   178: iload_2       
   179: iload         4
   181: iadd          
   182: istore_2      
   183: goto          194
   186: aload_1       
   187: iload_2       
   188: iinc          
   191: bipush        48
   193: castore       
   194: goto          500
   197: aload_0       
   198: getfield      #8          // decExponent:int
   201: ifgt          283
   204: aload_0       
   205: getfield      #8          // decExponent:int
   208: bipush        -3
   210: if_icmple     283
   213: aload_1       
   214: iload_2       
   215: iinc          
   218: bipush        48
   220: castore       
   221: aload_1       
   222: iload_2       
   223: iinc          
   226: bipush        46
   228: castore       
   229: aload_0       
   230: getfield      #8          // decExponent:int
   233: ifeq          256
   236: aload_1       
   237: iload_2       
   238: iload_2       
   239: aload_0       
   240: getfield      #8          // decExponent:int
   243: isub          
   244: bipush        48
   246: invokestatic  #42         // java.util.Arrays.fill:(char[], int, int, char)void
   249: iload_2       
   250: aload_0       
   251: getfield      #8          // decExponent:int
   254: isub          
   255: istore_2      
   256: aload_0       
   257: getfield      #6          // digits:char[]
   260: aload_0       
   261: getfield      #9          // firstDigitIndex:int
   264: aload_1       
   265: iload_2       
   266: aload_0       
   267: getfield      #10         // nDigits:int
   270: invokestatic  #17         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   273: iload_2       
   274: aload_0       
   275: getfield      #10         // nDigits:int
   278: iadd          
   279: istore_2      
   280: goto          500
   283: aload_1       
   284: iload_2       
   285: iinc          
   288: aload_0       
   289: getfield      #6          // digits:char[]
   292: aload_0       
   293: getfield      #9          // firstDigitIndex:int
   296: caload        
   297: castore       
   298: aload_1       
   299: iload_2       
   300: iinc          
   303: bipush        46
   305: castore       
   306: aload_0       
   307: getfield      #10         // nDigits:int
   310: iconst_1      
   311: if_icmple     347
   314: aload_0       
   315: getfield      #6          // digits:char[]
   318: aload_0       
   319: getfield      #9          // firstDigitIndex:int
   322: iconst_1      
   323: iadd          
   324: aload_1       
   325: iload_2       
   326: aload_0       
   327: getfield      #10         // nDigits:int
   330: iconst_1      
   331: isub          
   332: invokestatic  #17         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   335: iload_2       
   336: aload_0       
   337: getfield      #10         // nDigits:int
   340: iconst_1      
   341: isub          
   342: iadd          
   343: istore_2      
   344: goto          355
   347: aload_1       
   348: iload_2       
   349: iinc          
   352: bipush        48
   354: castore       
   355: aload_1       
   356: iload_2       
   357: iinc          
   360: bipush        69
   362: castore       
   363: aload_0       
   364: getfield      #8          // decExponent:int
   367: ifgt          389
   370: aload_1       
   371: iload_2       
   372: iinc          
   375: bipush        45
   377: castore       
   378: aload_0       
   379: getfield      #8          // decExponent:int
   382: ineg          
   383: iconst_1      
   384: iadd          
   385: istore_3      
   386: goto          396
   389: aload_0       
   390: getfield      #8          // decExponent:int
   393: iconst_1      
   394: isub          
   395: istore_3      
   396: iload_3       
   397: bipush        9
   399: if_icmpgt     416
   402: aload_1       
   403: iload_2       
   404: iinc          
   407: iload_3       
   408: bipush        48
   410: iadd          
   411: i2c           
   412: castore       
   413: goto          500
   416: iload_3       
   417: bipush        99
   419: if_icmpgt     453
   422: aload_1       
   423: iload_2       
   424: iinc          
   427: iload_3       
   428: bipush        10
   430: idiv          
   431: bipush        48
   433: iadd          
   434: i2c           
   435: castore       
   436: aload_1       
   437: iload_2       
   438: iinc          
   441: iload_3       
   442: bipush        10
   444: irem          
   445: bipush        48
   447: iadd          
   448: i2c           
   449: castore       
   450: goto          500
   453: aload_1       
   454: iload_2       
   455: iinc          
   458: iload_3       
   459: bipush        100
   461: idiv          
   462: bipush        48
   464: iadd          
   465: i2c           
   466: castore       
   467: iload_3       
   468: bipush        100
   470: irem          
   471: istore_3      
   472: aload_1       
   473: iload_2       
   474: iinc          
   477: iload_3       
   478: bipush        10
   480: idiv          
   481: bipush        48
   483: iadd          
   484: i2c           
   485: castore       
   486: aload_1       
   487: iload_2       
   488: iinc          
   491: iload_3       
   492: bipush        10
   494: irem          
   495: bipush        48
   497: iadd          
   498: i2c           
   499: castore       
   500: iload_2       
   501: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404889542430448b561c448b5e10448b4614448944242c448b4e0c0fb67e1885ff0f85c50500004183f9010f8dd400000049c7c51200000048c7c510000000b802000000bf01000000bb0000000048c7c1020000004183f9010f8d6f0300004183f9fe0f8c65030000448b720c443bf30f8639080000443bf70f860308000066c7042a30006642c7042a2e004585c90f858b010000438504d44585db0f8c590400004585c00f8c78040000428b3cd50c000000412bf8443bdf0f8f7a040000452bf0413bc60f8f8404000049c1e2034963fb4d63d8498d7c7a10488d744210498bd3890424e800000000908b04240344242c488b6c24404883c448850500000000c5f877c348c7c501000000b802000000bf01000000bb0000000048c7c10200000049c7c0000000004183f9080f8d76040000448b44242c438504d48502453bc1418bc8410f4fc9443bc90f8f27070000448b4a0c8bc303c1443bc80f860c0700004585db0f8cfa030000428b2cd50c0000008bfd2bf9443bdf0f8f03040000418bf92bf93bdf0f8ffd030000896c241c8944241844894c2414488974242049c1e2034c89542408498bfa4c8bea4d63f34c63d14a8d7c7710498d745d10498bd244895c2404890c24e80000000090488b5424308b44241866c74442102e00448bd041ffc2448b44242c443b0424448b4c24140f8f49010000453bca0f86f80600006642c744521030008d4002488b6c24404883c448850500000000c5f877c344895c24044889742420448bd8452bd941f7d94963f9488bf748ffce443bd80f8fd40000004585d20f8475050000413bc30f8fb1050000453bde0f8f7a0500004183f9010f8c360000004c8d4c4210488d7ffe4885ff0f8cba000000c4c1796e0500000000c4c1797e0148c7c702000000483bfe0f8f060000006641c70130008b74240485f60f8ce50200004585c00f8cdc020000428b3cd50c000000412bf83bf70f8fc9020000452bf0453bde0f8fbd02000049c1e2034863fe4963f34d63c8498d7c7a10488d747210498bd144895c2404e80000000090448b5c240444035c242c418bc3488b6c24404883c448850500000000c5f877c34803ce418bde483bd90f86bb050000443bf00f8714ffffffe91605000048c7c700000000e94fffffff8b7424048b0c2403ce85c90f8c5a030000448b5c242c458bc3442b04244585c00f8c660300008b6c241c412be83bcd0f8f5e030000452bc8453bd10f8f59030000488b7c24084863f14d63da4d63c8488d7c77104a8d745a10498bd14489542418448944241ce80000000090448b542418440354241c418bc2488b6c24404883c448850500000000c5f877c34889742420418bf3458bd8468b04d50c000000443bc60f86790400008b4a0c3bcb0f86d80400003bcf0f86a90300004183fb020f8c9d040000418bfbffcf448bdf4403d8413bcb0f869c04000049c1e203410fbf5c721066891c2a6642c7042a2e00442bc7ffc6413bf00f8fa5020000448bc1442bc7413bc00f8f9602000044895c2404894c242c44894c24284c8bc24863f64863df498d7c7210498d744010488bd3e800000000904c8b4c2430448b5c24046643c74459104500458bd341ffc2837c2428018b4c242c0f8d40010000413bca0f868d0300006643c74451102d00418d4302ba010000002b542428448bda448bd0413bca0f860d040000458bc241ffc04183fb0a0f8d7a010000418d4330664389445110418bc0488b6c24404883c448850500000000c5f877c3bf9fccfdff488974242048be00000000000000004189bf9c0200004989b7a8020000e80000000090bf9fccfdff488974242048be0000000000000000ebd6bf9fccfdff488974242048be0000000000000000ebc0bf9fccfdff488974242048be0000000000000000ebaabf9f51feff48897424204189bf9c0200004d89a7a8020000e80000000090bf9f51feffebe0bf9f51feffebd941c7879c0200009f91fdff4d89a7a8020000e8000000009044894c24284c8bca4889742420418bf3448b5c242c48d1e54c8d6d10498d6810458bc3448bde488b742420448b4c2428e977faffff8b442428ffc8448bd8e9d6feffff44894c24284c8bca4889742420418bf3458bd84183790c000f84120200006641c741102d00837c2428010f8d5101000049c7c51400000048c7c512000000b803000000bf02000000bb0100000048c7c103000000448bde498bd1488b742420448b4c2428e900faffff413bc80f8664020000418d5a024183fb640f8d92000000418bc3ba67666666f7eac1fa028d42306643894451108bc2c1e003d1e203c2442bd8418d43306643894441108bc3488b6c24404883c448850500000000c5f877c3b89f18feff44895424184c8bca4189879c0200004d89a7a8020000e80000000090b89f18feffebddb89f18feffebd6b89f18feffebcf4c8bca41c7879c0200009f45fdff4d89a7a8020000e800000000903bcb0f86e8000000418bc3ba1f85eb51f7eac1fa058d42306643894451106bc264442bd8418bc3ba67666666f7eac1fa02418bc3c1e81f03d08d42306643894441108bc2c1e003d1e203c2442bd8418d4330664189445910418d4203488b6c24404883c448850500000000c5f877c348c7c50200000049c7c002000000b803000000bf02000000bb0100000048c7c103000000448bde498bd1488b742420448b4c2428e983f9ffff41bae56afdff4c8bca4589979c0200004d89a7a8020000e800000000904c8bca48beaddeaddeaddeaddebff58efdffe935fdffff48be0000000000000000bfedbffdffe921fdffff41b8e5fcfcff4589879c0200004d89a7a8020000e8000000009048be0000000000000000bfedc0fdffe9f3fcffff41c7879c020000e5ebfcff4d89a7a8020000e8000000009041c7879c020000e5f2fcff4d89a7a8020000e800000000904c8bca48beaddeaddeaddeaddebfe5bcfdffe9acfcffff41bae57dfdffe93effffffbfe540feffe9f2fcffffbfed46feffe9e8fcffff41bae5f6fdff4c8bca48897424204589979c0200004d89a7a8020000e8000000009041baed66fdffe9fdfeffff41bae5fefdffebd141bae538fdffe9eafeffff41b8e5c4fcffe927ffffff41bae570fdffe9d4feffff41b8e5c3fcffe911ffffff4c8bca48beaddeaddeaddeaddebfe5bcfdffe915fcffffb8e50bfeffe9aefdffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e0c8e1e slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 57 10 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 61 12 r8|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 65 14 stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 70 16 r9|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 74 18 rdi|DWORD = MOVZXB [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 78 20 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 80 22 BRANCH trueDestinationProbability: 0.9997646283481617 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 86 block B1 null  <||@
  Comment 86 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 26 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 90 28 BRANCH trueDestinationProbability: 0.8245601647543395 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 96 block B2 null  <||@
  Comment 96 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 32 r13|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 103 34 rbp|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 110 36 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 115 38 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 120 40 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 125 42 rcx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 132 44 JUMP ~[] destination: B2 -> B36  <||@
  Comment 132 block B36 null  <||@
  Comment 132 472 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 132 474 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 136 476 BRANCH trueDestinationProbability: 0.998987666642903 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B87  <||@
  Comment 142 block B37 null  <||@
  Comment 142 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 480 CMP r9|DWORD y: -2 size: DWORD  <||@
  Comment 146 482 BRANCH trueDestinationProbability: 0.008891362676257342 condition: < trueDestination: B37 -> B87 falseDestination: B37 -> B39  <||@
  Comment 152 block B39 null  <||@
  Comment 152 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 152 496 r14|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:197]  <||@
  Comment 152 [rdx:0, rsi:0, r10:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 152 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 156 498 CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 159 500 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B84  <||@
  Comment 165 block B40 null  <||@
  Comment 165 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 504 CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 168 506 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B83  <||@
  Comment 174 block B41 null  <||@
  Comment 174 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 510 MOV [rdx|QWORD[.] + rbp|QWORD * 1] y: 48 size: WORD  <||@
  Comment 180 512 MOV [rdx|QWORD[.] + r13|QWORD * 1] y: 46 size: WORD  <||@
  Comment 187 514 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 190 516 BRANCH trueDestinationProbability: 0.8206833988509223 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B51  <||@
  Comment 196 block B42 null  <||@
  Comment 196 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 196 520 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:229]  <||@
  Comment 196 [rdx:0, rsi:0, r10:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rax|DWORD  |-  |-   <||@
  Comment 196 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 200 522 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 203 524 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 209 block B44 null  <||@
  Comment 209 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 538 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 212 540 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 218 block B46 null  <||@
  Comment 218 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 218 554 rdi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 226 556 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 229 558 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 232 560 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 238 block B48 null  <||@
  Comment 238 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 574 r14|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 241 576 CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 244 578 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 250 block B50 null  <||@
  Comment 250 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 250 592 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3  <||@
  Comment 254 594 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 254 596 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 254 598 rdi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 257 600 r11|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 260 602 rdi|QWORD = LEA [r10|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 265 604 rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 2 + 16] size: QWORD  <||@
  Comment 270 606 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 273 608 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 276 610 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 276 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 282 612 rax|DWORD = ADD (x: stack:80|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 289 614 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 298 12  <||@
  Comment 308 block B3 null  <||@
  Comment 308 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 48 rbp|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 315 50 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 320 52 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 325 54 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 330 56 rcx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 337 58 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 344 60 JUMP ~[] destination: B3 -> B9  <||@
  Comment 344 block B9 null  <||@
  Comment 344 144 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 344 146 CMP r9|DWORD y: 8 size: DWORD  <||@
  Comment 348 148 BRANCH trueDestinationProbability: 0.9952377758400965 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B35  <||@
  Comment 354 block B10 null  <||@
  Comment 354 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 354 152 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 359 154 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:43]  <||@
  Comment 359 [rdx:0, rsi:0, r10:0, stack:48]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 359 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 363 156 NULLCHECK [rdx|QWORD[.]] state [bci:43]  <||@
  Comment 363 [rdx:0, rsi:0, r10:0, stack:48]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 363 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 365 158 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 368 160 rcx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: >  <||@
  Comment 375 162 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 378 164 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 384 block B12 null  <||@
  Comment 384 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 384 176 r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 388 178 rax|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 392 180 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 395 182 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B33  <||@
  Comment 401 block B13 null  <||@
  Comment 401 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 186 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 404 188 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 410 block B15 null  <||@
  Comment 410 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 410 200 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 418 202 rdi|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 422 204 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 425 206 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 431 block B17 null  <||@
  Comment 431 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 431 218 rdi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 436 220 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 438 222 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 444 block B19 null  <||@
  Comment 444 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 444 234 stack:52|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 448 236 stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 452 238 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 457 240 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 462 242 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3  <||@
  Comment 466 244 stack:72|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 471 246 rdi|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 474 248 r13|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 477 250 r14|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 480 252 r10|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 483 254 rdi|QWORD = LEA [rdi|QWORD[*] + r14|QWORD * 2 + 16] size: QWORD  <||@
  Comment 488 256 rsi|QWORD = LEA [r13|QWORD[*] + rbx|DWORD * 2 + 16] size: QWORD  <||@
  Comment 493 258 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 496 260 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 501 262 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 504 264 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 504 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 510 266 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 515 268 rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 519 270 MOV [rdx|QWORD[.] + rax|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 526 272 r10|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 532 274 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 537 276 CMP (x: r8|DWORD, y: stack:80|DWORD) size: DWORD  <||@
  Comment 541 282 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 546 278 BRANCH trueDestinationProbability: 0.07837983555735273 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B29  <||@
  Comment 552 block B29 null  <||@
  Comment 552 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 552 396 CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 555 398 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 561 block B30 null  <||@
  Comment 561 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 561 402 MOV [rdx|QWORD[.] + r10|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 569 404 rax|DWORD = LEA [rax|DWORD + 2] size: DWORD  <||@
  Comment 572 406 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 581 12  <||@
  Comment 591 block B51 null  <||@
  Comment 591 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 591 618 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 596 620 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 601 622 r11|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 607 624 r9|DWORD = NEG r9|DWORD size: DWORD  <||@
  Comment 610 626 rdi|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 613 628 rsi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 619 630 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 622 632 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B58  <||@
  Comment 628 block B58 null  <||@
  Comment 628 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 628 684 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 631 686 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 637 block B60 null  <||@
  Comment 637 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 637 702 CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 640 704 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62  <||@
  Comment 646 block B62 null  <||@
  Comment 646 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 646 716 CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 649 718 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B65  <||@
  Comment 655 block B65 null  <||@
  Comment 655 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 655 738 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 659 740 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B65 -> B73 falseDestination: B65 -> B67  <||@
  Comment 665 block B67 null  <||@
  Comment 665 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 750 r9|QWORD[.] = LEA [rdx|QWORD[.] + rax|DWORD * 2 + 16] size: QWORD  <||@
  Comment 670 752 rdi|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 674 754 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 677 756 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 683 block B69 null  <||@
  Comment 683 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 683 766 xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD  <||@
  Comment 683 {DataSection[0x0]}  <||@
  Comment 692 768 J (address: [r9|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 697 770 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 704 772 JUMP ~[] destination: B69 -> B70  <||@
  Comment 704 block B70 null  <||@
  Comment 704 774 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 704 776 CMP (x: rdi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 707 778 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72  <||@
  Comment 713 block B72 null  <||@
  Comment 713 786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 713 788 MOV [r9|QWORD[.]] y: 48 size: WORD  <||@
  Comment 719 792 JUMP ~[] destination: B72 -> B73  <||@
  Comment 719 block B73 null  <||@
  Comment 719 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 719 744 rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 723 796 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 725 798 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B73 -> B81 falseDestination: B73 -> B75  <||@
  Comment 731 block B75 null  <||@
  Comment 731 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 731 806 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 734 808 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B75 -> B81 falseDestination: B75 -> B77  <||@
  Comment 740 block B77 null  <||@
  Comment 740 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 740 816 rdi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 748 818 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 751 820 CMP (x: rsi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 753 822 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B77 -> B81 falseDestination: B77 -> B79  <||@
  Comment 759 block B79 null  <||@
  Comment 759 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 759 830 r14|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 762 832 CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 765 834 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B79 -> B81 falseDestination: B79 -> B82  <||@
  Comment 771 block B82 null  <||@
  Comment 771 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 771 850 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3  <||@
  Comment 775 852 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 775 854 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 775 856 rdi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 778 858 rsi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 781 860 r9|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 784 862 rdi|QWORD = LEA [r10|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 789 864 rsi|QWORD = LEA [rdx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 794 866 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 797 868 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 802 870 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 802 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 808 872 r11|DWORD = ADD (x: stack:76|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 818 874 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 821 876 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 830 12  <||@
  Comment 840 block B52 null  <||@
  Comment 840 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 636 rcx|QWORD = ADD (x: rsi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 843 638 rbx|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 846 640 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 849 642 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B56  <||@
  Comment 855 block B53 null  <||@
  Comment 855 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 855 646 CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 858 648 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B58 falseDestination: B53 -> B55  <||@
  Comment 869 block B68 null  <||@
  Comment 869 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 760 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 876 762 JUMP ~[] destination: B68 -> B70  <||@
  Comment 881 block B20 null  <||@
  Comment 881 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 284 rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 885 286 rcx|DWORD = ADD (x: stack:80|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 890 288 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 892 290 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 898 block B22 null  <||@
  Comment 898 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 898 304 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 903 306 r8|DWORD = SUB (x: r11|DWORD, ~y: stack:80|DWORD) size: DWORD  <||@
  Comment 910 308 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 913 310 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 919 block B24 null  <||@
  Comment 919 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 919 324 rbp|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 923 326 rbp|DWORD = SUB (x: rbp|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 926 328 CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 928 330 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 934 block B26 null  <||@
  Comment 934 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 934 344 r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 937 346 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 940 348 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 946 block B28 null  <||@
  Comment 946 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 946 362 rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 951 364 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 951 366 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 951 368 rsi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 954 370 r11|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 957 372 r9|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 960 374 rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 965 376 rsi|QWORD = LEA [rdx|QWORD[*] + r11|QWORD * 2 + 16] size: QWORD  <||@
  Comment 970 378 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 973 380 stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 978 382 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 983 384 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 983 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 989 386 r10|DWORD = ADD (x: stack:56|DWORD, y: stack:52|DWORD) size: DWORD  <||@
  Comment 999 388 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1002 390 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1011 12  <||@
  Comment 1021 block B87 null  <||@
  Comment 1021 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1021 908 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1026 910 rsi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1029 912 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1032 918 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:283]  <||@
  Comment 1032 [rdx:0, r10:0, stack:32, stack:48]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 1032 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1040 920 CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1043 922 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B118  <||@
  Comment 1049 block B88 null  <||@
  Comment 1049 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1049 926 rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:283]  <||@
  Comment 1049 [rdx:0, r10:0, stack:32, stack:48]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 1049 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1052 928 CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1054 930 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B117  <||@
  Comment 1060 block B89 null  <||@
  Comment 1060 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1060 934 CMP (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1062 936 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B116  <||@
  Comment 1068 block B90 null  <||@
  Comment 1068 938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 940 CMP r11|DWORD y: 2 size: DWORD  <||@
  Comment 1072 942 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 1078 block B92 null  <||@
  Comment 1078 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1078 954 rdi|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 1083 956 r11|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1089 958 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1092 960 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B115  <||@
  Comment 1098 block B93 null  <||@
  Comment 1098 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1098 964 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3  <||@
  Comment 1102 966 rbx|DWORD = MOVSX [r10|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD  <||@
  Comment 1108 968 MOV (x: [rdx|QWORD[.] + rbp|QWORD * 1], y: rbx|DWORD) size: WORD  <||@
  Comment 1112 970 MOV [rdx|QWORD[.] + r13|QWORD * 1] y: 46 size: WORD  <||@
  Comment 1119 972 r8|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1122 974 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1124 976 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1127 978 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B93 -> B97 falseDestination: B93 -> B95  <||@
  Comment 1133 block B95 null  <||@
  Comment 1133 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1133 988 r8|DWORD = SUB (x: rcx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1139 990 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1142 992 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B95 -> B97 falseDestination: B95 -> B98  <||@
  Comment 1148 block B98 null  <||@
  Comment 1148 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1148 1010 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1153 1012 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1157 1014 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1162 1016 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1162 1018 r8|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1165 1020 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1168 1022 rbx|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1171 1024 rdi|QWORD = LEA [r10|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1176 1026 rsi|QWORD = LEA [r8|QWORD[*] + rax|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1181 1028 rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1184 1030 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1184 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1190 1032 r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1195 1034 r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1200 1036 MOV [r9|QWORD[.] + r11|DWORD * 2 + 16] y: 69 size: WORD  <||@
  Comment 1208 1038 r10|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1214 1040 CMP stack:40|DWORD y: 1 size: DWORD  <||@
  Comment 1219 1046 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1223 1042 BRANCH trueDestinationProbability: 0.8976945244956772 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B102  <||@
  Comment 1229 block B99 null  <||@
  Comment 1229 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1229 1048 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1232 1050 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B101  <||@
  Comment 1238 block B100 null  <||@
  Comment 1238 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1238 1054 MOV [r9|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD  <||@
  Comment 1246 1056 rax|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 1250 1058 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1255 1060 rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 1259 1062 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1262 1064 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1265 1066 JUMP ~[] destination: B100 -> B103  <||@
  Comment 1265 block B103 null  <||@
  Comment 1265 1086 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1265 1088 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1268 1090 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B113  <||@
  Comment 1274 block B104 null  <||@
  Comment 1274 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1274 1094 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1280 1096 CMP r11|DWORD y: 10 size: DWORD  <||@
  Comment 1284 1098 BRANCH trueDestinationProbability: 0.9769452449567724 condition: < trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 1290 block B105 null  <||@
  Comment 1290 1100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1290 1102 rax|DWORD = LEA [r11|DWORD + 48] size: DWORD  <||@
  Comment 1294 1104 MOV (x: [r9|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 1300 1106 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1303 1108 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1312 12  <||@
  Comment 1322 block B43 null  <||@
  Comment 1322 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1322 528 rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f]  <||@
  Comment 1327 530 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1332 532 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1342 534 JUMP ~[] destination: B43 -> B64  <||@
  Comment 1342 block B64 null  <||@
  Comment 1342 728 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1342 730 MOV (x: [r15|QWORD + 668], y: rdi|DWORD) size: DWORD  <||@
  Comment 1349 732 MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1356 734 DEOPT info [bci:229]  <||@
  Comment 1356 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1361 [rdx:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |rax|DWORD  |-  |-   <||@
  Comment 1362 block B45 null  <||@
  Comment 1362 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1362 544 rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f]  <||@
  Comment 1367 546 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 548 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1382 550 JUMP ~[] destination: B45 -> B64  <||@
  Comment 1384 block B47 null  <||@
  Comment 1384 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 564 rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f]  <||@
  Comment 1389 566 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1394 568 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1404 570 JUMP ~[] destination: B47 -> B64  <||@
  Comment 1406 block B49 null  <||@
  Comment 1406 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1406 582 rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f]  <||@
  Comment 1411 584 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1416 586 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1426 588 JUMP ~[] destination: B49 -> B64  <||@
  Comment 1428 block B14 null  <||@
  Comment 1428 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1428 192 rdi|DWORD = MOVE input: int[-110177|0xfffffffffffe519f]  <||@
  Comment 1433 196 JUMP ~[] destination: B14 -> B34  <||@
  Comment 1433 block B34 null  <||@
  Comment 1433 434 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1433 170 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1438 436 MOV (x: [r15|QWORD + 668], y: rdi|DWORD) size: DWORD  <||@
  Comment 1445 438 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1452 440 DEOPT info [bci:43]  <||@
  Comment 1452 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1457 [rdx:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 1458 block B16 null  <||@
  Comment 1458 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1458 210 rdi|DWORD = MOVE input: int[-110177|0xfffffffffffe519f]  <||@
  Comment 1463 214 JUMP ~[] destination: B16 -> B34  <||@
  Comment 1465 block B18 null  <||@
  Comment 1465 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1465 226 rdi|DWORD = MOVE input: int[-110177|0xfffffffffffe519f]  <||@
  Comment 1470 230 JUMP ~[] destination: B18 -> B34  <||@
  Comment 1472 block B81 null  <||@
  Comment 1472 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1472 842 MOV [r15|QWORD + 668] y: -159329 size: DWORD  <||@
  Comment 1483 844 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1490 846 DEOPT info [bci:10, 246]  <||@
  Comment 1490 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1495 [rdx:0, stack:32]at java.util.Arrays.fill(Arrays.java:2974) [bci: 10, duringCall: false, rethrow: false]
              |0             |1  |2          |3             |4         
     locals:  |rdx|QWORD[.]  |-  |r11|DWORD  |int[48|0x30]  |r11|DWORD 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246, duringCall: true, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |rax|DWORD  |-  |-   <||@
  Comment 1496 block B35 null  <||@
  Comment 1496 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1496 444 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1501 446 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1504 448 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1509 450 rsi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1512 452 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1517 454 rbp|QWORD = SHL rbp|QWORD size: QWORD  <||@
  Comment 1520 456 r13|QWORD = LEA [rbp|QWORD + 16] size: QWORD  <||@
  Comment 1524 458 rbp|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1528 460 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1531 462 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1534 466 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1539 468 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1544 470 JUMP ~[] destination: B35 -> B36  <||@
  Comment 1549 block B102 null  <||@
  Comment 1549 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1549 1080 rax|DWORD = DEC stack:40|DWORD size: DWORD  <||@
  Comment 1555 1082 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1558 1084 JUMP ~[] destination: B102 -> B103  <||@
  Comment 1563 block B4 null  <||@
  Comment 1563 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1563 64 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1568 66 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1571 68 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1576 70 rsi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1579 72 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1582 74 CMP [r9|QWORD[.] + 12] y: 0 size: DWORD state [bci:0]  <||@
  Comment 1582 [r9:0, r10:0, stack:32, stack:48]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1            |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |-  |-  |-   <||@
  Comment 1582 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1587 76 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 1593 block B6 null  <||@
  Comment 1593 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1593 88 MOV [r9|QWORD[.] + 16] y: 45 size: WORD  <||@
  Comment 1600 90 CMP stack:40|DWORD y: 1 size: DWORD  <||@
  Comment 1605 92 BRANCH trueDestinationProbability: 0.8245601647543395 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 1611 block B7 null  <||@
  Comment 1611 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1611 96 r13|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1618 98 rbp|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 1625 100 rax|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 1630 102 rdi|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1635 104 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1640 106 rcx|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 1647 110 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1650 112 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1653 114 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 116 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1663 118 JUMP ~[] destination: B7 -> B36  <||@
  Comment 1668 block B106 null  <||@
  Comment 1668 1110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1668 1112 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1671 1114 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B106 -> B107 falseDestination: B106 -> B112  <||@
  Comment 1677 block B107 null  <||@
  Comment 1677 1116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1677 1118 rbx|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 1681 1120 CMP r11|DWORD y: 100 size: DWORD  <||@
  Comment 1685 1122 BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B107 -> B108 falseDestination: B107 -> B109  <||@
  Comment 1691 block B108 null  <||@
  Comment 1691 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1691 1126 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1694 1128 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 1699 1130 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1701 1132 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 1704 1134 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 1707 1136 MOV (x: [r9|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 1713 1138 rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 1718 1140 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 1720 1142 rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1722 1144 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1725 1146 rax|DWORD = LEA [r11|DWORD + 48] size: DWORD  <||@
  Comment 1729 1148 MOV (x: [r9|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 1735 1150 rax|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1737 1152 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1746 12  <||@
  Comment 1756 block B21 null  <||@
  Comment 1756 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1756 294 rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f]  <||@
  Comment 1761 300 JUMP ~[] destination: B21 -> B32  <||@
  Comment 1761 block B32 null  <||@
  Comment 1761 418 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1761 412 stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1766 414 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1769 420 MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD  <||@
  Comment 1776 422 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1783 424 DEOPT info [bci:145]  <||@
  Comment 1783 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1788 [r9:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145, duringCall: false, rethrow: false]
              |0                  |1            |2               |3               |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |stack:56|DWORD  |stack:80|DWORD  |-   <||@
  Comment 1789 block B23 null  <||@
  Comment 1789 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1789 314 rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f]  <||@
  Comment 1794 320 JUMP ~[] destination: B23 -> B32  <||@
  Comment 1796 block B25 null  <||@
  Comment 1796 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 334 rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f]  <||@
  Comment 1801 340 JUMP ~[] destination: B25 -> B32  <||@
  Comment 1803 block B27 null  <||@
  Comment 1803 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1803 352 rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f]  <||@
  Comment 1808 358 JUMP ~[] destination: B27 -> B32  <||@
  Comment 1810 block B97 null  <||@
  Comment 1810 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1810 982 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1813 1002 MOV [r15|QWORD + 668] y: -178785 size: DWORD  <||@
  Comment 1824 1004 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1831 1006 DEOPT info [bci:306]  <||@
  Comment 1831 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1836 [r9:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306, duringCall: false, rethrow: false]
              |0                  |1            |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |rax|DWORD  |-  |-   <||@
  Comment 1837 block B109 null  <||@
  Comment 1837 1154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1837 1156 CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1839 1158 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 1845 block B110 null  <||@
  Comment 1845 1160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1845 1162 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1848 1164 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 1853 1166 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1855 1168 rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 1858 1170 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 1861 1172 MOV (x: [r9|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 1867 1174 rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD  <||@
  Comment 1870 1176 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1873 1178 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1876 1180 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 1881 1182 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1883 1184 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 1886 1186 rax|DWORD = SHR r11|DWORD y: 31 size: DWORD  <||@
  Comment 1892 1188 rdx|DWORD = ADD (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1894 1190 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 1897 1192 MOV (x: [r9|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 1903 1194 rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 1908 1196 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 1910 1198 rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1912 1200 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1915 1202 rax|DWORD = LEA [r11|DWORD + 48] size: DWORD  <||@
  Comment 1919 1204 MOV (x: [r9|QWORD[.] + rbx|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 1925 1206 rax|DWORD = LEA [r10|DWORD + 3] size: DWORD  <||@
  Comment 1929 1208 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1938 12  <||@
  Comment 1948 block B8 null  <||@
  Comment 1948 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1948 122 rbp|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1955 124 r8|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1962 126 rax|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 1967 128 rdi|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1972 130 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1977 132 rcx|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 1984 134 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1987 136 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1990 138 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1995 140 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2000 142 JUMP ~[] destination: B8 -> B9  <||@
  Comment 2005 block B116 null  <||@
  Comment 2005 1244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2005 1246 r10|DWORD = MOVE input: int[-169243|0xfffffffffffd6ae5]  <||@
  Comment 2011 1250 JUMP ~[] destination: B116 -> B119  <||@
  Comment 2011 block B119 null  <||@
  Comment 2011 1268 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2011 1264 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2014 1270 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2021 1272 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2028 1274 DEOPT info [bci:283]  <||@
  Comment 2028 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2033 [r9:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1            |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 2034 block B59 null  <||@
  Comment 2034 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2034 690 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2037 692 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1242173179]  <||@
  Comment 2037 {Object[d.a@1242173179]}  <||@
  Comment 2047 694 rdi|DWORD = MOVE input: int[-160011|0xfffffffffffd8ef5]  <||@
  Comment 2052 698 JUMP ~[] destination: B59 -> B64  <||@
  Comment 2057 block B63 null  <||@
  Comment 2057 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2057 722 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2067 724 rdi|DWORD = MOVE input: int[-147475|0xfffffffffffdbfed]  <||@
  Comment 2072 726 JUMP ~[] destination: B63 -> B64  <||@
  Comment 2077 block B111 null  <||@
  Comment 2077 1210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2077 1212 r8|DWORD = MOVE input: int[-197403|0xfffffffffffcfce5]  <||@
  Comment 2083 1214 JUMP ~[] destination: B111 -> B114  <||@
  Comment 2083 block B114 null  <||@
  Comment 2083 1228 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2083 1230 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 2090 1232 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2097 1234 DEOPT info [bci:396]  <||@
  Comment 2097 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2102 [r9:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396, duringCall: false, rethrow: false]
              |0  |1            |2          |3          |4 
     locals:  |-  |r9|QWORD[.]  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 2103 block B61 null  <||@
  Comment 2103 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2103 708 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2113 710 rdi|DWORD = MOVE input: int[-147219|0xfffffffffffdc0ed]  <||@
  Comment 2118 712 JUMP ~[] destination: B61 -> B64  <||@
  Comment 2123 block B5 null  <||@
  Comment 2123 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2123 80 MOV [r15|QWORD + 668] y: -201755 size: DWORD  <||@
  Comment 2134 82 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2141 84 DEOPT info [bci:0]  <||@
  Comment 2141 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2146 [r9:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1            |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |-  |-  |-   <||@
  Comment 2147 block B101 null  <||@
  Comment 2147 1068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2147 1070 MOV [r15|QWORD + 668] y: -199963 size: DWORD  <||@
  Comment 2158 1072 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2165 1074 DEOPT info [bci:363]  <||@
  Comment 2165 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2170 [r9:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363, duringCall: false, rethrow: false]
              |0                  |1            |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |r10|DWORD  |-  |-   <||@
  Comment 2171 block B55 null  <||@
  Comment 2171 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2171 656 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2174 658 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@575684881]  <||@
  Comment 2174 {Object[d.a@575684881]}  <||@
  Comment 2184 660 rdi|DWORD = MOVE input: int[-148251|0xfffffffffffdbce5]  <||@
  Comment 2189 664 JUMP ~[] destination: B55 -> B64  <||@
  Comment 2194 block B118 null  <||@
  Comment 2194 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2194 1262 r10|DWORD = MOVE input: int[-164379|0xfffffffffffd7de5]  <||@
  Comment 2200 1266 JUMP ~[] destination: B118 -> B119  <||@
  Comment 2205 block B33 null  <||@
  Comment 2205 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2205 428 rdi|DWORD = MOVE input: int[-114459|0xfffffffffffe40e5]  <||@
  Comment 2210 432 JUMP ~[] destination: B33 -> B34  <||@
  Comment 2215 block B11 null  <||@
  Comment 2215 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2215 168 rdi|DWORD = MOVE input: int[-112915|0xfffffffffffe46ed]  <||@
  Comment 2220 172 JUMP ~[] destination: B11 -> B34  <||@
  Comment 2225 block B83 null  <||@
  Comment 2225 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2225 880 r10|DWORD = MOVE input: int[-133403|0xfffffffffffdf6e5]  <||@
  Comment 2231 886 JUMP ~[] destination: B83 -> B85  <||@
  Comment 2231 block B85 null  <||@
  Comment 2231 898 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2231 892 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2234 894 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2239 900 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2246 902 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2253 904 DEOPT info [bci:197]  <||@
  Comment 2253 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2258 [r9:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1            |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 2259 block B91 null  <||@
  Comment 2259 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2259 946 r10|DWORD = MOVE input: int[-170259|0xfffffffffffd66ed]  <||@
  Comment 2265 950 JUMP ~[] destination: B91 -> B119  <||@
  Comment 2270 block B84 null  <||@
  Comment 2270 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2270 890 r10|DWORD = MOVE input: int[-131355|0xfffffffffffdfee5]  <||@
  Comment 2276 896 JUMP ~[] destination: B84 -> B85  <||@
  Comment 2278 block B115 null  <||@
  Comment 2278 1236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2278 1238 r10|DWORD = MOVE input: int[-182043|0xfffffffffffd38e5]  <||@
  Comment 2284 1242 JUMP ~[] destination: B115 -> B119  <||@
  Comment 2289 block B112 null  <||@
  Comment 2289 1216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2289 1218 r8|DWORD = MOVE input: int[-211739|0xfffffffffffcc4e5]  <||@
  Comment 2295 1220 JUMP ~[] destination: B112 -> B114  <||@
  Comment 2300 block B117 null  <||@
  Comment 2300 1252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2300 1254 r10|DWORD = MOVE input: int[-167707|0xfffffffffffd70e5]  <||@
  Comment 2306 1258 JUMP ~[] destination: B117 -> B119  <||@
  Comment 2311 block B113 null  <||@
  Comment 2311 1222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2311 1224 r8|DWORD = MOVE input: int[-211995|0xfffffffffffcc3e5]  <||@
  Comment 2317 1226 JUMP ~[] destination: B113 -> B114  <||@
  Comment 2322 block B56 null  <||@
  Comment 2322 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2322 668 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2325 670 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@575684881]  <||@
  Comment 2325 {Object[d.a@575684881]}  <||@
  Comment 2335 672 rdi|DWORD = MOVE input: int[-148251|0xfffffffffffdbce5]  <||@
  Comment 2340 676 JUMP ~[] destination: B56 -> B64  <||@
  Comment 2345 block B31 null  <||@
  Comment 2345 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2345 410 rax|DWORD = MOVE input: int[-128027|0xfffffffffffe0be5]  <||@
  Comment 2350 416 JUMP ~[] destination: B31 -> B32  <||@
  Comment 2355 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2355 4  <||@
  Comment 2361 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2361 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9226[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])]"
  method "HotSpotCompilation-9226[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])]"
  date 1527005201223
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b5b100 448b560849c1e203493bc20f854fadcafe900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404889542430448b561c448b5e10448b4614448944242c448b4e0c0fb67e1885ff0f85c50500004183f9010f8dd400000049c7c51200000048c7c510000000b802000000bf01000000bb0000000048c7c1020000004183f9010f8d6f0300004183f9fe0f8c65030000448b720c443bf30f8639080000443bf70f860308000066c7042a30006642c7042a2e004585c90f858b010000438504d44585db0f8c590400004585c00f8c78040000428b3cd50c000000412bf8443bdf0f8f7a040000452bf0413bc60f8f8404000049c1e2034963fb4d63d8498d7c7a10488d744210498bd3890424e8277bcbfe908b04240344242c488b6c24404883c4488505d63dd3fcc5f877c348c7c501000000b802000000bf01000000bb0000000048c7c10200000049c7c0000000004183f9080f8d76040000448b44242c438504d48502453bc1418bc8410f4fc9443bc90f8f27070000448b4a0c8bc303c1443bc80f860c0700004585db0f8cfa030000428b2cd50c0000008bfd2bf9443bdf0f8f03040000418bf92bf93bdf0f8ffd030000896c241c8944241844894c2414488974242049c1e2034c89542408498bfa4c8bea4d63f34c63d14a8d7c7710498d745d10498bd244895c2404890c24e8437acbfe90488b5424308b44241866c74442102e00448bd041ffc2448b44242c443b0424448b4c24140f8f49010000453bca0f86f80600006642c744521030008d4002488b6c24404883c4488505bb3cd3fcc5f877c344895c24044889742420448bd8452bd941f7d94963f9488bf748ffce443bd80f8fd40000004585d20f8475050000413bc30f8fb1050000453bde0f8f7a0500004183f9010f8c360000004c8d4c4210488d7ffe4885ff0f8cba000000c4c1796e052cfdffffc4c1797e0148c7c702000000483bfe0f8f060000006641c70130008b74240485f60f8ce50200004585c00f8cdc020000428b3cd50c000000412bf83bf70f8fc9020000452bf0453bde0f8fbd02000049c1e2034863fe4963f34d63c8498d7c7a10488d747210498bd144895c2404e81979cbfe90448b5c240444035c242c418bc3488b6c24404883c4488505c23bd3fcc5f877c34803ce418bde483bd90f86bb050000443bf00f8714ffffffe91605000048c7c700000000e94fffffff8b7424048b0c2403ce85c90f8c5a030000448b5c242c458bc3442b04244585c00f8c660300008b6c241c412be83bcd0f8f5e030000452bc8453bd10f8f59030000488b7c24084863f14d63da4d63c8488d7c77104a8d745a10498bd14489542418448944241ce86478cbfe90448b542418440354241c418bc2488b6c24404883c44885050d3bd3fcc5f877c34889742420418bf3458bd8468b04d50c000000443bc60f86790400008b4a0c3bcb0f86d80400003bcf0f86a90300004183fb020f8c9d040000418bfbffcf448bdf4403d8413bcb0f869c04000049c1e203410fbf5c721066891c2a6642c7042a2e00442bc7ffc6413bf00f8fa5020000448bc1442bc7413bc00f8f9602000044895c2404894c242c44894c24284c8bc24863f64863df498d7c7210498d744010488bd3e89b77cbfe904c8b4c2430448b5c24046643c74459104500458bd341ffc2837c2428018b4c242c0f8d40010000413bca0f868d0300006643c74451102d00418d4302ba010000002b542428448bda448bd0413bca0f860d040000458bc241ffc04183fb0a0f8d7a010000418d4330664389445110418bc0488b6c24404883c4488505e039d3fcc5f877c3bf9fccfdff488974242048be00000000000000004189bf9c0200004989b7a8020000e8adbfcafe90bf9fccfdff488974242048be0000000000000000ebd6bf9fccfdff488974242048be0000000000000000ebc0bf9fccfdff488974242048be0000000000000000ebaabf9f51feff48897424204189bf9c0200004d89a7a8020000e84dbfcafe90bf9f51feffebe0bf9f51feffebd941c7879c0200009f91fdff4d89a7a8020000e827bfcafe9044894c24284c8bca4889742420418bf3448b5c242c48d1e54c8d6d10498d6810458bc3448bde488b742420448b4c2428e977faffff8b442428ffc8448bd8e9d6feffff44894c24284c8bca4889742420418bf3458bd84183790c000f84120200006641c741102d00837c2428010f8d5101000049c7c51400000048c7c512000000b803000000bf02000000bb0100000048c7c103000000448bde498bd1488b742420448b4c2428e900faffff413bc80f8664020000418d5a024183fb640f8d92000000418bc3ba67666666f7eac1fa028d42306643894451108bc2c1e003d1e203c2442bd8418d43306643894441108bc3488b6c24404883c44885052e38d3fcc5f877c3b89f18feff44895424184c8bca4189879c0200004d89a7a8020000e802becafe90b89f18feffebddb89f18feffebd6b89f18feffebcf4c8bca41c7879c0200009f45fdff4d89a7a8020000e8d2bdcafe903bcb0f86e8000000418bc3ba1f85eb51f7eac1fa058d42306643894451106bc264442bd8418bc3ba67666666f7eac1fa02418bc3c1e81f03d08d42306643894441108bc2c1e003d1e203c2442bd8418d4330664189445910418d4203488b6c24404883c44885056e37d3fcc5f877c348c7c50200000049c7c002000000b803000000bf02000000bb0100000048c7c103000000448bde498bd1488b742420448b4c2428e983f9ffff41bae56afdff4c8bca4589979c0200004d89a7a8020000e80dbdcafe904c8bca48be983553bb07000000bff58efdffe935fdffff48be0000000000000000bfedbffdffe921fdffff41b8e5fcfcff4589879c0200004d89a7a8020000e8c8bccafe9048be0000000000000000bfedc0fdffe9f3fcffff41c7879c020000e5ebfcff4d89a7a8020000e89cbccafe9041c7879c020000e5f2fcff4d89a7a8020000e884bccafe904c8bca48be683553bb07000000bfe5bcfdffe9acfcffff41bae57dfdffe93effffffbfe540feffe9f2fcffffbfed46feffe9e8fcffff41bae5f6fdff4c8bca48897424204589979c0200004d89a7a8020000e82cbccafe9041baed66fdffe9fdfeffff41bae5fefdffebd141bae538fdffe9eafeffff41b8e5c4fcffe927ffffff41bae570fdffe9d4feffff41b8e5c3fcffe911ffffff4c8bca48be683553bb07000000bfe5bcfdffe915fcffffb8e50bfeffe9aefdffffe8e8eb0eff90e8c2bacafe90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e0c8e1e slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 57 10 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 61 12 r8|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 65 14 stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 70 16 r9|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 74 18 rdi|DWORD = MOVZXB [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 78 20 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 80 22 BRANCH trueDestinationProbability: 0.9997646283481617 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 86 block B1 null  <||@
  Comment 86 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 26 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 90 28 BRANCH trueDestinationProbability: 0.8245601647543395 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 96 block B2 null  <||@
  Comment 96 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 32 r13|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 103 34 rbp|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 110 36 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 115 38 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 120 40 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 125 42 rcx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 132 44 JUMP ~[] destination: B2 -> B36  <||@
  Comment 132 block B36 null  <||@
  Comment 132 472 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 132 474 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 136 476 BRANCH trueDestinationProbability: 0.998987666642903 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B87  <||@
  Comment 142 block B37 null  <||@
  Comment 142 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 480 CMP r9|DWORD y: -2 size: DWORD  <||@
  Comment 146 482 BRANCH trueDestinationProbability: 0.008891362676257342 condition: < trueDestination: B37 -> B87 falseDestination: B37 -> B39  <||@
  Comment 152 block B39 null  <||@
  Comment 152 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 152 496 r14|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:197]  <||@
  Comment 152 [rdx:0, rsi:0, r10:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 152 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 156 498 CMP (x: r14|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 159 500 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B84  <||@
  Comment 165 block B40 null  <||@
  Comment 165 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 504 CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 168 506 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B83  <||@
  Comment 174 block B41 null  <||@
  Comment 174 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 510 MOV [rdx|QWORD[.] + rbp|QWORD * 1] y: 48 size: WORD  <||@
  Comment 180 512 MOV [rdx|QWORD[.] + r13|QWORD * 1] y: 46 size: WORD  <||@
  Comment 187 514 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 190 516 BRANCH trueDestinationProbability: 0.8206833988509223 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B51  <||@
  Comment 196 block B42 null  <||@
  Comment 196 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 196 520 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:229]  <||@
  Comment 196 [rdx:0, rsi:0, r10:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rax|DWORD  |-  |-   <||@
  Comment 196 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 200 522 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 203 524 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 209 block B44 null  <||@
  Comment 209 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 538 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 212 540 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 218 block B46 null  <||@
  Comment 218 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 218 554 rdi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 226 556 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 229 558 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 232 560 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 238 block B48 null  <||@
  Comment 238 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 574 r14|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 241 576 CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 244 578 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 250 block B50 null  <||@
  Comment 250 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 250 592 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3  <||@
  Comment 254 594 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 254 596 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 254 598 rdi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 257 600 r11|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 260 602 rdi|QWORD = LEA [r10|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 265 604 rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 2 + 16] size: QWORD  <||@
  Comment 270 606 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 273 608 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 276 610 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 276 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 282 612 rax|DWORD = ADD (x: stack:80|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 289 614 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 298 12  <||@
  Comment 308 block B3 null  <||@
  Comment 308 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 48 rbp|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 315 50 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 320 52 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 325 54 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 330 56 rcx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 337 58 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 344 60 JUMP ~[] destination: B3 -> B9  <||@
  Comment 344 block B9 null  <||@
  Comment 344 144 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 344 146 CMP r9|DWORD y: 8 size: DWORD  <||@
  Comment 348 148 BRANCH trueDestinationProbability: 0.9952377758400965 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B35  <||@
  Comment 354 block B10 null  <||@
  Comment 354 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 354 152 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 359 154 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:43]  <||@
  Comment 359 [rdx:0, rsi:0, r10:0, stack:48]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 359 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 363 156 NULLCHECK [rdx|QWORD[.]] state [bci:43]  <||@
  Comment 363 [rdx:0, rsi:0, r10:0, stack:48]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 363 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 365 158 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 368 160 rcx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: >  <||@
  Comment 375 162 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 378 164 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 384 block B12 null  <||@
  Comment 384 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 384 176 r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 388 178 rax|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 392 180 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 395 182 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B33  <||@
  Comment 401 block B13 null  <||@
  Comment 401 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 186 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 404 188 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 410 block B15 null  <||@
  Comment 410 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 410 200 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 418 202 rdi|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 422 204 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 425 206 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 431 block B17 null  <||@
  Comment 431 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 431 218 rdi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 436 220 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 438 222 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 444 block B19 null  <||@
  Comment 444 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 444 234 stack:52|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 448 236 stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 452 238 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 457 240 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 462 242 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3  <||@
  Comment 466 244 stack:72|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 471 246 rdi|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 474 248 r13|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 477 250 r14|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 480 252 r10|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 483 254 rdi|QWORD = LEA [rdi|QWORD[*] + r14|QWORD * 2 + 16] size: QWORD  <||@
  Comment 488 256 rsi|QWORD = LEA [r13|QWORD[*] + rbx|DWORD * 2 + 16] size: QWORD  <||@
  Comment 493 258 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 496 260 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 501 262 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 504 264 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 504 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 510 266 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 515 268 rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 519 270 MOV [rdx|QWORD[.] + rax|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 526 272 r10|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 532 274 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 537 276 CMP (x: r8|DWORD, y: stack:80|DWORD) size: DWORD  <||@
  Comment 541 282 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 546 278 BRANCH trueDestinationProbability: 0.07837983555735273 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B29  <||@
  Comment 552 block B29 null  <||@
  Comment 552 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 552 396 CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 555 398 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 561 block B30 null  <||@
  Comment 561 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 561 402 MOV [rdx|QWORD[.] + r10|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 569 404 rax|DWORD = LEA [rax|DWORD + 2] size: DWORD  <||@
  Comment 572 406 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 581 12  <||@
  Comment 591 block B51 null  <||@
  Comment 591 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 591 618 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 596 620 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 601 622 r11|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 607 624 r9|DWORD = NEG r9|DWORD size: DWORD  <||@
  Comment 610 626 rdi|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 613 628 rsi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 619 630 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 622 632 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B58  <||@
  Comment 628 block B58 null  <||@
  Comment 628 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 628 684 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 631 686 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 637 block B60 null  <||@
  Comment 637 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 637 702 CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 640 704 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62  <||@
  Comment 646 block B62 null  <||@
  Comment 646 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 646 716 CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 649 718 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B65  <||@
  Comment 655 block B65 null  <||@
  Comment 655 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 655 738 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 659 740 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B65 -> B73 falseDestination: B65 -> B67  <||@
  Comment 665 block B67 null  <||@
  Comment 665 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 750 r9|QWORD[.] = LEA [rdx|QWORD[.] + rax|DWORD * 2 + 16] size: QWORD  <||@
  Comment 670 752 rdi|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 674 754 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 677 756 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 683 block B69 null  <||@
  Comment 683 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 683 766 xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD  <||@
  Comment 683 {DataSection[0x0]}  <||@
  Comment 692 768 J (address: [r9|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 697 770 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 704 772 JUMP ~[] destination: B69 -> B70  <||@
  Comment 704 block B70 null  <||@
  Comment 704 774 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 704 776 CMP (x: rdi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 707 778 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72  <||@
  Comment 713 block B72 null  <||@
  Comment 713 786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 713 788 MOV [r9|QWORD[.]] y: 48 size: WORD  <||@
  Comment 719 792 JUMP ~[] destination: B72 -> B73  <||@
  Comment 719 block B73 null  <||@
  Comment 719 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 719 744 rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 723 796 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 725 798 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B73 -> B81 falseDestination: B73 -> B75  <||@
  Comment 731 block B75 null  <||@
  Comment 731 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 731 806 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 734 808 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B75 -> B81 falseDestination: B75 -> B77  <||@
  Comment 740 block B77 null  <||@
  Comment 740 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 740 816 rdi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 748 818 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 751 820 CMP (x: rsi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 753 822 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B77 -> B81 falseDestination: B77 -> B79  <||@
  Comment 759 block B79 null  <||@
  Comment 759 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 759 830 r14|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 762 832 CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 765 834 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B79 -> B81 falseDestination: B79 -> B82  <||@
  Comment 771 block B82 null  <||@
  Comment 771 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 771 850 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3  <||@
  Comment 775 852 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 775 854 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 775 856 rdi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 778 858 rsi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 781 860 r9|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 784 862 rdi|QWORD = LEA [r10|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 789 864 rsi|QWORD = LEA [rdx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 794 866 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 797 868 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 802 870 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 802 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 808 872 r11|DWORD = ADD (x: stack:76|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 818 874 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 821 876 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 830 12  <||@
  Comment 840 block B52 null  <||@
  Comment 840 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 636 rcx|QWORD = ADD (x: rsi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 843 638 rbx|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 846 640 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 849 642 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B56  <||@
  Comment 855 block B53 null  <||@
  Comment 855 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 855 646 CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 858 648 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B58 falseDestination: B53 -> B55  <||@
  Comment 869 block B68 null  <||@
  Comment 869 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 760 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 876 762 JUMP ~[] destination: B68 -> B70  <||@
  Comment 881 block B20 null  <||@
  Comment 881 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 284 rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 885 286 rcx|DWORD = ADD (x: stack:80|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 890 288 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 892 290 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 898 block B22 null  <||@
  Comment 898 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 898 304 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 903 306 r8|DWORD = SUB (x: r11|DWORD, ~y: stack:80|DWORD) size: DWORD  <||@
  Comment 910 308 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 913 310 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 919 block B24 null  <||@
  Comment 919 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 919 324 rbp|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 923 326 rbp|DWORD = SUB (x: rbp|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 926 328 CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 928 330 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 934 block B26 null  <||@
  Comment 934 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 934 344 r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 937 346 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 940 348 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 946 block B28 null  <||@
  Comment 946 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 946 362 rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 951 364 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 951 366 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 951 368 rsi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 954 370 r11|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 957 372 r9|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 960 374 rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 965 376 rsi|QWORD = LEA [rdx|QWORD[*] + r11|QWORD * 2 + 16] size: QWORD  <||@
  Comment 970 378 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 973 380 stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 978 382 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 983 384 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 983 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 989 386 r10|DWORD = ADD (x: stack:56|DWORD, y: stack:52|DWORD) size: DWORD  <||@
  Comment 999 388 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1002 390 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1011 12  <||@
  Comment 1021 block B87 null  <||@
  Comment 1021 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1021 908 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1026 910 rsi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1029 912 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1032 918 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:283]  <||@
  Comment 1032 [rdx:0, r10:0, stack:32, stack:48]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 1032 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1040 920 CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1043 922 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B118  <||@
  Comment 1049 block B88 null  <||@
  Comment 1049 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1049 926 rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:283]  <||@
  Comment 1049 [rdx:0, r10:0, stack:32, stack:48]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 1049 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1052 928 CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1054 930 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B117  <||@
  Comment 1060 block B89 null  <||@
  Comment 1060 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1060 934 CMP (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1062 936 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B116  <||@
  Comment 1068 block B90 null  <||@
  Comment 1068 938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 940 CMP r11|DWORD y: 2 size: DWORD  <||@
  Comment 1072 942 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 1078 block B92 null  <||@
  Comment 1078 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1078 954 rdi|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 1083 956 r11|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1089 958 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1092 960 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B115  <||@
  Comment 1098 block B93 null  <||@
  Comment 1098 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1098 964 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3b708658 encoding: base: 0 shift: 3  <||@
  Comment 1102 966 rbx|DWORD = MOVSX [r10|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD  <||@
  Comment 1108 968 MOV (x: [rdx|QWORD[.] + rbp|QWORD * 1], y: rbx|DWORD) size: WORD  <||@
  Comment 1112 970 MOV [rdx|QWORD[.] + r13|QWORD * 1] y: 46 size: WORD  <||@
  Comment 1119 972 r8|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1122 974 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1124 976 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1127 978 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B93 -> B97 falseDestination: B93 -> B95  <||@
  Comment 1133 block B95 null  <||@
  Comment 1133 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1133 988 r8|DWORD = SUB (x: rcx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1139 990 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1142 992 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B95 -> B97 falseDestination: B95 -> B98  <||@
  Comment 1148 block B98 null  <||@
  Comment 1148 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1148 1010 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1153 1012 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1157 1014 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1162 1016 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1162 1018 r8|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1165 1020 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1168 1022 rbx|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1171 1024 rdi|QWORD = LEA [r10|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1176 1026 rsi|QWORD = LEA [r8|QWORD[*] + rax|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1181 1028 rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1184 1030 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1184 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1190 1032 r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1195 1034 r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1200 1036 MOV [r9|QWORD[.] + r11|DWORD * 2 + 16] y: 69 size: WORD  <||@
  Comment 1208 1038 r10|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1214 1040 CMP stack:40|DWORD y: 1 size: DWORD  <||@
  Comment 1219 1046 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1223 1042 BRANCH trueDestinationProbability: 0.8976945244956772 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B102  <||@
  Comment 1229 block B99 null  <||@
  Comment 1229 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1229 1048 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1232 1050 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B101  <||@
  Comment 1238 block B100 null  <||@
  Comment 1238 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1238 1054 MOV [r9|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD  <||@
  Comment 1246 1056 rax|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 1250 1058 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1255 1060 rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 1259 1062 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1262 1064 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1265 1066 JUMP ~[] destination: B100 -> B103  <||@
  Comment 1265 block B103 null  <||@
  Comment 1265 1086 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1265 1088 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1268 1090 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B113  <||@
  Comment 1274 block B104 null  <||@
  Comment 1274 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1274 1094 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1280 1096 CMP r11|DWORD y: 10 size: DWORD  <||@
  Comment 1284 1098 BRANCH trueDestinationProbability: 0.9769452449567724 condition: < trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 1290 block B105 null  <||@
  Comment 1290 1100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1290 1102 rax|DWORD = LEA [r11|DWORD + 48] size: DWORD  <||@
  Comment 1294 1104 MOV (x: [r9|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 1300 1106 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1303 1108 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1312 12  <||@
  Comment 1322 block B43 null  <||@
  Comment 1322 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1322 528 rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f]  <||@
  Comment 1327 530 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1332 532 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1342 534 JUMP ~[] destination: B43 -> B64  <||@
  Comment 1342 block B64 null  <||@
  Comment 1342 728 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1342 730 MOV (x: [r15|QWORD + 668], y: rdi|DWORD) size: DWORD  <||@
  Comment 1349 732 MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1356 734 DEOPT info [bci:229]  <||@
  Comment 1356 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1361 [rdx:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |rax|DWORD  |-  |-   <||@
  Comment 1362 block B45 null  <||@
  Comment 1362 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1362 544 rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f]  <||@
  Comment 1367 546 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 548 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1382 550 JUMP ~[] destination: B45 -> B64  <||@
  Comment 1384 block B47 null  <||@
  Comment 1384 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 564 rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f]  <||@
  Comment 1389 566 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1394 568 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1404 570 JUMP ~[] destination: B47 -> B64  <||@
  Comment 1406 block B49 null  <||@
  Comment 1406 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1406 582 rdi|DWORD = MOVE input: int[-144225|0xfffffffffffdcc9f]  <||@
  Comment 1411 584 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1416 586 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1426 588 JUMP ~[] destination: B49 -> B64  <||@
  Comment 1428 block B14 null  <||@
  Comment 1428 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1428 192 rdi|DWORD = MOVE input: int[-110177|0xfffffffffffe519f]  <||@
  Comment 1433 196 JUMP ~[] destination: B14 -> B34  <||@
  Comment 1433 block B34 null  <||@
  Comment 1433 434 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1433 170 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1438 436 MOV (x: [r15|QWORD + 668], y: rdi|DWORD) size: DWORD  <||@
  Comment 1445 438 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1452 440 DEOPT info [bci:43]  <||@
  Comment 1452 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1457 [rdx:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 1458 block B16 null  <||@
  Comment 1458 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1458 210 rdi|DWORD = MOVE input: int[-110177|0xfffffffffffe519f]  <||@
  Comment 1463 214 JUMP ~[] destination: B16 -> B34  <||@
  Comment 1465 block B18 null  <||@
  Comment 1465 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1465 226 rdi|DWORD = MOVE input: int[-110177|0xfffffffffffe519f]  <||@
  Comment 1470 230 JUMP ~[] destination: B18 -> B34  <||@
  Comment 1472 block B81 null  <||@
  Comment 1472 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1472 842 MOV [r15|QWORD + 668] y: -159329 size: DWORD  <||@
  Comment 1483 844 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1490 846 DEOPT info [bci:10, 246]  <||@
  Comment 1490 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1495 [rdx:0, stack:32]at java.util.Arrays.fill(Arrays.java:2974) [bci: 10, duringCall: false, rethrow: false]
              |0             |1  |2          |3             |4         
     locals:  |rdx|QWORD[.]  |-  |r11|DWORD  |int[48|0x30]  |r11|DWORD 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246, duringCall: true, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |rax|DWORD  |-  |-   <||@
  Comment 1496 block B35 null  <||@
  Comment 1496 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1496 444 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1501 446 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1504 448 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1509 450 rsi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1512 452 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1517 454 rbp|QWORD = SHL rbp|QWORD size: QWORD  <||@
  Comment 1520 456 r13|QWORD = LEA [rbp|QWORD + 16] size: QWORD  <||@
  Comment 1524 458 rbp|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1528 460 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1531 462 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1534 466 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1539 468 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1544 470 JUMP ~[] destination: B35 -> B36  <||@
  Comment 1549 block B102 null  <||@
  Comment 1549 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1549 1080 rax|DWORD = DEC stack:40|DWORD size: DWORD  <||@
  Comment 1555 1082 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1558 1084 JUMP ~[] destination: B102 -> B103  <||@
  Comment 1563 block B4 null  <||@
  Comment 1563 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1563 64 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1568 66 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1571 68 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1576 70 rsi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1579 72 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1582 74 CMP [r9|QWORD[.] + 12] y: 0 size: DWORD state [bci:0]  <||@
  Comment 1582 [r9:0, r10:0, stack:32, stack:48]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1            |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |-  |-  |-   <||@
  Comment 1582 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1587 76 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 1593 block B6 null  <||@
  Comment 1593 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1593 88 MOV [r9|QWORD[.] + 16] y: 45 size: WORD  <||@
  Comment 1600 90 CMP stack:40|DWORD y: 1 size: DWORD  <||@
  Comment 1605 92 BRANCH trueDestinationProbability: 0.8245601647543395 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 1611 block B7 null  <||@
  Comment 1611 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1611 96 r13|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1618 98 rbp|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 1625 100 rax|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 1630 102 rdi|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1635 104 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1640 106 rcx|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 1647 110 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1650 112 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1653 114 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 116 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1663 118 JUMP ~[] destination: B7 -> B36  <||@
  Comment 1668 block B106 null  <||@
  Comment 1668 1110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1668 1112 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1671 1114 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B106 -> B107 falseDestination: B106 -> B112  <||@
  Comment 1677 block B107 null  <||@
  Comment 1677 1116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1677 1118 rbx|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 1681 1120 CMP r11|DWORD y: 100 size: DWORD  <||@
  Comment 1685 1122 BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B107 -> B108 falseDestination: B107 -> B109  <||@
  Comment 1691 block B108 null  <||@
  Comment 1691 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1691 1126 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1694 1128 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 1699 1130 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1701 1132 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 1704 1134 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 1707 1136 MOV (x: [r9|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 1713 1138 rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 1718 1140 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 1720 1142 rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1722 1144 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1725 1146 rax|DWORD = LEA [r11|DWORD + 48] size: DWORD  <||@
  Comment 1729 1148 MOV (x: [r9|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 1735 1150 rax|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1737 1152 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1746 12  <||@
  Comment 1756 block B21 null  <||@
  Comment 1756 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1756 294 rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f]  <||@
  Comment 1761 300 JUMP ~[] destination: B21 -> B32  <||@
  Comment 1761 block B32 null  <||@
  Comment 1761 418 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1761 412 stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1766 414 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1769 420 MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD  <||@
  Comment 1776 422 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1783 424 DEOPT info [bci:145]  <||@
  Comment 1783 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1788 [r9:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145, duringCall: false, rethrow: false]
              |0                  |1            |2               |3               |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |stack:56|DWORD  |stack:80|DWORD  |-   <||@
  Comment 1789 block B23 null  <||@
  Comment 1789 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1789 314 rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f]  <||@
  Comment 1794 320 JUMP ~[] destination: B23 -> B32  <||@
  Comment 1796 block B25 null  <||@
  Comment 1796 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 334 rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f]  <||@
  Comment 1801 340 JUMP ~[] destination: B25 -> B32  <||@
  Comment 1803 block B27 null  <||@
  Comment 1803 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1803 352 rax|DWORD = MOVE input: int[-124769|0xfffffffffffe189f]  <||@
  Comment 1808 358 JUMP ~[] destination: B27 -> B32  <||@
  Comment 1810 block B97 null  <||@
  Comment 1810 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1810 982 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1813 1002 MOV [r15|QWORD + 668] y: -178785 size: DWORD  <||@
  Comment 1824 1004 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1831 1006 DEOPT info [bci:306]  <||@
  Comment 1831 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1836 [r9:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306, duringCall: false, rethrow: false]
              |0                  |1            |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |rax|DWORD  |-  |-   <||@
  Comment 1837 block B109 null  <||@
  Comment 1837 1154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1837 1156 CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1839 1158 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 1845 block B110 null  <||@
  Comment 1845 1160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1845 1162 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1848 1164 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 1853 1166 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1855 1168 rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 1858 1170 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 1861 1172 MOV (x: [r9|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 1867 1174 rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD  <||@
  Comment 1870 1176 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1873 1178 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1876 1180 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 1881 1182 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1883 1184 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 1886 1186 rax|DWORD = SHR r11|DWORD y: 31 size: DWORD  <||@
  Comment 1892 1188 rdx|DWORD = ADD (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1894 1190 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 1897 1192 MOV (x: [r9|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 1903 1194 rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 1908 1196 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 1910 1198 rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1912 1200 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1915 1202 rax|DWORD = LEA [r11|DWORD + 48] size: DWORD  <||@
  Comment 1919 1204 MOV (x: [r9|QWORD[.] + rbx|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 1925 1206 rax|DWORD = LEA [r10|DWORD + 3] size: DWORD  <||@
  Comment 1929 1208 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1938 12  <||@
  Comment 1948 block B8 null  <||@
  Comment 1948 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1948 122 rbp|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1955 124 r8|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1962 126 rax|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 1967 128 rdi|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1972 130 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1977 132 rcx|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 1984 134 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1987 136 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1990 138 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1995 140 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2000 142 JUMP ~[] destination: B8 -> B9  <||@
  Comment 2005 block B116 null  <||@
  Comment 2005 1244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2005 1246 r10|DWORD = MOVE input: int[-169243|0xfffffffffffd6ae5]  <||@
  Comment 2011 1250 JUMP ~[] destination: B116 -> B119  <||@
  Comment 2011 block B119 null  <||@
  Comment 2011 1268 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2011 1264 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2014 1270 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2021 1272 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2028 1274 DEOPT info [bci:283]  <||@
  Comment 2028 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2033 [r9:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1            |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 2034 block B59 null  <||@
  Comment 2034 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2034 690 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2037 692 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1242173179]  <||@
  Comment 2037 {Object[d.a@1242173179]}  <||@
  Comment 2047 694 rdi|DWORD = MOVE input: int[-160011|0xfffffffffffd8ef5]  <||@
  Comment 2052 698 JUMP ~[] destination: B59 -> B64  <||@
  Comment 2057 block B63 null  <||@
  Comment 2057 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2057 722 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2067 724 rdi|DWORD = MOVE input: int[-147475|0xfffffffffffdbfed]  <||@
  Comment 2072 726 JUMP ~[] destination: B63 -> B64  <||@
  Comment 2077 block B111 null  <||@
  Comment 2077 1210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2077 1212 r8|DWORD = MOVE input: int[-197403|0xfffffffffffcfce5]  <||@
  Comment 2083 1214 JUMP ~[] destination: B111 -> B114  <||@
  Comment 2083 block B114 null  <||@
  Comment 2083 1228 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2083 1230 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 2090 1232 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2097 1234 DEOPT info [bci:396]  <||@
  Comment 2097 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2102 [r9:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396, duringCall: false, rethrow: false]
              |0  |1            |2          |3          |4 
     locals:  |-  |r9|QWORD[.]  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 2103 block B61 null  <||@
  Comment 2103 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2103 708 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2113 710 rdi|DWORD = MOVE input: int[-147219|0xfffffffffffdc0ed]  <||@
  Comment 2118 712 JUMP ~[] destination: B61 -> B64  <||@
  Comment 2123 block B5 null  <||@
  Comment 2123 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2123 80 MOV [r15|QWORD + 668] y: -201755 size: DWORD  <||@
  Comment 2134 82 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2141 84 DEOPT info [bci:0]  <||@
  Comment 2141 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2146 [r9:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1            |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |-  |-  |-   <||@
  Comment 2147 block B101 null  <||@
  Comment 2147 1068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2147 1070 MOV [r15|QWORD + 668] y: -199963 size: DWORD  <||@
  Comment 2158 1072 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2165 1074 DEOPT info [bci:363]  <||@
  Comment 2165 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2170 [r9:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363, duringCall: false, rethrow: false]
              |0                  |1            |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |r10|DWORD  |-  |-   <||@
  Comment 2171 block B55 null  <||@
  Comment 2171 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2171 656 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2174 658 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@575684881]  <||@
  Comment 2174 {Object[d.a@575684881]}  <||@
  Comment 2184 660 rdi|DWORD = MOVE input: int[-148251|0xfffffffffffdbce5]  <||@
  Comment 2189 664 JUMP ~[] destination: B55 -> B64  <||@
  Comment 2194 block B118 null  <||@
  Comment 2194 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2194 1262 r10|DWORD = MOVE input: int[-164379|0xfffffffffffd7de5]  <||@
  Comment 2200 1266 JUMP ~[] destination: B118 -> B119  <||@
  Comment 2205 block B33 null  <||@
  Comment 2205 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2205 428 rdi|DWORD = MOVE input: int[-114459|0xfffffffffffe40e5]  <||@
  Comment 2210 432 JUMP ~[] destination: B33 -> B34  <||@
  Comment 2215 block B11 null  <||@
  Comment 2215 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2215 168 rdi|DWORD = MOVE input: int[-112915|0xfffffffffffe46ed]  <||@
  Comment 2220 172 JUMP ~[] destination: B11 -> B34  <||@
  Comment 2225 block B83 null  <||@
  Comment 2225 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2225 880 r10|DWORD = MOVE input: int[-133403|0xfffffffffffdf6e5]  <||@
  Comment 2231 886 JUMP ~[] destination: B83 -> B85  <||@
  Comment 2231 block B85 null  <||@
  Comment 2231 898 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2231 892 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2234 894 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2239 900 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2246 902 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2253 904 DEOPT info [bci:197]  <||@
  Comment 2253 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2258 [r9:0, stack:32]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1            |2          |3  |4 
     locals:  |stack:48|QWORD[.]  |r9|QWORD[.]  |rbx|DWORD  |-  |-   <||@
  Comment 2259 block B91 null  <||@
  Comment 2259 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2259 946 r10|DWORD = MOVE input: int[-170259|0xfffffffffffd66ed]  <||@
  Comment 2265 950 JUMP ~[] destination: B91 -> B119  <||@
  Comment 2270 block B84 null  <||@
  Comment 2270 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2270 890 r10|DWORD = MOVE input: int[-131355|0xfffffffffffdfee5]  <||@
  Comment 2276 896 JUMP ~[] destination: B84 -> B85  <||@
  Comment 2278 block B115 null  <||@
  Comment 2278 1236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2278 1238 r10|DWORD = MOVE input: int[-182043|0xfffffffffffd38e5]  <||@
  Comment 2284 1242 JUMP ~[] destination: B115 -> B119  <||@
  Comment 2289 block B112 null  <||@
  Comment 2289 1216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2289 1218 r8|DWORD = MOVE input: int[-211739|0xfffffffffffcc4e5]  <||@
  Comment 2295 1220 JUMP ~[] destination: B112 -> B114  <||@
  Comment 2300 block B117 null  <||@
  Comment 2300 1252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2300 1254 r10|DWORD = MOVE input: int[-167707|0xfffffffffffd70e5]  <||@
  Comment 2306 1258 JUMP ~[] destination: B117 -> B119  <||@
  Comment 2311 block B113 null  <||@
  Comment 2311 1222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2311 1224 r8|DWORD = MOVE input: int[-211995|0xfffffffffffcc3e5]  <||@
  Comment 2317 1226 JUMP ~[] destination: B113 -> B114  <||@
  Comment 2322 block B56 null  <||@
  Comment 2322 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2322 668 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2325 670 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@575684881]  <||@
  Comment 2325 {Object[d.a@575684881]}  <||@
  Comment 2335 672 rdi|DWORD = MOVE input: int[-148251|0xfffffffffffdbce5]  <||@
  Comment 2340 676 JUMP ~[] destination: B56 -> B64  <||@
  Comment 2345 block B31 null  <||@
  Comment 2345 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2345 410 rax|DWORD = MOVE input: int[-128027|0xfffffffffffe0be5]  <||@
  Comment 2350 416 JUMP ~[] destination: B31 -> B32  <||@
  Comment 2355 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2355 4  <||@
  Comment 2361 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2361 5  <||@
  HexCodeFile>>> <|@
end_nmethod
