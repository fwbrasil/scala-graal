begin_compilation
  name " HotSpotCompilation-9442[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(long, int)]"
  method "HotSpotCompilation-9442[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(long, int)]"
  date 1527005213740
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid j1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 j6 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 4]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j6 j42 j43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j6 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 7]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j1 
y: j5 
=== Succesors ===
=== Usages ===
j7 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j1 y: j5  <|@  <|@
f <@~|@floating>@ <|@
tid j4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
rawvalue: 4607182418800017408
stableDimension: 0
stamp: i64 [4607182418800017408] ⇊3ff0000000000000 ⇈3ff0000000000000
stampKind: i64
value: long[4607182418800017408|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j7 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 8]
stamp: i64 [4607182418800017408 - 4611686018427387903] ⇊3ff0000000000000 ⇈3fffffffffffffff
=== Inputs ===
x: j6 
y: j4 
=== Succesors ===
=== Usages ===
d8 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j6 y: j4  <|@  <|@
f <@~|@floating>@ <|@
tid d8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.longBitsToDouble(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 9]
stamp: f64! [4.9E-324 - 1.7976931348623157E308]
=== Inputs ===
value: j7 
=== Succesors ===
=== Usages ===
d10 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: j7  <|@  <|@
f <@~|@floating>@ <|@
tid d9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 14]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d10 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 17]
stamp: f64
=== Inputs ===
x: d8 
y: d9 
=== Succesors ===
=== Usages ===
d12 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: d8 y: d9  <|@  <|@
f <@~|@floating>@ <|@
tid d11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 18]
rawvalue: 0.289529654
stableDimension: 0
stamp: f64! [0.289529654]
stampKind: f64
value: double[0.289529654|0x3fd287a762c9bd93]
=== Inputs ===
=== Succesors ===
=== Usages ===
d12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d12 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 21]
stamp: f64
=== Inputs ===
x: d10 
y: d11 
=== Succesors ===
=== Usages ===
d14 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d10 y: d11  <|@  <|@
f <@~|@floating>@ <|@
tid d13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 22]
rawvalue: 0.176091259
stableDimension: 0
stamp: f64! [0.176091259]
stampKind: f64
value: double[0.176091259|0x3fc68a288b421b8c]
=== Inputs ===
=== Succesors ===
=== Usages ===
d14 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d14 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 25]
stamp: f64
=== Inputs ===
x: d12 
y: d13 
=== Succesors ===
=== Usages ===
d18 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d12 y: d13  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 d15 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@39bcec26
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 27]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
d17 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid d16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 28]
rawvalue: 0.301029995663981
stableDimension: 0
stamp: f64! [0.301029995663981]
stampKind: f64
value: double[0.301029995663981|0x3fd34413509f79fb]
=== Inputs ===
=== Succesors ===
=== Usages ===
d17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d17 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 31]
stamp: f64
=== Inputs ===
x: d15 
y: d16 
=== Succesors ===
=== Usages ===
d18 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d15 y: d16  <|@  <|@
f <@~|@floating>@ <|@
tid d18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 32]
stamp: f64
=== Inputs ===
x: d14 
y: d17 
=== Succesors ===
=== Usages ===
j19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d14 y: d17  <|@  <|@
f <@~|@floating>@ <|@
tid j19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:822) [bci: 37]
stamp: i64
=== Inputs ===
value: d18 
=== Succesors ===
=== Usages ===
j21 v70 v33 j43 v54 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d18  <|@  <|@
f <@~|@floating>@ <|@
tid j28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 60]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 66]
stamp: void
=== Inputs ===
x: j19 
y: j28 
=== Succesors ===
=== Usages ===
i86 v51 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j19 y: j28  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 140]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i58 i86 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 44]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 47]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j19 
y: j20 
=== Succesors ===
=== Usages ===
j23 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j19 y: j20  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 48]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
j23 v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j23 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 50]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j21 
y: i22 
=== Succesors ===
=== Usages ===
i24 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j21 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 51]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j23 
=== Succesors ===
=== Usages ===
i27 i83 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j23  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i24 
y: i26 
=== Succesors ===
=== Usages ===
v36 v40 j42 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i24 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 66]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i86 v36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i32 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i27 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
stamp: void
trueSuccessorProbability: 0.8012441897039807
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v37 #falseSuccessor: v38  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605392185613643661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:829) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid j67 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 154]
rawvalue: 9223372036854775807
stableDimension: 0
stamp: i64 [9223372036854775807] ⇊7fffffffffffffff ⇈7fffffffffffffff
stampKind: i64
value: long[9223372036854775807|0x7fffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
stamp: void
=== Inputs ===
x: j19 
y: j67 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j19 y: j67  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v70 
=== Succesors ===
trueSuccessor: v92 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v70 #trueSuccessor: v92 #falseSuccessor: v90  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22291
stableDimension: 0
stamp: i32 [-22291] ⇊00000000ffffa8ed ⇈00000000ffffa8ed
stampKind: i32
value: int[-22291|0xffffffffffffa8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4605392185613643661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 169]
stamp: i32 [-1 - 0]
=== Inputs ===
condition: v33 
trueValue: i32 
falseValue: i57 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v33 trueValue: i32 falseValue: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 177]
stamp: void
=== Inputs ===
result: i86 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i86 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4596328953036030412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i22 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i27 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v94 #falseSuccessor: v96  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4596328953036030412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid j43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j19 
y: j5 
=== Succesors ===
=== Usages ===
j45 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j19 y: j5  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 102]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j45 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j43 
y: j44 
=== Succesors ===
=== Usages ===
j47 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j43 y: j44  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
rawvalue: 1075
stableDimension: 0
stamp: i32 [1075] ⇊0000000000000433 ⇈0000000000000433
stampKind: i32
value: int[1075|0x433]
=== Inputs ===
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i82 
y: i24 
=== Succesors ===
=== Usages ===
j47 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i82 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j45 
y: i83 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j45 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
resultBits: 32
stamp: i32
=== Inputs ===
value: j47 
=== Succesors ===
=== Usages ===
v85 i58 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j47  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 117]
stamp: void
trueSuccessorProbability: 0.008440302444170916
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565379198982698098
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 146]
stamp: void
=== Inputs ===
result: i48 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i48 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4596268512597876067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 120]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid j42 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:826) [bci: 93]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j5 
y: i27 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j5 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
stamp: void
=== Inputs ===
x: j19 
y: j42 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j19 y: j42  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v100 #falseSuccessor: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22803
stableDimension: 0
stamp: i32 [-22803] ⇊00000000ffffa6ed ⇈00000000ffffa6ed
stampKind: i32
value: int[-22803|0xffffffffffffa6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4596268512597876067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 140]
stamp: i32
=== Inputs ===
x: i57 
y: i48 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i57 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 146]
stamp: void
=== Inputs ===
result: i58 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i58 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22547
stableDimension: 0
stamp: i32 [-22547] ⇊00000000ffffa7ed ⇈00000000ffffa7ed
stampKind: i32
value: int[-22547|0xffffffffffffa7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B2" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-22803 - -22291] ⇊00000000ffffa0ed ⇈00000000ffffafed
valueDescription: i32
=== Inputs ===
merge: v102 
values: i104 i110 i112 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v102 values: i104 i110 i112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v103 v109 v111 
=== Succesors ===
next: v108 
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v103 v109 v111 #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid a105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(long, int)>
duringCall: false
localsSize: 14
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 820
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: j1 - i2 - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: j1 - i2 - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i106 
speculation: a105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i106 speculation: a105  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid j1 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 j6 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 4]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j6 j42 j43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j6 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 7]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j1 
y: j5 
=== Succesors ===
=== Usages ===
j7 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j1 y: j5  <|@  <|@
f <@~|@floating>@ <|@
tid j4 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
rawvalue: 4607182418800017408
stableDimension: 0
stamp: i64 [4607182418800017408] ⇊3ff0000000000000 ⇈3ff0000000000000
stampKind: i64
value: long[4607182418800017408|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j7 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 8]
stamp: i64 [4607182418800017408 - 4611686018427387903] ⇊3ff0000000000000 ⇈3fffffffffffffff
=== Inputs ===
x: j6 
y: j4 
=== Succesors ===
=== Usages ===
d8 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j6 y: j4  <|@  <|@
f <@~|@floating>@ <|@
tid d8 <|@
result v6|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.longBitsToDouble(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 9]
stamp: f64! [4.9E-324 - 1.7976931348623157E308]
=== Inputs ===
value: j7 
=== Succesors ===
=== Usages ===
d10 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: j7  <|@  <|@
f <@~|@floating>@ <|@
tid d9 <|@
result double[1.5|0x3ff8000000000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 14]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d10 <|@
result v7|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 17]
stamp: f64
=== Inputs ===
x: d8 
y: d9 
=== Succesors ===
=== Usages ===
d12 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: d8 y: d9  <|@  <|@
f <@~|@floating>@ <|@
tid d11 <|@
result double[0.289529654|0x3fd287a762c9bd93] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 18]
rawvalue: 0.289529654
stableDimension: 0
stamp: f64! [0.289529654]
stampKind: f64
value: double[0.289529654|0x3fd287a762c9bd93]
=== Inputs ===
=== Succesors ===
=== Usages ===
d12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d12 <|@
result v9|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 21]
stamp: f64
=== Inputs ===
x: d10 
y: d11 
=== Succesors ===
=== Usages ===
d14 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d10 y: d11  <|@  <|@
f <@~|@floating>@ <|@
tid d13 <|@
result double[0.176091259|0x3fc68a288b421b8c] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 22]
rawvalue: 0.176091259
stableDimension: 0
stamp: f64! [0.176091259]
stampKind: f64
value: double[0.176091259|0x3fc68a288b421b8c]
=== Inputs ===
=== Succesors ===
=== Usages ===
d14 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d14 <|@
result v11|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 25]
stamp: f64
=== Inputs ===
x: d12 
y: d13 
=== Succesors ===
=== Usages ===
d18 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d12 y: d13  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 d15 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d15 <|@
result v13|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@39bcec26
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 27]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
d17 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid d16 <|@
result double[0.301029995663981|0x3fd34413509f79fb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 28]
rawvalue: 0.301029995663981
stableDimension: 0
stamp: f64! [0.301029995663981]
stampKind: f64
value: double[0.301029995663981|0x3fd34413509f79fb]
=== Inputs ===
=== Succesors ===
=== Usages ===
d17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d17 <|@
result v14|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 31]
stamp: f64
=== Inputs ===
x: d15 
y: d16 
=== Succesors ===
=== Usages ===
d18 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d15 y: d16  <|@  <|@
f <@~|@floating>@ <|@
tid d18 <|@
result v16|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 32]
stamp: f64
=== Inputs ===
x: d14 
y: d17 
=== Succesors ===
=== Usages ===
j19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d14 y: d17  <|@  <|@
f <@~|@floating>@ <|@
tid j19 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:822) [bci: 37]
stamp: i64
=== Inputs ===
value: d18 
=== Succesors ===
=== Usages ===
j21 v70 v33 j43 v54 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d18  <|@  <|@
f <@~|@floating>@ <|@
tid j28 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 60]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 66]
stamp: void
=== Inputs ===
x: j19 
y: j28 
=== Succesors ===
=== Usages ===
i86 v51 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j19 y: j28  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 140]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i58 i86 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 44]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 47]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j19 
y: j20 
=== Succesors ===
=== Usages ===
j23 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j19 y: j20  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result int[52|0x34] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 48]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
j23 v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j23 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 50]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j21 
y: i22 
=== Succesors ===
=== Usages ===
i24 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j21 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 51]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j23 
=== Succesors ===
=== Usages ===
i27 i83 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j23  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result int[-1023|0xfffffffffffffc01] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i24 
y: i26 
=== Succesors ===
=== Usages ===
v36 v40 j42 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i24 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 66]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i86 v36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i32 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i27 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
stamp: void
trueSuccessorProbability: 0.8012441897039807
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v37 #falseSuccessor: v38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e52914d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = AND (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v3|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = VMOVQ v5|QWORD nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v8|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v7|DOUBLE = VSUBSD (x: v6|DOUBLE, y: v8|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v10|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr   -1  <|@ instruction v9|DOUBLE = VMULSD (x: v7|DOUBLE, y: v10|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v12|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr   -1  <|@ instruction v11|DOUBLE = VADDSD (x: v9|DOUBLE, y: v12|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v13|DOUBLE = VCVTSI2SD v1|DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr   -1  <|@ instruction v14|DOUBLE = VMULSD (x: v13|DOUBLE, y: v15|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v16|DOUBLE = VADDSD (x: v11|DOUBLE, y: v14|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = VMOVQ v16|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = AND (x: v17|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHR v20|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV v21|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA [v22|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605392185613643661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:829) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid j67 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 154]
rawvalue: 9223372036854775807
stableDimension: 0
stamp: i64 [9223372036854775807] ⇊7fffffffffffffff ⇈7fffffffffffffff
stampKind: i64
value: long[9223372036854775807|0x7fffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
stamp: void
=== Inputs ===
x: j19 
y: j67 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j19 y: j67  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v70 
=== Succesors ===
trueSuccessor: v92 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v70 #trueSuccessor: v92 #falseSuccessor: v90  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result int[-22291|0xffffffffffffa8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22291
stableDimension: 0
stamp: i32 [-22291] ⇊00000000ffffa8ed ⇈00000000ffffa8ed
stampKind: i32
value: int[-22291|0xffffffffffffa8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22291|0xffffffffffffa8ed]] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4605392185613643661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 169]
stamp: i32 [-1 - 0]
=== Inputs ===
condition: v33 
trueValue: i32 
falseValue: i57 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v33 trueValue: i32 falseValue: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 177]
stamp: void
=== Inputs ===
result: i86 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i86 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: v26|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4596328953036030412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i22 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i27 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v94 #falseSuccessor: v96  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4596328953036030412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid j43 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j19 
y: j5 
=== Succesors ===
=== Usages ===
j45 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j19 y: j5  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 102]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j45 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j43 
y: j44 
=== Succesors ===
=== Usages ===
j47 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j43 y: j44  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result int[1075|0x433] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
rawvalue: 1075
stableDimension: 0
stamp: i32 [1075] ⇊0000000000000433 ⇈0000000000000433
stampKind: i32
value: int[1075|0x433]
=== Inputs ===
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i82 
y: i24 
=== Succesors ===
=== Usages ===
j47 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i82 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j45 
y: i83 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j45 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
resultBits: 32
stamp: i32
=== Inputs ===
value: j47 
=== Succesors ===
=== Usages ===
v85 i58 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j47  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 117]
stamp: void
trueSuccessorProbability: 0.008440302444170916
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND (x: v17|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = OR (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = SHR (x: v29|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOV v32|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565379198982698098
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 146]
stamp: void
=== Inputs ===
result: i48 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i48 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4596268512597876067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 120]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid j42 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:826) [bci: 93]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j5 
y: i27 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j5 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
stamp: void
=== Inputs ===
x: j19 
y: j42 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j19 y: j42  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v100 #falseSuccessor: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
result int[-22803|0xffffffffffffa6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22803
stableDimension: 0
stamp: i32 [-22803] ⇊00000000ffffa6ed ⇈00000000ffffa6ed
stampKind: i32
value: int[-22803|0xffffffffffffa6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22803|0xffffffffffffa6ed]] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4596268512597876067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 140]
stamp: i32
=== Inputs ===
x: i57 
y: i48 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i57 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 146]
stamp: void
=== Inputs ===
result: i58 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i58 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v35|DWORD, ~y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result int[-22547|0xffffffffffffa7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22547
stableDimension: 0
stamp: i32 [-22547] ⇊00000000ffffa7ed ⇈00000000ffffa7ed
stampKind: i32
value: int[-22547|0xffffffffffffa7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22547|0xffffffffffffa7ed]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B2" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i106 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-22803 - -22291] ⇊00000000ffffa0ed ⇈00000000ffffafed
valueDescription: i32
=== Inputs ===
merge: v102 
values: i104 i110 i112 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v102 values: i104 i110 i112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v103 v109 v111 
=== Succesors ===
next: v108 
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v103 v109 v111 #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid a105 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(long, int)>
duringCall: false
localsSize: 14
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 820
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: j1 - i2 - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: j1 - i2 - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i106 
speculation: a105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i106 speculation: a105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
locals: v0|QWORD - v1|DWORD - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e52914d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = AND (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v3|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = VMOVQ v5|QWORD nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v8|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v7|DOUBLE = VSUBSD (x: v6|DOUBLE, y: v8|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v10|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr   -1  <|@ instruction v9|DOUBLE = VMULSD (x: v7|DOUBLE, y: v10|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v12|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr   -1  <|@ instruction v11|DOUBLE = VADDSD (x: v9|DOUBLE, y: v12|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v13|DOUBLE = VCVTSI2SD v1|DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr   -1  <|@ instruction v14|DOUBLE = VMULSD (x: v13|DOUBLE, y: v15|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v16|DOUBLE = VADDSD (x: v11|DOUBLE, y: v14|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = VMOVQ v16|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = AND (x: v17|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHR v20|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV v21|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA [v22|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605392185613643661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4605392185613643661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: v26|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4596328953036030412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4596328953036030412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND (x: v17|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = OR (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = SHR (x: v29|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOV v32|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4596268512597876067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4596268512597876067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v35|DWORD, ~y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565379198982698098
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22291|0xffffffffffffa8ed]] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B2" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
locals: v0|QWORD - v1|DWORD - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22547|0xffffffffffffa7ed]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22803|0xffffffffffffa6ed]] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: ldc2_w        #52         // 4607182418800017408
     3: lload_0       
     4: ldc2_w        #55         // 4503599627370495
     7: land          
     8: lor           
     9: invokestatic  #39         // java.lang.Double.longBitsToDouble:(long)double
    12: dstore_3      
    13: dload_3       
    14: ldc2_w        #58         // 1.5
    17: dsub          
    18: ldc2_w        #60         // 0.289529654
    21: dmul          
    22: ldc2_w        #62         // 0.176091259
    25: dadd          
    26: iload_2       
    27: i2d           
    28: ldc2_w        #64         // 0.301029995663981
    31: dmul          
    32: dadd          
    33: dstore        5
    35: dload         5
    37: invokestatic  #40         // java.lang.Double.doubleToRawLongBits:(double)long
    40: lstore        7
    42: lload         7
    44: ldc2_w        #67         // 9218868437227405312
    47: land          
    48: bipush        52
    50: lshr          
    51: l2i           
    52: sipush        1023
    55: isub          
    56: istore        9
    58: lload         7
    60: ldc2_w        #69         // -9223372036854775808
    63: land          
    64: lconst_0      
    65: lcmp          
    66: ifeq          73
    69: iconst_1      
    70: goto          74
    73: iconst_0      
    74: istore        10
    76: iload         9
    78: iflt          147
    81: iload         9
    83: bipush        52
    85: if_icmpge     147
    88: ldc2_w        #55         // 4503599627370495
    91: iload         9
    93: lshr          
    94: lstore        11
    96: lload         7
    98: ldc2_w        #55         // 4503599627370495
   101: land          
   102: ldc2_w        #31         // 4503599627370496
   105: lor           
   106: bipush        52
   108: iload         9
   110: isub          
   111: lshr          
   112: l2i           
   113: istore        13
   115: iload         10
   117: ifeq          144
   120: lload         11
   122: lload         7
   124: land          
   125: lconst_0      
   126: lcmp          
   127: ifne          136
   130: iload         13
   132: ineg          
   133: goto          146
   136: iload         13
   138: ineg          
   139: iconst_1      
   140: isub          
   141: goto          146
   144: iload         13
   146: ireturn       
   147: iload         9
   149: ifge          178
   152: lload         7
   154: ldc2_w        #71         // 9223372036854775807
   157: land          
   158: lconst_0      
   159: lcmp          
   160: ifne          167
   163: iconst_0      
   164: goto          177
   167: iload         10
   169: ifeq          176
   172: iconst_m1     
   173: goto          177
   176: iconst_0      
   177: ireturn       
   178: dload         5
   180: d2i           
   181: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e52914d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   12  <|@ instruction rax|QWORD = AND (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   14  <|@ instruction rcx|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr   16  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction xmm0|DOUBLE = VMOVQ rax|QWORD nZ: XMM <|@ <|@
      nr   20  <|@ instruction xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   22  <|@ instruction xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr   24  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr   26  <|@ instruction xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr   28  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr   30  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr   32  <|@ instruction xmm1|DOUBLE = VCVTSI2SD rdx|DWORD <|@ <|@
      nr   34  <|@ instruction xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM <|@ <|@
      nr   38  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr   40  <|@ instruction r11|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr   42  <|@ instruction r8|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   44  <|@ instruction rax|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = AND (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD = SHR rax|QWORD y: 52 size: QWORD <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD <|@ <|@
      nr   54  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605392185613643661
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   62  <|@ instruction TEST (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4605392185613643661
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4596328953036030412
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction CMP r9|DWORD y: 52 size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4596328953036030412
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rax|QWORD = AND (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   88  <|@ instruction rbx|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   90  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rax|QWORD = SHR (x: rax|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4596268512597876067
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction TEST (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4596268512597876067
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  120  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565379198982698098
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction rax|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B2" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
locals: rsi|QWORD - rdx|DWORD - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22803|0xffffffffffffa6ed] // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: ldc2_w        #52         // 4607182418800017408
     3: lload_0       
     4: ldc2_w        #55         // 4503599627370495
     7: land          
     8: lor           
     9: invokestatic  #39         // java.lang.Double.longBitsToDouble:(long)double
    12: dstore_3      
    13: dload_3       
    14: ldc2_w        #58         // 1.5
    17: dsub          
    18: ldc2_w        #60         // 0.289529654
    21: dmul          
    22: ldc2_w        #62         // 0.176091259
    25: dadd          
    26: iload_2       
    27: i2d           
    28: ldc2_w        #64         // 0.301029995663981
    31: dmul          
    32: dadd          
    33: dstore        5
    35: dload         5
    37: invokestatic  #40         // java.lang.Double.doubleToRawLongBits:(double)long
    40: lstore        7
    42: lload         7
    44: ldc2_w        #67         // 9218868437227405312
    47: land          
    48: bipush        52
    50: lshr          
    51: l2i           
    52: sipush        1023
    55: isub          
    56: istore        9
    58: lload         7
    60: ldc2_w        #69         // -9223372036854775808
    63: land          
    64: lconst_0      
    65: lcmp          
    66: ifeq          73
    69: iconst_1      
    70: goto          74
    73: iconst_0      
    74: istore        10
    76: iload         9
    78: iflt          147
    81: iload         9
    83: bipush        52
    85: if_icmpge     147
    88: ldc2_w        #55         // 4503599627370495
    91: iload         9
    93: lshr          
    94: lstore        11
    96: lload         7
    98: ldc2_w        #55         // 4503599627370495
   101: land          
   102: ldc2_w        #31         // 4503599627370496
   105: lor           
   106: bipush        52
   108: iload         9
   110: isub          
   111: lshr          
   112: l2i           
   113: istore        13
   115: iload         10
   117: ifeq          144
   120: lload         11
   122: lload         7
   124: land          
   125: lconst_0      
   126: lcmp          
   127: ifne          136
   130: iload         13
   132: ineg          
   133: goto          146
   136: iload         13
   138: ineg          
   139: iconst_1      
   140: isub          
   141: goto          146
   144: iload         13
   146: ireturn       
   147: iload         9
   149: ifge          178
   152: lload         7
   154: ldc2_w        #71         // 9223372036854775807
   157: land          
   158: lconst_0      
   159: lcmp          
   160: ifne          167
   163: iconst_0      
   164: goto          177
   167: iload         10
   169: ifeq          176
   172: iconst_m1     
   173: goto          177
   176: iconst_0      
   177: ireturn       
   178: dload         5
   180: d2i           
   181: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e52914d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   12  <|@ instruction rax|QWORD = AND (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   14  <|@ instruction rcx|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr   16  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction xmm0|DOUBLE = VMOVQ rax|QWORD nZ: XMM <|@ <|@
      nr   20  <|@ instruction xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   22  <|@ instruction xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr   24  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr   26  <|@ instruction xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr   28  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr   30  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr   32  <|@ instruction xmm1|DOUBLE = VCVTSI2SD rdx|DWORD <|@ <|@
      nr   34  <|@ instruction xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM <|@ <|@
      nr   38  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr   40  <|@ instruction r11|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr   42  <|@ instruction r8|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   44  <|@ instruction rax|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = AND (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD = SHR rax|QWORD y: 52 size: QWORD <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD <|@ <|@
      nr   54  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605392185613643661
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   62  <|@ instruction TEST (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4605392185613643661
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr   74  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4596328953036030412
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction CMP r9|DWORD y: 52 size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4596328953036030412
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rax|QWORD = AND (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   88  <|@ instruction rbx|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   90  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rax|QWORD = SHR (x: rax|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4596268512597876067
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction TEST (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4596268512597876067
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  120  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4565379198982698098
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction rax|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B2" "B10" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
locals: rsi|QWORD - rdx|DWORD - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22803|0xffffffffffffa6ed] // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: ldc2_w        #52         // 4607182418800017408
     3: lload_0       
     4: ldc2_w        #55         // 4503599627370495
     7: land          
     8: lor           
     9: invokestatic  #39         // java.lang.Double.longBitsToDouble:(long)double
    12: dstore_3      
    13: dload_3       
    14: ldc2_w        #58         // 1.5
    17: dsub          
    18: ldc2_w        #60         // 0.289529654
    21: dmul          
    22: ldc2_w        #62         // 0.176091259
    25: dadd          
    26: iload_2       
    27: i2d           
    28: ldc2_w        #64         // 0.301029995663981
    31: dmul          
    32: dadd          
    33: dstore        5
    35: dload         5
    37: invokestatic  #40         // java.lang.Double.doubleToRawLongBits:(double)long
    40: lstore        7
    42: lload         7
    44: ldc2_w        #67         // 9218868437227405312
    47: land          
    48: bipush        52
    50: lshr          
    51: l2i           
    52: sipush        1023
    55: isub          
    56: istore        9
    58: lload         7
    60: ldc2_w        #69         // -9223372036854775808
    63: land          
    64: lconst_0      
    65: lcmp          
    66: ifeq          73
    69: iconst_1      
    70: goto          74
    73: iconst_0      
    74: istore        10
    76: iload         9
    78: iflt          147
    81: iload         9
    83: bipush        52
    85: if_icmpge     147
    88: ldc2_w        #55         // 4503599627370495
    91: iload         9
    93: lshr          
    94: lstore        11
    96: lload         7
    98: ldc2_w        #55         // 4503599627370495
   101: land          
   102: ldc2_w        #31         // 4503599627370496
   105: lor           
   106: bipush        52
   108: iload         9
   110: isub          
   111: lshr          
   112: l2i           
   113: istore        13
   115: iload         10
   117: ifeq          144
   120: lload         11
   122: lload         7
   124: land          
   125: lconst_0      
   126: lcmp          
   127: ifne          136
   130: iload         13
   132: ineg          
   133: goto          146
   136: iload         13
   138: ineg          
   139: iconst_1      
   140: isub          
   141: goto          146
   144: iload         13
   146: ireturn       
   147: iload         9
   149: ifge          178
   152: lload         7
   154: ldc2_w        #71         // 9223372036854775807
   157: land          
   158: lconst_0      
   159: lcmp          
   160: ifne          167
   163: iconst_0      
   164: goto          177
   167: iload         10
   169: ifeq          176
   172: iconst_m1     
   173: goto          177
   176: iconst_0      
   177: ireturn       
   178: dload         5
   180: d2i           
   181: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c241049baffffffffffff0f00488bc64923c248b9000000000000f03f480bc1c4e1f96ec0c4c17b100d00000000c5fb5cc1c4c17b100d00000000c5fb59c1c4c17b100d00000000c5fb58c1c5f157c9c5f32acac4c17b101500000000c5f359cac5fb58c1c4c1f97ec349b8000000000000008048b8000000000000f07f4923c348c1e8348bc8448d8901fcffff4585c90f8d3800000048b8ffffffffffffff7f4985c30f84970000004d85c3b800000000b9ffffffff0f44c88bc1488b6c24104883c418850500000000c5f877c34183f9340f8d82000000498bc34923c248bb0000000000001000480bc3bb330400002bd98bcb48d3e88bd84d85c30f8429000000418bc949d3ea4d85d30f8451000000b8ffffffff2bc3488b6c24104883c418850500000000c5f877c38bc3488b6c24104883c418850500000000c5f877c341baeda8ffff4589979c0200004d89a7a8020000e8000000009041baeda7ffffebe441baeda6ffffebdce80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e52914d slotKind: QWORD  <||@
  Comment 16 10 r10|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 26 12 rax|QWORD = AND (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 32 14 rcx|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000]  <||@
  Comment 42 16 rax|QWORD = OR (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 45 18 xmm0|DOUBLE = VMOVQ rax|QWORD nZ: XMM  <||@
  Comment 50 20 xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 50 {DataSection[0x0]}  <||@
  Comment 59 22 xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 63 24 xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93]  <||@
  Comment 63 {DataSection[0x8]}  <||@
  Comment 72 26 xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 76 28 xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c]  <||@
  Comment 76 {DataSection[0x10]}  <||@
  Comment 85 30 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 89 32 xmm1|DOUBLE = VCVTSI2SD rdx|DWORD  <||@
  Comment 97 34 xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb]  <||@
  Comment 97 {DataSection[0x18]}  <||@
  Comment 106 36 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM  <||@
  Comment 110 38 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 114 40 r11|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 119 42 r8|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 129 44 rax|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 139 46 rax|QWORD = AND (x: r11|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 142 48 rax|QWORD = SHR rax|QWORD y: 52 size: QWORD  <||@
  Comment 146 50 rcx|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 148 52 r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD  <||@
  Comment 155 54 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 158 56 BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 164 block B1 null  <||@
  Comment 164 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 164 60 rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff]  <||@
  Comment 174 62 TEST (x: rax|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 177 64 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 183 block B3 null  <||@
  Comment 183 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 68 TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 186 70 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 191 72 rcx|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 199 74 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 201 76 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 210 12  <||@
  Comment 220 block B4 null  <||@
  Comment 220 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 220 80 CMP r9|DWORD y: 52 size: DWORD  <||@
  Comment 224 82 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10  <||@
  Comment 230 block B5 null  <||@
  Comment 230 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 230 86 rax|QWORD = AND (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 236 88 rbx|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 246 90 rax|QWORD = OR (x: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 249 92 rbx|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 254 94 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 256 96 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 258 98 rax|QWORD = SHR (x: rax|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 261 100 rbx|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 263 102 TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 266 104 BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 272 block B7 null  <||@
  Comment 272 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 272 108 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 275 110 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 278 112 TEST (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 281 114 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 287 block B9 null  <||@
  Comment 287 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 118 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 292 120 rax|DWORD = SUB (x: rax|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 294 124 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 303 12  <||@
  Comment 313 block B6 null  <||@
  Comment 313 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 128 rax|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 315 130 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 324 12  <||@
  Comment 334 block B2 null  <||@
  Comment 334 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 334 -1 r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed]  <||@
  Comment 340 134 JUMP ~[] destination: B2 -> B11  <||@
  Comment 340 block B11 null  <||@
  Comment 340 144 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 340 146 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 347 148 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 354 150 DEOPT info [bci:0]  <||@
  Comment 354 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 359 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2          |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13 
     locals:  |rsi|QWORD  |-  |rdx|DWORD  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-    <||@
  Comment 360 block B10 null  <||@
  Comment 360 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 360 -1 r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed]  <||@
  Comment 366 138 JUMP ~[] destination: B10 -> B11  <||@
  Comment 368 block B8 null  <||@
  Comment 368 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 -1 r10|DWORD = MOVE input: int[-22803|0xffffffffffffa6ed]  <||@
  Comment 374 142 JUMP ~[] destination: B8 -> B11  <||@
  Comment 376 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 376 4  <||@
  Comment 382 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 382 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9442[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(long, int)]"
  method "HotSpotCompilation-9442[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(long, int)]"
  date 1527005213801
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106bfdd60 89842400c0feff4883ec1848896c241049baffffffffffff0f00488bc64923c248b9000000000000f03f480bc1c4e1f96ec0c4c17b100da5ffffffc5fb5cc1c4c17b100da0ffffffc5fb59c1c4c17b100d9bffffffc5fb58c1c5f157c9c5f32acac4c17b10158effffffc5f359cac5fb58c1c4c1f97ec349b8000000000000008048b8000000000000f07f4923c348c1e8348bc8448d8901fcffff4585c90f8d3800000048b8ffffffffffffff7f4985c30f84970000004d85c3b800000000b9ffffffff0f44c88bc1488b6c24104883c4188505ce11c9fdc5f877c34183f9340f8d82000000498bc34923c248bb0000000000001000480bc3bb330400002bd98bcb48d3e88bd84d85c30f8429000000418bc949d3ea4d85d30f8451000000b8ffffffff2bc3488b6c24104883c41885057111c9fdc5f877c38bc3488b6c24104883c41885055c11c9fdc5f877c341baeda8ffff4589979c0200004d89a7a8020000e83797c0ff9041baeda7ffffebe441baeda6ffffebdce843c7040090e81d96c0ff90f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD, rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e52914d slotKind: QWORD  <||@
  Comment 16 10 r10|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 26 12 rax|QWORD = AND (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 32 14 rcx|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000]  <||@
  Comment 42 16 rax|QWORD = OR (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 45 18 xmm0|DOUBLE = VMOVQ rax|QWORD nZ: XMM  <||@
  Comment 50 20 xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 50 {DataSection[0x0]}  <||@
  Comment 59 22 xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 63 24 xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93]  <||@
  Comment 63 {DataSection[0x8]}  <||@
  Comment 72 26 xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 76 28 xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c]  <||@
  Comment 76 {DataSection[0x10]}  <||@
  Comment 85 30 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 89 32 xmm1|DOUBLE = VCVTSI2SD rdx|DWORD  <||@
  Comment 97 34 xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb]  <||@
  Comment 97 {DataSection[0x18]}  <||@
  Comment 106 36 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM  <||@
  Comment 110 38 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 114 40 r11|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 119 42 r8|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 129 44 rax|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 139 46 rax|QWORD = AND (x: r11|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 142 48 rax|QWORD = SHR rax|QWORD y: 52 size: QWORD  <||@
  Comment 146 50 rcx|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 148 52 r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD  <||@
  Comment 155 54 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 158 56 BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 164 block B1 null  <||@
  Comment 164 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 164 60 rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff]  <||@
  Comment 174 62 TEST (x: rax|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 177 64 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 183 block B3 null  <||@
  Comment 183 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 68 TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 186 70 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 191 72 rcx|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 199 74 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 201 76 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 210 12  <||@
  Comment 220 block B4 null  <||@
  Comment 220 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 220 80 CMP r9|DWORD y: 52 size: DWORD  <||@
  Comment 224 82 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B10  <||@
  Comment 230 block B5 null  <||@
  Comment 230 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 230 86 rax|QWORD = AND (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 236 88 rbx|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 246 90 rax|QWORD = OR (x: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 249 92 rbx|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 254 94 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 256 96 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 258 98 rax|QWORD = SHR (x: rax|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 261 100 rbx|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 263 102 TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 266 104 BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 272 block B7 null  <||@
  Comment 272 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 272 108 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 275 110 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 278 112 TEST (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 281 114 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 287 block B9 null  <||@
  Comment 287 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 118 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 292 120 rax|DWORD = SUB (x: rax|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 294 124 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 303 12  <||@
  Comment 313 block B6 null  <||@
  Comment 313 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 128 rax|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 315 130 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 324 12  <||@
  Comment 334 block B2 null  <||@
  Comment 334 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 334 -1 r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed]  <||@
  Comment 340 134 JUMP ~[] destination: B2 -> B11  <||@
  Comment 340 block B11 null  <||@
  Comment 340 144 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 340 146 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 347 148 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 354 150 DEOPT info [bci:0]  <||@
  Comment 354 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 359 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2          |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13 
     locals:  |rsi|QWORD  |-  |rdx|DWORD  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-    <||@
  Comment 360 block B10 null  <||@
  Comment 360 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 360 -1 r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed]  <||@
  Comment 366 138 JUMP ~[] destination: B10 -> B11  <||@
  Comment 368 block B8 null  <||@
  Comment 368 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 -1 r10|DWORD = MOVE input: int[-22803|0xffffffffffffa6ed]  <||@
  Comment 374 142 JUMP ~[] destination: B8 -> B11  <||@
  Comment 376 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 376 4  <||@
  Comment 382 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 382 5  <||@
  HexCodeFile>>> <|@
end_nmethod
