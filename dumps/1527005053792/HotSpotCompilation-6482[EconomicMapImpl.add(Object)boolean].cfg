begin_compilation
  name " HotSpotCompilation-6482[org.graalvm.collections.EconomicMapImpl.add(Object)]"
  method "HotSpotCompilation-6482[org.graalvm.collections.EconomicMapImpl.add(Object)]"
  date 1527005171125
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1947 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1947  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v865 ?129 ?551 ?270 v1876 v971 ?707 v898 ?434 ?518 v1877 ?445 v906 v1878 v874 ?375 ?61 ?62 ?410 v816 v1881 v1885 ?69 v881 v913 ?256 j1436 j1543 v1950 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:407) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a110 v1304 a1350 v1330 ?3 v1312 a1337 v1322 a1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.add(Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 850
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a13 
=== Succesors ===
=== Usages ===
v1947 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a13  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?375 v881 v874 v1947 ?129 ?551 ?551 ?518 ?518 ?256 ?445 v806 v913 ?707 ?707 a831 ?61 ?61 ?62 ?445 v906 ?69 v343 v810 v816 ?270 ?129 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: a1844 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: a1844  <|@  <|@
f <@~|@floating>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1844 a1860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1844 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1876 
=== Succesors ===
next: v120 
=== Usages ===
v1046 
=== Predecessor ===
v1947 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1876 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1844 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1844  <|@  <|@
f <@~|@floating>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1654 j1843 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j781 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1704 j1697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1696 v1600 v1703 v1662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a831 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v832 v892 v1045 v1606 v1668 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i400 a1575 i1512 a1638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1442 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1441 v1547 v1557 v1611 v1618 v1673 v1680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
v402 j1437 j1509 j1515 j1544 j1554 j1608 j1615 j1670 j1677 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1440 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1901 j1530 v1913 v1915 v1921 v1922 v1930 v1931 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1430 v1496 v1694 v1702 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1402 a1575 a1638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 ?707 v557 i1511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1049 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1050 v1060 v1839 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1881 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1849 a1866 a1863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 i43 i694 i67 i703 i89 i338 i227 i337 i697 i277 i1290 i456 i398 i416 i455 v690 v544 v565 v631 v728 i655 v658 v704 i687 a1402 a1575 a1638 i1832 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.add(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 850
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?551 ?129 ?1283 ?1288 ?1287 ?707 ?61 ?1284 ?69 ?1285 ?518 ?1286 ?445 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
tid ?129 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - - - 
=== Succesors ===
=== Usages ===
?281 ?1281 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 v1528 i89 i255 a1469 v271 i655 i687 i697 ?270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1846 i1850 i1852 v860 v893 i1855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1845 a1851 a1869 a1853 v915 v967 a1856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.6490671046028922
=== Inputs ===
condition: v1046 
=== Succesors ===
trueSuccessor: v118 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
a1844 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1046 #trueSuccessor: v118 #falseSuccessor: v119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604021496286132480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
tid ?281 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 240
stackSize: 0
=== Inputs ===
outerFrameState: ?129 
values: - - 
=== Succesors ===
=== Usages ===
?256 ?375 ?270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?129 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
v118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608619363788113591
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i255 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v254 
values: i10 i277 i277 i277 
=== Succesors ===
=== Usages ===
?256 v258 i554 ?270 v20 i277 ?375 i456 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v254 values: i10 i277 i277 i277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.032248858132847
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v253 
=== Succesors ===
next: a1845 
=== Usages ===
i255 v260 v273 v278 v514 v607 v1146 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v253 #next: a1845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1845 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: i1846 
=== Usages ===
a815 v1879 
=== Predecessor ===
v254 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: i1846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1846 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
=== Succesors ===
next: v262 
=== Usages ===
v258 i709 
=== Predecessor ===
a1845 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1877 #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i1846 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i255 y: i1846  <|@  <|@
f <@~|@floating>@ <|@
tid a815 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1845 
=== Succesors ===
=== Usages ===
a710 v1880 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1845  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.5507111845837876
=== Inputs ===
condition: v258 
=== Succesors ===
trueSuccessor: v259 
falseSuccessor: v260 
=== Usages ===
=== Predecessor ===
i1846 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v258 #trueSuccessor: v259 #falseSuccessor: v260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604718268269789408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1847 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1847  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 245
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: a1 a2 i255 - 
=== Succesors ===
=== Usages ===
v1131 v1132 v1312 i1847 v1948 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a2 i255 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1879 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1845 
=== Succesors ===
=== Usages ===
i1847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1847 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?256 
guard: - 
address: v1879 
=== Succesors ===
next: v1147 
=== Usages ===
v790 
=== Predecessor ===
v259 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?256 guard: - address: v1879 #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid i456 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i255 
y: i9 
=== Succesors ===
=== Usages ===
i1289 v1880 v790 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i255 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i456 
y: i1847 
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i456 y: i1847  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v790 
=== Succesors ===
trueSuccessor: v1143 
falseSuccessor: v1146 
=== Usages ===
=== Predecessor ===
i1847 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v790 #trueSuccessor: v1143 #falseSuccessor: v1146  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604718268269789408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1848 
=== Usages ===
a1848 
=== Predecessor ===
v1147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1848  <|@  <|@
f <@~|@floating>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a815 
index: i456 
=== Succesors ===
=== Usages ===
a1848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a815 index: i456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1848 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1143 
address: v1880 
=== Succesors ===
next: v1948 
=== Usages ===
a799 v1948 
=== Predecessor ===
v1143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1143 address: v1880 #next: v1948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
object: a1848 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
a1848 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?256 object: a1848 #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid a799 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1848 
=== Succesors ===
=== Usages ===
v806 v810 v343 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1848  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a799 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a799  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v343 
=== Succesors ===
trueSuccessor: v344 
falseSuccessor: v345 
=== Usages ===
=== Predecessor ===
v1948 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v343 #trueSuccessor: v344 #falseSuccessor: v345  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589673442321614256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
v344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604092140562483242
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1849 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1849 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1881 
=== Succesors ===
next: v352 
=== Usages ===
a804 v807 v1050 v1052 
=== Predecessor ===
v345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1881 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1849 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1849  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i255 
y: i9 
=== Succesors ===
=== Usages ===
i255 i255 i255 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i255 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v350 
falseSuccessor: v351 
=== Usages ===
=== Predecessor ===
a1849 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v350 #falseSuccessor: v351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603930442492703314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?256 #next: v514  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v254 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580831559641381640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid a1051 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1052 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1849 
y: a1051 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1849 y: a1051  <|@  <|@
tid ?375 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: a1 a2 i255 - 
=== Succesors ===
=== Usages ===
?1280 ?1279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a2 i255 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v1052 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v355 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1052 #trueSuccessor: v361 #falseSuccessor: v355  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578516116599383858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i365 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i365  <|@  <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4f4f9b16
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a799 
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a799  <|@  <|@
tid ?1279 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?375 
values: - - - 
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?375 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i365 <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v806 
stateDuring: ?1279 
=== Succesors ===
next: v379 
=== Usages ===
i378 
=== Predecessor ===
v361 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v806 stateDuring: ?1279 #next: v379  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
i365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572622385448852924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1849 
y: a1049 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1849 y: a1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v1050 
=== Succesors ===
trueSuccessor: v356 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1050 #trueSuccessor: v356 #falseSuccessor: v362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533323799713755614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1132 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?256 #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v254 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572608310889856035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i370 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i370  <|@  <|@
f <@~|@floating>@ <|@
tid a804 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a1849 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1849  <|@  <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@78ff5290
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a804 a2 a799 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a804 a2 a799  <|@  <|@
tid ?1280 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?375 
values: - - - 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?375 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i370 <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v810 
stateDuring: ?1280 
=== Succesors ===
next: v380 
=== Usages ===
i378 
=== Predecessor ===
v362 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v810 stateDuring: ?1280 #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
i370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580828041001632418
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i378 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v376 
values: i365 i370 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v376 values: i365 i370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v379 v380 
=== Succesors ===
next: v276 
=== Usages ===
i378 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v379 v380 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i378 
y: i10 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i378 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9223242473295923
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v272 
falseSuccessor: v502 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v272 #falseSuccessor: v502  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580426393697807058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1130 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1130  <|@  <|@
tid ?270 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 1
=== Inputs ===
outerFrameState: ?281 
values: a1 a2 i255 - i10 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a2 i255 - i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?270 
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?270 #next: v278  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v254 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564069179760147717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v580  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589773854147570596
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v580 v582 
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v580 v582 #next: v273  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4589773854147570596
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v254 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v254 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i19 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i255 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.6967267137205493
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v21 #falseSuccessor: v22  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4587280578636921825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1850 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1850 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 42]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
=== Succesors ===
next: a1851 
=== Usages ===
i709 
=== Predecessor ===
v21 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1877 #next: a1851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1851 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v705 
=== Usages ===
a813 
=== Predecessor ===
i1850 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid a813 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1851 
=== Succesors ===
=== Usages ===
a710 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1851  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
a1851 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B109" 
    xhandlers
    flags 
    probability 4581855440143791822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v254 
=== Succesors ===
next: v1312 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v254 #next: v1312  <|@  <|@
f <@~|@floating>@ <|@
tid i1314 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -202523
stableDimension: 0
stamp: i32 [-202523] ⇊00000000fffce8e5 ⇈00000000fffce8e5
stampKind: i32
value: int[-202523|0xfffffffffffce8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
actionAndReason: i1314 
speculation: a13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1146 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?256 actionAndReason: i1314 speculation: a13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 4603513260051696782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:251) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v254 
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v254 #next: v708  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v260 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" "B108" 
    xhandlers
    flags 
    probability 4599993464945675776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i122 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i122  <|@  <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@36b98584
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findHash(Object)>
=== Inputs ===
arguments: a1 a2 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2  <|@  <|@
tid ?1281 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?129 
values: - - 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?129 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v816 
stateDuring: ?1281 
=== Succesors ===
next: v560 
=== Usages ===
v557 i554 i455 
=== Predecessor ===
v119 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v816 stateDuring: ?1281 #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i122 
y: i19 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i122 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.6967267137205493
=== Inputs ===
condition: v557 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
i122 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v557 #trueSuccessor: v558 #falseSuccessor: v559  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4597977216912232797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1852 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 42]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
=== Succesors ===
next: a1853 
=== Usages ===
i709 
=== Predecessor ===
v558 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1877 #next: a1853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1853 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v724 
=== Usages ===
a819 
=== Predecessor ===
i1852 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid a819 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1853 
=== Succesors ===
=== Usages ===
a710 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1853  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
a1853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B23" 
    successors "B25" "B29" 
    xhandlers
    flags 
    probability 4606160544057191587
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i709 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v706 
values: i1850 i1846 i1852 
=== Succesors ===
=== Usages ===
i521 i43 i521 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v706 values: i1850 i1846 i1852  <|@  <|@
f <@~|@floating>@ <|@
tid a710 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v706 
values: a813 a815 a819 
=== Succesors ===
=== Usages ===
v33 j1535 a520 v1889 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v706 values: a813 a815 a819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v705 v708 v724 
=== Succesors ===
next: v36 
=== Usages ===
i709 a710 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v705 v708 v724 #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a710 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a710  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 v435 v1828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v645 v423 v427 v1829 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1421 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1426 v1493 j1517 v1523 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1827 i449 i1838 v1425 a1402 i1826 i1836 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.15737516016132225
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v34 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594194787186546554
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1390 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1390 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1409 
=== Usages ===
v1896 v1897 
=== Predecessor ===
v34 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1409  <|@  <|@
f <@~|@floating>@ <|@
tid v1896 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1390 
index: - 
=== Succesors ===
=== Usages ===
j1409 v1411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1896 
=== Succesors ===
next: j1410 
=== Usages ===
j1684 j1415 v1932 
=== Predecessor ===
j1390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1896 #next: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1390 
index: - 
=== Succesors ===
=== Usages ===
j1410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1897 
=== Succesors ===
next: v1398 
=== Usages ===
v1395 
=== Predecessor ===
j1409 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1897 #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid j1683 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1684 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1684 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1409 
y: j1683 
=== Succesors ===
=== Usages ===
v1395 v1411 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1409 y: j1683  <|@  <|@
f <@~|@floating>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1410 
y: j1684 
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1410 y: j1684  <|@  <|@
f <@*|@fixed>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1395 
=== Succesors ===
trueSuccessor: v1396 
falseSuccessor: v1397 
=== Usages ===
=== Predecessor ===
j1410 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1395 #trueSuccessor: v1396 #falseSuccessor: v1397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4564077084525836204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1402 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1402  <|@  <|@
tid ?707 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - - - i19 
=== Succesors ===
=== Usages ===
a1402 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - - - i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1402 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?707 
arguments: v1388 i37 i9 
=== Succesors ===
next: j1403 
=== Usages ===
j1403 
=== Predecessor ===
v1396 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?707 arguments: v1388 i37 i9 #next: j1403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1403 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1402 
=== Succesors ===
next: v1416 
=== Usages ===
j1415 
=== Predecessor ===
a1402 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1402 #next: v1416  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1413 
=== Predecessor ===
j1403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594144519517586443
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1411 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1896 
value: j1684 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1407 
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1896 value: j1684 stateAfter: - lastLocationAccess: - #next: v1407  <|@  <|@
f <@~|@floating>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1409 
index: - 
=== Succesors ===
=== Usages ===
v1407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1409 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1932 
=== Succesors ===
next: v1414 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1932 #next: v1414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1413 
=== Predecessor ===
v1407 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594194787186546554
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1415 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1413 
values: j1409 j1403 
=== Succesors ===
=== Usages ===
v1900 v1899 a1212 v1898 v1933 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1413 values: j1409 j1403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1414 v1416 
=== Succesors ===
next: a1212 
=== Usages ===
j1415 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1414 v1416 #next: a1212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1212 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1415 
=== Succesors ===
next: v1425 
=== Usages ===
a1218 
=== Predecessor ===
v1413 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1415 #next: v1425  <|@  <|@
f <@~|@floating>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1415 
index: - 
=== Succesors ===
=== Usages ===
v1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1898 
value: i37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1426 
=== Usages ===
=== Predecessor ===
a1212 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1898 value: i37 stateAfter: - lastLocationAccess: - #next: v1426  <|@  <|@
f <@~|@floating>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1415 
index: - 
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1899 
value: j1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1430 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1899 value: j1421 stateAfter: - lastLocationAccess: - #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid v1900 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1415 
index: - 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1900 
value: v1688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1435 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1900 value: v1688 stateAfter: - lastLocationAccess: - #next: v1435  <|@  <|@
f <@~|@floating>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1415 
index: - 
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1415 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1933 
value: v1433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1218 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1933 value: v1433 stateAfter: - lastLocationAccess: - #next: a1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1218 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1212 
=== Succesors ===
next: v1219 
=== Usages ===
a914 a520 
=== Predecessor ===
v1435 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1212 #next: v1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
a1218 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v915  <|@  <|@
f <@~|@floating>@ <|@
tid a914 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n -
=== Inputs ===
value: a1218 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
value: a914 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1436 
=== Usages ===
=== Predecessor ===
v1219 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1878 value: a914 stateAfter: - lastLocationAccess: - #next: j1436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1441 
=== Usages ===
j1437 
=== Predecessor ===
v915 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1441  <|@  <|@
f <@~|@floating>@ <|@
tid j1437 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1436 
y: i401 
=== Succesors ===
=== Usages ===
v1901 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1436 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1437 
index: j1440 
=== Succesors ===
=== Usages ===
v1441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1437 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1901 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
j1436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1901 value: i1442 stateAfter: - lastLocationAccess: - #next: v574  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
v1441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" "B74" 
    xhandlers
    flags 
    probability 4604903852333188805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1854 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1854  <|@  <|@
f <@~|@floating>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a710 
index: - 
=== Succesors ===
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1854 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1889 
=== Succesors ===
next: v50 
=== Usages ===
v44 i398 i400 ?410 j1541 v1064 v435 v423 ?434 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1889 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 74]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i709 
y: i9 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i709 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i43 
y: i1854 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i43 y: i1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.06591371968154047
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
i1854 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v45 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid i400 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 536870911] ⇈000000001fffffff
=== Inputs ===
x: i1854 
y: i399 
=== Succesors ===
=== Usages ===
v402 i449 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1854 y: i399  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i400 
y: i401 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i400 y: i401  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7439668313467649
=== Inputs ===
condition: v402 
=== Succesors ===
trueSuccessor: v403 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v402 #trueSuccessor: v403 #falseSuccessor: v404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585440119366529660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
v403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4578421018245151209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
v404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" "B32" 
    successors "B34" "B72" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [8 - 536870911] ⇈000000001fffffff
valueDescription: i32
=== Inputs ===
merge: v407 
values: i37 i400 
=== Succesors ===
=== Usages ===
?411 i412 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v407 values: i37 i400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v406 v408 
=== Succesors ===
next: v1156 
=== Usages ===
i449 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v406 v408 #next: v1156  <|@  <|@
tid ?445 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 421
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - - - 
=== Succesors ===
=== Usages ===
?410 ?1282 ?434 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i398 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1854 
y: i9 
=== Succesors ===
=== Usages ===
?410 i412 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1854 y: i9  <|@  <|@
tid ?410 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 456
stackSize: 1
=== Inputs ===
outerFrameState: ?445 
values: a1 i1854 - - i398 
=== Succesors ===
=== Usages ===
?411 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?445 values: a1 i1854 - - i398  <|@  <|@
tid ?411 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?410 
values: - - i449 
=== Succesors ===
=== Usages ===
a1469 v1322 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?410 values: - - i449  <|@  <|@
f <@~|@floating>@ <|@
tid i412 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [8 - 1610612734] ⇈000000007fffffff
=== Inputs ===
x: i398 
y: i449 
=== Succesors ===
=== Usages ===
v414 i416 i1691 v1693 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i398 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i413 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 1073741824
stableDimension: 0
stamp: i32 [1073741824] ⇊0000000040000000 ⇈0000000040000000
stampKind: i32
value: int[1073741824|0x40000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i412 
y: i413 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i412 y: i413  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v414 
=== Succesors ===
trueSuccessor: v1153 
falseSuccessor: v1155 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v414 #trueSuccessor: v1153 #falseSuccessor: v1155  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i412 
y: i9 
=== Succesors ===
=== Usages ===
j1710 v427 v438 v1064 v1492 i1511 a1469 v1454 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i412 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i1854 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i416 y: i1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1064 
=== Succesors ===
trueSuccessor: v953 
falseSuccessor: v951 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1064 #trueSuccessor: v953 #falseSuccessor: v951  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1318 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1318  <|@  <|@
f <@~|@floating>@ <|@
tid i1319 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -244577
stableDimension: 0
stamp: i32 [-244577] ⇊00000000fffc449f ⇈00000000fffc449f
stampKind: i32
value: int[-244577|0xfffffffffffc449f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
v953 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B40" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1448 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1448 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1489 
=== Usages ===
v1902 v1903 
=== Predecessor ===
v951 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1902 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1448 
index: - 
=== Succesors ===
=== Usages ===
j1489 v1491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1902 
=== Succesors ===
next: j1490 
=== Usages ===
j1452 v1904 v1905 a1468 v1910 v1906 v1907 v1908 v1909 
=== Predecessor ===
j1448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1902 #next: j1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1903 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1448 
index: - 
=== Succesors ===
=== Usages ===
j1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1903 
=== Succesors ===
next: v1457 
=== Usages ===
v1458 
=== Predecessor ===
j1489 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1903 #next: v1457  <|@  <|@
f <@~|@floating>@ <|@
tid i1453 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1454 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i1453 
=== Succesors ===
=== Usages ===
v1457 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i416 y: i1453  <|@  <|@
f <@*|@fixed>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1454 
=== Succesors ===
trueSuccessor: v1456 
falseSuccessor: v1455 
=== Usages ===
=== Predecessor ===
j1490 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1454 #trueSuccessor: v1456 #falseSuccessor: v1455  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4586547353737878135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1464 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1464  <|@  <|@
f <@~|@floating>@ <|@
tid i1690 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1691 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i412 
y: i1690 
=== Succesors ===
=== Usages ===
i1477 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i412 y: i1690  <|@  <|@
f <@~|@floating>@ <|@
tid i1476 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1477 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i1691 
y: i1476 
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1691 y: i1476  <|@  <|@
f <@~|@floating>@ <|@
tid i1446 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1447 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1477 
y: i1446 
=== Succesors ===
=== Usages ===
j1451 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1477 y: i1446  <|@  <|@
f <@~|@floating>@ <|@
tid j1451 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1447 
=== Succesors ===
=== Usages ===
j1452 v1906 v1907 v1908 v1909 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1447  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
x: j1451 
y: j1489 
=== Succesors ===
=== Usages ===
v1458 v1491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1451 y: j1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1490 
y: j1452 
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1490 y: j1452  <|@  <|@
f <@*|@fixed>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1458 
=== Succesors ===
trueSuccessor: v1463 
falseSuccessor: v1462 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1458 #trueSuccessor: v1463 #falseSuccessor: v1462  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4556810385502868107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1461 
=== Usages ===
=== Predecessor ===
v1464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1461  <|@  <|@
f <@*|@fixed>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1460 
=== Predecessor ===
v1463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586483488410857298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v1464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1902 
value: j1452 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1479 
=== Usages ===
=== Predecessor ===
v1462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1902 value: j1452 stateAfter: - lastLocationAccess: - #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid v1906 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1451 
index: j1489 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1451 index: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: v1906 
=== Succesors ===
next: v1481 
=== Usages ===
=== Predecessor ===
v1491 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1906 #next: v1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1451 
index: j1489 
=== Succesors ===
=== Usages ===
v1481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1451 index: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: v1907 
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1907 #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1451 
index: j1489 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1451 index: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: v1908 
=== Succesors ===
next: v1487 
=== Usages ===
=== Predecessor ===
v1481 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1908 #next: v1487  <|@  <|@
f <@~|@floating>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1451 
index: j1489 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1451 index: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: v1909 
=== Succesors ===
next: v1492 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1909 #next: v1492  <|@  <|@
f <@~|@floating>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1489 
index: - 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1489 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1904 
value: i416 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1904 value: i416 stateAfter: - lastLocationAccess: - #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1489 
index: - 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1489 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1905 
value: j1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1496 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1905 value: j1421 stateAfter: - lastLocationAccess: - #next: v1496  <|@  <|@
f <@~|@floating>@ <|@
tid v1910 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1489 
index: - 
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1489 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1910 
value: v1688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1467 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1910 value: v1688 stateAfter: - lastLocationAccess: - #next: v1467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1468 
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1489 
=== Succesors ===
next: v1470 
=== Usages ===
a1473 
=== Predecessor ===
v1467 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1489 #next: v1470  <|@  <|@
f <@*|@fixed>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
a1468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4572326940111090679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1459 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1459  <|@  <|@
f <@*|@fixed>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1460 
=== Predecessor ===
v1455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572837862727257376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1459 v1461 
=== Succesors ===
next: a1469 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1459 v1461 #next: a1469  <|@  <|@
f <@~|@floating>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1469 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?411 
arguments: v744 i416 i10 
=== Succesors ===
next: v1472 
=== Usages ===
a1473 
=== Predecessor ===
v1460 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?411 arguments: v744 i416 i10 #next: v1472  <|@  <|@
f <@*|@fixed>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
a1469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1471 
values: a1468 a1469 
=== Succesors ===
=== Usages ===
v1895 a1297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1471 values: a1468 a1469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1470 v1472 
=== Succesors ===
next: v1767 
=== Usages ===
a1473 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1470 v1472 #next: v1767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1721 
=== Usages ===
j1769 
=== Predecessor ===
v1471 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1721  <|@  <|@
f <@~|@floating>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1473 
index: - 
=== Succesors ===
=== Usages ===
j1769 j1510 j1508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1473 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1769 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1767 
address: v1895 
=== Succesors ===
=== Usages ===
v1940 v1941 v1942 v1943 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1767 address: v1895  <|@  <|@
f <@~|@floating>@ <|@
tid j1710 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i416 
=== Succesors ===
=== Usages ===
j1810 j1797 j1803 j1807 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i416  <|@  <|@
f <@~|@floating>@ <|@
tid j1796 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1797 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1797 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483638] ⇈fffffffffffffffe
=== Inputs ===
x: j1710 
y: j1796 
=== Succesors ===
=== Usages ===
v1800 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1710 y: j1796  <|@  <|@
f <@~|@floating>@ <|@
tid j1428 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1795 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1210 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
v1767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B71" 
    successors "B44" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596264167737295094
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1790 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1722 
values: j1210 j1795 
=== Succesors ===
=== Usages ===
v1943 j1795 v1942 j1946 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1722 values: j1210 j1795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1721 
=== Succesors ===
next: v1821 
=== Usages ===
j1790 v1725 v1726 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1721 #next: v1821  <|@  <|@
f <@~|@floating>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1769 
index: j1790 
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: j1790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1943 
value: v1822 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1728 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1943 value: v1822 stateAfter: - lastLocationAccess: - #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid j1795 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1790 
y: j1428 
=== Succesors ===
=== Usages ===
v1804 j1790 v1800 j1777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1790 y: j1428  <|@  <|@
f <@~|@floating>@ <|@
tid v1800 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1797 
y: j1795 
=== Succesors ===
=== Usages ===
v1728 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1797 y: j1795  <|@  <|@
f <@*|@fixed>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1800 
=== Succesors ===
trueSuccessor: v1725 
falseSuccessor: v1727 
=== Usages ===
=== Predecessor ===
v1821 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1800 #trueSuccessor: v1725 #falseSuccessor: v1727  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1722 
=== Succesors ===
next: v1749 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1722 #next: v1749  <|@  <|@
f <@~|@floating>@ <|@
tid j1802 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1803 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483642] ⇈fffffffffffffffe
=== Inputs ===
x: j1710 
y: j1802 
=== Succesors ===
=== Usages ===
v1804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1710 y: j1802  <|@  <|@
f <@~|@floating>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1803 
y: j1795 
=== Succesors ===
=== Usages ===
v1749 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1803 y: j1795  <|@  <|@
f <@*|@fixed>@ <|@
tid v1749 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1804 
=== Succesors ===
trueSuccessor: v1748 
falseSuccessor: v1747 
=== Usages ===
=== Predecessor ===
v1725 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1804 #trueSuccessor: v1748 #falseSuccessor: v1747  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4578249769227813110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1752 
=== Usages ===
=== Predecessor ===
v1749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1741 
=== Predecessor ===
v1748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1820 
=== Usages ===
=== Predecessor ===
v1749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1820  <|@  <|@
f <@~|@floating>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times4
stamp: void*
=== Inputs ===
base: j1769 
index: j1790 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: j1790  <|@  <|@
f <@~|@floating>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1942 
value: v1825 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1740 
=== Usages ===
=== Predecessor ===
v1747 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1942 value: v1825 stateAfter: - lastLocationAccess: - #next: v1740  <|@  <|@
f <@~|@floating>@ <|@
tid j1945 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 12
stableDimension: 0
stamp: i64 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1946 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1946 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1790 
y: j1945 
=== Succesors ===
=== Usages ===
j1777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1790 y: j1945  <|@  <|@
f <@*|@fixed>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1741 
=== Predecessor ===
v1820 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1777 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1741 
values: j1946 j1795 
=== Succesors ===
=== Usages ===
v1941 j1783 j1770 v1808 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1741 values: j1946 j1795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1740 v1752 
=== Succesors ===
next: v1755 
=== Usages ===
j1777 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1740 v1752 #next: v1755  <|@  <|@
f <@~|@floating>@ <|@
tid j1806 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1807 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483644] ⇈fffffffffffffffe
=== Inputs ===
x: j1710 
y: j1806 
=== Succesors ===
=== Usages ===
v1808 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1710 y: j1806  <|@  <|@
f <@~|@floating>@ <|@
tid v1808 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1807 
y: j1777 
=== Succesors ===
=== Usages ===
v1755 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1807 y: j1777  <|@  <|@
f <@*|@fixed>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1808 
=== Succesors ===
trueSuccessor: v1754 
falseSuccessor: v1753 
=== Usages ===
=== Predecessor ===
v1741 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1808 #trueSuccessor: v1754 #falseSuccessor: v1753  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4578249769227813110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1758 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1758  <|@  <|@
f <@*|@fixed>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1744 
=== Predecessor ===
v1754 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1818 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1818  <|@  <|@
f <@~|@floating>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1769 
index: j1777 
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: j1777  <|@  <|@
f <@~|@floating>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1941 
value: v1824 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1743 
=== Usages ===
=== Predecessor ===
v1753 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1941 value: v1824 stateAfter: - lastLocationAccess: - #next: v1743  <|@  <|@
f <@~|@floating>@ <|@
tid j1782 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1783 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1783 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1777 
y: j1782 
=== Succesors ===
=== Usages ===
j1770 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1777 y: j1782  <|@  <|@
f <@*|@fixed>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1744 
=== Predecessor ===
v1818 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1770 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1744 
values: j1783 j1777 
=== Succesors ===
=== Usages ===
v1940 v1811 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1744 values: j1783 j1777  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1743 v1758 
=== Succesors ===
next: v1761 
=== Usages ===
j1770 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1743 v1758 #next: v1761  <|@  <|@
f <@~|@floating>@ <|@
tid j1521 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1522 j1810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1810 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j1710 
y: j1521 
=== Succesors ===
=== Usages ===
v1811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1710 y: j1521  <|@  <|@
f <@~|@floating>@ <|@
tid v1811 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1810 
y: j1770 
=== Succesors ===
=== Usages ===
v1761 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1810 y: j1770  <|@  <|@
f <@*|@fixed>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1811 
=== Succesors ===
trueSuccessor: v1760 
falseSuccessor: v1759 
=== Usages ===
=== Predecessor ===
v1744 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1811 #trueSuccessor: v1760 #falseSuccessor: v1759  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4578249769227813110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1764 
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1764  <|@  <|@
f <@*|@fixed>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
v1760 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1816 
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1816  <|@  <|@
f <@~|@floating>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1769 
index: j1770 
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid a1823 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1940 
value: a1823 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1746 
=== Usages ===
=== Predecessor ===
v1759 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1940 value: a1823 stateAfter: - lastLocationAccess: - #next: v1746  <|@  <|@
f <@*|@fixed>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
v1816 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1746 v1764 
=== Succesors ===
next: v1507 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1746 v1764 #next: v1507  <|@  <|@
f <@~|@floating>@ <|@
tid i1692 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1693 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
x: i412 
y: i1692 
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i412 y: i1692  <|@  <|@
f <@*|@fixed>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1693 
=== Succesors ===
trueSuccessor: v1505 
falseSuccessor: v1506 
=== Usages ===
=== Predecessor ===
v1734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1693 #trueSuccessor: v1505 #falseSuccessor: v1506  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4582753368855183606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1532 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1532  <|@  <|@
f <@*|@fixed>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
v1505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4582753368855183606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1508 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1895 
=== Succesors ===
next: j1510 
=== Usages ===
j1509 
=== Predecessor ===
v1506 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1895 #next: j1510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1895 
=== Succesors ===
next: v1518 
=== Usages ===
j1514 
=== Predecessor ===
j1508 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1895 #next: v1518  <|@  <|@
f <@~|@floating>@ <|@
tid i1511 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i416 
y: i19 
=== Succesors ===
=== Usages ===
i1512 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i416 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i1512 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈00000000fffffffc
=== Inputs ===
x: i1511 
y: i399 
=== Succesors ===
=== Usages ===
j1513 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1511 y: i399  <|@  <|@
f <@~|@floating>@ <|@
tid j1513 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
resultBits: 64
stamp: i64 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈fffffffffffffffc
=== Inputs ===
value: i1512 
=== Succesors ===
=== Usages ===
j1514 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1512  <|@  <|@
f <@~|@floating>@ <|@
tid j1514 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
x: j1510 
y: j1513 
=== Succesors ===
=== Usages ===
j1515 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1510 y: j1513  <|@  <|@
f <@~|@floating>@ <|@
tid j1515 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1514 
y: i401 
=== Succesors ===
=== Usages ===
j1516 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1514 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid j1509 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1508 
y: i401 
=== Succesors ===
=== Usages ===
j1516 j1530 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1508 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid j1516 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j1515 
y: j1509 
=== Succesors ===
=== Usages ===
j1517 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1515 y: j1509  <|@  <|@
f <@~|@floating>@ <|@
tid j1517 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j1516 
y: j1421 
=== Succesors ===
=== Usages ===
j1520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1516 y: j1421  <|@  <|@
f <@*|@fixed>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
j1510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B70" 
    successors "B57" "B70" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4587256968482554102
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1519 
values: j1517 j1522 
=== Succesors ===
=== Usages ===
j1522 v1523 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1519 values: j1517 j1522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1518 
=== Succesors ===
next: v1526 
=== Usages ===
j1520 v1524 v1529 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1518 #next: v1526  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1520 
y: j1421 
=== Succesors ===
=== Usages ===
v1526 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1520 y: j1421  <|@  <|@
f <@*|@fixed>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1523 
=== Succesors ===
trueSuccessor: v1524 
falseSuccessor: v1525 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1523 #trueSuccessor: v1524 #falseSuccessor: v1525  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4582753368855183606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1519 
=== Succesors ===
next: v1533 
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1519 #next: v1533  <|@  <|@
f <@*|@fixed>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
v1524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1532 v1533 
=== Succesors ===
next: a1297 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1532 v1533 #next: a1297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1473 
=== Succesors ===
next: j1535 
=== Usages ===
j1539 ?434 a966 
=== Predecessor ===
v1531 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1473 #next: j1535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
object: a710 
=== Succesors ===
next: j1539 
=== Usages ===
v1911 
=== Predecessor ===
a1297 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a710 #next: j1539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
object: a1297 
=== Succesors ===
next: v1542 
=== Usages ===
v1912 
=== Predecessor ===
j1535 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1297 #next: v1542  <|@  <|@
f <@~|@floating>@ <|@
tid v1911 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1535 
index: - 
=== Succesors ===
=== Usages ===
v1542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1535 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1912 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1541 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1854 
=== Succesors ===
=== Usages ===
v1542 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1911 v1912 j1541 
=== Succesors ===
next: v967 
=== Usages ===
=== Predecessor ===
j1539 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1911 v1912 j1541 #next: v967  <|@  <|@
f <@~|@floating>@ <|@
tid a966 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n! -
=== Inputs ===
value: a1297 
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
value: a966 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1543 
=== Usages ===
=== Predecessor ===
v1542 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1878 value: a966 stateAfter: - lastLocationAccess: - #next: j1543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1547 
=== Usages ===
j1544 
=== Predecessor ===
v967 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1547  <|@  <|@
f <@~|@floating>@ <|@
tid j1544 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1543 
y: i401 
=== Succesors ===
=== Usages ===
v1913 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1543 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1544 
index: j1440 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1544 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1913 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
j1543 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1913 value: i1442 stateAfter: - lastLocationAccess: - #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1854 
y: i212 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1854 y: i212  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9908160945669471
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v424 
falseSuccessor: v425 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v424 #falseSuccessor: v425  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4587191798135464061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i212 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i416 y: i212  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9909296705313714
=== Inputs ===
condition: v427 
=== Succesors ===
trueSuccessor: v432 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v427 #trueSuccessor: v432 #falseSuccessor: v431  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 4587128024856683675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v432 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 4556798603328090426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 86]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v441  <|@  <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5820dae
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1282 <|@
d <@d|@=== Debug Properties ===
bci: 87
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 466
stackSize: 0
=== Inputs ===
outerFrameState: ?445 
values: - - - - 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?445 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
bci: 87
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v971 
stateDuring: ?1282 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v971 stateDuring: ?1282 #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 4556977428071726174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B60" 
    successors "B64" "B68" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v428 v430 
=== Succesors ===
next: v1160 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v428 v430 #next: v1160  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1854 
y: i222 
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1854 y: i222  <|@  <|@
f <@*|@fixed>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v435 
=== Succesors ===
trueSuccessor: v1157 
falseSuccessor: v1159 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v435 #trueSuccessor: v1157 #falseSuccessor: v1159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B67" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1164 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1164  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 131073
stableDimension: 0
stamp: i32 [131073] ⇊0000000000020001 ⇈0000000000020001
stampKind: i32
value: int[131073|0x20001]
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i437 
=== Succesors ===
=== Usages ===
v1164 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i416 y: i437  <|@  <|@
f <@*|@fixed>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v438 
=== Succesors ===
trueSuccessor: v1161 
falseSuccessor: v1163 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v438 #trueSuccessor: v1161 #falseSuccessor: v1163  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v1161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B61" 
    successors "B75" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v447 v448 
=== Succesors ===
next: i1855 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v447 v448 #next: i1855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:425) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
=== Succesors ===
next: a1856 
=== Usages ===
i521 
=== Predecessor ===
v446 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1877 #next: a1856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v516 
=== Usages ===
a970 
=== Predecessor ===
i1855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid a970 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1856 
=== Succesors ===
=== Usages ===
a520 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
a1856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1331 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1331  <|@  <|@
f <@~|@floating>@ <|@
tid i1332 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249107
stableDimension: 0
stamp: i32 [-249107] ⇊00000000fffc32ed ⇈00000000fffc32ed
stampKind: i32
value: int[-249107|0xfffffffffffc32ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v1163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1326 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1326  <|@  <|@
f <@~|@floating>@ <|@
tid i1327 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248851
stableDimension: 0
stamp: i32 [-248851] ⇊00000000fffc33ed ⇈00000000fffc33ed
stampKind: i32
value: int[-248851|0xfffffffffffc33ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v1159 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1328 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-249107 - -248851] ⇊00000000fffc32ed ⇈00000000fffc33ed
valueDescription: i32
=== Inputs ===
merge: v1325 
values: i1327 i1332 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1325 values: i1327 i1332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1326 v1331 
=== Succesors ===
next: v1330 
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1326 v1331 #next: v1330  <|@  <|@
tid ?434 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 463
stackSize: 0
=== Inputs ===
outerFrameState: ?445 
values: a1 i1854 - a1297 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?445 values: a1 i1854 - a1297  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?434 
actionAndReason: i1328 
speculation: a13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?434 actionAndReason: i1328 speculation: a13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B56" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582753368855183606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1528 
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1528  <|@  <|@
f <@~|@floating>@ <|@
tid j1522 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
x: j1520 
y: j1521 
=== Succesors ===
=== Usages ===
j1520 j1527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1520 y: j1521  <|@  <|@
f <@~|@floating>@ <|@
tid j1530 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j1509 
y: j1440 
=== Succesors ===
=== Usages ===
j1527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1509 y: j1440  <|@  <|@
f <@~|@floating>@ <|@
tid j1527 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
x: j1522 
y: j1530 
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1522 y: j1530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: j1527 
value: i10 
=== Succesors ===
next: v1529 
=== Usages ===
=== Predecessor ===
v1525 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j1527 value: i10 #next: v1529  <|@  <|@
f <@*|@fixed>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v1519 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1519  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594490130875605176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1726  <|@  <|@
f <@*|@fixed>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1722 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1727 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1722  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1323  <|@  <|@
f <@~|@floating>@ <|@
tid i1324 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235539
stableDimension: 0
stamp: i32 [-235539] ⇊00000000fffc67ed ⇈00000000fffc67ed
stampKind: i32
value: int[-235539|0xfffffffffffc67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
v1155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B35" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1320 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-244577 - -235539] ⇊00000000fffc448d ⇈00000000fffc67ff
valueDescription: i32
=== Inputs ===
merge: v1317 
values: i1319 i1324 
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1317 values: i1319 i1324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1318 v1323 
=== Succesors ===
next: v1322 
=== Usages ===
i1320 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1318 v1323 #next: v1322  <|@  <|@
f <@*|@fixed>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?411 
actionAndReason: i1320 
speculation: a13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1317 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?411 actionAndReason: i1320 speculation: a13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B75" 
    xhandlers
    flags 
    probability 4604460343117766326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B66" "B74" "B28" 
    successors "B76" "B106" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a520 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v517 
values: a970 a710 a1218 
=== Succesors ===
=== Usages ===
v1888 v1882 v1914 v1883 v1887 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v517 values: a970 a710 a1218  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v517 
values: i1855 i709 i709 
=== Succesors ===
=== Usages ===
i337 ?61 ?62 ?518 v906 ?69 v913 v874 v881 i67 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v517 values: i1855 i709 i709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v516 v519 v574 
=== Succesors ===
next: v1857 
=== Usages ===
a520 i521 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v516 v519 v574 #next: v1857  <|@  <|@
tid ?518 <|@
d <@d|@=== Debug Properties ===
bci: 116
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - i521 - 
=== Succesors ===
=== Usages ===
v1338 v1857 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - i521 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a520 
index: - 
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?518 
guard: - 
address: v1914 
=== Succesors ===
next: v1172 
=== Usages ===
v1694 
=== Predecessor ===
v517 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?518 guard: - address: v1914 #next: v1172  <|@  <|@
f <@~|@floating>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1857 
y: v1688 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1857 y: v1688  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1694 
=== Succesors ===
trueSuccessor: v1169 
falseSuccessor: v1171 
=== Usages ===
=== Predecessor ===
v1857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1694 #trueSuccessor: v1169 #falseSuccessor: v1171  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B105" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1858 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1858  <|@  <|@
f <@~|@floating>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a520 
index: - 
=== Succesors ===
=== Usages ===
i1858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1887 
=== Succesors ===
next: v1176 
=== Usages ===
v824 v700 v645 v885 v1828 v1829 
=== Predecessor ===
v1169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1887 #next: v1176  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i521 
y: i9 
=== Succesors ===
=== Usages ===
i338 v1882 v824 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i521 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i1858 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i337 y: i1858  <|@  <|@
f <@*|@fixed>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v824 
=== Succesors ===
trueSuccessor: v1173 
falseSuccessor: v1175 
=== Usages ===
=== Predecessor ===
i1858 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v824 #trueSuccessor: v1173 #falseSuccessor: v1175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B104" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1180 
=== Usages ===
v832 
=== Predecessor ===
v1176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1180  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i337 
y: i9 
=== Succesors ===
=== Usages ===
v885 v1888 v1883 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i337 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i338 
y: i1858 
=== Succesors ===
=== Usages ===
v1180 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i338 y: i1858  <|@  <|@
f <@*|@fixed>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v885 
=== Succesors ===
trueSuccessor: v1177 
falseSuccessor: v1179 
=== Usages ===
=== Predecessor ===
v1173 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v885 #trueSuccessor: v1177 #falseSuccessor: v1179  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v832 
=== Usages ===
v859 a1859 v892 
=== Predecessor ===
v1180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a520 
index: i337 
=== Succesors ===
=== Usages ===
v832 j1553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: i337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1173 
address: v1882 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1553 
=== Usages ===
=== Predecessor ===
v1177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1173 address: v1882 value: a831 stateAfter: - lastLocationAccess: - #next: j1553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1882 
=== Succesors ===
next: v1557 
=== Usages ===
j1554 
=== Predecessor ===
v832 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1882 #next: v1557  <|@  <|@
f <@~|@floating>@ <|@
tid j1554 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1553 
y: i401 
=== Succesors ===
=== Usages ===
v1915 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1553 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1554 
index: j1440 
=== Succesors ===
=== Usages ===
v1557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1554 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1915 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1859 
=== Usages ===
=== Predecessor ===
j1553 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1915 value: i1442 stateAfter: - lastLocationAccess: - #next: a1859  <|@  <|@
f <@~|@floating>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a520 
index: i338 
=== Succesors ===
=== Usages ===
a1859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: i338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1177 
address: v1883 
=== Succesors ===
next: a1860 
=== Usages ===
v1916 v843 v1884 
=== Predecessor ===
v1557 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1177 address: v1883 #next: a1860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 141]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1876 
=== Succesors ===
next: v1224 
=== Usages ===
v900 v1886 v1949 
=== Predecessor ===
a1859 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1876 #next: v1224  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1860 
=== Succesors ===
=== Usages ===
v475 v76 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1860  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1859 
=== Succesors ===
=== Usages ===
v1224 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1859  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 136]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i521 
y: i9 
=== Succesors ===
=== Usages ===
v860 i693 v621 v893 i1833 v1835 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i521 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a520 
index: i338 
=== Succesors ===
=== Usages ===
v892 v859 j1607 j1614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: i338  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:450) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1826 i1838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v843 
=== Succesors ===
trueSuccessor: v1223 
falseSuccessor: v1222 
=== Usages ===
=== Predecessor ===
a1860 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v843 #trueSuccessor: v1223 #falseSuccessor: v1222  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B94" 
    xhandlers
    flags 
    probability 4591052680272697064
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1232 
=== Usages ===
=== Predecessor ===
v1224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1369 
=== Predecessor ===
v1223 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B93" 
    xhandlers
    flags 
    probability 4605362011606000071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1861 
=== Usages ===
=== Predecessor ===
v1224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1861  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1859 
=== Succesors ===
=== Usages ===
v1861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1916 
=== Succesors ===
next: v1374 
=== Usages ===
v1696 
=== Predecessor ===
v1222 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1916 #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1861 
y: v1695 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1861 y: v1695  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.028170283262457074
=== Inputs ===
condition: v1696 
=== Succesors ===
trueSuccessor: v1372 
falseSuccessor: v1371 
=== Usages ===
=== Predecessor ===
v1861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1696 #trueSuccessor: v1372 #falseSuccessor: v1371  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4582135748387590751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1564 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1564 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1579 
=== Usages ===
v1917 v1918 
=== Predecessor ===
v1372 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1579  <|@  <|@
f <@~|@floating>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1564 
index: - 
=== Succesors ===
=== Usages ===
j1579 v1581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1917 
=== Succesors ===
next: j1580 
=== Usages ===
j1697 j1585 v1934 
=== Predecessor ===
j1564 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1917 #next: j1580  <|@  <|@
f <@~|@floating>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1564 
index: - 
=== Succesors ===
=== Usages ===
j1580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1918 
=== Succesors ===
next: v1572 
=== Usages ===
v1569 
=== Predecessor ===
j1579 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1918 #next: v1572  <|@  <|@
f <@~|@floating>@ <|@
tid j1697 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1579 
y: j781 
=== Succesors ===
=== Usages ===
v1569 v1581 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1579 y: j781  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1580 
y: j1697 
=== Succesors ===
=== Usages ===
v1572 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1580 y: j1697  <|@  <|@
f <@*|@fixed>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1569 
=== Succesors ===
trueSuccessor: v1570 
falseSuccessor: v1571 
=== Usages ===
=== Predecessor ===
j1580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1569 #trueSuccessor: v1570 #falseSuccessor: v1571  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4552424538550163995
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1575 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1575  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 120
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - i521 - 
=== Succesors ===
=== Usages ===
?62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - i521 -  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setKey(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: ?61 
values: a1 i521 a2 
=== Succesors ===
=== Usages ===
a1575 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?61 values: a1 i521 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1575 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?62 
arguments: v1388 i399 i9 
=== Succesors ===
next: j1576 
=== Usages ===
j1576 
=== Predecessor ===
v1570 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?62 arguments: v1388 i399 i9 #next: j1576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1576 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1575 
=== Succesors ===
next: v1586 
=== Usages ===
j1585 
=== Predecessor ===
a1575 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1575 #next: v1586  <|@  <|@
f <@*|@fixed>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
j1576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582070963117799083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1581 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1917 
value: j1697 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1578 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1917 value: j1697 stateAfter: - lastLocationAccess: - #next: v1578  <|@  <|@
f <@~|@floating>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1579 
index: - 
=== Succesors ===
=== Usages ===
v1578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1579 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1934 
=== Succesors ===
next: v1584 
=== Usages ===
=== Predecessor ===
v1581 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1934 #next: v1584  <|@  <|@
f <@*|@fixed>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors "B85" "B88" 
    xhandlers
    flags 
    probability 4582135748387590751
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1585 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1583 
values: j1579 j1576 
=== Succesors ===
=== Usages ===
v1920 v1919 a1240 v1935 v1936 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1583 values: j1579 j1576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1584 v1586 
=== Succesors ===
next: a1240 
=== Usages ===
j1585 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1584 v1586 #next: a1240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1240 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1585 
=== Succesors ===
next: j1596 
=== Usages ===
a1245 
=== Predecessor ===
v1583 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1585 #next: j1596  <|@  <|@
f <@~|@floating>@ <|@
tid j1843 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1220 
=== Succesors ===
=== Usages ===
v1944 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1843 
index: - 
=== Succesors ===
=== Usages ===
j1596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1596 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1944 
=== Succesors ===
next: v1597 
=== Usages ===
v1597 
=== Predecessor ===
a1240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1944 #next: v1597  <|@  <|@
f <@~|@floating>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1585 
index: - 
=== Succesors ===
=== Usages ===
v1597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1919 
value: j1596 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1600 
=== Usages ===
=== Predecessor ===
j1596 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1919 value: j1596 stateAfter: - lastLocationAccess: - #next: v1600  <|@  <|@
f <@~|@floating>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1585 
index: - 
=== Succesors ===
=== Usages ===
v1600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1920 
value: v1695 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1862 
=== Usages ===
=== Predecessor ===
v1597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1920 value: v1695 stateAfter: - lastLocationAccess: - #next: i1862  <|@  <|@
f <@~|@floating>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1859 
=== Succesors ===
=== Usages ===
i1862 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1862 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1884 
=== Succesors ===
next: v1604 
=== Usages ===
v1604 
=== Predecessor ===
v1600 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1884 #next: v1604  <|@  <|@
f <@~|@floating>@ <|@
tid v1935 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1585 
index: - 
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1935 
value: i1862 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
i1862 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1935 value: i1862 stateAfter: - lastLocationAccess: - #next: v1606  <|@  <|@
f <@~|@floating>@ <|@
tid v1936 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1585 
index: - 
=== Succesors ===
=== Usages ===
v1606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1936 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1245 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1936 value: a831 stateAfter: - lastLocationAccess: - #next: a1245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1245 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1240 
=== Succesors ===
next: v1246 
=== Usages ===
a858 
=== Predecessor ===
v1606 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1240 #next: v1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
a1245 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid a858 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n -
=== Inputs ===
value: a1245 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1177 
address: v1888 
value: a858 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1607 
=== Usages ===
=== Predecessor ===
v1246 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1177 address: v1888 value: a858 stateAfter: - lastLocationAccess: - #next: j1607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1888 
=== Succesors ===
next: v1611 
=== Usages ===
j1608 
=== Predecessor ===
v859 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1888 #next: v1611  <|@  <|@
f <@~|@floating>@ <|@
tid j1608 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1607 
y: i401 
=== Succesors ===
=== Usages ===
v1921 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1607 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1608 
index: j1440 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1608 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1921 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
j1607 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1921 value: i1442 stateAfter: - lastLocationAccess: - #next: v860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
value: i67 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1877 value: i67 stateAfter: - lastLocationAccess: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.45478946217591376
=== Inputs ===
condition: v900 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v900 #trueSuccessor: v74 #falseSuccessor: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4577046353382148286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1863 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1881 
=== Succesors ===
next: v100 
=== Usages ===
v1837 v1839 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1881 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1863 
=== Succesors ===
=== Usages ===
i1836 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1863  <|@  <|@
f <@~|@floating>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1863 
y: a1049 
=== Succesors ===
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1863 y: a1049  <|@  <|@
f <@~|@floating>@ <|@
tid i1838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1839 
trueValue: i37 
falseValue: i241 
=== Succesors ===
=== Usages ===
i1836 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1839 trueValue: i37 falseValue: i241  <|@  <|@
f <@~|@floating>@ <|@
tid i1836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1837 
trueValue: i37 
falseValue: i1838 
=== Succesors ===
=== Usages ===
v1835 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1837 trueValue: i37 falseValue: i1838  <|@  <|@
f <@~|@floating>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1836 
y: i67 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1836 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.045658967703249176
=== Inputs ===
condition: v1835 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
a1863 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1835 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557245416983666732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3626a123
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1285 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v865 
stateDuring: ?1285 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v865 stateDuring: ?1285 #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4576777297340289981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4578217944138292224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1864 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1864  <|@  <|@
f <@~|@floating>@ <|@
tid v1886 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1860 
=== Succesors ===
=== Usages ===
i1864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1886 
=== Succesors ===
next: i1865 
=== Usages ===
i227 v654 
=== Predecessor ===
v75 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1886 #next: i1865  <|@  <|@
f <@~|@floating>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1950 
=== Succesors ===
next: v216 
=== Usages ===
i1833 
=== Predecessor ===
i1864 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1950 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid i1833 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i67 
y: i1865 
=== Succesors ===
=== Usages ===
i1831 i1832 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i67 y: i1865  <|@  <|@
f <@~|@floating>@ <|@
tid i1832 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i1833 
y: i9 
=== Succesors ===
=== Usages ===
i1831 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i1833 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i1831 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i1832 
y: i1833 
=== Succesors ===
=== Usages ===
v654 v88 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1832 y: i1833  <|@  <|@
f <@~|@floating>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1858 
y: i212 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1858 y: i212  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v1829 
=== Succesors ===
trueSuccessor: v214 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
i1865 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1829 #trueSuccessor: v214 #falseSuccessor: v215  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors 
    xhandlers
    flags 
    probability 4576435356431941319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v657  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1864 
y: i1831 
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1864 y: i1831  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v654 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v654 trueValue: i9 falseValue: i10  <|@  <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@344f0ea5
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i521 i655 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i521 i655  <|@  <|@
tid ?1287 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v874 
stateDuring: ?1287 
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v874 stateDuring: ?1287 #next: v658  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4569276773351716069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1188 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1188  <|@  <|@
f <@~|@floating>@ <|@
tid v1828 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1858 
y: i222 
=== Succesors ===
=== Usages ===
v1188 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1858 y: i222  <|@  <|@
f <@*|@fixed>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1828 
=== Succesors ===
trueSuccessor: v1185 
falseSuccessor: v1187 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1828 #trueSuccessor: v1185 #falseSuccessor: v1187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4569276773351716069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1864 
y: i9 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1864 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i227 
y: i1831 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i227 y: i1831  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v88 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v88 trueValue: i9 falseValue: i10  <|@  <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4e20280d
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i521 i89 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i521 i89  <|@  <|@
tid ?1288 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v881 
stateDuring: ?1288 
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v1185 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v881 stateDuring: ?1288 #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1305 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1305  <|@  <|@
f <@~|@floating>@ <|@
tid i1306 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -224019
stableDimension: 0
stamp: i32 [-224019] ⇊00000000fffc94ed ⇈00000000fffc94ed
stampKind: i32
value: int[-224019|0xfffffffffffc94ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
v1187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B94" 
    xhandlers
    flags 
    probability 4605159557637901108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1375 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1375  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1369 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B79" "B93" 
    successors "B95" "B98" 
    xhandlers
    flags 
    probability 4605958090089092625
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1232 v1375 
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1232 v1375 #next: v892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1177 
address: v1888 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1614 
=== Usages ===
=== Predecessor ===
v1369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1177 address: v1888 value: a831 stateAfter: - lastLocationAccess: - #next: j1614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1888 
=== Succesors ===
next: v1618 
=== Usages ===
j1615 
=== Predecessor ===
v892 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1888 #next: v1618  <|@  <|@
f <@~|@floating>@ <|@
tid j1615 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1614 
y: i401 
=== Succesors ===
=== Usages ===
v1922 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1614 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1615 
index: j1440 
=== Succesors ===
=== Usages ===
v1618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1615 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1922 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
j1614 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1922 value: i1442 stateAfter: - lastLocationAccess: - #next: v893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
value: i67 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1877 value: i67 stateAfter: - lastLocationAccess: - #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.45478946217591376
=== Inputs ===
condition: v900 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v474 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v900 #trueSuccessor: v473 #falseSuccessor: v474  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4600750754935519790
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1866 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1866 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1881 
=== Succesors ===
next: v624 
=== Usages ===
v1059 v1060 
=== Predecessor ===
v473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1881 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1866 
=== Succesors ===
=== Usages ===
i1827 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1866  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1866 
y: a1049 
=== Succesors ===
=== Usages ===
i1826 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1866 y: a1049  <|@  <|@
f <@~|@floating>@ <|@
tid i1826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1060 
trueValue: i37 
falseValue: i241 
=== Succesors ===
=== Usages ===
i1827 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1060 trueValue: i37 falseValue: i241  <|@  <|@
f <@~|@floating>@ <|@
tid i1827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1059 
trueValue: i37 
falseValue: i1826 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1059 trueValue: i37 falseValue: i1826  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1827 
y: i67 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1827 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.045658967703249176
=== Inputs ===
condition: v621 
=== Succesors ===
trueSuccessor: v622 
falseSuccessor: v623 
=== Usages ===
=== Predecessor ===
a1866 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v621 #trueSuccessor: v622 #falseSuccessor: v623  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 4580828837362602688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5b5ab31a
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1283 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v898 
stateDuring: ?1283 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v898 stateDuring: ?1283 #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 4600427528938383618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4602158225987924468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1867 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1867  <|@  <|@
f <@~|@floating>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1860 
=== Succesors ===
=== Usages ===
i1867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1867 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1949 
=== Succesors ===
next: i1868 
=== Usages ===
i703 v686 
=== Predecessor ===
v474 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1949 #next: i1868  <|@  <|@
f <@~|@floating>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1885 
=== Succesors ===
next: v648 
=== Usages ===
i693 
=== Predecessor ===
i1867 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1885 #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid i693 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i67 
y: i1868 
=== Succesors ===
=== Usages ===
i694 i695 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i67 y: i1868  <|@  <|@
f <@~|@floating>@ <|@
tid i694 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i693 
y: i9 
=== Succesors ===
=== Usages ===
i695 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i693 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i693 
y: i694 
=== Succesors ===
=== Usages ===
v696 v686 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i693 y: i694  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1858 
y: i212 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1858 y: i212  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v645 
=== Succesors ===
trueSuccessor: v646 
falseSuccessor: v647 
=== Usages ===
=== Predecessor ===
i1868 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v645 #trueSuccessor: v646 #falseSuccessor: v647  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors 
    xhandlers
    flags 
    probability 4600016743920142509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1867 
y: i695 
=== Succesors ===
=== Usages ===
i687 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1867 y: i695  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v686 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v686 trueValue: i9 falseValue: i10  <|@  <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@58f63eeb
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i521 i687 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i521 i687  <|@  <|@
tid ?1284 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v906 
stateDuring: ?1284 
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v906 stateDuring: ?1284 #next: v690  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4593230348934292764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1192 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1192  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1858 
y: i222 
=== Succesors ===
=== Usages ===
v1192 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1858 y: i222  <|@  <|@
f <@*|@fixed>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v700 
=== Succesors ===
trueSuccessor: v1189 
falseSuccessor: v1191 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v700 #trueSuccessor: v1189 #falseSuccessor: v1191  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 4593230348934292764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v1192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid i703 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1867 
y: i9 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1867 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i703 
y: i695 
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i703 y: i695  <|@  <|@
f <@~|@floating>@ <|@
tid i697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v696 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v696 trueValue: i9 falseValue: i10  <|@  <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@14002976
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i521 i697 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i521 i697  <|@  <|@
tid ?1286 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v913 
stateDuring: ?1286 
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v913 stateDuring: ?1286 #next: v704  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1300 
=== Usages ===
=== Predecessor ===
v1192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1300  <|@  <|@
f <@~|@floating>@ <|@
tid i1301 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -232211
stableDimension: 0
stamp: i32 [-232211] ⇊00000000fffc74ed ⇈00000000fffc74ed
stampKind: i32
value: int[-232211|0xfffffffffffc74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
v1191 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B92" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1302 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-232211 - -224019] ⇊00000000fffc14ed ⇈00000000fffcf4ed
valueDescription: i32
=== Inputs ===
merge: v1299 
values: i1301 i1306 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1299 values: i1301 i1306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1300 v1305 
=== Succesors ===
next: v1304 
=== Usages ===
i1302 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1300 v1305 #next: v1304  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
bci: 140
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 432
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 - - i521 - 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 - - i521 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?69 
actionAndReason: i1302 
speculation: a13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1299 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?69 actionAndReason: i1302 speculation: a13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1344 
=== Usages ===
=== Predecessor ===
v1180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1344  <|@  <|@
f <@~|@floating>@ <|@
tid i1345 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -213787
stableDimension: 0
stamp: i32 [-213787] ⇊00000000fffcbce5 ⇈00000000fffcbce5
stampKind: i32
value: int[-213787|0xfffffffffffcbce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
v1179 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1342 
=== Usages ===
=== Predecessor ===
v1176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid i1343 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -211227
stableDimension: 0
stamp: i32 [-211227] ⇊00000000fffcc6e5 ⇈00000000fffcc6e5
stampKind: i32
value: int[-211227|0xfffffffffffcc6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
v1175 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1339 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1339  <|@  <|@
f <@~|@floating>@ <|@
tid a1341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@516136508
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@516136508]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1340 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -210236
stableDimension: 0
stamp: i32 [-210236] ⇊00000000fffccac4 ⇈00000000fffccac4
stampKind: i32
value: int[-210236|0xfffffffffffccac4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
v1171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B105" "B104" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1336 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-213787 - -209931] ⇊00000000fffc80c4 ⇈00000000fffcfff5
valueDescription: i32
=== Inputs ===
merge: v1333 
values: i1340 i1343 i1345 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1333 values: i1340 i1343 i1345  <|@  <|@
f <@~|@floating>@ <|@
tid a1337 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1333 
values: a1341 a13 a13 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1333 values: a1341 a13 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1339 v1342 v1344 
=== Succesors ===
next: v1338 
=== Usages ===
i1336 a1337 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1339 v1342 v1344 #next: v1338  <|@  <|@
f <@*|@fixed>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?518 
actionAndReason: i1336 
speculation: a1337 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?518 actionAndReason: i1336 speculation: a1337  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B109" 
    xhandlers
    flags 
    probability 4592333407530849606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i122 
y: i9 
=== Succesors ===
=== Usages ===
i1289 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i122 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B19" "B108" 
    successors "B110" "B122" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i554 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v549 
values: i255 i122 
=== Succesors ===
=== Usages ===
?551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v549 values: i255 i122  <|@  <|@
f <@~|@floating>@ <|@
tid i1289 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v549 
values: i456 i455 
=== Succesors ===
=== Usages ===
i1290 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v549 values: i456 i455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v550 v552 
=== Succesors ===
next: a1869 
=== Usages ===
i554 i1289 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v550 v552 #next: a1869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v1870 
=== Usages ===
a975 v1923 v1890 
=== Predecessor ===
v549 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v1870  <|@  <|@
tid ?551 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - - - i554 
=== Succesors ===
=== Usages ===
v1351 a1638 v1870 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - - - i554  <|@  <|@
f <@~|@floating>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1869 
=== Succesors ===
=== Usages ===
v1870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?551 
guard: - 
address: v1923 
=== Succesors ===
next: v1200 
=== Usages ===
v1702 
=== Predecessor ===
a1869 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?551 guard: - address: v1923 #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1870 
y: v1688 
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1870 y: v1688  <|@  <|@
f <@*|@fixed>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1702 
=== Succesors ===
trueSuccessor: v1197 
falseSuccessor: v1199 
=== Usages ===
=== Predecessor ===
v1870 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1702 #trueSuccessor: v1197 #falseSuccessor: v1199  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B121" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1871 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1871  <|@  <|@
f <@~|@floating>@ <|@
tid v1890 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1869 
=== Succesors ===
=== Usages ===
i1871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1871 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1890 
=== Succesors ===
next: v1204 
=== Usages ===
v1007 
=== Predecessor ===
v1197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1890 #next: v1204  <|@  <|@
f <@~|@floating>@ <|@
tid i1290 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1289 
y: i9 
=== Succesors ===
=== Usages ===
v1007 v1894 v1891 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1289 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1290 
y: i1871 
=== Succesors ===
=== Usages ===
v1204 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1290 y: i1871  <|@  <|@
f <@*|@fixed>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1007 
=== Succesors ===
trueSuccessor: v1201 
falseSuccessor: v1203 
=== Usages ===
=== Predecessor ===
i1871 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1007 #trueSuccessor: v1201 #falseSuccessor: v1203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1872 
=== Usages ===
v1033 a1872 v1045 
=== Predecessor ===
v1204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1872  <|@  <|@
f <@~|@floating>@ <|@
tid a975 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1869 
=== Succesors ===
=== Usages ===
v1891 v1894 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1869  <|@  <|@
f <@~|@floating>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a975 
index: i1290 
=== Succesors ===
=== Usages ===
a1872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a975 index: i1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1872 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1201 
address: v1891 
=== Succesors ===
next: v1250 
=== Usages ===
a989 v990 v1892 v1893 v1924 
=== Predecessor ===
v1201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1201 address: v1891 #next: v1250  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1872 
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1872  <|@  <|@
f <@~|@floating>@ <|@
tid v1894 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a975 
index: i1290 
=== Succesors ===
=== Usages ===
v1045 v1033 j1669 j1676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a975 index: i1290  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v990 
=== Succesors ===
trueSuccessor: v1249 
falseSuccessor: v1248 
=== Usages ===
=== Predecessor ===
a1872 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v990 #trueSuccessor: v1249 #falseSuccessor: v1248  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B119" 
    xhandlers
    flags 
    probability 4578528455022274758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1258 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1258  <|@  <|@
f <@*|@fixed>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1359 
=== Predecessor ===
v1249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B118" 
    xhandlers
    flags 
    probability 4592961108059538913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1872 
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1924 
=== Succesors ===
next: v1364 
=== Usages ===
v1703 
=== Predecessor ===
v1248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1924 #next: v1364  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1873 
y: v1695 
=== Succesors ===
=== Usages ===
v1364 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1873 y: v1695  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.08092944845607031
=== Inputs ===
condition: v1703 
=== Succesors ===
trueSuccessor: v1362 
falseSuccessor: v1361 
=== Usages ===
=== Predecessor ===
v1873 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1703 #trueSuccessor: v1362 #falseSuccessor: v1361  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576525192461061253
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1627 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1627 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1642 
=== Usages ===
v1925 v1926 
=== Predecessor ===
v1362 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1642  <|@  <|@
f <@~|@floating>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1627 
index: - 
=== Succesors ===
=== Usages ===
j1642 v1644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1627 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1925 
=== Succesors ===
next: j1643 
=== Usages ===
j1704 j1648 v1937 
=== Predecessor ===
j1627 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1925 #next: j1643  <|@  <|@
f <@~|@floating>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1627 
index: - 
=== Succesors ===
=== Usages ===
j1643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1627 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1643 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1926 
=== Succesors ===
next: v1635 
=== Usages ===
v1632 
=== Predecessor ===
j1642 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1926 #next: v1635  <|@  <|@
f <@~|@floating>@ <|@
tid j1704 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1642 
y: j781 
=== Succesors ===
=== Usages ===
v1632 v1644 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1642 y: j781  <|@  <|@
f <@~|@floating>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1643 
y: j1704 
=== Succesors ===
=== Usages ===
v1635 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1643 y: j1704  <|@  <|@
f <@*|@fixed>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1632 
=== Succesors ===
trueSuccessor: v1633 
falseSuccessor: v1634 
=== Usages ===
=== Predecessor ===
j1643 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1632 #trueSuccessor: v1633 #falseSuccessor: v1634  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4546504034859869975
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1638 
=== Usages ===
=== Predecessor ===
v1635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1638 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?551 
arguments: v1388 i399 i9 
=== Succesors ===
next: j1639 
=== Usages ===
j1639 
=== Predecessor ===
v1633 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?551 arguments: v1388 i399 i9 #next: j1639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1639 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1638 
=== Succesors ===
next: v1649 
=== Usages ===
j1648 
=== Predecessor ===
a1638 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1638 #next: v1649  <|@  <|@
f <@*|@fixed>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1646 
=== Predecessor ===
j1639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576471476754261175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1644 
=== Usages ===
=== Predecessor ===
v1635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1644  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1925 
value: j1704 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1641 
=== Usages ===
=== Predecessor ===
v1634 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1925 value: j1704 stateAfter: - lastLocationAccess: - #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1642 
index: - 
=== Succesors ===
=== Usages ===
v1641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1642 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1937 
=== Succesors ===
next: v1647 
=== Usages ===
=== Predecessor ===
v1644 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1937 #next: v1647  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1646 
=== Predecessor ===
v1641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B115" 
    successors "B120" 
    xhandlers
    flags 
    probability 4576525192461061253
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1648 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1646 
values: j1642 j1639 
=== Succesors ===
=== Usages ===
v1929 v1928 a1266 v1938 v1939 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1646 values: j1642 j1639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1647 v1649 
=== Succesors ===
next: a1266 
=== Usages ===
j1648 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1647 v1649 #next: a1266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1266 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1648 
=== Succesors ===
next: j1658 
=== Usages ===
a1271 
=== Predecessor ===
v1646 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1648 #next: j1658  <|@  <|@
f <@~|@floating>@ <|@
tid j1654 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1220 
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1654 
index: - 
=== Succesors ===
=== Usages ===
j1658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1654 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1927 
=== Succesors ===
next: v1659 
=== Usages ===
v1659 
=== Predecessor ===
a1266 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1927 #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1928 
value: j1658 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1662 
=== Usages ===
=== Predecessor ===
j1658 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1928 value: j1658 stateAfter: - lastLocationAccess: - #next: v1662  <|@  <|@
f <@~|@floating>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
v1662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1929 
value: v1695 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1874 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1929 value: v1695 stateAfter: - lastLocationAccess: - #next: i1874  <|@  <|@
f <@~|@floating>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1872 
=== Succesors ===
=== Usages ===
i1874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1893 
=== Succesors ===
next: v1666 
=== Usages ===
v1666 
=== Predecessor ===
v1662 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1893 #next: v1666  <|@  <|@
f <@~|@floating>@ <|@
tid v1938 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
v1666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1938 
value: i1874 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1668 
=== Usages ===
=== Predecessor ===
i1874 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1938 value: i1874 stateAfter: - lastLocationAccess: - #next: v1668  <|@  <|@
f <@~|@floating>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
v1668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1939 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1271 
=== Usages ===
=== Predecessor ===
v1666 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1939 value: a831 stateAfter: - lastLocationAccess: - #next: a1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1271 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1266 
=== Succesors ===
next: v1272 
=== Usages ===
a1032 
=== Predecessor ===
v1668 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1266 #next: v1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
a1271 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid a1032 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n -
=== Inputs ===
value: a1271 
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1201 
address: v1894 
value: a1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1669 
=== Usages ===
=== Predecessor ===
v1272 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1201 address: v1894 value: a1032 stateAfter: - lastLocationAccess: - #next: j1669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1894 
=== Succesors ===
next: v1673 
=== Usages ===
j1670 
=== Predecessor ===
v1033 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1894 #next: v1673  <|@  <|@
f <@~|@floating>@ <|@
tid j1670 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1669 
y: i401 
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1669 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1670 
index: j1440 
=== Succesors ===
=== Usages ===
v1673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1670 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1930 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1875 
=== Usages ===
=== Predecessor ===
j1669 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1930 value: i1442 stateAfter: - lastLocationAccess: - #next: a1875  <|@  <|@
f <@~|@floating>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1872 
=== Succesors ===
=== Usages ===
a1875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1875 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1892 
=== Succesors ===
next: v109 
=== Usages ===
a995 
=== Predecessor ===
v1673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1892 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid a995 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1875 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1875  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
a1875 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B119" 
    xhandlers
    flags 
    probability 4592289661724537936
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1365 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1365  <|@  <|@
f <@*|@fixed>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1359 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B112" "B118" 
    successors "B120" 
    xhandlers
    flags 
    probability 4593211515879690601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1258 v1365 
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1258 v1365 #next: v1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1201 
address: v1894 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1676 
=== Usages ===
=== Predecessor ===
v1359 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1201 address: v1894 value: a831 stateAfter: - lastLocationAccess: - #next: j1676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1894 
=== Succesors ===
next: v1680 
=== Usages ===
j1677 
=== Predecessor ===
v1045 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1894 #next: v1680  <|@  <|@
f <@~|@floating>@ <|@
tid j1677 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1676 
y: i401 
=== Succesors ===
=== Usages ===
v1931 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1676 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1677 
index: j1440 
=== Succesors ===
=== Usages ===
v1680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1677 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1931 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
j1676 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1931 value: i1442 stateAfter: - lastLocationAccess: - #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid a989 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1872 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1872  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v1680 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B117" "B86" "B119" 
    successors 
    xhandlers
    flags 
    probability 4593794107068914893
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a110 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v108 
values: a995 a13 a989 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: a995 a13 a989  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v109 v113 v383 
=== Succesors ===
next: v12 
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v109 v113 v383 #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 6]
stamp: void
=== Inputs ===
value: a110 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a110  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 6]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v8 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v8 trueValue: i9 falseValue: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v1204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid i1356 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251419
stableDimension: 0
stamp: i32 [-251419] ⇊00000000fffc29e5 ⇈00000000fffc29e5
stampKind: i32
value: int[-251419|0xfffffffffffc29e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1349 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
v1203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1352  <|@  <|@
f <@~|@floating>@ <|@
tid a1354 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1664780200
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@1664780200]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1353 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -289084
stableDimension: 0
stamp: i32 [-289084] ⇊00000000fffb96c4 ⇈00000000fffb96c4
stampKind: i32
value: int[-289084|0xfffffffffffb96c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1349 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
v1199 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1349 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-289084 - -250123] ⇊00000000fff800c4 ⇈00000000ffffbff5
valueDescription: i32
=== Inputs ===
merge: v1346 
values: i1353 i1356 
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1346 values: i1353 i1356  <|@  <|@
f <@~|@floating>@ <|@
tid a1350 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1346 
values: a1354 a13 
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1346 values: a1354 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1352 v1355 
=== Succesors ===
next: v1351 
=== Usages ===
i1349 a1350 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1352 v1355 #next: v1351  <|@  <|@
f <@*|@fixed>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?551 
actionAndReason: i1349 
speculation: a1350 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?551 actionAndReason: i1349 speculation: a1350  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1947 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1947  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v865 ?129 ?551 ?270 v1876 v971 ?707 v898 ?434 ?518 v1877 ?445 v906 v1878 v874 ?375 ?61 ?62 ?410 v816 v1881 v1885 ?69 v881 v913 ?256 j1436 j1543 v1950 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a13 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:407) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a110 v1304 a1350 v1330 ?3 v1312 a1337 v1322 a1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.add(Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 850
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a13 
=== Succesors ===
=== Usages ===
v1947 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a13  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?375 v881 v874 v1947 ?129 ?551 ?551 ?518 ?518 ?256 ?445 v806 v913 ?707 ?707 a831 ?61 ?61 ?62 ?445 v906 ?69 v343 v810 v816 ?270 ?129 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: a1844 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: a1844  <|@  <|@
f <@~|@floating>@ <|@
tid v1876 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1844 a1860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1844 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1876 
=== Succesors ===
next: v120 
=== Usages ===
v1046 
=== Predecessor ===
v1947 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1876 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1844 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1844  <|@  <|@
f <@~|@floating>@ <|@
tid v1220 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1654 j1843 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j781 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1704 j1697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1695 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1696 v1600 v1703 v1662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a831 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v832 v892 v1045 v1606 v1668 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i400 a1575 i1512 a1638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1442 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1441 v1547 v1557 v1611 v1618 v1673 v1680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
v402 j1437 j1509 j1515 j1544 j1554 j1608 j1615 j1670 j1677 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1440 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1901 j1530 v1913 v1915 v1921 v1922 v1930 v1931 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1688 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1430 v1496 v1694 v1702 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1388 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1402 a1575 a1638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 ?707 v557 i1511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1049 <|@
result NarrowOop[Equivalence$3@1213634123] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1050 v1060 v1839 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1881 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1849 a1866 a1863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 i43 i694 i67 i703 i89 i338 i227 i337 i697 i277 i1290 i456 i398 i416 i455 v690 v544 v565 v631 v728 i655 v658 v704 i687 a1402 a1575 a1638 i1832 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.add(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 850
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?551 ?129 ?1283 ?1288 ?1287 ?707 ?61 ?1284 ?69 ?1285 ?518 ?1286 ?445 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
tid ?129 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - - - 
=== Succesors ===
=== Usages ===
?281 ?1281 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 v1528 i89 i255 a1469 v271 i655 i687 i697 ?270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1877 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1846 i1850 i1852 v860 v893 i1855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1878 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1845 a1851 a1869 a1853 v915 v967 a1856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.6490671046028922
=== Inputs ===
condition: v1046 
=== Succesors ===
trueSuccessor: v118 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
a1844 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1046 #trueSuccessor: v118 #falseSuccessor: v119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b2f1bbb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 0]
locals: v0|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6490671046028922 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604021496286132480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
tid ?281 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 240
stackSize: 0
=== Inputs ===
outerFrameState: ?129 
values: - - 
=== Succesors ===
=== Usages ===
?256 ?375 ?270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?129 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
v118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608619363788113591
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i255 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v254 
values: i10 i277 i277 i277 
=== Succesors ===
=== Usages ===
?256 v258 i554 ?270 v20 i277 ?375 i456 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v254 values: i10 i277 i277 i277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.032248858132847
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v253 
=== Succesors ===
next: a1845 
=== Usages ===
i255 v260 v273 v278 v514 v607 v1146 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v253 #next: a1845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1845 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: i1846 
=== Usages ===
a815 v1879 
=== Predecessor ===
v254 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: i1846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1846 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
=== Succesors ===
next: v262 
=== Usages ===
v258 i709 
=== Predecessor ===
a1845 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1877 #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i1846 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i255 y: i1846  <|@  <|@
f <@~|@floating>@ <|@
tid a815 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1845 
=== Succesors ===
=== Usages ===
a710 v1880 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1845  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.5507111845837876
=== Inputs ===
condition: v258 
=== Succesors ===
trueSuccessor: v259 
falseSuccessor: v260 
=== Usages ===
=== Predecessor ===
i1846 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v258 #trueSuccessor: v259 #falseSuccessor: v260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604718268269789408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1847 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1847  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 245
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: a1 a2 i255 - 
=== Succesors ===
=== Usages ===
v1131 v1132 v1312 i1847 v1948 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a2 i255 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1879 <|@
result [v8|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1845 
=== Succesors ===
=== Usages ===
i1847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1847 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?256 
guard: - 
address: v1879 
=== Succesors ===
next: v1147 
=== Usages ===
v790 
=== Predecessor ===
v259 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?256 guard: - address: v1879 #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid i456 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i255 
y: i9 
=== Succesors ===
=== Usages ===
i1289 v1880 v790 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i255 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i456 
y: i1847 
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i456 y: i1847  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v790 
=== Succesors ===
trueSuccessor: v1143 
falseSuccessor: v1146 
=== Usages ===
=== Predecessor ===
i1847 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v790 #trueSuccessor: v1143 #falseSuccessor: v1146  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction CMP (x: v11|DWORD, y: [v8|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604718268269789408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1848 
=== Usages ===
a1848 
=== Predecessor ===
v1147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1848  <|@  <|@
f <@~|@floating>@ <|@
tid v1880 <|@
result [v10|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a815 
index: i456 
=== Succesors ===
=== Usages ===
a1848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a815 index: i456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1848 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1143 
address: v1880 
=== Succesors ===
next: v1948 
=== Usages ===
a799 v1948 
=== Predecessor ===
v1143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1143 address: v1880 #next: v1948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
object: a1848 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
a1848 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?256 object: a1848 #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid a799 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1848 
=== Succesors ===
=== Usages ===
v806 v810 v343 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1848  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a799 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a799  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v343 
=== Succesors ===
trueSuccessor: v344 
falseSuccessor: v345 
=== Usages ===
=== Predecessor ===
v1948 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v343 #trueSuccessor: v344 #falseSuccessor: v345  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:2, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589673442321614256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
v344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604092140562483242
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1849 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1849 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1881 
=== Succesors ===
next: v352 
=== Usages ===
a804 v807 v1050 v1052 
=== Predecessor ===
v345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1881 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1849 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1849  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i255 
y: i9 
=== Succesors ===
=== Usages ===
i255 i255 i255 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i255 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v350 
falseSuccessor: v351 
=== Usages ===
=== Predecessor ===
a1849 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v350 #falseSuccessor: v351  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603930442492703314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?256 #next: v514  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v254 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580831559641381640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid a1051 <|@
result NarrowOop[Equivalence$1@1642007824] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1052 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1849 
y: a1051 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1849 y: a1051  <|@  <|@
tid ?375 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: a1 a2 i255 - 
=== Succesors ===
=== Usages ===
?1280 ?1279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a2 i255 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v1052 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v355 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1052 #trueSuccessor: v361 #falseSuccessor: v355  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578516116599383858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i365 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i365  <|@  <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4f4f9b16
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a799 
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a799  <|@  <|@
tid ?1279 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?375 
values: - - - 
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?375 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i365 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v806 
stateDuring: ?1279 
=== Succesors ===
next: v379 
=== Usages ===
i378 
=== Predecessor ===
v361 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v806 stateDuring: ?1279 #next: v379  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
i365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572622385448852924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1849 
y: a1049 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1849 y: a1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v1050 
=== Succesors ===
trueSuccessor: v356 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1050 #trueSuccessor: v356 #falseSuccessor: v362  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533323799713755614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1132 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?256 #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v254 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572608310889856035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i370 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i370  <|@  <|@
f <@~|@floating>@ <|@
tid a804 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a1849 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1849  <|@  <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@78ff5290
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a804 a2 a799 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a804 a2 a799  <|@  <|@
tid ?1280 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?375 
values: - - - 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?375 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i370 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v810 
stateDuring: ?1280 
=== Succesors ===
next: v380 
=== Usages ===
i378 
=== Predecessor ===
v362 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v810 stateDuring: ?1280 #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
i370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580828041001632418
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i378 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v376 
values: i365 i370 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v376 values: i365 i370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v379 v380 
=== Succesors ===
next: v276 
=== Usages ===
i378 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v379 v380 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i378 
y: i10 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i378 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9223242473295923
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v272 
falseSuccessor: v502 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v272 #falseSuccessor: v502  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580426393697807058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1130 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1130  <|@  <|@
tid ?270 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 1
=== Inputs ===
outerFrameState: ?281 
values: a1 a2 i255 - i10 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a2 i255 - i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?270 
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?270 #next: v278  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v254 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564069179760147717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v580  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589773854147570596
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v580 v582 
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v580 v582 #next: v273  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4589773854147570596
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v254 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v254 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i19 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i255 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.6967267137205493
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v21 #falseSuccessor: v22  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4587280578636921825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1850 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1850 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 42]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
=== Succesors ===
next: a1851 
=== Usages ===
i709 
=== Predecessor ===
v21 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1877 #next: a1851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1851 <|@
result v21|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v705 
=== Usages ===
a813 
=== Predecessor ===
i1850 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid a813 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1851 
=== Succesors ===
=== Usages ===
a710 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1851  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
a1851 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD, v22|QWORD[.]] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B109" 
    xhandlers
    flags 
    probability 4581855440143791822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|DWORD, v11|DWORD] destination: B19 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v254 
=== Succesors ===
next: v1312 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v254 #next: v1312  <|@  <|@
f <@~|@floating>@ <|@
tid i1314 <|@
result int[-202523|0xfffffffffffce8e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -202523
stableDimension: 0
stamp: i32 [-202523] ⇊00000000fffce8e5 ⇈00000000fffce8e5
stampKind: i32
value: int[-202523|0xfffffffffffce8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
actionAndReason: i1314 
speculation: a13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1146 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?256 actionAndReason: i1314 speculation: a13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -202523 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 16, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 4603513260051696782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:251) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v254 
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v254 #next: v708  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v260 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v10|QWORD[.]] destination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" "B108" 
    xhandlers
    flags 
    probability 4599993464945675776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i122 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i122  <|@  <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@36b98584
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findHash(Object)>
=== Inputs ===
arguments: a1 a2 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2  <|@  <|@
tid ?1281 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?129 
values: - - 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?129 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i122 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v816 
stateDuring: ?1281 
=== Succesors ===
next: v560 
=== Usages ===
v557 i554 i455 
=== Predecessor ===
v119 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v816 stateDuring: ?1281 #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i122 
y: i19 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i122 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.6967267137205493
=== Inputs ===
condition: v557 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
i122 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v557 #trueSuccessor: v558 #falseSuccessor: v559  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4597977216912232797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1852 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1852 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 42]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
=== Succesors ===
next: a1853 
=== Usages ===
i709 
=== Predecessor ===
v558 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1877 #next: a1853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1853 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v724 
=== Usages ===
a819 
=== Predecessor ===
i1852 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid a819 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1853 
=== Succesors ===
=== Usages ===
a710 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1853  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
a1853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD, v26|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B23" 
    successors "B25" "B29" 
    xhandlers
    flags 
    probability 4606160544057191587
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i709 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v706 
values: i1850 i1846 i1852 
=== Succesors ===
=== Usages ===
i521 i43 i521 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v706 values: i1850 i1846 i1852  <|@  <|@
f <@~|@floating>@ <|@
tid a710 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v706 
values: a813 a815 a819 
=== Succesors ===
=== Usages ===
v33 j1535 a520 v1889 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v706 values: a813 a815 a819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v705 v708 v724 
=== Succesors ===
next: v36 
=== Usages ===
i709 a710 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v705 v708 v724 #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a710 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a710  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
result int[131072|0x20000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 v435 v1828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
result int[512|0x200] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v645 v423 v427 v1829 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1421 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1426 v1493 j1517 v1523 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1827 i449 i1838 v1425 a1402 i1826 i1836 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.15737516016132225
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v34 #falseSuccessor: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|QWORD[.], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.15737516016132225 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594194787186546554
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1390 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1390 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1409 
=== Usages ===
v1896 v1897 
=== Predecessor ===
v34 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1409  <|@  <|@
f <@~|@floating>@ <|@
tid v1896 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1390 
index: - 
=== Succesors ===
=== Usages ===
j1409 v1411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1409 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1896 
=== Succesors ===
next: j1410 
=== Usages ===
j1684 j1415 v1932 
=== Predecessor ===
j1390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1896 #next: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1897 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1390 
index: - 
=== Succesors ===
=== Usages ===
j1410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1410 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1897 
=== Succesors ===
next: v1398 
=== Usages ===
v1395 
=== Predecessor ===
j1409 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1897 #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid j1683 <|@
result long[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1684 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1684 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1409 
y: j1683 
=== Succesors ===
=== Usages ===
v1395 v1411 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1409 y: j1683  <|@  <|@
f <@~|@floating>@ <|@
tid v1395 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1410 
y: j1684 
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1410 y: j1684  <|@  <|@
f <@*|@fixed>@ <|@
tid v1398 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1395 
=== Succesors ===
trueSuccessor: v1396 
falseSuccessor: v1397 
=== Usages ===
=== Predecessor ===
j1410 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1395 #trueSuccessor: v1396 #falseSuccessor: v1397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v29|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4564077084525836204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1402 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1402  <|@  <|@
tid ?707 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - - - i19 
=== Succesors ===
=== Usages ===
a1402 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - - - i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1402 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?707 
arguments: v1388 i37 i9 
=== Succesors ===
next: j1403 
=== Usages ===
j1403 
=== Predecessor ===
v1396 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?707 arguments: v1388 i37 i9 #next: j1403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1403 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1402 
=== Succesors ===
next: v1416 
=== Usages ===
j1415 
=== Predecessor ===
a1402 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1402 #next: v1416  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1413 
=== Predecessor ===
j1403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: int[-1|0xffffffffffffffff] 
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594144519517586443
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1411 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1896 
value: j1684 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1407 
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1896 value: j1684 stateAfter: - lastLocationAccess: - #next: v1407  <|@  <|@
f <@~|@floating>@ <|@
tid v1932 <|@
result [v29|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1409 
index: - 
=== Succesors ===
=== Usages ===
v1407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1409 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1932 
=== Succesors ===
next: v1414 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1932 #next: v1414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1413 
=== Predecessor ===
v1407 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594194787186546554
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1415 <|@
result v32|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1413 
values: j1409 j1403 
=== Succesors ===
=== Usages ===
v1900 v1899 a1212 v1898 v1933 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1413 values: j1409 j1403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1414 v1416 
=== Succesors ===
next: a1212 
=== Usages ===
j1415 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1414 v1416 #next: a1212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1212 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1415 
=== Succesors ===
next: v1425 
=== Usages ===
a1218 
=== Predecessor ===
v1413 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1415 #next: v1425  <|@  <|@
f <@~|@floating>@ <|@
tid v1898 <|@
result [v32|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1415 
index: - 
=== Succesors ===
=== Usages ===
v1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1898 
value: i37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1426 
=== Usages ===
=== Predecessor ===
a1212 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1898 value: i37 stateAfter: - lastLocationAccess: - #next: v1426  <|@  <|@
f <@~|@floating>@ <|@
tid v1899 <|@
result [v32|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1415 
index: - 
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1899 
value: j1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1430 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1899 value: j1421 stateAfter: - lastLocationAccess: - #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid v1900 <|@
result [v32|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1415 
index: - 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1900 
value: v1688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1435 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1900 value: v1688 stateAfter: - lastLocationAccess: - #next: v1435  <|@  <|@
f <@~|@floating>@ <|@
tid v1933 <|@
result [v32|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1415 
index: - 
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1415 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1433 <|@
result v34|V256_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1933 
value: v1433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1218 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1933 value: v1433 stateAfter: - lastLocationAccess: - #next: a1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1218 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1212 
=== Succesors ===
next: v1219 
=== Usages ===
a914 a520 
=== Predecessor ===
v1435 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1212 #next: v1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
a1218 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v915  <|@  <|@
f <@~|@floating>@ <|@
tid a914 <|@
result v35|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n -
=== Inputs ===
value: a1218 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
value: a914 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1436 
=== Usages ===
=== Predecessor ===
v1219 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1878 value: a914 stateAfter: - lastLocationAccess: - #next: j1436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1436 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1441 
=== Usages ===
j1437 
=== Predecessor ===
v915 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1441  <|@  <|@
f <@~|@floating>@ <|@
tid j1437 <|@
result v36|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1436 
y: i401 
=== Succesors ===
=== Usages ===
v1901 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1436 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1901 <|@
result [v36|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1437 
index: j1440 
=== Succesors ===
=== Usages ===
v1441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1437 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1901 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
j1436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1901 value: i1442 stateAfter: - lastLocationAccess: - #next: v574  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
v1441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE v32|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD[*] + 12] y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v34|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[*] + 16], input: v34|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = COMPRESSPOINTER (input: v33|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v36|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.], v27|DWORD] destination: B28 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" "B74" 
    xhandlers
    flags 
    probability 4604903852333188805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1854 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1854  <|@  <|@
f <@~|@floating>@ <|@
tid v1889 <|@
result [v28|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a710 
index: - 
=== Succesors ===
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1854 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1889 
=== Succesors ===
next: v50 
=== Usages ===
v44 i398 i400 ?410 j1541 v1064 v435 v423 ?434 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1889 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 74]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i709 
y: i9 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i709 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i43 
y: i1854 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i43 y: i1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.06591371968154047
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
i1854 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v45 #falseSuccessor: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SHL v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06591371968154047 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid i400 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 536870911] ⇈000000001fffffff
=== Inputs ===
x: i1854 
y: i399 
=== Succesors ===
=== Usages ===
v402 i449 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1854 y: i399  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i400 
y: i401 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i400 y: i401  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7439668313467649
=== Inputs ===
condition: v402 
=== Succesors ===
trueSuccessor: v403 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v402 #trueSuccessor: v403 #falseSuccessor: v404  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SHR v37|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v39|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7439668313467649 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585440119366529660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
v403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[8|0x8]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4578421018245151209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
v404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" "B32" 
    successors "B34" "B72" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i449 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [8 - 536870911] ⇈000000001fffffff
valueDescription: i32
=== Inputs ===
merge: v407 
values: i37 i400 
=== Succesors ===
=== Usages ===
?411 i412 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v407 values: i37 i400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v406 v408 
=== Succesors ===
next: v1156 
=== Usages ===
i449 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v406 v408 #next: v1156  <|@  <|@
tid ?445 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 421
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - - - 
=== Succesors ===
=== Usages ===
?410 ?1282 ?434 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i398 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1854 
y: i9 
=== Succesors ===
=== Usages ===
?410 i412 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1854 y: i9  <|@  <|@
tid ?410 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 456
stackSize: 1
=== Inputs ===
outerFrameState: ?445 
values: a1 i1854 - - i398 
=== Succesors ===
=== Usages ===
?411 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?445 values: a1 i1854 - - i398  <|@  <|@
tid ?411 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?410 
values: - - i449 
=== Succesors ===
=== Usages ===
a1469 v1322 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?410 values: - - i449  <|@  <|@
f <@~|@floating>@ <|@
tid i412 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [8 - 1610612734] ⇈000000007fffffff
=== Inputs ===
x: i398 
y: i449 
=== Succesors ===
=== Usages ===
v414 i416 i1691 v1693 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i398 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i413 <|@
result int[1073741824|0x40000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 1073741824
stableDimension: 0
stamp: i32 [1073741824] ⇊0000000040000000 ⇈0000000040000000
stampKind: i32
value: int[1073741824|0x40000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i412 
y: i413 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i412 y: i413  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v414 
=== Succesors ===
trueSuccessor: v1153 
falseSuccessor: v1155 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v414 #trueSuccessor: v1153 #falseSuccessor: v1155  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SHR v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = ADD (x: v41|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: 1073741824 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i412 
y: i9 
=== Succesors ===
=== Usages ===
j1710 v427 v438 v1064 v1492 i1511 a1469 v1454 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i412 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i1854 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i416 y: i1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1064 
=== Succesors ===
trueSuccessor: v953 
falseSuccessor: v951 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1064 #trueSuccessor: v953 #falseSuccessor: v951  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SHL v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1318 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1318  <|@  <|@
f <@~|@floating>@ <|@
tid i1319 <|@
result int[-244577|0xfffffffffffc449f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -244577
stableDimension: 0
stamp: i32 [-244577] ⇊00000000fffc449f ⇈00000000fffc449f
stampKind: i32
value: int[-244577|0xfffffffffffc449f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
v953 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-244577|0xfffffffffffc449f]] destination: B35 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B40" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1448 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1448 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1489 
=== Usages ===
v1902 v1903 
=== Predecessor ===
v951 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1902 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1448 
index: - 
=== Succesors ===
=== Usages ===
j1489 v1491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1489 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1902 
=== Succesors ===
next: j1490 
=== Usages ===
j1452 v1904 v1905 a1468 v1910 v1906 v1907 v1908 v1909 
=== Predecessor ===
j1448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1902 #next: j1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1903 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1448 
index: - 
=== Succesors ===
=== Usages ===
j1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1490 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1903 
=== Succesors ===
next: v1457 
=== Usages ===
v1458 
=== Predecessor ===
j1489 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1903 #next: v1457  <|@  <|@
f <@~|@floating>@ <|@
tid i1453 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1454 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i1453 
=== Succesors ===
=== Usages ===
v1457 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i416 y: i1453  <|@  <|@
f <@*|@fixed>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1454 
=== Succesors ===
trueSuccessor: v1456 
falseSuccessor: v1455 
=== Usages ===
=== Predecessor ===
j1490 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1454 #trueSuccessor: v1456 #falseSuccessor: v1455  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4586547353737878135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1464 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1464  <|@  <|@
f <@~|@floating>@ <|@
tid i1690 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1691 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i412 
y: i1690 
=== Succesors ===
=== Usages ===
i1477 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i412 y: i1690  <|@  <|@
f <@~|@floating>@ <|@
tid i1476 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1477 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i1691 
y: i1476 
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1691 y: i1476  <|@  <|@
f <@~|@floating>@ <|@
tid i1446 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1447 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1477 
y: i1446 
=== Succesors ===
=== Usages ===
j1451 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1477 y: i1446  <|@  <|@
f <@~|@floating>@ <|@
tid j1451 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1447 
=== Succesors ===
=== Usages ===
j1452 v1906 v1907 v1908 v1909 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1447  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
x: j1451 
y: j1489 
=== Succesors ===
=== Usages ===
v1458 v1491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1451 y: j1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1490 
y: j1452 
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1490 y: j1452  <|@  <|@
f <@*|@fixed>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1458 
=== Succesors ===
trueSuccessor: v1463 
falseSuccessor: v1462 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1458 #trueSuccessor: v1463 #falseSuccessor: v1462  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SHL v42|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA [v46|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND v47|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVSXD v48|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = ADD (x: v49|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4556810385502868107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1461 
=== Usages ===
=== Predecessor ===
v1464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1461  <|@  <|@
f <@*|@fixed>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1460 
=== Predecessor ===
v1463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586483488410857298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v1464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1902 
value: j1452 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1479 
=== Usages ===
=== Predecessor ===
v1462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1902 value: j1452 stateAfter: - lastLocationAccess: - #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid v1906 <|@
result [v49|QWORD + v44|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1451 
index: j1489 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1451 index: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: v1906 
=== Succesors ===
next: v1481 
=== Usages ===
=== Predecessor ===
v1491 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1906 #next: v1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1907 <|@
result [v49|QWORD + v44|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1451 
index: j1489 
=== Succesors ===
=== Usages ===
v1481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1451 index: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: v1907 
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1907 #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid v1908 <|@
result [v49|QWORD + v44|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1451 
index: j1489 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1451 index: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: v1908 
=== Succesors ===
next: v1487 
=== Usages ===
=== Predecessor ===
v1481 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1908 #next: v1487  <|@  <|@
f <@~|@floating>@ <|@
tid v1909 <|@
result [v49|QWORD + v44|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1451 
index: j1489 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1451 index: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: v1909 
=== Succesors ===
next: v1492 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1909 #next: v1492  <|@  <|@
f <@~|@floating>@ <|@
tid v1904 <|@
result [v44|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1489 
index: - 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1489 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1904 
value: i416 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1904 value: i416 stateAfter: - lastLocationAccess: - #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1905 <|@
result [v44|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1489 
index: - 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1489 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1905 
value: j1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1496 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1905 value: j1421 stateAfter: - lastLocationAccess: - #next: v1496  <|@  <|@
f <@~|@floating>@ <|@
tid v1910 <|@
result [v44|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1489 
index: - 
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1489 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1910 
value: v1688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1467 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1910 value: v1688 stateAfter: - lastLocationAccess: - #next: v1467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1468 
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1468 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1489 
=== Succesors ===
next: v1470 
=== Usages ===
a1473 
=== Predecessor ===
v1467 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1489 #next: v1470  <|@  <|@
f <@*|@fixed>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
a1468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v49|QWORD + v44|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v49|QWORD + v44|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v49|QWORD + v44|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v49|QWORD + v44|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + 12], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4572326940111090679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1459 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1459  <|@  <|@
f <@*|@fixed>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1460 
=== Predecessor ===
v1455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572837862727257376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1459 v1461 
=== Succesors ===
next: a1469 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1459 v1461 #next: a1469  <|@  <|@
f <@~|@floating>@ <|@
tid v744 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1469 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?411 
arguments: v744 i416 i10 
=== Succesors ===
next: v1472 
=== Usages ===
a1473 
=== Predecessor ===
v1460 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?411 arguments: v744 i416 i10 #next: v1472  <|@  <|@
f <@*|@fixed>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
a1469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v43|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v40|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: v41|DWORD 
locals: v0|QWORD[.] v37|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14, 79, 3] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1473 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1471 
values: a1468 a1469 
=== Succesors ===
=== Usages ===
v1895 a1297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1471 values: a1468 a1469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1470 v1472 
=== Succesors ===
next: v1767 
=== Usages ===
a1473 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1470 v1472 #next: v1767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1721 
=== Usages ===
j1769 
=== Predecessor ===
v1471 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1721  <|@  <|@
f <@~|@floating>@ <|@
tid v1895 <|@
result [v54|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1473 
index: - 
=== Succesors ===
=== Usages ===
j1769 j1510 j1508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1473 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1769 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1767 
address: v1895 
=== Succesors ===
=== Usages ===
v1940 v1941 v1942 v1943 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1767 address: v1895  <|@  <|@
f <@~|@floating>@ <|@
tid j1710 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i416 
=== Succesors ===
=== Usages ===
j1810 j1797 j1803 j1807 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i416  <|@  <|@
f <@~|@floating>@ <|@
tid j1796 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1797 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1797 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483638] ⇈fffffffffffffffe
=== Inputs ===
x: j1710 
y: j1796 
=== Succesors ===
=== Usages ===
v1800 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1710 y: j1796  <|@  <|@
f <@~|@floating>@ <|@
tid j1428 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1795 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1822 <|@
result v58|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1210 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
v1767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = LEA [v54|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVSXD v43|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v56|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B71" 
    successors "B44" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596264167737295094
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1790 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1722 
values: j1210 j1795 
=== Succesors ===
=== Usages ===
v1943 j1795 v1942 j1946 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1722 values: j1210 j1795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1721 
=== Succesors ===
next: v1821 
=== Usages ===
j1790 v1725 v1726 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1721 #next: v1821  <|@  <|@
f <@~|@floating>@ <|@
tid v1943 <|@
result [v55|QWORD[.] + v59|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1769 
index: j1790 
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: j1790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1943 
value: v1822 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1728 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1943 value: v1822 stateAfter: - lastLocationAccess: - #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid j1795 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1790 
y: j1428 
=== Succesors ===
=== Usages ===
v1804 j1790 v1800 j1777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1790 y: j1428  <|@  <|@
f <@~|@floating>@ <|@
tid v1800 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1797 
y: j1795 
=== Succesors ===
=== Usages ===
v1728 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1797 y: j1795  <|@  <|@
f <@*|@fixed>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1800 
=== Succesors ===
trueSuccessor: v1725 
falseSuccessor: v1727 
=== Usages ===
=== Predecessor ===
v1821 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1800 #trueSuccessor: v1725 #falseSuccessor: v1727  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v59|QWORD * 4], input: v58|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v59|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1722 
=== Succesors ===
next: v1749 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1722 #next: v1749  <|@  <|@
f <@~|@floating>@ <|@
tid j1802 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1803 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483642] ⇈fffffffffffffffe
=== Inputs ===
x: j1710 
y: j1802 
=== Succesors ===
=== Usages ===
v1804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1710 y: j1802  <|@  <|@
f <@~|@floating>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1803 
y: j1795 
=== Succesors ===
=== Usages ===
v1749 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1803 y: j1795  <|@  <|@
f <@*|@fixed>@ <|@
tid v1749 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1804 
=== Succesors ===
trueSuccessor: v1748 
falseSuccessor: v1747 
=== Usages ===
=== Predecessor ===
v1725 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1804 #trueSuccessor: v1748 #falseSuccessor: v1747  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v56|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4578249769227813110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1752 
=== Usages ===
=== Predecessor ===
v1749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1741 
=== Predecessor ===
v1748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1820 
=== Usages ===
=== Predecessor ===
v1749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1820  <|@  <|@
f <@~|@floating>@ <|@
tid v1942 <|@
result [v55|QWORD[.] + v59|QWORD * 4 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times4
stamp: void*
=== Inputs ===
base: j1769 
index: j1790 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: j1790  <|@  <|@
f <@~|@floating>@ <|@
tid v1825 <|@
result v62|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1942 
value: v1825 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1740 
=== Usages ===
=== Predecessor ===
v1747 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1942 value: v1825 stateAfter: - lastLocationAccess: - #next: v1740  <|@  <|@
f <@~|@floating>@ <|@
tid j1945 <|@
result long[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 12
stableDimension: 0
stamp: i64 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1946 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1946 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1790 
y: j1945 
=== Succesors ===
=== Usages ===
j1777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1790 y: j1945  <|@  <|@
f <@*|@fixed>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1741 
=== Predecessor ===
v1820 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v59|QWORD * 4 + 32], input: v62|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v59|QWORD + 12] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1777 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1741 
values: j1946 j1795 
=== Succesors ===
=== Usages ===
v1941 j1783 j1770 v1808 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1741 values: j1946 j1795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1740 v1752 
=== Succesors ===
next: v1755 
=== Usages ===
j1777 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1740 v1752 #next: v1755  <|@  <|@
f <@~|@floating>@ <|@
tid j1806 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1807 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483644] ⇈fffffffffffffffe
=== Inputs ===
x: j1710 
y: j1806 
=== Succesors ===
=== Usages ===
v1808 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1710 y: j1806  <|@  <|@
f <@~|@floating>@ <|@
tid v1808 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1807 
y: j1777 
=== Succesors ===
=== Usages ===
v1755 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1807 y: j1777  <|@  <|@
f <@*|@fixed>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1808 
=== Succesors ===
trueSuccessor: v1754 
falseSuccessor: v1753 
=== Usages ===
=== Predecessor ===
v1741 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1808 #trueSuccessor: v1754 #falseSuccessor: v1753  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v56|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|QWORD, y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4578249769227813110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1758 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1758  <|@  <|@
f <@*|@fixed>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1744 
=== Predecessor ===
v1754 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1818 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1818  <|@  <|@
f <@~|@floating>@ <|@
tid v1941 <|@
result [v55|QWORD[.] + v64|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1769 
index: j1777 
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: j1777  <|@  <|@
f <@~|@floating>@ <|@
tid v1824 <|@
result v66|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1941 
value: v1824 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1743 
=== Usages ===
=== Predecessor ===
v1753 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1941 value: v1824 stateAfter: - lastLocationAccess: - #next: v1743  <|@  <|@
f <@~|@floating>@ <|@
tid j1782 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1783 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1783 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1777 
y: j1782 
=== Succesors ===
=== Usages ===
j1770 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1777 y: j1782  <|@  <|@
f <@*|@fixed>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1744 
=== Predecessor ===
v1818 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v64|QWORD * 4], input: v66|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v64|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1770 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1744 
values: j1783 j1777 
=== Succesors ===
=== Usages ===
v1940 v1811 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1744 values: j1783 j1777  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1743 v1758 
=== Succesors ===
next: v1761 
=== Usages ===
j1770 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1743 v1758 #next: v1761  <|@  <|@
f <@~|@floating>@ <|@
tid j1521 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1522 j1810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1810 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j1710 
y: j1521 
=== Succesors ===
=== Usages ===
v1811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1710 y: j1521  <|@  <|@
f <@~|@floating>@ <|@
tid v1811 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1810 
y: j1770 
=== Succesors ===
=== Usages ===
v1761 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1810 y: j1770  <|@  <|@
f <@*|@fixed>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1811 
=== Succesors ===
trueSuccessor: v1760 
falseSuccessor: v1759 
=== Usages ===
=== Predecessor ===
v1744 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1811 #trueSuccessor: v1760 #falseSuccessor: v1759  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = DEC v56|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v68|QWORD, y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4578249769227813110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1764 
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1764  <|@  <|@
f <@*|@fixed>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
v1760 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1816 
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1816  <|@  <|@
f <@~|@floating>@ <|@
tid v1940 <|@
result [v55|QWORD[.] + v68|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1769 
index: j1770 
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid a1823 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1940 
value: a1823 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1746 
=== Usages ===
=== Predecessor ===
v1759 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1940 value: a1823 stateAfter: - lastLocationAccess: - #next: v1746  <|@  <|@
f <@*|@fixed>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
v1816 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[.] + v68|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1746 v1764 
=== Succesors ===
next: v1507 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1746 v1764 #next: v1507  <|@  <|@
f <@~|@floating>@ <|@
tid i1692 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1693 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
x: i412 
y: i1692 
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i412 y: i1692  <|@  <|@
f <@*|@fixed>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1693 
=== Succesors ===
trueSuccessor: v1505 
falseSuccessor: v1506 
=== Usages ===
=== Predecessor ===
v1734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1693 #trueSuccessor: v1505 #falseSuccessor: v1506  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v42|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4582753368855183606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1532 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1532  <|@  <|@
f <@*|@fixed>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
v1505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4582753368855183606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1508 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1508 <|@
result [v54|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1895 
=== Succesors ===
next: j1510 
=== Usages ===
j1509 
=== Predecessor ===
v1506 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1895 #next: j1510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1510 <|@
result [v54|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1895 
=== Succesors ===
next: v1518 
=== Usages ===
j1514 
=== Predecessor ===
j1508 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1895 #next: v1518  <|@  <|@
f <@~|@floating>@ <|@
tid i1511 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i416 
y: i19 
=== Succesors ===
=== Usages ===
i1512 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i416 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i1512 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈00000000fffffffc
=== Inputs ===
x: i1511 
y: i399 
=== Succesors ===
=== Usages ===
j1513 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1511 y: i399  <|@  <|@
f <@~|@floating>@ <|@
tid j1513 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
resultBits: 64
stamp: i64 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈fffffffffffffffc
=== Inputs ===
value: i1512 
=== Succesors ===
=== Usages ===
j1514 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1512  <|@  <|@
f <@~|@floating>@ <|@
tid j1514 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
x: j1510 
y: j1513 
=== Succesors ===
=== Usages ===
j1515 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1510 y: j1513  <|@  <|@
f <@~|@floating>@ <|@
tid j1515 <|@
result v75|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1514 
y: i401 
=== Succesors ===
=== Usages ===
j1516 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1514 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid j1509 <|@
result v76|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1508 
y: i401 
=== Succesors ===
=== Usages ===
j1516 j1530 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1508 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid j1516 <|@
result v78|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j1515 
y: j1509 
=== Succesors ===
=== Usages ===
j1517 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1515 y: j1509  <|@  <|@
f <@~|@floating>@ <|@
tid j1517 <|@
result v79|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j1516 
y: j1421 
=== Succesors ===
=== Usages ===
j1520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1516 y: j1421  <|@  <|@
f <@*|@fixed>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
j1510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SHL v70|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOVSXD v71|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = LEA [v54|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = ADD (x: v73|QWORD[.], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = SHR v74|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = LEA [v54|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = SHR v77|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = SUB (x: v75|QWORD[*], ~y: v76|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = INC v78|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[*]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B70" 
    successors "B57" "B70" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4587256968482554102
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1520 <|@
result v80|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1519 
values: j1517 j1522 
=== Succesors ===
=== Usages ===
j1522 v1523 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1519 values: j1517 j1522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1518 
=== Succesors ===
next: v1526 
=== Usages ===
j1520 v1524 v1529 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1518 #next: v1526  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1520 
y: j1421 
=== Succesors ===
=== Usages ===
v1526 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1520 y: j1421  <|@  <|@
f <@*|@fixed>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1523 
=== Succesors ===
trueSuccessor: v1524 
falseSuccessor: v1525 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1523 #trueSuccessor: v1524 #falseSuccessor: v1525  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v80|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4582753368855183606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1519 
=== Succesors ===
next: v1533 
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1519 #next: v1533  <|@  <|@
f <@*|@fixed>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
v1524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1532 v1533 
=== Succesors ===
next: a1297 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1532 v1533 #next: a1297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1297 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1473 
=== Succesors ===
next: j1535 
=== Usages ===
j1539 ?434 a966 
=== Predecessor ===
v1531 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1473 #next: j1535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1535 <|@
result v81|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
object: a710 
=== Succesors ===
next: j1539 
=== Usages ===
v1911 
=== Predecessor ===
a1297 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a710 #next: j1539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1539 <|@
result v82|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
object: a1297 
=== Succesors ===
next: v1542 
=== Usages ===
v1912 
=== Predecessor ===
j1535 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1297 #next: v1542  <|@  <|@
f <@~|@floating>@ <|@
tid v1911 <|@
result [v81|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1535 
index: - 
=== Succesors ===
=== Usages ===
v1542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1535 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1912 <|@
result [v82|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1541 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1854 
=== Succesors ===
=== Usages ===
v1542 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1911 v1912 j1541 
=== Succesors ===
next: v967 
=== Usages ===
=== Predecessor ===
j1539 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1911 v1912 j1541 #next: v967  <|@  <|@
f <@~|@floating>@ <|@
tid a966 <|@
result v84|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n! -
=== Inputs ===
value: a1297 
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
value: a966 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1543 
=== Usages ===
=== Predecessor ===
v1542 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1878 value: a966 stateAfter: - lastLocationAccess: - #next: j1543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1543 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1547 
=== Usages ===
j1544 
=== Predecessor ===
v967 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1547  <|@  <|@
f <@~|@floating>@ <|@
tid j1544 <|@
result v85|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1543 
y: i401 
=== Succesors ===
=== Usages ===
v1913 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1543 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1913 <|@
result [v85|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1544 
index: j1440 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1544 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1913 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
j1543 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1913 value: i1442 stateAfter: - lastLocationAccess: - #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1854 
y: i212 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1854 y: i212  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9908160945669471
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v424 
falseSuccessor: v425 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v424 #falseSuccessor: v425  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[*] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v81|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v82|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v83|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = COMPRESSPOINTER (input: v54|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v84|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v85|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9908160945669471 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4587191798135464061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i212 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i416 y: i212  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9909296705313714
=== Inputs ===
condition: v427 
=== Succesors ===
trueSuccessor: v432 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v427 #trueSuccessor: v432 #falseSuccessor: v431  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9909296705313714 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 4587128024856683675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v432 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 4556798603328090426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 86]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v441  <|@  <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5820dae
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1282 <|@
d <@d|@=== Debug Properties ===
bci: 87
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 466
stackSize: 0
=== Inputs ===
outerFrameState: ?445 
values: - - - - 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?445 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
bci: 87
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v971 
stateDuring: ?1282 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v971 stateDuring: ?1282 #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87, 79, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 4556977428071726174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B60" 
    successors "B64" "B68" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v428 v430 
=== Succesors ===
next: v1160 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v428 v430 #next: v1160  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1854 
y: i222 
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1854 y: i222  <|@  <|@
f <@*|@fixed>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v435 
=== Succesors ===
trueSuccessor: v1157 
falseSuccessor: v1159 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v435 #trueSuccessor: v1157 #falseSuccessor: v1159  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B63 -> B64 falseDestination: B63 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B67" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1164 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1164  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
result int[131073|0x20001] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 131073
stableDimension: 0
stamp: i32 [131073] ⇊0000000000020001 ⇈0000000000020001
stampKind: i32
value: int[131073|0x20001]
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i437 
=== Succesors ===
=== Usages ===
v1164 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i416 y: i437  <|@  <|@
f <@*|@fixed>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v438 
=== Succesors ===
trueSuccessor: v1161 
falseSuccessor: v1163 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v438 #trueSuccessor: v1161 #falseSuccessor: v1163  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 131073 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v1161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B61" 
    successors "B75" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v447 v448 
=== Succesors ===
next: i1855 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v447 v448 #next: i1855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1855 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:425) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
=== Succesors ===
next: a1856 
=== Usages ===
i521 
=== Predecessor ===
v446 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1877 #next: a1856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1856 <|@
result v87|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v516 
=== Usages ===
a970 
=== Predecessor ===
i1855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid a970 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1856 
=== Succesors ===
=== Usages ===
a520 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
a1856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD[.], v86|DWORD] destination: B66 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1331 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1331  <|@  <|@
f <@~|@floating>@ <|@
tid i1332 <|@
result int[-249107|0xfffffffffffc32ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249107
stableDimension: 0
stamp: i32 [-249107] ⇊00000000fffc32ed ⇈00000000fffc32ed
stampKind: i32
value: int[-249107|0xfffffffffffc32ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v1163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249107|0xfffffffffffc32ed]] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1326 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1326  <|@  <|@
f <@~|@floating>@ <|@
tid i1327 <|@
result int[-248851|0xfffffffffffc33ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248851
stableDimension: 0
stamp: i32 [-248851] ⇊00000000fffc33ed ⇈00000000fffc33ed
stampKind: i32
value: int[-248851|0xfffffffffffc33ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v1159 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248851|0xfffffffffffc33ed]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1328 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-249107 - -248851] ⇊00000000fffc32ed ⇈00000000fffc33ed
valueDescription: i32
=== Inputs ===
merge: v1325 
values: i1327 i1332 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1325 values: i1327 i1332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1326 v1331 
=== Succesors ===
next: v1330 
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1326 v1331 #next: v1330  <|@  <|@
tid ?434 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 463
stackSize: 0
=== Inputs ===
outerFrameState: ?445 
values: a1 i1854 - a1297 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?445 values: a1 i1854 - a1297  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?434 
actionAndReason: i1328 
speculation: a13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?434 actionAndReason: i1328 speculation: a13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
locals: v0|QWORD[.] v37|DWORD - v54|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:73, 79, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B56" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582753368855183606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1528 
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1528  <|@  <|@
f <@~|@floating>@ <|@
tid j1522 <|@
result v90|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
x: j1520 
y: j1521 
=== Succesors ===
=== Usages ===
j1520 j1527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1520 y: j1521  <|@  <|@
f <@~|@floating>@ <|@
tid j1530 <|@
result v91|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j1509 
y: j1440 
=== Succesors ===
=== Usages ===
j1527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1509 y: j1440  <|@  <|@
f <@~|@floating>@ <|@
tid j1527 <|@
result v92|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
x: j1522 
y: j1530 
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1522 y: j1530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: j1527 
value: i10 
=== Succesors ===
next: v1529 
=== Usages ===
=== Predecessor ===
v1525 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j1527 value: i10 #next: v1529  <|@  <|@
f <@*|@fixed>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v1519 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1519  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = DEC v80|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = ADD (x: v76|QWORD[*], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[*] = ADD (x: v91|QWORD[*], y: v90|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v92|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|QWORD[*]] destination: B70 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594490130875605176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1726  <|@  <|@
f <@*|@fixed>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1722 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1727 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1722  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B71 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1323  <|@  <|@
f <@~|@floating>@ <|@
tid i1324 <|@
result int[-235539|0xfffffffffffc67ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235539
stableDimension: 0
stamp: i32 [-235539] ⇊00000000fffc67ed ⇈00000000fffc67ed
stampKind: i32
value: int[-235539|0xfffffffffffc67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
v1155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235539|0xfffffffffffc67ed]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B35" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1320 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-244577 - -235539] ⇊00000000fffc448d ⇈00000000fffc67ff
valueDescription: i32
=== Inputs ===
merge: v1317 
values: i1319 i1324 
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1317 values: i1319 i1324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1318 v1323 
=== Succesors ===
next: v1322 
=== Usages ===
i1320 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1318 v1323 #next: v1322  <|@  <|@
f <@*|@fixed>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?411 
actionAndReason: i1320 
speculation: a13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1317 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?411 actionAndReason: i1320 speculation: a13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v40|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: v41|DWORD 
locals: v0|QWORD[.] v37|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:10, 14, 79, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B75" 
    xhandlers
    flags 
    probability 4604460343117766326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.], v27|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B66" "B74" "B28" 
    successors "B76" "B106" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a520 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v517 
values: a970 a710 a1218 
=== Succesors ===
=== Usages ===
v1888 v1882 v1914 v1883 v1887 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v517 values: a970 a710 a1218  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v517 
values: i1855 i709 i709 
=== Succesors ===
=== Usages ===
i337 ?61 ?62 ?518 v906 ?69 v913 v874 v881 i67 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v517 values: i1855 i709 i709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v516 v519 v574 
=== Succesors ===
next: v1857 
=== Usages ===
a520 i521 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v516 v519 v574 #next: v1857  <|@  <|@
tid ?518 <|@
d <@d|@=== Debug Properties ===
bci: 116
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - i521 - 
=== Succesors ===
=== Usages ===
v1338 v1857 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - i521 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1914 <|@
result [v94|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a520 
index: - 
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1857 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?518 
guard: - 
address: v1914 
=== Succesors ===
next: v1172 
=== Usages ===
v1694 
=== Predecessor ===
v517 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?518 guard: - address: v1914 #next: v1172  <|@  <|@
f <@~|@floating>@ <|@
tid v1694 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1857 
y: v1688 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1857 y: v1688  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1694 
=== Succesors ===
trueSuccessor: v1169 
falseSuccessor: v1171 
=== Usages ===
=== Predecessor ===
v1857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1694 #trueSuccessor: v1169 #falseSuccessor: v1171  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|QWORD[.], v95|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - v95|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction CMP [v94|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116, 3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B105" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1858 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1858  <|@  <|@
f <@~|@floating>@ <|@
tid v1887 <|@
result [v94|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a520 
index: - 
=== Succesors ===
=== Usages ===
i1858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1858 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1887 
=== Succesors ===
next: v1176 
=== Usages ===
v824 v700 v645 v885 v1828 v1829 
=== Predecessor ===
v1169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1887 #next: v1176  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i521 
y: i9 
=== Succesors ===
=== Usages ===
i338 v1882 v824 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i521 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i1858 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i337 y: i1858  <|@  <|@
f <@*|@fixed>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v824 
=== Succesors ===
trueSuccessor: v1173 
falseSuccessor: v1175 
=== Usages ===
=== Predecessor ===
i1858 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v824 #trueSuccessor: v1173 #falseSuccessor: v1175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v94|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = SHL v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B104" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1180 
=== Usages ===
v832 
=== Predecessor ===
v1176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1180  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i337 
y: i9 
=== Succesors ===
=== Usages ===
v885 v1888 v1883 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i337 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i338 
y: i1858 
=== Succesors ===
=== Usages ===
v1180 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i338 y: i1858  <|@  <|@
f <@*|@fixed>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v885 
=== Succesors ===
trueSuccessor: v1177 
falseSuccessor: v1179 
=== Usages ===
=== Predecessor ===
v1173 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v885 #trueSuccessor: v1177 #falseSuccessor: v1179  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = INC v97|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v832 
=== Usages ===
v859 a1859 v892 
=== Predecessor ===
v1180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v1882 <|@
result [v94|QWORD[.] + v97|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a520 
index: i337 
=== Succesors ===
=== Usages ===
v832 j1553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: i337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1173 
address: v1882 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1553 
=== Usages ===
=== Predecessor ===
v1177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1173 address: v1882 value: a831 stateAfter: - lastLocationAccess: - #next: j1553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1553 <|@
result [v94|QWORD[.] + v97|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1882 
=== Succesors ===
next: v1557 
=== Usages ===
j1554 
=== Predecessor ===
v832 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1882 #next: v1557  <|@  <|@
f <@~|@floating>@ <|@
tid j1554 <|@
result v99|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1553 
y: i401 
=== Succesors ===
=== Usages ===
v1915 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1553 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1915 <|@
result [v99|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1554 
index: j1440 
=== Succesors ===
=== Usages ===
v1557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1554 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1915 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1859 
=== Usages ===
=== Predecessor ===
j1553 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1915 value: i1442 stateAfter: - lastLocationAccess: - #next: a1859  <|@  <|@
f <@~|@floating>@ <|@
tid v1883 <|@
result [v94|QWORD[.] + v98|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a520 
index: i338 
=== Succesors ===
=== Usages ===
a1859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: i338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1859 <|@
result v101|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1177 
address: v1883 
=== Succesors ===
next: a1860 
=== Usages ===
v1916 v843 v1884 
=== Predecessor ===
v1557 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1177 address: v1883 #next: a1860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1860 <|@
result v102|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 141]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1876 
=== Succesors ===
next: v1224 
=== Usages ===
v900 v1886 v1949 
=== Predecessor ===
a1859 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1876 #next: v1224  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1860 
=== Succesors ===
=== Usages ===
v475 v76 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1860  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1859 
=== Succesors ===
=== Usages ===
v1224 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1859  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 136]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i521 
y: i9 
=== Succesors ===
=== Usages ===
v860 i693 v621 v893 i1833 v1835 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i521 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v1888 <|@
result [v94|QWORD[.] + v98|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a520 
index: i338 
=== Succesors ===
=== Usages ===
v892 v859 j1607 j1614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: i338  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:450) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1826 i1838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v843 
=== Succesors ===
trueSuccessor: v1223 
falseSuccessor: v1222 
=== Usages ===
=== Predecessor ===
a1860 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v843 #trueSuccessor: v1223 #falseSuccessor: v1222  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v94|QWORD[.] + v97|DWORD * 4 + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = LEA [v94|QWORD[.] + v97|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[*] = SHR v100|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v99|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[.] = MOV [v94|QWORD[.] + v98|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = INC v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v101|DWORD[.], y: v101|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B94" 
    xhandlers
    flags 
    probability 4591052680272697064
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1232 
=== Usages ===
=== Predecessor ===
v1224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1369 
=== Predecessor ===
v1223 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B93" 
    xhandlers
    flags 
    probability 4605362011606000071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1861 
=== Usages ===
=== Predecessor ===
v1224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1861  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
result [v101|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1859 
=== Succesors ===
=== Usages ===
v1861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1861 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1916 
=== Succesors ===
next: v1374 
=== Usages ===
v1696 
=== Predecessor ===
v1222 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1916 #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid v1696 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1861 
y: v1695 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1861 y: v1695  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.028170283262457074
=== Inputs ===
condition: v1696 
=== Succesors ===
trueSuccessor: v1372 
falseSuccessor: v1371 
=== Usages ===
=== Predecessor ===
v1861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1696 #trueSuccessor: v1372 #falseSuccessor: v1371  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v101|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4582135748387590751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1564 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1564 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1579 
=== Usages ===
v1917 v1918 
=== Predecessor ===
v1372 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1579  <|@  <|@
f <@~|@floating>@ <|@
tid v1917 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1564 
index: - 
=== Succesors ===
=== Usages ===
j1579 v1581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1579 <|@
result v104|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1917 
=== Succesors ===
next: j1580 
=== Usages ===
j1697 j1585 v1934 
=== Predecessor ===
j1564 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1917 #next: j1580  <|@  <|@
f <@~|@floating>@ <|@
tid v1918 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1564 
index: - 
=== Succesors ===
=== Usages ===
j1580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1580 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1918 
=== Succesors ===
next: v1572 
=== Usages ===
v1569 
=== Predecessor ===
j1579 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1918 #next: v1572  <|@  <|@
f <@~|@floating>@ <|@
tid j1697 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1579 
y: j781 
=== Succesors ===
=== Usages ===
v1569 v1581 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1579 y: j781  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1580 
y: j1697 
=== Succesors ===
=== Usages ===
v1572 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1580 y: j1697  <|@  <|@
f <@*|@fixed>@ <|@
tid v1572 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1569 
=== Succesors ===
trueSuccessor: v1570 
falseSuccessor: v1571 
=== Usages ===
=== Predecessor ===
j1580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1569 #trueSuccessor: v1570 #falseSuccessor: v1571  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = LEA [v104|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4552424538550163995
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1575 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1575  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 120
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - i521 - 
=== Succesors ===
=== Usages ===
?62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - i521 -  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setKey(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: ?61 
values: a1 i521 a2 
=== Succesors ===
=== Usages ===
a1575 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?61 values: a1 i521 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1575 <|@
result v106|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?62 
arguments: v1388 i399 i9 
=== Succesors ===
next: j1576 
=== Usages ===
j1576 
=== Predecessor ===
v1570 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?62 arguments: v1388 i399 i9 #next: j1576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1576 <|@
result v106|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1575 
=== Succesors ===
next: v1586 
=== Usages ===
j1585 
=== Predecessor ===
a1575 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1575 #next: v1586  <|@  <|@
f <@*|@fixed>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
j1576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9]
locals: v0|QWORD[.] v95|DWORD v1|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - v95|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120, 3] <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|QWORD[.]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582070963117799083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1581 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1917 
value: j1697 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1578 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1917 value: j1697 stateAfter: - lastLocationAccess: - #next: v1578  <|@  <|@
f <@~|@floating>@ <|@
tid v1934 <|@
result [v104|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1579 
index: - 
=== Succesors ===
=== Usages ===
v1578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1579 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1934 
=== Succesors ===
next: v1584 
=== Usages ===
=== Predecessor ===
v1581 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1934 #next: v1584  <|@  <|@
f <@*|@fixed>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v105|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v104|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|QWORD] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors "B85" "B88" 
    xhandlers
    flags 
    probability 4582135748387590751
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1585 <|@
result v107|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1583 
values: j1579 j1576 
=== Succesors ===
=== Usages ===
v1920 v1919 a1240 v1935 v1936 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1583 values: j1579 j1576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1584 v1586 
=== Succesors ===
next: a1240 
=== Usages ===
j1585 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1584 v1586 #next: a1240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1240 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1585 
=== Succesors ===
next: j1596 
=== Usages ===
a1245 
=== Predecessor ===
v1583 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1585 #next: j1596  <|@  <|@
f <@~|@floating>@ <|@
tid j1843 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1220 
=== Succesors ===
=== Usages ===
v1944 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1944 <|@
result [v3|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1843 
index: - 
=== Succesors ===
=== Usages ===
j1596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1596 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1944 
=== Succesors ===
next: v1597 
=== Usages ===
v1597 
=== Predecessor ===
a1240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1944 #next: v1597  <|@  <|@
f <@~|@floating>@ <|@
tid v1919 <|@
result [v107|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1585 
index: - 
=== Succesors ===
=== Usages ===
v1597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1919 
value: j1596 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1600 
=== Usages ===
=== Predecessor ===
j1596 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1919 value: j1596 stateAfter: - lastLocationAccess: - #next: v1600  <|@  <|@
f <@~|@floating>@ <|@
tid v1920 <|@
result [v107|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1585 
index: - 
=== Succesors ===
=== Usages ===
v1600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1920 
value: v1695 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1862 
=== Usages ===
=== Predecessor ===
v1597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1920 value: v1695 stateAfter: - lastLocationAccess: - #next: i1862  <|@  <|@
f <@~|@floating>@ <|@
tid v1884 <|@
result [v101|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1859 
=== Succesors ===
=== Usages ===
i1862 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1862 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1884 
=== Succesors ===
next: v1604 
=== Usages ===
v1604 
=== Predecessor ===
v1600 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1884 #next: v1604  <|@  <|@
f <@~|@floating>@ <|@
tid v1935 <|@
result [v107|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1585 
index: - 
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1935 
value: i1862 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
i1862 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1935 value: i1862 stateAfter: - lastLocationAccess: - #next: v1606  <|@  <|@
f <@~|@floating>@ <|@
tid v1936 <|@
result [v107|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1585 
index: - 
=== Succesors ===
=== Usages ===
v1606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1936 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1245 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1936 value: a831 stateAfter: - lastLocationAccess: - #next: a1245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1245 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1240 
=== Succesors ===
next: v1246 
=== Usages ===
a858 
=== Predecessor ===
v1606 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1240 #next: v1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
a1245 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid a858 <|@
result v111|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n -
=== Inputs ===
value: a1245 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1177 
address: v1888 
value: a858 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1607 
=== Usages ===
=== Predecessor ===
v1246 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1177 address: v1888 value: a858 stateAfter: - lastLocationAccess: - #next: j1607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1607 <|@
result [v94|QWORD[.] + v98|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1888 
=== Succesors ===
next: v1611 
=== Usages ===
j1608 
=== Predecessor ===
v859 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1888 #next: v1611  <|@  <|@
f <@~|@floating>@ <|@
tid j1608 <|@
result v112|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1607 
y: i401 
=== Succesors ===
=== Usages ===
v1921 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1607 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1921 <|@
result [v112|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1608 
index: j1440 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1608 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1921 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
j1607 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1921 value: i1442 stateAfter: - lastLocationAccess: - #next: v860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
value: i67 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1877 value: i67 stateAfter: - lastLocationAccess: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.45478946217591376
=== Inputs ===
condition: v900 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v900 #trueSuccessor: v74 #falseSuccessor: v75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD[*]], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v107|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOV [v101|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD[*] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD[*] + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[.] = COMPRESSPOINTER (input: v108|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v94|QWORD[.] + v98|DWORD * 4 + 16], y: v111|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = LEA [v94|QWORD[.] + v98|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = SHR v113|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v112|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v102|DWORD[.], y: v102|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4577046353382148286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1863 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1863 <|@
result v114|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1881 
=== Succesors ===
next: v100 
=== Usages ===
v1837 v1839 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1881 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1863 
=== Succesors ===
=== Usages ===
i1836 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1863  <|@  <|@
f <@~|@floating>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1863 
y: a1049 
=== Succesors ===
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1863 y: a1049  <|@  <|@
f <@~|@floating>@ <|@
tid i1838 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1839 
trueValue: i37 
falseValue: i241 
=== Succesors ===
=== Usages ===
i1836 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1839 trueValue: i37 falseValue: i241  <|@  <|@
f <@~|@floating>@ <|@
tid i1836 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1837 
trueValue: i37 
falseValue: i1838 
=== Succesors ===
=== Usages ===
v1835 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1837 trueValue: i37 falseValue: i1838  <|@  <|@
f <@~|@floating>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1836 
y: i67 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1836 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.045658967703249176
=== Inputs ===
condition: v1835 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
a1863 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1835 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v114|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v116|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD[.], y: v114|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = CMOVE (falseValue: v115|DWORD, ~trueValue: v118|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557245416983666732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3626a123
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1285 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v865 
stateDuring: ?1285 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v865 stateDuring: ?1285 #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B86 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4576777297340289981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4578217944138292224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1864 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1864  <|@  <|@
f <@~|@floating>@ <|@
tid v1886 <|@
result [v102|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1860 
=== Succesors ===
=== Usages ===
i1864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1864 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1886 
=== Succesors ===
next: i1865 
=== Usages ===
i227 v654 
=== Predecessor ===
v75 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1886 #next: i1865  <|@  <|@
f <@~|@floating>@ <|@
tid v1950 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1865 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1950 
=== Succesors ===
next: v216 
=== Usages ===
i1833 
=== Predecessor ===
i1864 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1950 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid i1833 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i67 
y: i1865 
=== Succesors ===
=== Usages ===
i1831 i1832 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i67 y: i1865  <|@  <|@
f <@~|@floating>@ <|@
tid i1832 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i1833 
y: i9 
=== Succesors ===
=== Usages ===
i1831 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i1833 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i1831 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i1832 
y: i1833 
=== Succesors ===
=== Usages ===
v654 v88 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1832 y: i1833  <|@  <|@
f <@~|@floating>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1858 
y: i212 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1858 y: i212  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v1829 
=== Succesors ===
trueSuccessor: v214 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
i1865 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1829 #trueSuccessor: v214 #falseSuccessor: v215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOV [v102|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = SUB (x: v103|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SAR v120|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = ADD (x: v121|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v96|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors 
    xhandlers
    flags 
    probability 4576435356431941319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v657  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1864 
y: i1831 
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1864 y: i1831  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v654 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v654 trueValue: i9 falseValue: i10  <|@  <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@344f0ea5
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i521 i655 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i521 i655  <|@  <|@
tid ?1287 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v874 
stateDuring: ?1287 
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v874 stateDuring: ?1287 #next: v658  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v123|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4569276773351716069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1188 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1188  <|@  <|@
f <@~|@floating>@ <|@
tid v1828 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1858 
y: i222 
=== Succesors ===
=== Usages ===
v1188 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1858 y: i222  <|@  <|@
f <@*|@fixed>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1828 
=== Succesors ===
trueSuccessor: v1185 
falseSuccessor: v1187 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1828 #trueSuccessor: v1185 #falseSuccessor: v1187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v96|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4569276773351716069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1864 
y: i9 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1864 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i227 
y: i1831 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i227 y: i1831  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v88 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v88 trueValue: i9 falseValue: i10  <|@  <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4e20280d
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i521 i89 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i521 i89  <|@  <|@
tid ?1288 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v881 
stateDuring: ?1288 
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v1185 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v881 stateDuring: ?1288 #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = SHR v119|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v124|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v125|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1305 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1305  <|@  <|@
f <@~|@floating>@ <|@
tid i1306 <|@
result int[-224019|0xfffffffffffc94ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -224019
stableDimension: 0
stamp: i32 [-224019] ⇊00000000fffc94ed ⇈00000000fffc94ed
stampKind: i32
value: int[-224019|0xfffffffffffc94ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
v1187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-224019|0xfffffffffffc94ed]] destination: B92 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B94" 
    xhandlers
    flags 
    probability 4605159557637901108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1375 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1375  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1369 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B79" "B93" 
    successors "B95" "B98" 
    xhandlers
    flags 
    probability 4605958090089092625
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1232 v1375 
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1232 v1375 #next: v892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1177 
address: v1888 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1614 
=== Usages ===
=== Predecessor ===
v1369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1177 address: v1888 value: a831 stateAfter: - lastLocationAccess: - #next: j1614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1614 <|@
result [v94|QWORD[.] + v98|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1888 
=== Succesors ===
next: v1618 
=== Usages ===
j1615 
=== Predecessor ===
v892 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1888 #next: v1618  <|@  <|@
f <@~|@floating>@ <|@
tid j1615 <|@
result v126|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1614 
y: i401 
=== Succesors ===
=== Usages ===
v1922 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1614 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1922 <|@
result [v126|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1615 
index: j1440 
=== Succesors ===
=== Usages ===
v1618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1615 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1922 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
j1614 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1922 value: i1442 stateAfter: - lastLocationAccess: - #next: v893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
value: i67 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1877 value: i67 stateAfter: - lastLocationAccess: - #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.45478946217591376
=== Inputs ===
condition: v900 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v474 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v900 #trueSuccessor: v473 #falseSuccessor: v474  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v94|QWORD[.] + v98|DWORD * 4 + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = LEA [v94|QWORD[.] + v98|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[*] = SHR v127|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v126|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v102|DWORD[.], y: v102|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4600750754935519790
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1866 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1866 <|@
result v128|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1881 
=== Succesors ===
next: v624 
=== Usages ===
v1059 v1060 
=== Predecessor ===
v473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1881 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1866 
=== Succesors ===
=== Usages ===
i1827 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1866  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1866 
y: a1049 
=== Succesors ===
=== Usages ===
i1826 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1866 y: a1049  <|@  <|@
f <@~|@floating>@ <|@
tid i1826 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1060 
trueValue: i37 
falseValue: i241 
=== Succesors ===
=== Usages ===
i1827 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1060 trueValue: i37 falseValue: i241  <|@  <|@
f <@~|@floating>@ <|@
tid i1827 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1059 
trueValue: i37 
falseValue: i1826 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1059 trueValue: i37 falseValue: i1826  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1827 
y: i67 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1827 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.045658967703249176
=== Inputs ===
condition: v621 
=== Succesors ===
trueSuccessor: v622 
falseSuccessor: v623 
=== Usages ===
=== Predecessor ===
a1866 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v621 #trueSuccessor: v622 #falseSuccessor: v623  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v128|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v130|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v128|DWORD[.], y: v128|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = CMOVE (falseValue: v129|DWORD, ~trueValue: v132|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 4580828837362602688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5b5ab31a
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1283 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v898 
stateDuring: ?1283 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v898 stateDuring: ?1283 #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 4600427528938383618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4602158225987924468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1867 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1867  <|@  <|@
f <@~|@floating>@ <|@
tid v1949 <|@
result [v102|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1860 
=== Succesors ===
=== Usages ===
i1867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1867 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1949 
=== Succesors ===
next: i1868 
=== Usages ===
i703 v686 
=== Predecessor ===
v474 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1949 #next: i1868  <|@  <|@
f <@~|@floating>@ <|@
tid v1885 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1868 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1885 
=== Succesors ===
next: v648 
=== Usages ===
i693 
=== Predecessor ===
i1867 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1885 #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid i693 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i67 
y: i1868 
=== Succesors ===
=== Usages ===
i694 i695 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i67 y: i1868  <|@  <|@
f <@~|@floating>@ <|@
tid i694 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i693 
y: i9 
=== Succesors ===
=== Usages ===
i695 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i693 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i693 
y: i694 
=== Succesors ===
=== Usages ===
v696 v686 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i693 y: i694  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1858 
y: i212 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1858 y: i212  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v645 
=== Succesors ===
trueSuccessor: v646 
falseSuccessor: v647 
=== Usages ===
=== Predecessor ===
i1868 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v645 #trueSuccessor: v646 #falseSuccessor: v647  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOV [v102|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = SUB (x: v103|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = SAR v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ADD (x: v135|DWORD, y: v134|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v96|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors 
    xhandlers
    flags 
    probability 4600016743920142509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1867 
y: i695 
=== Succesors ===
=== Usages ===
i687 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1867 y: i695  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v686 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v686 trueValue: i9 falseValue: i10  <|@  <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@58f63eeb
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i521 i687 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i521 i687  <|@  <|@
tid ?1284 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v906 
stateDuring: ?1284 
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v906 stateDuring: ?1284 #next: v690  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v136|DWORD, y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v137|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4593230348934292764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1192 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1192  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1858 
y: i222 
=== Succesors ===
=== Usages ===
v1192 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1858 y: i222  <|@  <|@
f <@*|@fixed>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v700 
=== Succesors ===
trueSuccessor: v1189 
falseSuccessor: v1191 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v700 #trueSuccessor: v1189 #falseSuccessor: v1191  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v96|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 4593230348934292764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v1192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid i703 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1867 
y: i9 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1867 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i703 
y: i695 
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i703 y: i695  <|@  <|@
f <@~|@floating>@ <|@
tid i697 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v696 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v696 trueValue: i9 falseValue: i10  <|@  <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@14002976
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i521 i697 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i521 i697  <|@  <|@
tid ?1286 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v913 
stateDuring: ?1286 
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v913 stateDuring: ?1286 #next: v704  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = SHR v133|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v136|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v139|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1300 
=== Usages ===
=== Predecessor ===
v1192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1300  <|@  <|@
f <@~|@floating>@ <|@
tid i1301 <|@
result int[-232211|0xfffffffffffc74ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -232211
stableDimension: 0
stamp: i32 [-232211] ⇊00000000fffc74ed ⇈00000000fffc74ed
stampKind: i32
value: int[-232211|0xfffffffffffc74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
v1191 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-232211|0xfffffffffffc74ed]] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B92" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1302 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-232211 - -224019] ⇊00000000fffc14ed ⇈00000000fffcf4ed
valueDescription: i32
=== Inputs ===
merge: v1299 
values: i1301 i1306 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1299 values: i1301 i1306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1300 v1305 
=== Succesors ===
next: v1304 
=== Usages ===
i1302 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1300 v1305 #next: v1304  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
bci: 140
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 432
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 - - i521 - 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 - - i521 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?69 
actionAndReason: i1302 
speculation: a13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1299 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?69 actionAndReason: i1302 speculation: a13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v140|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: v0|QWORD[.] v1|QWORD[.] - - v95|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:140, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1344 
=== Usages ===
=== Predecessor ===
v1180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1344  <|@  <|@
f <@~|@floating>@ <|@
tid i1345 <|@
result int[-213787|0xfffffffffffcbce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -213787
stableDimension: 0
stamp: i32 [-213787] ⇊00000000fffcbce5 ⇈00000000fffcbce5
stampKind: i32
value: int[-213787|0xfffffffffffcbce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
v1179 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-213787|0xfffffffffffcbce5], Object[null]] destination: B104 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1342 
=== Usages ===
=== Predecessor ===
v1176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid i1343 <|@
result int[-211227|0xfffffffffffcc6e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -211227
stableDimension: 0
stamp: i32 [-211227] ⇊00000000fffcc6e5 ⇈00000000fffcc6e5
stampKind: i32
value: int[-211227|0xfffffffffffcc6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
v1175 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-211227|0xfffffffffffcc6e5], Object[null]] destination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1339 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1339  <|@  <|@
f <@~|@floating>@ <|@
tid a1341 <|@
result v141|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@516136508
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@516136508]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1340 <|@
result int[-210236|0xfffffffffffccac4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -210236
stableDimension: 0
stamp: i32 [-210236] ⇊00000000fffccac4 ⇈00000000fffccac4
stampKind: i32
value: int[-210236|0xfffffffffffccac4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
v1171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@516136508] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-210236|0xfffffffffffccac4], v141|QWORD[.]] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B105" "B104" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1336 <|@
result v142|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-213787 - -209931] ⇊00000000fffc80c4 ⇈00000000fffcfff5
valueDescription: i32
=== Inputs ===
merge: v1333 
values: i1340 i1343 i1345 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1333 values: i1340 i1343 i1345  <|@  <|@
f <@~|@floating>@ <|@
tid a1337 <|@
result v143|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1333 
values: a1341 a13 a13 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1333 values: a1341 a13 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1339 v1342 v1344 
=== Succesors ===
next: v1338 
=== Usages ===
i1336 a1337 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1339 v1342 v1344 #next: v1338  <|@  <|@
f <@*|@fixed>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?518 
actionAndReason: i1336 
speculation: a1337 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?518 actionAndReason: i1336 speculation: a1337  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v142|DWORD, v143|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v143|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - v95|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:116, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B109" 
    xhandlers
    flags 
    probability 4592333407530849606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i122 
y: i9 
=== Succesors ===
=== Usages ===
i1289 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i122 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = SHL v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD, v144|DWORD] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B19" "B108" 
    successors "B110" "B122" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i554 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v549 
values: i255 i122 
=== Succesors ===
=== Usages ===
?551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v549 values: i255 i122  <|@  <|@
f <@~|@floating>@ <|@
tid i1289 <|@
result v146|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v549 
values: i456 i455 
=== Succesors ===
=== Usages ===
i1290 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v549 values: i456 i455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v550 v552 
=== Succesors ===
next: a1869 
=== Usages ===
i554 i1289 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v550 v552 #next: a1869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1869 <|@
result v147|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v1870 
=== Usages ===
a975 v1923 v1890 
=== Predecessor ===
v549 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v1870  <|@  <|@
tid ?551 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - - - i554 
=== Succesors ===
=== Usages ===
v1351 a1638 v1870 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - - - i554  <|@  <|@
f <@~|@floating>@ <|@
tid v1923 <|@
result [v147|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1869 
=== Succesors ===
=== Usages ===
v1870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1870 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?551 
guard: - 
address: v1923 
=== Succesors ===
next: v1200 
=== Usages ===
v1702 
=== Predecessor ===
a1869 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?551 guard: - address: v1923 #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1870 
y: v1688 
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1870 y: v1688  <|@  <|@
f <@*|@fixed>@ <|@
tid v1200 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1702 
=== Succesors ===
trueSuccessor: v1197 
falseSuccessor: v1199 
=== Usages ===
=== Predecessor ===
v1870 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1702 #trueSuccessor: v1197 #falseSuccessor: v1199  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|DWORD, v146|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v145|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction CMP [v147|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19, 3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B121" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1871 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1871  <|@  <|@
f <@~|@floating>@ <|@
tid v1890 <|@
result [v147|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1869 
=== Succesors ===
=== Usages ===
i1871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1871 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1890 
=== Succesors ===
next: v1204 
=== Usages ===
v1007 
=== Predecessor ===
v1197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1890 #next: v1204  <|@  <|@
f <@~|@floating>@ <|@
tid i1290 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1289 
y: i9 
=== Succesors ===
=== Usages ===
v1007 v1894 v1891 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1289 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1290 
y: i1871 
=== Succesors ===
=== Usages ===
v1204 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1290 y: i1871  <|@  <|@
f <@*|@fixed>@ <|@
tid v1204 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1007 
=== Succesors ===
trueSuccessor: v1201 
falseSuccessor: v1203 
=== Usages ===
=== Predecessor ===
i1871 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1007 #trueSuccessor: v1201 #falseSuccessor: v1203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = INC v146|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v148|DWORD, y: [v147|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1872 
=== Usages ===
v1033 a1872 v1045 
=== Predecessor ===
v1204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1872  <|@  <|@
f <@~|@floating>@ <|@
tid a975 <|@
result v149|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1869 
=== Succesors ===
=== Usages ===
v1891 v1894 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1869  <|@  <|@
f <@~|@floating>@ <|@
tid v1891 <|@
result [v149|QWORD[.] + v148|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a975 
index: i1290 
=== Succesors ===
=== Usages ===
a1872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a975 index: i1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1872 <|@
result v150|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1201 
address: v1891 
=== Succesors ===
next: v1250 
=== Usages ===
a989 v990 v1892 v1893 v1924 
=== Predecessor ===
v1201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1201 address: v1891 #next: v1250  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1872 
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1872  <|@  <|@
f <@~|@floating>@ <|@
tid v1894 <|@
result [v149|QWORD[.] + v148|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a975 
index: i1290 
=== Succesors ===
=== Usages ===
v1045 v1033 j1669 j1676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a975 index: i1290  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v990 
=== Succesors ===
trueSuccessor: v1249 
falseSuccessor: v1248 
=== Usages ===
=== Predecessor ===
a1872 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v990 #trueSuccessor: v1249 #falseSuccessor: v1248  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = UNCOMPRESSPOINTER (input: v147|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[.] = MOV [v149|QWORD[.] + v148|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v150|DWORD[.], y: v150|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B119" 
    xhandlers
    flags 
    probability 4578528455022274758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1258 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1258  <|@  <|@
f <@*|@fixed>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1359 
=== Predecessor ===
v1249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B118" 
    xhandlers
    flags 
    probability 4592961108059538913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid v1924 <|@
result [v150|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1872 
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1873 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1924 
=== Succesors ===
next: v1364 
=== Usages ===
v1703 
=== Predecessor ===
v1248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1924 #next: v1364  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1873 
y: v1695 
=== Succesors ===
=== Usages ===
v1364 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1873 y: v1695  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.08092944845607031
=== Inputs ===
condition: v1703 
=== Succesors ===
trueSuccessor: v1362 
falseSuccessor: v1361 
=== Usages ===
=== Predecessor ===
v1873 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1703 #trueSuccessor: v1362 #falseSuccessor: v1361  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v150|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08092944845607031 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576525192461061253
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1627 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1627 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1642 
=== Usages ===
v1925 v1926 
=== Predecessor ===
v1362 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1642  <|@  <|@
f <@~|@floating>@ <|@
tid v1925 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1627 
index: - 
=== Succesors ===
=== Usages ===
j1642 v1644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1627 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1642 <|@
result v151|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1925 
=== Succesors ===
next: j1643 
=== Usages ===
j1704 j1648 v1937 
=== Predecessor ===
j1627 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1925 #next: j1643  <|@  <|@
f <@~|@floating>@ <|@
tid v1926 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1627 
index: - 
=== Succesors ===
=== Usages ===
j1643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1627 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1643 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1926 
=== Succesors ===
next: v1635 
=== Usages ===
v1632 
=== Predecessor ===
j1642 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1926 #next: v1635  <|@  <|@
f <@~|@floating>@ <|@
tid j1704 <|@
result v152|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1642 
y: j781 
=== Succesors ===
=== Usages ===
v1632 v1644 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1642 y: j781  <|@  <|@
f <@~|@floating>@ <|@
tid v1632 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1643 
y: j1704 
=== Succesors ===
=== Usages ===
v1635 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1643 y: j1704  <|@  <|@
f <@*|@fixed>@ <|@
tid v1635 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1632 
=== Succesors ===
trueSuccessor: v1633 
falseSuccessor: v1634 
=== Usages ===
=== Predecessor ===
j1643 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1632 #trueSuccessor: v1633 #falseSuccessor: v1634  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = LEA [v151|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v152|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4546504034859869975
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1638 
=== Usages ===
=== Predecessor ===
v1635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1638 <|@
result v153|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?551 
arguments: v1388 i399 i9 
=== Succesors ===
next: j1639 
=== Usages ===
j1639 
=== Predecessor ===
v1633 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?551 arguments: v1388 i399 i9 #next: j1639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1639 <|@
result v153|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1638 
=== Succesors ===
next: v1649 
=== Usages ===
j1648 
=== Predecessor ===
a1638 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1638 #next: v1649  <|@  <|@
f <@*|@fixed>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1646 
=== Predecessor ===
j1639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v145|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3] <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v153|QWORD[.]] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576471476754261175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1644 
=== Usages ===
=== Predecessor ===
v1635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1644  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1925 
value: j1704 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1641 
=== Usages ===
=== Predecessor ===
v1634 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1925 value: j1704 stateAfter: - lastLocationAccess: - #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid v1937 <|@
result [v151|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1642 
index: - 
=== Succesors ===
=== Usages ===
v1641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1642 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1937 
=== Succesors ===
next: v1647 
=== Usages ===
=== Predecessor ===
v1644 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1937 #next: v1647  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1646 
=== Predecessor ===
v1641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v151|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v151|QWORD] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B115" 
    successors "B120" 
    xhandlers
    flags 
    probability 4576525192461061253
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1648 <|@
result v154|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1646 
values: j1642 j1639 
=== Succesors ===
=== Usages ===
v1929 v1928 a1266 v1938 v1939 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1646 values: j1642 j1639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1647 v1649 
=== Succesors ===
next: a1266 
=== Usages ===
j1648 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1647 v1649 #next: a1266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1266 <|@
result v155|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1648 
=== Succesors ===
next: j1658 
=== Usages ===
a1271 
=== Predecessor ===
v1646 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1648 #next: j1658  <|@  <|@
f <@~|@floating>@ <|@
tid j1654 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1220 
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1927 <|@
result [v3|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1654 
index: - 
=== Succesors ===
=== Usages ===
j1658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1654 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1658 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1927 
=== Succesors ===
next: v1659 
=== Usages ===
v1659 
=== Predecessor ===
a1266 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1927 #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid v1928 <|@
result [v154|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1928 
value: j1658 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1662 
=== Usages ===
=== Predecessor ===
j1658 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1928 value: j1658 stateAfter: - lastLocationAccess: - #next: v1662  <|@  <|@
f <@~|@floating>@ <|@
tid v1929 <|@
result [v154|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
v1662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1929 
value: v1695 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1874 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1929 value: v1695 stateAfter: - lastLocationAccess: - #next: i1874  <|@  <|@
f <@~|@floating>@ <|@
tid v1893 <|@
result [v150|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1872 
=== Succesors ===
=== Usages ===
i1874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1874 <|@
result v157|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1893 
=== Succesors ===
next: v1666 
=== Usages ===
v1666 
=== Predecessor ===
v1662 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1893 #next: v1666  <|@  <|@
f <@~|@floating>@ <|@
tid v1938 <|@
result [v154|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
v1666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1938 
value: i1874 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1668 
=== Usages ===
=== Predecessor ===
i1874 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1938 value: i1874 stateAfter: - lastLocationAccess: - #next: v1668  <|@  <|@
f <@~|@floating>@ <|@
tid v1939 <|@
result [v154|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
v1668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1939 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1271 
=== Usages ===
=== Predecessor ===
v1666 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1939 value: a831 stateAfter: - lastLocationAccess: - #next: a1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1271 <|@
result v155|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1266 
=== Succesors ===
next: v1272 
=== Usages ===
a1032 
=== Predecessor ===
v1668 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1266 #next: v1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
a1271 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid a1032 <|@
result v158|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n -
=== Inputs ===
value: a1271 
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1201 
address: v1894 
value: a1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1669 
=== Usages ===
=== Predecessor ===
v1272 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1201 address: v1894 value: a1032 stateAfter: - lastLocationAccess: - #next: j1669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1669 <|@
result [v149|QWORD[.] + v148|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1894 
=== Succesors ===
next: v1673 
=== Usages ===
j1670 
=== Predecessor ===
v1033 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1894 #next: v1673  <|@  <|@
f <@~|@floating>@ <|@
tid j1670 <|@
result v159|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1669 
y: i401 
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1669 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1930 <|@
result [v159|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1670 
index: j1440 
=== Succesors ===
=== Usages ===
v1673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1670 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1930 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1875 
=== Usages ===
=== Predecessor ===
j1669 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1930 value: i1442 stateAfter: - lastLocationAccess: - #next: a1875  <|@  <|@
f <@~|@floating>@ <|@
tid v1892 <|@
result [v150|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1872 
=== Succesors ===
=== Usages ===
a1875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1875 <|@
result v161|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1892 
=== Succesors ===
next: v109 
=== Usages ===
a995 
=== Predecessor ===
v1673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1892 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid a995 <|@
result v162|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1875 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1875  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
a1875 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v154|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v154|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v154|QWORD[*]], y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v154|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = MOV [v150|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v154|QWORD[*] + 12], y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v154|QWORD[*] + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[.] = COMPRESSPOINTER (input: v155|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v149|QWORD[.] + v148|DWORD * 4 + 16], y: v158|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = LEA [v149|QWORD[.] + v148|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[*] = SHR v160|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v159|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[.] = MOV [v150|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = UNCOMPRESSPOINTER (input: v161|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v162|QWORD[.]] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B119" 
    xhandlers
    flags 
    probability 4592289661724537936
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1365 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1365  <|@  <|@
f <@*|@fixed>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1359 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B112" "B118" 
    successors "B120" 
    xhandlers
    flags 
    probability 4593211515879690601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1258 v1365 
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1258 v1365 #next: v1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1201 
address: v1894 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1676 
=== Usages ===
=== Predecessor ===
v1359 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1201 address: v1894 value: a831 stateAfter: - lastLocationAccess: - #next: j1676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1676 <|@
result [v149|QWORD[.] + v148|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1894 
=== Succesors ===
next: v1680 
=== Usages ===
j1677 
=== Predecessor ===
v1045 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1894 #next: v1680  <|@  <|@
f <@~|@floating>@ <|@
tid j1677 <|@
result v163|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1676 
y: i401 
=== Succesors ===
=== Usages ===
v1931 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1676 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1931 <|@
result [v163|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1677 
index: j1440 
=== Succesors ===
=== Usages ===
v1680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1677 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1931 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
j1676 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1931 value: i1442 stateAfter: - lastLocationAccess: - #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid a989 <|@
result v165|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1872 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1872  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v1680 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v149|QWORD[.] + v148|DWORD * 4 + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = LEA [v149|QWORD[.] + v148|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[*] = SHR v164|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v163|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = UNCOMPRESSPOINTER (input: v150|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|QWORD[.]] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B117" "B86" "B119" 
    successors 
    xhandlers
    flags 
    probability 4593794107068914893
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a110 <|@
result v166|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v108 
values: a995 a13 a989 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: a995 a13 a989  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v109 v113 v383 
=== Succesors ===
next: v12 
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v109 v113 v383 #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 6]
stamp: void
=== Inputs ===
value: a110 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a110  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v167|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 6]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v8 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v8 trueValue: i9 falseValue: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v166|QWORD[.], y: v166|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v167|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v1204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid i1356 <|@
result int[-251419|0xfffffffffffc29e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251419
stableDimension: 0
stamp: i32 [-251419] ⇊00000000fffc29e5 ⇈00000000fffc29e5
stampKind: i32
value: int[-251419|0xfffffffffffc29e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1349 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
v1203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251419|0xfffffffffffc29e5], Object[null]] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1352  <|@  <|@
f <@~|@floating>@ <|@
tid a1354 <|@
result v168|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1664780200
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@1664780200]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1353 <|@
result int[-289084|0xfffffffffffb96c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -289084
stableDimension: 0
stamp: i32 [-289084] ⇊00000000fffb96c4 ⇈00000000fffb96c4
stampKind: i32
value: int[-289084|0xfffffffffffb96c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1349 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
v1199 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1664780200] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-289084|0xfffffffffffb96c4], v168|QWORD[.]] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1349 <|@
result v169|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-289084 - -250123] ⇊00000000fff800c4 ⇈00000000ffffbff5
valueDescription: i32
=== Inputs ===
merge: v1346 
values: i1353 i1356 
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1346 values: i1353 i1356  <|@  <|@
f <@~|@floating>@ <|@
tid a1350 <|@
result v170|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1346 
values: a1354 a13 
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1346 values: a1354 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1352 v1355 
=== Succesors ===
next: v1351 
=== Usages ===
i1349 a1350 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1352 v1355 #next: v1351  <|@  <|@
f <@*|@fixed>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?551 
actionAndReason: i1349 
speculation: a1350 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?551 actionAndReason: i1349 speculation: a1350  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v169|DWORD, v170|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v169|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v170|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v145|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:19, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b2f1bbb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 0]
locals: v0|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6490671046028922 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604021496286132480
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608619363788113591
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604718268269789408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction CMP (x: v11|DWORD, y: [v8|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604718268269789408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v10|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:2, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604092140562483242
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603930442492703314
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580831559641381640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578516116599383858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580828041001632418
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580426393697807058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572622385448852924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572608310889856035
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533323799713755614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 4603513260051696782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v10|QWORD[.]] destination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B23" 
    successors "B25" "B29" 
    xhandlers
    flags 
    probability 4606160544057191587
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|QWORD[.], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.15737516016132225 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" "B74" 
    xhandlers
    flags 
    probability 4604903852333188805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SHL v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06591371968154047 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B75" 
    xhandlers
    flags 
    probability 4604460343117766326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.], v27|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B66" "B74" "B28" 
    successors "B76" "B106" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|QWORD[.], v95|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - v95|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction CMP [v94|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116, 3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B105" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v94|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = SHL v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B104" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = INC v97|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v94|QWORD[.] + v97|DWORD * 4 + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = LEA [v94|QWORD[.] + v97|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[*] = SHR v100|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v99|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[.] = MOV [v94|QWORD[.] + v98|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = INC v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v101|DWORD[.], y: v101|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B93" 
    xhandlers
    flags 
    probability 4605362011606000071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v101|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B94" 
    xhandlers
    flags 
    probability 4605159557637901108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B79" "B93" 
    successors "B95" "B98" 
    xhandlers
    flags 
    probability 4605958090089092625
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v94|QWORD[.] + v98|DWORD * 4 + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = LEA [v94|QWORD[.] + v98|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[*] = SHR v127|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v126|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v102|DWORD[.], y: v102|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4602158225987924468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOV [v102|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = SUB (x: v103|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = SAR v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ADD (x: v135|DWORD, y: v134|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v96|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors 
    xhandlers
    flags 
    probability 4600016743920142509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v136|DWORD, y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v137|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4600750754935519790
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v128|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v130|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v128|DWORD[.], y: v128|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = CMOVE (falseValue: v129|DWORD, ~trueValue: v132|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 4600427528938383618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" "B108" 
    xhandlers
    flags 
    probability 4599993464945675776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4597977216912232797
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD, v26|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594194787186546554
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v29|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594144519517586443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594194787186546554
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE v32|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD[*] + 12] y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v34|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[*] + 16], input: v34|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = COMPRESSPOINTER (input: v33|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v36|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.], v27|DWORD] destination: B28 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4593230348934292764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v96|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 4593230348934292764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = SHR v133|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v136|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v139|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B109" 
    xhandlers
    flags 
    probability 4592333407530849606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = SHL v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD, v144|DWORD] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B19" "B108" 
    successors "B110" "B122" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|DWORD, v146|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v145|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction CMP [v147|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19, 3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B121" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = INC v146|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v148|DWORD, y: [v147|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = UNCOMPRESSPOINTER (input: v147|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[.] = MOV [v149|QWORD[.] + v148|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v150|DWORD[.], y: v150|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B118" 
    xhandlers
    flags 
    probability 4592961108059538913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v150|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08092944845607031 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B119" 
    xhandlers
    flags 
    probability 4592289661724537936
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B112" "B118" 
    successors "B120" 
    xhandlers
    flags 
    probability 4593211515879690601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v149|QWORD[.] + v148|DWORD * 4 + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = LEA [v149|QWORD[.] + v148|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[*] = SHR v164|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v163|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = UNCOMPRESSPOINTER (input: v150|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|QWORD[.]] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B117" "B86" "B119" 
    successors 
    xhandlers
    flags 
    probability 4593794107068914893
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v166|QWORD[.], y: v166|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v167|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B94" 
    xhandlers
    flags 
    probability 4591052680272697064
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589673442321614256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589773854147570596
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4589773854147570596
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4587280578636921825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD, v22|QWORD[.]] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SHR v37|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v39|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7439668313467649 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585440119366529660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[8|0x8]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" "B32" 
    successors "B34" "B72" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SHR v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = ADD (x: v41|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: 1073741824 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SHL v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B40" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4586547353737878135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SHL v42|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA [v46|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND v47|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVSXD v48|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = ADD (x: v49|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586483488410857298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v49|QWORD + v44|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v49|QWORD + v44|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v49|QWORD + v44|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v49|QWORD + v44|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + 12], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = LEA [v54|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVSXD v43|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v56|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594490130875605176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B71 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B71" 
    successors "B44" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596264167737295094
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v59|QWORD * 4], input: v58|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v59|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v56|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v59|QWORD * 4 + 32], input: v62|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v59|QWORD + 12] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v56|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|QWORD, y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v64|QWORD * 4], input: v66|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v64|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = DEC v56|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v68|QWORD, y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[.] + v68|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v42|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4582753368855183606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SHL v70|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOVSXD v71|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = LEA [v54|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = ADD (x: v73|QWORD[.], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = SHR v74|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = LEA [v54|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = SHR v77|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = SUB (x: v75|QWORD[*], ~y: v76|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = INC v78|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[*]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B56" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582753368855183606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = DEC v80|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = ADD (x: v76|QWORD[*], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[*] = ADD (x: v91|QWORD[*], y: v90|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v92|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|QWORD[*]] destination: B70 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B70" 
    successors "B57" "B70" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4587256968482554102
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v80|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4582753368855183606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[*] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v81|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v82|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v83|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = COMPRESSPOINTER (input: v54|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v84|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v85|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9908160945669471 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4587191798135464061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9909296705313714 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 4587128024856683675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B60" 
    successors "B64" "B68" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B63 -> B64 falseDestination: B63 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B67" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 131073 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B61" 
    successors "B75" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD[.], v86|DWORD] destination: B66 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4582753368855183606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4582135748387590751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = LEA [v104|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582070963117799083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v105|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v104|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|QWORD] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors "B85" "B88" 
    xhandlers
    flags 
    probability 4582135748387590751
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE v107|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [v172|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD[*]], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v107|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOV [v101|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD[*] + 12], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD[*] + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[.] = COMPRESSPOINTER (input: v108|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v94|QWORD[.] + v98|DWORD * 4 + 16], y: v111|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = LEA [v94|QWORD[.] + v98|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = SHR v113|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v112|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v102|DWORD[.], y: v102|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4578217944138292224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOV [v102|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = SUB (x: v103|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SAR v120|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = ADD (x: v121|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v96|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors 
    xhandlers
    flags 
    probability 4576435356431941319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v123|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B109" 
    xhandlers
    flags 
    probability 4581855440143791822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|DWORD, v11|DWORD] destination: B19 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 4580828837362602688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B119" 
    xhandlers
    flags 
    probability 4578528455022274758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4578421018245151209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4578249769227813110
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4578249769227813110
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4578249769227813110
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4577046353382148286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v114|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v116|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD[.], y: v114|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = CMOVE (falseValue: v115|DWORD, ~trueValue: v118|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4576777297340289981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576525192461061253
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = LEA [v151|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v152|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576471476754261175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v151|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v151|QWORD] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B115" 
    successors "B120" 
    xhandlers
    flags 
    probability 4576525192461061253
    begin_IR
      LIR
      nr   -1  <|@ instruction [v154|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v154|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [v171|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v154|QWORD[*]], y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v154|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = MOV [v150|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v154|QWORD[*] + 12], y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v154|QWORD[*] + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[.] = COMPRESSPOINTER (input: v155|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v149|QWORD[.] + v148|DWORD * 4 + 16], y: v158|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = LEA [v149|QWORD[.] + v148|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[*] = SHR v160|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v159|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[.] = MOV [v150|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = UNCOMPRESSPOINTER (input: v161|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v162|QWORD[.]] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4572326940111090679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572837862727257376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v43|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v40|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: v41|DWORD 
locals: v0|QWORD[.] v37|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14, 79, 3] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4569276773351716069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v96|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4569276773351716069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = SHR v119|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v124|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v125|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4564077084525836204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v175|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v175|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: int[-1|0xffffffffffffffff] 
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564069179760147717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557245416983666732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B86 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 4556977428071726174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4556810385502868107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 4556798603328090426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87, 79, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4552424538550163995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v174|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9]
locals: v0|QWORD[.] v95|DWORD v1|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - v95|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120, 3] <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|QWORD[.]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4546504034859869975
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v173|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v145|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3] <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v153|QWORD[.]] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248851|0xfffffffffffc33ed]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
locals: v0|QWORD[.] v37|DWORD - v54|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:73, 79, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-211227|0xfffffffffffcc6e5], Object[null]] destination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B105" "B104" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v142|DWORD, v143|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v143|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - v95|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:116, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-224019|0xfffffffffffc94ed]] destination: B92 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B92" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v140|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: v0|QWORD[.] v1|QWORD[.] - - v95|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:140, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-232211|0xfffffffffffc74ed]] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235539|0xfffffffffffc67ed]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B35" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v40|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: v41|DWORD 
locals: v0|QWORD[.] v37|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:10, 14, 79, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251419|0xfffffffffffc29e5], Object[null]] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v169|DWORD, v170|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v169|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v170|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v145|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:19, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-213787|0xfffffffffffcbce5], Object[null]] destination: B104 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1664780200] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-289084|0xfffffffffffb96c4], v168|QWORD[.]] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -202523 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 16, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-244577|0xfffffffffffc449f]] destination: B35 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249107|0xfffffffffffc32ed]] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@516136508] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-210236|0xfffffffffffccac4], v141|QWORD[.]] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: aload_1       
     3: invokevirtual #78         // put:(java.lang.Object, java.lang.Object)java.lang.Object
     6: ifnonnull     13
     9: iconst_1      
    10: goto          14
    13: iconst_0      
    14: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b2f1bbb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 0]
locals: rsi|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   20  <|@ instruction stack:56|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.6490671046028922 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604021496286132480
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608619363788113591
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   34  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604718268269789408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rdx|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16, 3] <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604718268269789408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r9|DWORD[.] = MOV [rbx|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rdx|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:2, 15, 16, 3] <|@ <|@
      nr   58  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction CMP (x: r9|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604092140562483242
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603930442492703314
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rdx|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3] <|@ <|@
      nr   86  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580831559641381640
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP rbx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578516116599383858
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:64|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16, 3] <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580828041001632418
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  154  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580426393697807058
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:64|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16, 3] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572622385448852924
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction CMP rbx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572608310889856035
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:64|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16, 3] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533323799713755614
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:64|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3] <|@ <|@
      nr  130  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 4603513260051696782
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r14|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B23" 
    successors "B25" "B29" 
    xhandlers
    flags 
    probability 4606160544057191587
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  256  <|@ instruction TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.15737516016132225 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" "B74" 
    xhandlers
    flags 
    probability 4604903852333188805
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  336  <|@ instruction rax|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.06591371968154047 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B75" 
    xhandlers
    flags 
    probability 4604460343117766326
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction r10|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r13|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B66" "B74" "B28" 
    successors "B76" "B106" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  798  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: r14|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116, 3] <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B105" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  806  <|@ instruction rsi|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B104" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction r9|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  816  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction MOV (x: [r13|QWORD[.] + rsi|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + rsi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  830  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  832  <|@ instruction rdi|DWORD[.] = MOV [r13|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  834  <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  836  <|@ instruction rbp|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  840  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B93" 
    xhandlers
    flags 
    probability 4605362011606000071
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction CMP [rdi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B94" 
    xhandlers
    flags 
    probability 4605159557637901108
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B79" "B93" 
    successors "B95" "B98" 
    xhandlers
    flags 
    probability 4605958090089092625
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1064  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1070  <|@ instruction MOV (x: [r14|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1072  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4602158225987924468
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1114  <|@ instruction r8|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1116  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = SAR rbp|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1122  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr 1124  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors 
    xhandlers
    flags 
    probability 4600016743920142509
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr 1140  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1142  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4600750754935519790
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1080  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr 1082  <|@ instruction rsi|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr 1084  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rsi|DWORD) condition: = <|@ <|@
      nr 1086  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1088  <|@ instruction rax|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr 1092  <|@ instruction CMP (x: rbp|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 4600427528938383618
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" "B108" 
    xhandlers
    flags 
    probability 4599993464945675776
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3] <|@ <|@
      nr  234  <|@ instruction CMP rax|DWORD y: -1 size: DWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4597977216912232797
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  244  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594194787186546554
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 48] size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594144519517586443
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 240] instr: 0 <|@ <|@
      nr  296  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594194787186546554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction MOV [rax|QWORD[*] + 12] y: 8 size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV [rax|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  312  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  314  <|@ instruction J (address: [rax|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  316  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  322  <|@ instruction MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  324  <|@ instruction r10|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B28 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4593230348934292764
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1146  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr 1148  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 4593230348934292764
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = SHR r8|DWORD size: DWORD <|@ <|@
      nr 1154  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1156  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr 1158  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr 1166  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1168  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B109" 
    xhandlers
    flags 
    probability 4592333407530849606
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1232  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction rdx|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr 1236  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B19" "B108" 
    successors "B110" "B122" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1244  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1246  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19, 3] <|@ <|@
      nr 1248  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B121" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction r14|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr 1254  <|@ instruction CMP (x: r14|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr 1256  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1260  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1262  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1264  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1266  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B118" 
    xhandlers
    flags 
    probability 4592961108059538913
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1278  <|@ instruction BRANCH trueDestinationProbability: 0.08092944845607031 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B119" 
    xhandlers
    flags 
    probability 4592289661724537936
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1368  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B112" "B118" 
    successors "B120" 
    xhandlers
    flags 
    probability 4593211515879690601
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1372  <|@ instruction MOV (x: [rax|QWORD[.] + r14|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1374  <|@ instruction rax|QWORD[.] = LEA [rax|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1376  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1378  <|@ instruction MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1380  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B117" "B86" "B119" 
    successors 
    xhandlers
    flags 
    probability 4593794107068914893
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1388  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr 1390  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B94" 
    xhandlers
    flags 
    probability 4591052680272697064
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B79 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589673442321614256
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589773854147570596
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4589773854147570596
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction CMP stack:64|DWORD y: -1 size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4587280578636921825
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  190  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  192  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = SHR r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP rdx|DWORD y: 9 size: DWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.7439668313467649 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585440119366529660
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r13|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  356  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" "B32" 
    successors "B34" "B72" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  370  <|@ instruction r9|DWORD = SHR r10|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction CMP rbx|DWORD y: 1073741824 size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rdi|DWORD = SHL rbx|DWORD size: DWORD <|@ <|@
      nr  382  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B40" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  400  <|@ instruction CMP rdi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4586547353737878135
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rax|DWORD = SHL rbx|DWORD y: 3 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  414  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586483488410857298
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  440  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  442  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction stack:80|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  496  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  502  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  504  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594490130875605176
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  764  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B71 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B71" 
    successors "B44" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596264167737295094
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  512  <|@ instruction r11|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  514  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  522  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  534  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4 + 32], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  536  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 12] size: QWORD <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  546  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  558  <|@ instruction J (address: [rdi|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  560  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  562  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  570  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  572  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction TEST r14|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr  588  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4582753368855183606
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction rdi|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD <|@ <|@
      nr  602  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  612  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  618  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B56" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582753368855183606
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  752  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  758  <|@ instruction MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  760  <|@ instruction JUMP ~[] destination: B70 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B70" 
    successors "B57" "B70" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4587256968482554102
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  624  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4582753368855183606
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction r14|QWORD[*] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOV stack:68|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  646  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  656  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [r14|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  662  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  666  <|@ instruction CMP stack:68|DWORD y: 512 size: DWORD <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 0.9908160945669471 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4587191798135464061
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction CMP stack:60|DWORD y: 512 size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.9909296705313714 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 4587128024856683675
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B60" 
    successors "B64" "B68" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction CMP stack:68|DWORD y: 131072 size: DWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B63 -> B64 falseDestination: B63 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B67" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction CMP stack:60|DWORD y: 131073 size: DWORD <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B61" 
    successors "B75" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction rsi|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  720  <|@ instruction rdx|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B66 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4582753368855183606
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4582135748387590751
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  856  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  858  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  860  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582070963117799083
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  910  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  912  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors "B85" "B88" 
    xhandlers
    flags 
    probability 4582135748387590751
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  918  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  920  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  924  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  928  <|@ instruction rdx|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  930  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  942  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  944  <|@ instruction MOV (x: [r14|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  946  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  948  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4578217944138292224
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  990  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  992  <|@ instruction rsi|DWORD = SAR rbp|DWORD size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr  998  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors 
    xhandlers
    flags 
    probability 4576435356431941319
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1016  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B109" 
    xhandlers
    flags 
    probability 4581855440143791822
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B19 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 4580828837362602688
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3] <|@ <|@
      nr 1102  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B119" 
    xhandlers
    flags 
    probability 4578528455022274758
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction JUMP ~[] destination: B112 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4578421018245151209
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4578249769227813110
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4578249769227813110
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4578249769227813110
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4577046353382148286
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  954  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  956  <|@ instruction rsi|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  958  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rsi|DWORD) condition: = <|@ <|@
      nr  960  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  964  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  966  <|@ instruction CMP (x: rbp|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4576777297340289981
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576525192461061253
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1282  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1284  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1288  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1290  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576471476754261175
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1320  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1322  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr 1324  <|@ instruction rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B115" 
    successors "B120" 
    xhandlers
    flags 
    probability 4576525192461061253
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1330  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1332  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 1336  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1338  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1344  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1346  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction MOV (x: [rax|QWORD[.] + r14|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1350  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1352  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1354  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1356  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1358  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1360  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4572326940111090679
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction stack:80|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572837862727257376
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  486  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [stack:16, stack:52, stack:56, stack:64]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:60|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: stack:64|DWORD 
locals: stack:32|QWORD[.] stack:68|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14, 79, 3] <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4569276773351716069
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4569276773351716069
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r8|DWORD = SHR r8|DWORD size: DWORD <|@ <|@
      nr 1028  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr 1032  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1036  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr 1040  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1042  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4564077084525836204
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  280  <|@ st <@st|@reference-map: [r14:0, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: int[-1|0xffffffffffffffff] 
locals: r14|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3] <|@ <|@
      nr  282  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564069179760147717
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557245416983666732
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3] <|@ <|@
      nr  976  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B86 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 4556977428071726174
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4556810385502868107
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:80|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 4556798603328090426
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87, 79, 3] <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4552424538550163995
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction stack:68|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction stack:60|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction r14|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  882  <|@ st <@st|@reference-map: [r13:0, stack:28, stack:36, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9]
locals: stack:32|QWORD[.] stack:96|DWORD stack:40|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - stack:96|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120, 3] <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rbp|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction rax|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rdi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction r10|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4546504034859869975
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1294  <|@ instruction stack:96|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1300  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1302  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1304  <|@ st <@st|@reference-map: [stack:0, stack:16, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3] <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction r10|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1316  <|@ instruction JUMP ~[] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-248851|0xfffffffffffc33ed] <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@reference-map: [rax:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
locals: stack:32|QWORD[.] stack:68|DWORD - rax|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:73, 79, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1204  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1206  <|@ instruction r10|DWORD = MOVE input: int[-211227|0xfffffffffffcc6e5] <|@ <|@
      nr 1208  <|@ instruction JUMP ~[] destination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B105" "B104" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1224  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1226  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1228  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - stack:96|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:116, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction r10|DWORD = MOVE input: int[-224019|0xfffffffffffc94ed] <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B92 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B92" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: rsi|QWORD[.] rdx|QWORD[.] - - r11|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:140, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1172  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1174  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction r10|DWORD = MOVE input: int[-232211|0xfffffffffffc74ed] <|@ <|@
      nr 1180  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-235539|0xfffffffffffc67ed] <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B35" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: r13|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: r9|DWORD 
locals: stack:32|QWORD[.] r11|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:10, 14, 79, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1396  <|@ instruction r10|DWORD = MOVE input: int[-251419|0xfffffffffffc29e5] <|@ <|@
      nr 1398  <|@ instruction JUMP ~[] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1412  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1414  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1416  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:19, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1194  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-213787|0xfffffffffffcbce5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B104 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1664780200] <|@ <|@
      nr 1404  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1406  <|@ instruction r10|DWORD = MOVE input: int[-289084|0xfffffffffffb96c4] <|@ <|@
      nr 1408  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction MOV [r15|QWORD + 668] y: -202523 size: DWORD <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 16, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-244577|0xfffffffffffc449f] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B35 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction r10|DWORD = MOVE input: int[-249107|0xfffffffffffc32ed] <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1212  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@516136508] <|@ <|@
      nr 1216  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|DWORD = MOVE input: int[-210236|0xfffffffffffccac4] <|@ <|@
      nr 1220  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: aload_1       
     3: invokevirtual #78         // put:(java.lang.Object, java.lang.Object)java.lang.Object
     6: ifnonnull     13
     9: iconst_1      
    10: goto          14
    13: iconst_0      
    14: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b2f1bbb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 0]
locals: rsi|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   20  <|@ instruction stack:56|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.6490671046028922 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604021496286132480
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608619363788113591
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   34  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604718268269789408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rdx|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16, 3] <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604718268269789408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r9|DWORD[.] = MOV [rbx|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rdx|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:2, 15, 16, 3] <|@ <|@
      nr   58  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction CMP (x: r9|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604092140562483242
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   76  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603930442492703314
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rdx|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3] <|@ <|@
      nr   86  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580831559641381640
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP rbx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   98  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578516116599383858
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:64|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16, 3] <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580828041001632418
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  154  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580426393697807058
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:64|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16, 3] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572622385448852924
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction CMP rbx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572608310889856035
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:64|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16, 3] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533323799713755614
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:64|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3] <|@ <|@
      nr  130  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 4603513260051696782
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r14|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B23" 
    successors "B25" "B29" 
    xhandlers
    flags 
    probability 4606160544057191587
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  256  <|@ instruction TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.15737516016132225 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" "B74" 
    xhandlers
    flags 
    probability 4604903852333188805
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  336  <|@ instruction rax|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.06591371968154047 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B75" 
    xhandlers
    flags 
    probability 4604460343117766326
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction r10|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r13|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B66" "B74" "B28" 
    successors "B76" "B106" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  798  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: r14|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116, 3] <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B105" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  806  <|@ instruction rsi|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B104" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction r9|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  816  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B94" "B80" 
    xhandlers
    flags 
    probability 4606160544057191588
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction MOV (x: [r13|QWORD[.] + rsi|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + rsi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  830  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  832  <|@ instruction rdi|DWORD[.] = MOV [r13|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  834  <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  836  <|@ instruction rbp|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  840  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B94 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B94" 
    xhandlers
    flags 
    probability 4605362011606000071
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction CMP [rdi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  850  <|@ instruction BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B95" "B98" 
    xhandlers
    flags 
    probability 4605958090089092625
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1064  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1068  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1070  <|@ instruction MOV (x: [r14|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1072  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4602158225987924468
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1114  <|@ instruction r8|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1116  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = SAR rbp|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1122  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr 1124  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors 
    xhandlers
    flags 
    probability 4600016743920142509
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr 1132  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr 1140  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1142  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4600750754935519790
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1080  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr 1082  <|@ instruction rsi|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr 1084  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rsi|DWORD) condition: = <|@ <|@
      nr 1086  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1088  <|@ instruction rax|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr 1092  <|@ instruction CMP (x: rbp|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 4600427528938383618
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" "B108" 
    xhandlers
    flags 
    probability 4599993464945675776
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3] <|@ <|@
      nr  234  <|@ instruction CMP rax|DWORD y: -1 size: DWORD <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4597977216912232797
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  244  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594194787186546554
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 48] size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594144519517586443
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 240] instr: 0 <|@ <|@
      nr  296  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594194787186546554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction MOV [rax|QWORD[*] + 12] y: 8 size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV [rax|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  310  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  312  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  314  <|@ instruction J (address: [rax|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  316  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  322  <|@ instruction MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  324  <|@ instruction r10|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B28 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4593230348934292764
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1146  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr 1148  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 4593230348934292764
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction r8|DWORD = SHR r8|DWORD size: DWORD <|@ <|@
      nr 1154  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1156  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr 1158  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr 1166  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1168  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B109" 
    xhandlers
    flags 
    probability 4592333407530849606
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1234  <|@ instruction rdx|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr 1236  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B19" "B108" 
    successors "B110" "B122" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1246  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19, 3] <|@ <|@
      nr 1248  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B121" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction r14|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr 1254  <|@ instruction CMP (x: r14|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr 1256  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B119" "B113" 
    xhandlers
    flags 
    probability 4593777291066298749
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1260  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1262  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1264  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1266  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B119 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B119" 
    xhandlers
    flags 
    probability 4592961108059538913
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1278  <|@ instruction BRANCH trueDestinationProbability: 0.08092944845607031 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" 
    successors "B120" 
    xhandlers
    flags 
    probability 4593211515879690601
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1372  <|@ instruction MOV (x: [rax|QWORD[.] + r14|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1374  <|@ instruction rax|QWORD[.] = LEA [rax|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1376  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1378  <|@ instruction MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1380  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B117" "B86" "B119" 
    successors 
    xhandlers
    flags 
    probability 4593794107068914893
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1388  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr 1390  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589673442321614256
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4589773854147570596
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction CMP stack:64|DWORD y: -1 size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4587280578636921825
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  190  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  192  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = SHR r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP rdx|DWORD y: 9 size: DWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.7439668313467649 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585440119366529660
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r13|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" "B32" 
    successors "B34" "B72" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  356  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r9|DWORD = SHR r10|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction CMP rbx|DWORD y: 1073741824 size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rdi|DWORD = SHL rbx|DWORD size: DWORD <|@ <|@
      nr  382  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B41" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  400  <|@ instruction CMP rdi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" "B39" 
    xhandlers
    flags 
    probability 4586547353737878135
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rax|DWORD = SHL rbx|DWORD y: 3 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  414  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B37 -> B41 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586483488410857298
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  440  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  442  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction stack:80|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  496  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  502  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  504  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594490130875605176
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  764  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B71 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B71" 
    successors "B44" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596264167737295094
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  512  <|@ instruction r11|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  514  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" "B46" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  522  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  534  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4 + 32], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  536  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 12] size: QWORD <|@ <|@
      nr  538  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B44" 
    successors "B50" "B49" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  546  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  558  <|@ instruction J (address: [rdi|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  560  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  562  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B47" 
    successors "B53" "B52" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  570  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  572  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585482931620864184
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B50" 
    successors "B58" "B55" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction TEST r14|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr  588  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4582753368855183606
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction rdi|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  600  <|@ instruction rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD <|@ <|@
      nr  602  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  612  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  618  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B56" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582753368855183606
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  752  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  758  <|@ instruction MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  760  <|@ instruction JUMP ~[] destination: B70 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B70" 
    successors "B58" "B70" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4587256968482554102
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  624  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  626  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B56 -> B58 falseDestination: B56 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B56" 
    successors "B59" "B63" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction r14|QWORD[*] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOV stack:68|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  646  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  656  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [r14|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  662  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  666  <|@ instruction CMP stack:68|DWORD y: 512 size: DWORD <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 0.9908160945669471 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" "B61" 
    xhandlers
    flags 
    probability 4587191798135464061
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction CMP stack:60|DWORD y: 512 size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.9909296705313714 condition: < trueDestination: B59 -> B63 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B58" "B59" 
    successors "B64" "B68" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction CMP stack:68|DWORD y: 131072 size: DWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B63 -> B64 falseDestination: B63 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4587193195203773716
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction CMP stack:60|DWORD y: 131073 size: DWORD <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B64 -> B66 falseDestination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" "B61" 
    successors "B75" 
    xhandlers
    flags 
    probability 4587256968482554102
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction rsi|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  720  <|@ instruction rdx|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B66 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4582135748387590751
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  854  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  856  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  858  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  860  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582070963117799083
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  910  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  912  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors "B85" "B88" 
    xhandlers
    flags 
    probability 4582135748387590751
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  918  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  920  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  924  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  928  <|@ instruction rdx|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  930  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  942  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  944  <|@ instruction MOV (x: [r14|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  946  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  948  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4578217944138292224
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  990  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  992  <|@ instruction rsi|DWORD = SAR rbp|DWORD size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr  998  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors 
    xhandlers
    flags 
    probability 4576435356431941319
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1004  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1016  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B109" 
    xhandlers
    flags 
    probability 4581855440143791822
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r13|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B19 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 4580828837362602688
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3] <|@ <|@
      nr 1102  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4578421018245151209
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4577046353382148286
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  954  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  956  <|@ instruction rsi|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  958  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rsi|DWORD) condition: = <|@ <|@
      nr  960  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  964  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  966  <|@ instruction CMP (x: rbp|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4576777297340289981
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  984  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576525192461061253
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1282  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1284  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1288  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1290  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576471476754261175
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1320  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1322  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr 1324  <|@ instruction rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B115" 
    successors "B120" 
    xhandlers
    flags 
    probability 4576525192461061253
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1330  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1332  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 1336  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1338  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1344  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1346  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1348  <|@ instruction MOV (x: [rax|QWORD[.] + r14|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1350  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1352  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1354  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1356  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1358  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1360  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572837862727257376
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction stack:80|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  486  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [stack:16, stack:52, stack:56, stack:64]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:60|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: stack:64|DWORD 
locals: stack:32|QWORD[.] stack:68|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14, 79, 3] <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4569276773351716069
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4569276773351716069
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r8|DWORD = SHR r8|DWORD size: DWORD <|@ <|@
      nr 1028  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr 1032  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1036  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3] <|@ <|@
      nr 1040  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1042  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4564077084525836204
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  280  <|@ st <@st|@reference-map: [r14:0, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: int[-1|0xffffffffffffffff] 
locals: r14|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3] <|@ <|@
      nr  282  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4564069179760147717
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557245416983666732
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3] <|@ <|@
      nr  976  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B86 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 4556798603328090426
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87, 79, 3] <|@ <|@
      nr  690  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4552424538550163995
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction stack:68|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction stack:60|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction r14|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  878  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  882  <|@ st <@st|@reference-map: [r13:0, stack:28, stack:36, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9]
locals: stack:32|QWORD[.] stack:96|DWORD stack:40|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - stack:96|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120, 3] <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rbp|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction rax|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rdi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction r10|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4546504034859869975
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1294  <|@ instruction stack:96|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1300  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1302  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1304  <|@ st <@st|@reference-map: [stack:0, stack:16, stack:52, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3] <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction r10|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1316  <|@ instruction JUMP ~[] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-248851|0xfffffffffffc33ed] <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@reference-map: [rax:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
locals: stack:32|QWORD[.] stack:68|DWORD - rax|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:73, 79, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1204  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1206  <|@ instruction r10|DWORD = MOVE input: int[-211227|0xfffffffffffcc6e5] <|@ <|@
      nr 1208  <|@ instruction JUMP ~[] destination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B105" "B104" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1224  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1226  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1228  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - stack:96|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:116, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction r10|DWORD = MOVE input: int[-224019|0xfffffffffffc94ed] <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B92 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B92" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: rsi|QWORD[.] rdx|QWORD[.] - - r11|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:140, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1172  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1174  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction r10|DWORD = MOVE input: int[-232211|0xfffffffffffc74ed] <|@ <|@
      nr 1180  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-235539|0xfffffffffffc67ed] <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B35" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: r13|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: r9|DWORD 
locals: stack:32|QWORD[.] r11|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:10, 14, 79, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1396  <|@ instruction r10|DWORD = MOVE input: int[-251419|0xfffffffffffc29e5] <|@ <|@
      nr 1398  <|@ instruction JUMP ~[] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1412  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1414  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1416  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:19, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1194  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r10|DWORD = MOVE input: int[-213787|0xfffffffffffcbce5] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B104 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1664780200] <|@ <|@
      nr 1404  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1406  <|@ instruction r10|DWORD = MOVE input: int[-289084|0xfffffffffffb96c4] <|@ <|@
      nr 1408  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction MOV [r15|QWORD + 668] y: -202523 size: DWORD <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:40|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 16, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-244577|0xfffffffffffc449f] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B35 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction r10|DWORD = MOVE input: int[-249107|0xfffffffffffc32ed] <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1212  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@516136508] <|@ <|@
      nr 1216  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|DWORD = MOVE input: int[-210236|0xfffffffffffccac4] <|@ <|@
      nr 1220  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: aload_1       
     3: invokevirtual #78         // put:(java.lang.Object, java.lang.Object)java.lang.Object
     6: ifnonnull     13
     9: iconst_1      
    10: goto          14
    13: iconst_0      
    14: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c2450488974244048895424388502448b561c4c8bda49c1eb0344895c243449b800e01b17010000004c894424284585d20f855202000041ba00000000660f1f440000448b4e188b4e0c418bd948c1e303413bca0f8ee0000000418bcad1e1423b0ccd0c0000000f831b0a0000448b4c8b10438504cc49c1e1034c3bca0f847c0300008b5e20418bfaffc785db0f850b000000850500000000448bd7eba581fbaddeadde897c241c894c242444895424200f853b000000488bf2498bd148b8ffffffffffffffff666690e8000000009085c00f85e2070000850500000000448b54241c488b542438488b742440e951ffffff81fbaddeadde0f842400000048c1e303488bf3488b542438498bc948b8ffffffffffffffff666690e80000000090ebae850500000000448bd7488b542438488b742440e909ffffff4c8bf3448be94d85f60f847a010000458b560c418bc5d1e0443bd00f84cd020000458bd54d8bee4c8b4424284c8bf641817d08addeadde0f8542090000458b5d0c418bf2d1e6443bde0f8630080000448bce41ffc1453bd90f86c20800008b5c243441895cb510498d74b51048c1ee0946882406438b7c8d10418b461c418beaffc585ff0f8411000000813cfd08000000addeadde0f847f04000043895c8d104b8d748d1048c1ee094688240641896e0c85c00f8455000000448b04c50c000000412b6e108bf5d1fe03f54181fb000200000f8317010000413bf0410f9fc0450fb6c0498bf6488b542438418bca6690e80000000090b801000000488b6c24504883c458850500000000c5f877c3418b462081f8addeaddebe08000000ba040000000f44d685c0b8080000000f44d03bea0f8fb5040000b801000000488b6c24504883c458850500000000c5f877c3488b742440488b5424380f1f8000000000e8000000009083f8ff488b7424400f85c20000008b460c8b561848c1e2034c8bf2448be8e97dfeffff498b4760488d5030493b57700f87bb050000498957600f1880f00000004c8b442428488bd0c7400c0800000048c70001000000c74008addeaddec5f9efc0c5fe7f4010488bc248c1e803894618488bc648c1e80946882400458bd54c8bea4c8bf6e940feffff4181fb000002000f83d006000041d1e8413bf0410f9fc0450fb6c0498bf6488b542438418bca666690e80000000090b801000000488b6c24504883c458850500000000c5f877c38bd0d1e2448be84c8b4424288b4618813cc508000000addeadde0f85e3060000448bf241ffc6443b34c50c0000000f839206000048c1e003468b54b0104585d20f841200000042813cd508000000addeadde0f84c9030000448b5c243446895cb0104a8d44b01048c1e8094688240049c1e2034d85d20f94c00fb6c0488b6c24504883c458850500000000c5f877c3894c24244489542420837c2420ff0f85050300008b460c8b561848c1e2034c8bf2448be8e918fdffff4c8b442428418bd2c1ea0283fa090f830c03000041bd08000000448b5c2434458bca41d1e9418bd94103dd81fb000000400f83ba0500008bfbd1e7443bd70f8f34060000498b5760498b4f7081ffffffff000f838d0300008bc3c1e0038d401783e0f84863c0488be84803ea483be90f877003000049896f600f188410c00000000f188410000100000f188410400100000f18841080010000897a0c48c70201000000c74208addeadde488bc2448bef448954241c4c89742410448bf3488d78104963f5488d56f8c5f9efc049c7c200000000e9060000006666904d8bd3c4a17e7f04974d8d5a084c3bda7eee488d56fc4c3bda0f8f12000000c5f9efc0c4a17a7f449720498d520c4c8bda488d56fe4c3bda0f8f11000000c5f9efc0c4a1f97e049f498d53024c8bda48ffce4c3bde0f8f040000004689249f41f7c6ffffff7f0f8449000000418bfdffcfc1e7024863ff488d70104803f748c1ee09488d781048c1ef09482bf748ffc64c8b442428e915000000660f1f44000048ffce488bd74903d04803d64488224883fe017deb44896c24244c8b742410488bd0448b54241c498d7e10488d7210498bd24889442408e80000000090488b442408488bf048c1ee034c8b74244041897618498bf648c1ee094c8b44242846882406817c241c000200000f830e000000817c2424000200000f8dbe020000817c241c000002000f8370030000817c2424010002000f8d71040000418b760c418b561848c1e203448bd64c8beae915fbffff498b7760488d5618493b57700f8799020000498957600f1886d800000048baaddeaddeaddeadde488bce488b92a8000000488916c74608addeadde8b14fd0c00000089560c895e1048c1e90343894c8d104b8d748d1048c1ee094688240641896e0c85c00f8492000000448b04c50c000000412b6e108bf5d1fe03f54181fb000200000f8369010000413bf0410f9fc0450fb6c0498bf6488b542438418bca0f1f8000000000e80000000090b801000000488b6c24504883c458850500000000c5f877c38b542424448b6c2420e951fcffff498bf690e80000000090b801000000488b6c24504883c458850500000000c5f877c3448beae9f2fcffff418b462081f8addeaddebe08000000ba040000000f44d685c0b8080000000f44d03bea0f8f4b010000b801000000488b6c24504883c458850500000000c5f877c3448b5c2434498b5760488d4a18493b4f700f87b901000049894f600f1882d8000000488bf248baaddeaddeaddeadde488bce488b92a8000000488916c74608addeadde428b14d50c00000089560c44895e1048c1e90342894cb0104a8d74b01048c1ee0946882406428b34d51000000048c1e6034c8bd6e9d6fbffff44894c242044896c2424448954241c4c8974241048baaddeaddeaddeadde488bf28bd7b900000000448bf3448befe80000000090e99ffcffff4181fb000002000f838e01000041d1e8413bf0410f9fc0450fb6c0498bf6488b542438418bca660f1f440000e80000000090b801000000488b6c24504883c458850500000000c5f877c34c8bf648beaddeaddeaddeaddeba08000000b901000000e800000000904c8b442428498bf6e92bfaffff488b742440e944fbffff498bf6666690e8000000009049ba0000000000000000e904fbffff498bf64c8bd60f1f440000e800000000904c8b4424284c8b742440e93efdffff8944241c897c242444894c242044895c240444891424448bf548beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0418bee8b44241c8b7c2424448b4c2420448b5c2404448b14244c8b4424288b5c24344c8b742440e910fdffff44891424488944241048beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0448b1424488b4424104c8b442428448b5c2434e917feffff41baed33fcff4589979c0200004d89a7a8020000e8000000009049bb00000000000000004489142441bae5c6fcff4589979c0200004d899fa8020000e80000000090458bda488b542438498bf641baed94fcff4589979c0200004d89a7a8020000e80000000090458bda488b542438498bf641baed74fcffebd9458bda41baed67fcff4589979c0200004d89a7a8020000e8000000009049bb000000000000000041bae529fcff4589979c0200004d899fa8020000e8000000009049bb00000000000000004489142441bae5bcfcffe95affffff49baaddeaddeaddeadde4d8bda41bac496fbffebbe41c7879c020000e5e8fcff4d89a7a8020000e80000000090458bda41ba9f44fcffe974ffffff41baed32fcffe9ecfeffff4489142449baaddeaddeaddeadde4d8bda41bac4cafcffe9f8feffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b2f1bbb slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 58 [rdx:0, rsi:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |Object[null]   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 12 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 64 14 r11|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 71 16 stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 76 18 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 86 20 stack:56|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 91 22 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 94 24 BRANCH trueDestinationProbability: 0.6490671046028922 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22  <||@
  Comment 100 block B1 null  <||@
  Comment 100 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 28 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 106 30 JUMP ~[] destination: B1 -> B2  <||@
  Comment 106 block B2 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 106 32 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 112 34 r9|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 116 36 rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 119 38 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 126 40 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 129 42 BRANCH trueDestinationProbability: 0.5507111845837876 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21  <||@
  Comment 135 block B3 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 135 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 46 rcx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 140 48 CMP (x: rcx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16, 3]  <||@
  Comment 140 [rdx:0, rbx:0, rsi:0, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 140 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 148 50 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20  <||@
  Comment 154 block B4 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 154 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 54 r9|DWORD[.] = MOV [rbx|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 159 56 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:2, 15, 16, 3]  <||@
  Comment 159 [rdx:0, rsi:0, r9:0, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 159 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 163 58 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 167 60 CMP (x: r9|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 170 62 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 176 block B6 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 176 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 176 74 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 179 76 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 184 78 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 186 80 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 192 block B7 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 192 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 192 84 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3]  <||@
  Comment 192 [rdx:0, rsi:0, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 192 {infopoint: SAFEPOINT}  <||@
  Comment 192 11  <||@
  Comment 198 86 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 201 88 JUMP ~[] destination: B7 -> B2  <||@
  Comment 203 block B8 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 203 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 92 CMP rbx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 203 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 209 98 stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 213 100 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 217 102 stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 222 94 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 228 block B9 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 228 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 228 104 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 231 106 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 234 108 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16, 3]  <||@
  Comment 234 7  <||@
  Comment 247 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 252 [stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:64|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 253 110 JUMP ~[] destination: B9 -> B13  <||@
  Comment 253 block B13 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 253 152 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 253 154 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 255 156 BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 261 block B14 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 261 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 160 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16, 3]  <||@
  Comment 261 [stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:64|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 261 {infopoint: SAFEPOINT}  <||@
  Comment 261 11  <||@
  Comment 267 162 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 272 164 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 277 166 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 282 168 JUMP ~[] destination: B14 -> B2  <||@
  Comment 287 block B10 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 287 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 120 CMP rbx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 287 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 293 122 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 299 block B12 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 299 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 299 140 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 303 142 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 306 144 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 311 146 rcx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 314 148 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16, 3]  <||@
  Comment 314 7  <||@
  Comment 327 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 332 [stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:64|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 333 150 JUMP ~[] destination: B12 -> B13  <||@
  Comment 335 block B11 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 335 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 335 128 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3]  <||@
  Comment 335 [stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:64|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 335 {infopoint: SAFEPOINT}  <||@
  Comment 335 11  <||@
  Comment 341 130 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 344 132 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 349 134 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 354 136 JUMP ~[] destination: B11 -> B2  <||@
  Comment 359 block B21 null  <||@
  Comment 359 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 359 220 r14|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 362 222 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 365 224 JUMP ~[] destination: B21 -> B24  <||@
  Comment 365 block B24 null  <||@
  Comment 365 254 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 365 256 TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD  <||@
  Comment 368 258 BRANCH trueDestinationProbability: 0.15737516016132225 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B29  <||@
  Comment 374 block B29 null  <||@
  Comment 374 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 334 r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 378 336 rax|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 383 338 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 386 340 BRANCH trueDestinationProbability: 0.06591371968154047 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B74  <||@
  Comment 392 block B74 null  <||@
  Comment 392 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 786 r10|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 395 788 r13|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 398 790 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 403 792 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 406 794 JUMP ~[] destination: B74 -> B75  <||@
  Comment 406 block B75 null  <||@
  Comment 406 796 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 406 798 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116, 3]  <||@
  Comment 406 [r13:0, r14:0, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3  |4          |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 406 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 406 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 414 800 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B106  <||@
  Comment 420 block B76 null  <||@
  Comment 420 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 420 804 r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 424 806 rsi|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 429 808 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 432 810 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B105  <||@
  Comment 438 block B77 null  <||@
  Comment 438 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 438 814 r9|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 444 816 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 447 818 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B104  <||@
  Comment 453 block B78 null  <||@
  Comment 453 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 453 822 rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 457 824 MOV (x: [r13|QWORD[.] + rsi|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 462 826 rsi|QWORD[.] = LEA [r13|QWORD[.] + rsi|DWORD * 4 + 16] size: QWORD  <||@
  Comment 467 828 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 471 830 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 475 832 rdi|DWORD[.] = MOV [r13|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 480 834 rax|DWORD[.] = MOV [r14|QWORD[.] + 28] size: DWORD  <||@
  Comment 484 836 rbp|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 489 838 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 491 840 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B94 falseDestination: B78 -> B80  <||@
  Comment 497 block B80 null  <||@
  Comment 497 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 848 CMP [rdi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 497 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 508 850 BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B94  <||@
  Comment 514 block B94 null  <||@
  Comment 514 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 514 1062 MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 519 1064 rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 524 1066 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 528 1068 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 532 1070 MOV (x: [r14|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 536 1072 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 538 1074 BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B98  <||@
  Comment 544 block B98 null  <||@
  Comment 544 1112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 544 1114 r8|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 552 1116 rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD  <||@
  Comment 556 1118 rsi|DWORD = SAR rbp|DWORD size: DWORD  <||@
  Comment 560 1120 rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 562 1122 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 569 1124 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 575 block B99 null  <||@
  Comment 575 1126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 1128 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 578 1130 r8|DWORD = SETCC condition: >  <||@
  Comment 586 1132 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 589 1134 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 594 1136 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 597 1138 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3]  <||@
  Comment 597 9  <||@
  Comment 599 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 604 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 605 1140 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 610 1142 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 619 12  <||@
  Comment 629 block B95 null  <||@
  Comment 629 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 629 1078 rax|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 633 1080 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 633 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 639 1082 rsi|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 644 1084 rdx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rsi|DWORD) condition: =  <||@
  Comment 652 1086 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 654 1088 rax|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 659 1090 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rax|DWORD) condition: =  <||@
  Comment 662 1092 CMP (x: rbp|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 664 1094 BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97  <||@
  Comment 670 block B97 null  <||@
  Comment 670 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 670 1108 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 675 1110 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 684 12  <||@
  Comment 694 block B22 null  <||@
  Comment 694 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 228 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 699 230 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 704 232 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3]  <||@
  Comment 704 9  <||@
  Comment 711 {HotSpotMethod<EconomicMapImpl.findHash(Object)>}  <||@
  Comment 716 [stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 717 234 CMP rax|DWORD y: -1 size: DWORD  <||@
  Comment 720 240 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 725 236 BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B108  <||@
  Comment 731 block B23 null  <||@
  Comment 731 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 731 242 rax|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 734 244 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 737 246 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 741 248 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 744 250 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 747 252 JUMP ~[] destination: B23 -> B24  <||@
  Comment 752 block B25 null  <||@
  Comment 752 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 752 262 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 756 264 rdx|QWORD = LEA [rax|QWORD + 48] size: QWORD  <||@
  Comment 760 266 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 764 268 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 770 block B27 null  <||@
  Comment 770 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 770 292 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 774 294 AMD64PREFETCH ~[rax|QWORD + 240] instr: 0  <||@
  Comment 781 296 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 781 298 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 786 300 JUMP ~[] destination: B27 -> B28  <||@
  Comment 786 block B28 null  <||@
  Comment 786 302 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 786 304 rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 789 306 MOV [rax|QWORD[*] + 12] y: 8 size: DWORD  <||@
  Comment 796 308 MOV [rax|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 803 310 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 803 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 810 312 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 814 314 J (address: [rax|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 819 316 rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 826 318 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 829 320 rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 836 322 MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 840 324 r10|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 843 326 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 846 328 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 849 330 JUMP ~[] destination: B28 -> B75  <||@
  Comment 854 block B100 null  <||@
  Comment 854 1144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 854 1146 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 861 1148 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B102  <||@
  Comment 867 block B101 null  <||@
  Comment 867 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 867 1152 r8|DWORD = SHR r8|DWORD size: DWORD  <||@
  Comment 870 1154 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 873 1156 r8|DWORD = SETCC condition: >  <||@
  Comment 881 1158 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 884 1160 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 889 1162 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 892 1164 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3]  <||@
  Comment 892 9  <||@
  Comment 895 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 900 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 901 1166 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 906 1168 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 915 12  <||@
  Comment 925 block B108 null  <||@
  Comment 925 1230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 925 1234 rdx|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 929 1236 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 932 1240 JUMP ~[] destination: B108 -> B109  <||@
  Comment 932 block B109 null  <||@
  Comment 932 1242 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 932 206 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 937 1244 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 940 1246 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19, 3]  <||@
  Comment 940 [rax:0, rsi:0, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD     |                   |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 940 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 940 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 951 1248 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B122  <||@
  Comment 957 block B110 null  <||@
  Comment 957 1250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 1252 r14|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 963 1254 CMP (x: r14|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 971 1256 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B121  <||@
  Comment 977 block B111 null  <||@
  Comment 977 1258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 977 1260 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 981 1262 r10|DWORD[.] = MOV [rax|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 986 1264 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 989 1266 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B119 falseDestination: B111 -> B113  <||@
  Comment 995 block B113 null  <||@
  Comment 995 1274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 995 1276 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 995 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1007 1278 BRANCH trueDestinationProbability: 0.08092944845607031 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B119  <||@
  Comment 1013 block B119 null  <||@
  Comment 1013 1370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1013 1270 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1018 1372 MOV (x: [rax|QWORD[.] + r14|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1023 1374 rax|QWORD[.] = LEA [rax|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1028 1376 rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1032 1378 MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1036 1380 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 1040 1382 JUMP ~[] destination: B119 -> B120  <||@
  Comment 1040 block B120 null  <||@
  Comment 1040 1384 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1040 1386 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1043 1388 rax|DWORD = SETCC condition: =  <||@
  Comment 1049 1390 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1058 12  <||@
  Comment 1068 block B5 null  <||@
  Comment 1068 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 66 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1072 68 stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1077 70 JUMP ~[] destination: B5 -> B17  <||@
  Comment 1077 block B17 null  <||@
  Comment 1077 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1077 182 CMP stack:64|DWORD y: -1 size: DWORD  <||@
  Comment 1082 184 BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 1088 block B18 null  <||@
  Comment 1088 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1088 188 rax|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 1091 190 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 1094 192 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 1098 194 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1101 196 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1104 198 JUMP ~[] destination: B18 -> B24  <||@
  Comment 1109 block B30 null  <||@
  Comment 1109 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1109 344 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1114 346 rdx|DWORD = SHR r10|DWORD y: 2 size: DWORD  <||@
  Comment 1120 348 CMP rdx|DWORD y: 9 size: DWORD  <||@
  Comment 1123 350 BRANCH trueDestinationProbability: 0.7439668313467649 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 1129 block B31 null  <||@
  Comment 1129 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1129 354 r13|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1135 358 JUMP ~[] destination: B31 -> B33  <||@
  Comment 1135 block B33 null  <||@
  Comment 1135 368 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1135 356 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1140 370 r9|DWORD = SHR r10|DWORD size: DWORD  <||@
  Comment 1146 372 rbx|DWORD = ADD (x: r9|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1152 374 CMP rbx|DWORD y: 1073741824 size: DWORD  <||@
  Comment 1158 376 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B72  <||@
  Comment 1164 block B34 null  <||@
  Comment 1164 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1164 380 rdi|DWORD = SHL rbx|DWORD size: DWORD  <||@
  Comment 1168 382 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1171 384 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 1177 block B36 null  <||@
  Comment 1177 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1177 396 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1181 398 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1185 400 CMP rdi|DWORD y: 16777215 size: DWORD  <||@
  Comment 1191 402 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B41  <||@
  Comment 1197 block B37 null  <||@
  Comment 1197 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1197 406 rax|DWORD = SHL rbx|DWORD y: 3 size: DWORD  <||@
  Comment 1202 408 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 1205 410 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 1208 412 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 1211 414 rbp|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1217 416 CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1220 418 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B37 -> B41 falseDestination: B37 -> B39  <||@
  Comment 1226 block B39 null  <||@
  Comment 1226 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1226 434 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 1230 436 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1238 438 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1246 440 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1254 442 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1262 444 MOV (x: [rdx|QWORD + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 1265 446 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 1272 448 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1272 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1279 450 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1279 452 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1282 454 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1285 456 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1290 458 stack:80|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1295 460 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1298 462 JUMP ~[] destination: B39 -> B42  <||@
  Comment 1298 block B42 null  <||@
  Comment 1298 494 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1298 496 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1302 498 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1305 500 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1309 502 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1313 504 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1320 506 JUMP ~[] destination: B42 -> B43  <||@
  Comment 1325 block B71 loop 1 depth 1 header:1722|LoopBegin  <||@
  Comment 1325 762 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1328 764 r10|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1331 766 JUMP ~[] destination: B71 -> B43  <||@
  Comment 1331 block B43 loop 1 depth 1 header:1722|LoopBegin  <||@
  Comment 1331 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1331 510 J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1337 512 r11|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1341 514 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1344 516 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B71  <||@
  Comment 1346 block B44 null  <||@
  Comment 1346 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1346 520 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1350 522 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1353 524 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 1359 block B46 null  <||@
  Comment 1359 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1359 532 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 1363 534 J (address: [rdi|QWORD[.] + r10|QWORD * 4 + 32], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1370 536 rdx|QWORD = LEA [r10|QWORD + 12] size: QWORD  <||@
  Comment 1374 538 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1377 540 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1377 block B47 null  <||@
  Comment 1377 542 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1377 544 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1381 546 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1384 548 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 1390 block B49 null  <||@
  Comment 1390 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1390 556 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 1394 558 J (address: [rdi|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1400 560 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1404 562 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1407 564 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1407 block B50 null  <||@
  Comment 1407 566 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1407 568 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1410 570 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1413 572 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52  <||@
  Comment 1419 block B52 null  <||@
  Comment 1419 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1419 580 MOV (x: [rdi|QWORD[.] + r11|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1423 582 JUMP ~[] destination: B52 -> B53  <||@
  Comment 1423 block B53 null  <||@
  Comment 1423 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1423 586 TEST r14|DWORD y: 2147483647 size: DWORD  <||@
  Comment 1430 588 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B55  <||@
  Comment 1436 block B55 null  <||@
  Comment 1436 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1436 598 rdi|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 1441 600 rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD  <||@
  Comment 1444 602 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1447 604 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1451 606 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 1454 608 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1458 610 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1462 612 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1466 614 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 1469 616 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 1472 618 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1477 620 JUMP ~[] destination: B55 -> B56  <||@
  Comment 1482 block B70 loop 2 depth 1 header:1519|LoopBegin  <||@
  Comment 1482 750 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1488 752 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 1491 754 rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r8|QWORD) size: QWORD  <||@
  Comment 1497 756 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1500 758 MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1503 760 JUMP ~[] destination: B70 -> B56  <||@
  Comment 1503 block B56 loop 2 depth 1 header:1519|LoopBegin  <||@
  Comment 1503 622 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1503 624 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 1507 626 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B56 -> B58 falseDestination: B56 -> B70  <||@
  Comment 1509 block B58 null  <||@
  Comment 1509 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 592 stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1514 636 r14|QWORD[*] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1519 638 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1522 640 r10|QWORD = MOV stack:68|DWORD size: DWORD  <||@
  Comment 1527 642 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 1531 644 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 1535 646 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1538 648 stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1543 650 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1543 {Field[name=StubRoutines::_arrayof_oop_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd20, value=0x106813060]:0x106813060}  <||@
  Comment 1549 652 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1554 654 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 1561 656 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1566 658 MOV (x: [r14|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1570 660 rsi|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1577 662 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1582 664 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1586 666 CMP stack:68|DWORD y: 512 size: DWORD  <||@
  Comment 1594 668 BRANCH trueDestinationProbability: 0.9908160945669471 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B63  <||@
  Comment 1600 block B59 null  <||@
  Comment 1600 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1600 672 CMP stack:60|DWORD y: 512 size: DWORD  <||@
  Comment 1608 674 BRANCH trueDestinationProbability: 0.9909296705313714 condition: < trueDestination: B59 -> B63 falseDestination: B59 -> B61  <||@
  Comment 1614 block B63 null  <||@
  Comment 1614 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1614 702 CMP stack:68|DWORD y: 131072 size: DWORD  <||@
  Comment 1622 704 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B63 -> B64 falseDestination: B63 -> B68  <||@
  Comment 1628 block B64 null  <||@
  Comment 1628 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1628 708 CMP stack:60|DWORD y: 131073 size: DWORD  <||@
  Comment 1636 710 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B64 -> B66 falseDestination: B64 -> B67  <||@
  Comment 1642 block B66 null  <||@
  Comment 1642 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1642 718 rsi|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 1646 720 rdx|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD  <||@
  Comment 1650 722 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 1654 724 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1657 726 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1660 728 JUMP ~[] destination: B66 -> B75  <||@
  Comment 1665 block B81 null  <||@
  Comment 1665 852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1665 854 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1669 856 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1673 858 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1677 860 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 1683 block B83 null  <||@
  Comment 1683 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1683 908 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1687 910 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1694 912 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1694 914 JUMP ~[] destination: B83 -> B84  <||@
  Comment 1694 block B84 null  <||@
  Comment 1694 916 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1694 918 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1694 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1704 920 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1707 922 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1714 924 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1717 926 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1717 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1724 928 rdx|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1731 930 MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 1734 932 MOV (x: [rsi|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 1737 934 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 1741 936 MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1746 938 rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1751 940 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1755 942 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1759 944 MOV (x: [r14|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 1763 946 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1765 948 BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B88  <||@
  Comment 1771 block B88 null  <||@
  Comment 1771 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1771 988 r8|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1779 990 rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD  <||@
  Comment 1783 992 rsi|DWORD = SAR rbp|DWORD size: DWORD  <||@
  Comment 1787 994 rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1789 996 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 1796 998 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 1802 block B89 null  <||@
  Comment 1802 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1802 1002 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1805 1004 r8|DWORD = SETCC condition: >  <||@
  Comment 1813 1006 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1816 1008 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1821 1010 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1824 1012 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3]  <||@
  Comment 1824 9  <||@
  Comment 1831 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 1836 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1837 1014 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1842 1016 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1851 12  <||@
  Comment 1861 block B19 null  <||@
  Comment 1861 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1861 202 rdx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1865 204 r13|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1870 208 JUMP ~[] destination: B19 -> B109  <||@
  Comment 1875 block B96 null  <||@
  Comment 1875 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1875 1098 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1878 1100 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3]  <||@
  Comment 1878 9  <||@
  Comment 1879 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 1884 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1885 1102 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1890 1104 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1899 12  <||@
  Comment 1909 block B32 null  <||@
  Comment 1909 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1909 362 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1912 366 JUMP ~[] destination: B32 -> B33  <||@
  Comment 1917 block B85 null  <||@
  Comment 1917 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1917 952 rax|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 1921 954 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 1921 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 1927 956 rsi|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1932 958 rdx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rsi|DWORD) condition: =  <||@
  Comment 1940 960 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1942 962 rax|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1947 964 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rax|DWORD) condition: =  <||@
  Comment 1950 966 CMP (x: rbp|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1952 968 BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87  <||@
  Comment 1958 block B87 null  <||@
  Comment 1958 980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1958 982 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1963 984 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1972 12  <||@
  Comment 1982 block B114 null  <||@
  Comment 1982 1280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1982 1282 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1987 1284 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1991 1286 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 1995 1288 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1999 1290 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 2005 block B116 null  <||@
  Comment 2005 1318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2005 1320 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 2009 1322 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 2016 1324 rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2019 1326 JUMP ~[] destination: B116 -> B117  <||@
  Comment 2019 block B117 null  <||@
  Comment 2019 1328 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2019 1330 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2019 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2029 1332 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2032 1334 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 2039 1336 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 2042 1338 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 2042 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 2049 1340 rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 2057 1342 MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 2060 1344 MOV (x: [rsi|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 2064 1346 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 2068 1348 MOV (x: [rax|QWORD[.] + r14|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 2073 1350 rsi|QWORD[.] = LEA [rax|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD  <||@
  Comment 2078 1352 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2082 1354 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2086 1356 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2094 1358 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 2098 1360 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2101 1362 JUMP ~[] destination: B117 -> B120  <||@
  Comment 2106 block B41 null  <||@
  Comment 2106 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2106 466 stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2111 468 stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2116 470 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2121 472 stack:80|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2126 478 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 2126 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 2136 480 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2139 482 rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2141 484 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2146 486 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2149 488 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2152 490 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14, 79, 3]  <||@
  Comment 2152 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2157 [stack:16, stack:52, stack:56, stack:64]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:60|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:68|DWORD  |-  |- 
     stack:   |stack:64|DWORD     |                |   |  
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2158 492 JUMP ~[] destination: B41 -> B42  <||@
  Comment 2163 block B90 null  <||@
  Comment 2163 1018 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2163 1020 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 2170 1022 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 2176 block B91 null  <||@
  Comment 2176 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2176 1026 r8|DWORD = SHR r8|DWORD size: DWORD  <||@
  Comment 2179 1028 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2182 1030 r8|DWORD = SETCC condition: >  <||@
  Comment 2190 1032 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2193 1034 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2198 1036 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2201 1038 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3]  <||@
  Comment 2201 9  <||@
  Comment 2207 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 2212 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2213 1040 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2218 1042 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2227 12  <||@
  Comment 2237 block B26 null  <||@
  Comment 2237 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2237 272 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2240 274 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2240 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2250 276 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 2255 278 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2260 280 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3]  <||@
  Comment 2260 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2265 [r14:0, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                           |1                  |2                  |3  |4  |5 
     locals:  |r14|QWORD[.]                |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |int[-1|0xffffffffffffffff]  |                   |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2266 282 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2266 284 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2271 286 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2274 288 JUMP ~[] destination: B26 -> B28  <||@
  Comment 2279 block B15 null  <||@
  Comment 2279 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2279 172 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2284 174 JUMP ~[] destination: B15 -> B17  <||@
  Comment 2289 block B86 null  <||@
  Comment 2289 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2289 972 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2292 974 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3]  <||@
  Comment 2292 9  <||@
  Comment 2295 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 2300 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2301 976 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2311 978 JUMP ~[] destination: B86 -> B120  <||@
  Comment 2316 block B61 null  <||@
  Comment 2316 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2316 682 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2319 684 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2322 688 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87, 79, 3]  <||@
  Comment 2322 9  <||@
  Comment 2327 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 2332 [stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2333 690 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2338 692 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2343 694 JUMP ~[] destination: B61 -> B66  <||@
  Comment 2348 block B82 null  <||@
  Comment 2348 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2348 864 stack:68|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 2352 866 stack:60|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 2356 868 stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2361 870 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2366 872 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2370 874 r14|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 2373 876 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2373 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2383 878 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2388 880 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2393 882 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120, 3]  <||@
  Comment 2393 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2398 [r13:0, stack:28, stack:36, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1               |2                 
     locals:  |stack:32|QWORD[.]  |stack:96|DWORD  |stack:40|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4               |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:96|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2399 884 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2402 886 rbp|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2405 888 rax|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2409 890 rdi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2413 892 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2418 894 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2423 896 r10|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 2427 898 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2432 900 rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 2436 902 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2441 904 JUMP ~[] destination: B82 -> B84  <||@
  Comment 2446 block B115 null  <||@
  Comment 2446 1292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2446 1294 stack:96|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 2450 1296 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2455 1298 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2455 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2465 1300 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2470 1302 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2475 1304 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3]  <||@
  Comment 2475 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2480 [stack:0, stack:16, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD          |                   |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2481 1306 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2484 1308 r10|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD  <||@
  Comment 2488 1310 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2493 1312 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2498 1314 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 2503 1316 JUMP ~[] destination: B115 -> B117  <||@
  Comment 2508 block B68 null  <||@
  Comment 2508 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2508 738 r10|DWORD = MOVE input: int[-248851|0xfffffffffffc33ed]  <||@
  Comment 2514 740 JUMP ~[] destination: B68 -> B69  <||@
  Comment 2514 block B69 null  <||@
  Comment 2514 742 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2514 744 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2521 746 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2528 748 DEOPT info [bci:73, 79, 3]  <||@
  Comment 2528 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2533 [rax:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1               |2  |3            
     locals:  |stack:32|QWORD[.]  |stack:68|DWORD  |-  |rax|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2534 block B105 null  <||@
  Comment 2534 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2534 1202 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2544 1204 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2548 1206 r10|DWORD = MOVE input: int[-211227|0xfffffffffffcc6e5]  <||@
  Comment 2554 1208 JUMP ~[] destination: B105 -> B107  <||@
  Comment 2554 block B107 null  <||@
  Comment 2554 1222 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2554 1224 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2561 1226 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2568 1228 DEOPT info [bci:116, 3]  <||@
  Comment 2568 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2573 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3  |4               |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:96|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2574 block B92 null  <||@
  Comment 2574 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2574 1046 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2577 1048 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2582 1050 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2585 1052 r10|DWORD = MOVE input: int[-224019|0xfffffffffffc94ed]  <||@
  Comment 2591 1054 JUMP ~[] destination: B92 -> B103  <||@
  Comment 2591 block B103 null  <||@
  Comment 2591 1182 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2591 1184 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2598 1186 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2605 1188 DEOPT info [bci:140, 3]  <||@
  Comment 2605 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2610 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |r11|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2611 block B102 null  <||@
  Comment 2611 1170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2611 1172 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2614 1174 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2619 1176 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2622 1178 r10|DWORD = MOVE input: int[-232211|0xfffffffffffc74ed]  <||@
  Comment 2628 1180 JUMP ~[] destination: B102 -> B103  <||@
  Comment 2630 block B72 null  <||@
  Comment 2630 768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2630 770 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2633 772 r10|DWORD = MOVE input: int[-235539|0xfffffffffffc67ed]  <||@
  Comment 2639 774 JUMP ~[] destination: B72 -> B73  <||@
  Comment 2639 block B73 null  <||@
  Comment 2639 776 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2639 778 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2646 780 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2653 782 DEOPT info [bci:10, 14, 79, 3]  <||@
  Comment 2653 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2658 [stack:56, stack:64]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r13|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1          |2  |3 
     locals:  |stack:32|QWORD[.]  |r11|DWORD  |-  |- 
     stack:   |r9|DWORD           |           |   |  
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2659 block B121 null  <||@
  Comment 2659 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2659 1394 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2669 1396 r10|DWORD = MOVE input: int[-251419|0xfffffffffffc29e5]  <||@
  Comment 2675 1398 JUMP ~[] destination: B121 -> B123  <||@
  Comment 2675 block B123 null  <||@
  Comment 2675 1410 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2675 1412 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2682 1414 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2689 1416 DEOPT info [bci:19, 3]  <||@
  Comment 2689 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2694 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD          |                   |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2695 block B104 null  <||@
  Comment 2695 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2695 1192 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2705 1194 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2709 1196 r10|DWORD = MOVE input: int[-213787|0xfffffffffffcbce5]  <||@
  Comment 2715 1198 JUMP ~[] destination: B104 -> B107  <||@
  Comment 2720 block B122 null  <||@
  Comment 2720 1400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2720 1402 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1664780200]  <||@
  Comment 2720 {Object[d.a@1664780200]}  <||@
  Comment 2730 1404 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2733 1406 r10|DWORD = MOVE input: int[-289084|0xfffffffffffb96c4]  <||@
  Comment 2739 1408 JUMP ~[] destination: B122 -> B123  <||@
  Comment 2741 block B20 null  <||@
  Comment 2741 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2741 212 MOV [r15|QWORD + 668] y: -202523 size: DWORD  <||@
  Comment 2752 214 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2759 216 DEOPT info [bci:2, 15, 16, 3]  <||@
  Comment 2759 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2764 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2765 block B35 null  <||@
  Comment 2765 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2765 388 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2768 390 r10|DWORD = MOVE input: int[-244577|0xfffffffffffc449f]  <||@
  Comment 2774 392 JUMP ~[] destination: B35 -> B73  <||@
  Comment 2779 block B67 null  <||@
  Comment 2779 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2779 732 r10|DWORD = MOVE input: int[-249107|0xfffffffffffc32ed]  <||@
  Comment 2785 734 JUMP ~[] destination: B67 -> B69  <||@
  Comment 2790 block B106 null  <||@
  Comment 2790 1210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2790 1212 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2794 1214 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@516136508]  <||@
  Comment 2794 {Object[d.a@516136508]}  <||@
  Comment 2804 1216 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2807 1218 r10|DWORD = MOVE input: int[-210236|0xfffffffffffccac4]  <||@
  Comment 2813 1220 JUMP ~[] destination: B106 -> B107  <||@
  Comment 2818 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2818 4  <||@
  Comment 2824 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2824 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6482[org.graalvm.collections.EconomicMapImpl.add(Object)]"
  method "HotSpotCompilation-6482[org.graalvm.collections.EconomicMapImpl.add(Object)]"
  date 1527005172020
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1079e7e80 448b560849c1e203493bc20f85cfdfe1fe900f1f80000000000f1f800000000089842400c0feff4883ec5848896c2450488974244048895424388502448b561c4c8bda49c1eb0344895c243449b800e01b17010000004c894424284585d20f855202000041ba00000000660f1f440000448b4e188b4e0c418bd948c1e303413bca0f8ee0000000418bcad1e1423b0ccd0c0000000f831b0a0000448b4c8b10438504cc49c1e1034c3bca0f847c0300008b5e20418bfaffc785db0f850b0000008505c070eafc448bd7eba581fb750300d8897c241c894c242444895424200f853b000000488bf2498bd148b8ffffffffffffffff666690e864e3e1fe9085c00f85e207000085057b70eafc448b54241c488b542438488b742440e951ffffff81fb770300d80f842400000048c1e303488bf3488b542438498bc948b8ffffffffffffffff666690e814e3e1fe90ebae85053170eafc448bd7488b542438488b742440e909ffffff4c8bf3448be94d85f60f847a010000458b560c418bc5d1e0443bd00f84cd020000458bd54d8bee4c8b4424284c8bf641817d08f52200f80f8542090000458b5d0c418bf2d1e6443bde0f8630080000448bce41ffc1453bd90f86c20800008b5c243441895cb510498d74b51048c1ee0946882406438b7c8d10418b461c418beaffc585ff0f8411000000813cfd08000000bc3e01f80f847f04000043895c8d104b8d748d1048c1ee094688240641896e0c85c00f8455000000448b04c50c000000412b6e108bf5d1fe03f54181fb000200000f8317010000413bf0410f9fc0450fb6c0498bf6488b542438418bca6690e8c4dfe1fe90b801000000488b6c24504883c4588505156feafcc5f877c3418b462081f8770300d8be08000000ba040000000f44d685c0b8080000000f44d03bea0f8fb5040000b801000000488b6c24504883c4588505d46eeafcc5f877c3488b742440488b5424380f1f8000000000e854dfe1fe9083f8ff488b7424400f85c20000008b460c8b561848c1e2034c8bf2448be8e97dfeffff498b4760488d5030493b57700f87bb050000498957600f1880f00000004c8b442428488bd0c7400c0800000048c70001000000c74008f52200f8c5f9efc0c5fe7f4010488bc248c1e803894618488bc648c1e80946882400458bd54c8bea4c8bf6e940feffff4181fb000002000f83d006000041d1e8413bf0410f9fc0450fb6c0498bf6488b542438418bca666690e89cdee1fe90b801000000488b6c24504883c4588505ed6deafcc5f877c38bd0d1e2448be84c8b4424288b4618813cc508000000f52200f80f85e3060000448bf241ffc6443b34c50c0000000f839206000048c1e003468b54b0104585d20f841200000042813cd508000000bc3e01f80f84c9030000448b5c243446895cb0104a8d44b01048c1e8094688240049c1e2034d85d20f94c00fb6c0488b6c24504883c45885055e6deafcc5f877c3894c24244489542420837c2420ff0f85050300008b460c8b561848c1e2034c8bf2448be8e918fdffff4c8b442428418bd2c1ea0283fa090f830c03000041bd08000000448b5c2434458bca41d1e9418bd94103dd81fb000000400f83ba0500008bfbd1e7443bd70f8f34060000498b5760498b4f7081ffffffff000f838d0300008bc3c1e0038d401783e0f84863c0488be84803ea483be90f877003000049896f600f188410c00000000f188410000100000f188410400100000f18841080010000897a0c48c70201000000c74208f52200f8488bc2448bef448954241c4c89742410448bf3488d78104963f5488d56f8c5f9efc049c7c200000000e9060000006666904d8bd3c4a17e7f04974d8d5a084c3bda7eee488d56fc4c3bda0f8f12000000c5f9efc0c4a17a7f449720498d520c4c8bda488d56fe4c3bda0f8f11000000c5f9efc0c4a1f97e049f498d53024c8bda48ffce4c3bde0f8f040000004689249f41f7c6ffffff7f0f8449000000418bfdffcfc1e7024863ff488d70104803f748c1ee09488d781048c1ef09482bf748ffc64c8b442428e915000000660f1f44000048ffce488bd74903d04803d64488224883fe017deb44896c24244c8b742410488bd0448b54241c498d7e10488d7210498bd24889442408e8d4abe2fe90488b442408488bf048c1ee034c8b74244041897618498bf648c1ee094c8b44242846882406817c241c000200000f830e000000817c2424000200000f8dbe020000817c241c000002000f8370030000817c2424010002000f8d71040000418b760c418b561848c1e203448bd64c8beae915fbffff498b7760488d5618493b57700f8799020000498957600f1886d800000048bae0f509c007000000488bce488b92a8000000488916c74608bc3e01f88b14fd0c00000089560c895e1048c1e90343894c8d104b8d748d1048c1ee094688240641896e0c85c00f8492000000448b04c50c000000412b6e108bf5d1fe03f54181fb000200000f8369010000413bf0410f9fc0450fb6c0498bf6488b542438418bca0f1f8000000000e8f4dae1fe90b801000000488b6c24504883c4588505456aeafcc5f877c38b542424448b6c2420e951fcffff498bf690e8c4dae1fe90b801000000488b6c24504883c4588505156aeafcc5f877c3448beae9f2fcffff418b462081f8770300d8be08000000ba040000000f44d685c0b8080000000f44d03bea0f8f4b010000b801000000488b6c24504883c4588505cc69eafcc5f877c3448b5c2434498b5760488d4a18493b4f700f87b901000049894f600f1882d8000000488bf248bae0f509c007000000488bce488b92a8000000488916c74608bc3e01f8428b14d50c00000089560c44895e1048c1e90342894cb0104a8d74b01048c1ee0946882406428b34d51000000048c1e6034c8bd6e9d6fbffff44894c242044896c2424448954241c4c8974241048baa81701c007000000488bf28bd7b900000000448bf3448befe8f3e65aff90e99ffcffff4181fb000002000f838e01000041d1e8413bf0410f9fc0450fb6c0498bf6488b542438418bca660f1f440000e87cd9e1fe90b801000000488b6c24504883c4588505cd68eafcc5f877c34c8bf648be680b00c007000000ba08000000b901000000e887e65aff904c8b442428498bf6e92bfaffff488b742440e944fbffff498bf6666690e824d9e1fe9049ba0000000000000000e904fbffff498bf64c8bd60f1f440000e804d9e1fe904c8b4424284c8b742440e93efdffff8944241c897c242444894c242044895c240444891424448bf548be680b00c007000000ba02000000b901000000e802e65aff90488bf0418bee8b44241c8b7c2424448b4c2420448b5c2404448b14244c8b4424288b5c24344c8b742440e910fdffff44891424488944241048be680b00c007000000ba02000000b901000000e8b0e55aff90488bf0448b1424488b4424104c8b442428448b5c2434e917feffff41baed33fcff4589979c0200004d89a7a8020000e899ede1fe9049bb00000000000000004489142441bae5c6fcff4589979c0200004d899fa8020000e871ede1fe90458bda488b542438498bf641baed94fcff4589979c0200004d89a7a8020000e84cede1fe90458bda488b542438498bf641baed74fcffebd9458bda41baed67fcff4589979c0200004d89a7a8020000e81cede1fe9049bb000000000000000041bae529fcff4589979c0200004d899fa8020000e8f8ece1fe9049bb00000000000000004489142441bae5bcfcffe95affffff49bab00880be070000004d8bda41bac496fbffebbe41c7879c020000e5e8fcff4d89a7a8020000e8b2ece1fe90458bda41ba9f44fcffe974ffffff41baed32fcffe9ecfeffff4489142449ba800880be070000004d8bda41bac4cafcffe9f8feffffe8991c26ff90e873ebe1fe90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b2f1bbb slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 58 [rdx:0, rsi:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |Object[null]   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 12 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 64 14 r11|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 71 16 stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 76 18 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 86 20 stack:56|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 91 22 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 94 24 BRANCH trueDestinationProbability: 0.6490671046028922 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22  <||@
  Comment 100 block B1 null  <||@
  Comment 100 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 28 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 106 30 JUMP ~[] destination: B1 -> B2  <||@
  Comment 106 block B2 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 106 32 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 112 34 r9|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 116 36 rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 119 38 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 126 40 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 129 42 BRANCH trueDestinationProbability: 0.5507111845837876 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21  <||@
  Comment 135 block B3 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 135 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 46 rcx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 140 48 CMP (x: rcx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16, 3]  <||@
  Comment 140 [rdx:0, rbx:0, rsi:0, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 140 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 148 50 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20  <||@
  Comment 154 block B4 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 154 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 54 r9|DWORD[.] = MOV [rbx|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 159 56 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:2, 15, 16, 3]  <||@
  Comment 159 [rdx:0, rsi:0, r9:0, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 159 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 163 58 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 167 60 CMP (x: r9|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 170 62 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 176 block B6 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 176 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 176 74 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 179 76 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 184 78 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 186 80 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 192 block B7 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 192 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 192 84 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3]  <||@
  Comment 192 [rdx:0, rsi:0, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 192 {infopoint: SAFEPOINT}  <||@
  Comment 192 11  <||@
  Comment 198 86 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 201 88 JUMP ~[] destination: B7 -> B2  <||@
  Comment 203 block B8 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 203 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 92 CMP rbx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 203 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 209 98 stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 213 100 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 217 102 stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 222 94 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 228 block B9 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 228 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 228 104 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 231 106 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 234 108 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16, 3]  <||@
  Comment 234 7  <||@
  Comment 247 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 252 [stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:64|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 253 110 JUMP ~[] destination: B9 -> B13  <||@
  Comment 253 block B13 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 253 152 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 253 154 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 255 156 BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 261 block B14 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 261 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 160 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16, 3]  <||@
  Comment 261 [stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:64|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 261 {infopoint: SAFEPOINT}  <||@
  Comment 261 11  <||@
  Comment 267 162 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 272 164 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 277 166 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 282 168 JUMP ~[] destination: B14 -> B2  <||@
  Comment 287 block B10 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 287 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 120 CMP rbx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 287 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 293 122 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 299 block B12 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 299 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 299 140 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 303 142 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 306 144 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 311 146 rcx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 314 148 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16, 3]  <||@
  Comment 314 7  <||@
  Comment 327 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 332 [stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:64|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 333 150 JUMP ~[] destination: B12 -> B13  <||@
  Comment 335 block B11 loop 0 depth 1 header:254|LoopBegin  <||@
  Comment 335 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 335 128 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3]  <||@
  Comment 335 [stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:64|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 335 {infopoint: SAFEPOINT}  <||@
  Comment 335 11  <||@
  Comment 341 130 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 344 132 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 349 134 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 354 136 JUMP ~[] destination: B11 -> B2  <||@
  Comment 359 block B21 null  <||@
  Comment 359 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 359 220 r14|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 362 222 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 365 224 JUMP ~[] destination: B21 -> B24  <||@
  Comment 365 block B24 null  <||@
  Comment 365 254 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 365 256 TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD  <||@
  Comment 368 258 BRANCH trueDestinationProbability: 0.15737516016132225 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B29  <||@
  Comment 374 block B29 null  <||@
  Comment 374 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 334 r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 378 336 rax|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 383 338 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 386 340 BRANCH trueDestinationProbability: 0.06591371968154047 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B74  <||@
  Comment 392 block B74 null  <||@
  Comment 392 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 786 r10|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 395 788 r13|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 398 790 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 403 792 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 406 794 JUMP ~[] destination: B74 -> B75  <||@
  Comment 406 block B75 null  <||@
  Comment 406 796 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 406 798 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116, 3]  <||@
  Comment 406 [r13:0, r14:0, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3  |4          |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 406 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 406 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 414 800 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B106  <||@
  Comment 420 block B76 null  <||@
  Comment 420 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 420 804 r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 424 806 rsi|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 429 808 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 432 810 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B105  <||@
  Comment 438 block B77 null  <||@
  Comment 438 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 438 814 r9|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 444 816 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 447 818 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B104  <||@
  Comment 453 block B78 null  <||@
  Comment 453 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 453 822 rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 457 824 MOV (x: [r13|QWORD[.] + rsi|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 462 826 rsi|QWORD[.] = LEA [r13|QWORD[.] + rsi|DWORD * 4 + 16] size: QWORD  <||@
  Comment 467 828 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 471 830 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 475 832 rdi|DWORD[.] = MOV [r13|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 480 834 rax|DWORD[.] = MOV [r14|QWORD[.] + 28] size: DWORD  <||@
  Comment 484 836 rbp|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 489 838 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 491 840 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B94 falseDestination: B78 -> B80  <||@
  Comment 497 block B80 null  <||@
  Comment 497 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 848 CMP [rdi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 497 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 508 850 BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B94  <||@
  Comment 514 block B94 null  <||@
  Comment 514 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 514 1062 MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 519 1064 rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 524 1066 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 528 1068 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 532 1070 MOV (x: [r14|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 536 1072 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 538 1074 BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B98  <||@
  Comment 544 block B98 null  <||@
  Comment 544 1112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 544 1114 r8|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 552 1116 rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD  <||@
  Comment 556 1118 rsi|DWORD = SAR rbp|DWORD size: DWORD  <||@
  Comment 560 1120 rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 562 1122 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 569 1124 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 575 block B99 null  <||@
  Comment 575 1126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 1128 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 578 1130 r8|DWORD = SETCC condition: >  <||@
  Comment 586 1132 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 589 1134 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 594 1136 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 597 1138 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3]  <||@
  Comment 597 9  <||@
  Comment 599 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 604 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 605 1140 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 610 1142 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 619 12  <||@
  Comment 629 block B95 null  <||@
  Comment 629 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 629 1078 rax|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 633 1080 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 633 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 639 1082 rsi|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 644 1084 rdx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rsi|DWORD) condition: =  <||@
  Comment 652 1086 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 654 1088 rax|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 659 1090 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rax|DWORD) condition: =  <||@
  Comment 662 1092 CMP (x: rbp|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 664 1094 BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97  <||@
  Comment 670 block B97 null  <||@
  Comment 670 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 670 1108 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 675 1110 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 684 12  <||@
  Comment 694 block B22 null  <||@
  Comment 694 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 228 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 699 230 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 704 232 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3]  <||@
  Comment 704 9  <||@
  Comment 711 {HotSpotMethod<EconomicMapImpl.findHash(Object)>}  <||@
  Comment 716 [stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 717 234 CMP rax|DWORD y: -1 size: DWORD  <||@
  Comment 720 240 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 725 236 BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B108  <||@
  Comment 731 block B23 null  <||@
  Comment 731 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 731 242 rax|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 734 244 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 737 246 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 741 248 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 744 250 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 747 252 JUMP ~[] destination: B23 -> B24  <||@
  Comment 752 block B25 null  <||@
  Comment 752 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 752 262 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 756 264 rdx|QWORD = LEA [rax|QWORD + 48] size: QWORD  <||@
  Comment 760 266 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 764 268 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 770 block B27 null  <||@
  Comment 770 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 770 292 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 774 294 AMD64PREFETCH ~[rax|QWORD + 240] instr: 0  <||@
  Comment 781 296 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 781 298 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 786 300 JUMP ~[] destination: B27 -> B28  <||@
  Comment 786 block B28 null  <||@
  Comment 786 302 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 786 304 rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 789 306 MOV [rax|QWORD[*] + 12] y: 8 size: DWORD  <||@
  Comment 796 308 MOV [rax|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 803 310 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 803 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 810 312 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 814 314 J (address: [rax|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 819 316 rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 826 318 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 829 320 rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 836 322 MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 840 324 r10|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 843 326 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 846 328 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 849 330 JUMP ~[] destination: B28 -> B75  <||@
  Comment 854 block B100 null  <||@
  Comment 854 1144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 854 1146 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 861 1148 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B100 -> B101 falseDestination: B100 -> B102  <||@
  Comment 867 block B101 null  <||@
  Comment 867 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 867 1152 r8|DWORD = SHR r8|DWORD size: DWORD  <||@
  Comment 870 1154 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 873 1156 r8|DWORD = SETCC condition: >  <||@
  Comment 881 1158 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 884 1160 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 889 1162 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 892 1164 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3]  <||@
  Comment 892 9  <||@
  Comment 895 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 900 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 901 1166 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 906 1168 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 915 12  <||@
  Comment 925 block B108 null  <||@
  Comment 925 1230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 925 1234 rdx|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 929 1236 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 932 1240 JUMP ~[] destination: B108 -> B109  <||@
  Comment 932 block B109 null  <||@
  Comment 932 1242 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 932 206 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 937 1244 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 940 1246 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19, 3]  <||@
  Comment 940 [rax:0, rsi:0, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD     |                   |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 940 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 940 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 951 1248 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B122  <||@
  Comment 957 block B110 null  <||@
  Comment 957 1250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 1252 r14|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 963 1254 CMP (x: r14|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 971 1256 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B121  <||@
  Comment 977 block B111 null  <||@
  Comment 977 1258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 977 1260 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 981 1262 r10|DWORD[.] = MOV [rax|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 986 1264 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 989 1266 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B119 falseDestination: B111 -> B113  <||@
  Comment 995 block B113 null  <||@
  Comment 995 1274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 995 1276 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 995 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1007 1278 BRANCH trueDestinationProbability: 0.08092944845607031 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B119  <||@
  Comment 1013 block B119 null  <||@
  Comment 1013 1370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1013 1270 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1018 1372 MOV (x: [rax|QWORD[.] + r14|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1023 1374 rax|QWORD[.] = LEA [rax|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1028 1376 rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1032 1378 MOVB (x: [rax|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1036 1380 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 1040 1382 JUMP ~[] destination: B119 -> B120  <||@
  Comment 1040 block B120 null  <||@
  Comment 1040 1384 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1040 1386 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1043 1388 rax|DWORD = SETCC condition: =  <||@
  Comment 1049 1390 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1058 12  <||@
  Comment 1068 block B5 null  <||@
  Comment 1068 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 66 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1072 68 stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1077 70 JUMP ~[] destination: B5 -> B17  <||@
  Comment 1077 block B17 null  <||@
  Comment 1077 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1077 182 CMP stack:64|DWORD y: -1 size: DWORD  <||@
  Comment 1082 184 BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 1088 block B18 null  <||@
  Comment 1088 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1088 188 rax|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 1091 190 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 1094 192 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 1098 194 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1101 196 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1104 198 JUMP ~[] destination: B18 -> B24  <||@
  Comment 1109 block B30 null  <||@
  Comment 1109 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1109 344 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1114 346 rdx|DWORD = SHR r10|DWORD y: 2 size: DWORD  <||@
  Comment 1120 348 CMP rdx|DWORD y: 9 size: DWORD  <||@
  Comment 1123 350 BRANCH trueDestinationProbability: 0.7439668313467649 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 1129 block B31 null  <||@
  Comment 1129 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1129 354 r13|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1135 358 JUMP ~[] destination: B31 -> B33  <||@
  Comment 1135 block B33 null  <||@
  Comment 1135 368 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1135 356 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1140 370 r9|DWORD = SHR r10|DWORD size: DWORD  <||@
  Comment 1146 372 rbx|DWORD = ADD (x: r9|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1152 374 CMP rbx|DWORD y: 1073741824 size: DWORD  <||@
  Comment 1158 376 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B72  <||@
  Comment 1164 block B34 null  <||@
  Comment 1164 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1164 380 rdi|DWORD = SHL rbx|DWORD size: DWORD  <||@
  Comment 1168 382 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1171 384 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 1177 block B36 null  <||@
  Comment 1177 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1177 396 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1181 398 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1185 400 CMP rdi|DWORD y: 16777215 size: DWORD  <||@
  Comment 1191 402 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B41  <||@
  Comment 1197 block B37 null  <||@
  Comment 1197 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1197 406 rax|DWORD = SHL rbx|DWORD y: 3 size: DWORD  <||@
  Comment 1202 408 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 1205 410 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 1208 412 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 1211 414 rbp|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1217 416 CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1220 418 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B37 -> B41 falseDestination: B37 -> B39  <||@
  Comment 1226 block B39 null  <||@
  Comment 1226 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1226 434 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 1230 436 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1238 438 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1246 440 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1254 442 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1262 444 MOV (x: [rdx|QWORD + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 1265 446 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 1272 448 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1272 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1279 450 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1279 452 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1282 454 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1285 456 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1290 458 stack:80|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1295 460 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1298 462 JUMP ~[] destination: B39 -> B42  <||@
  Comment 1298 block B42 null  <||@
  Comment 1298 494 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1298 496 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1302 498 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1305 500 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1309 502 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1313 504 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1320 506 JUMP ~[] destination: B42 -> B43  <||@
  Comment 1325 block B71 loop 1 depth 1 header:1722|LoopBegin  <||@
  Comment 1325 762 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1328 764 r10|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1331 766 JUMP ~[] destination: B71 -> B43  <||@
  Comment 1331 block B43 loop 1 depth 1 header:1722|LoopBegin  <||@
  Comment 1331 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1331 510 J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1337 512 r11|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1341 514 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1344 516 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B71  <||@
  Comment 1346 block B44 null  <||@
  Comment 1346 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1346 520 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1350 522 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1353 524 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 1359 block B46 null  <||@
  Comment 1359 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1359 532 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 1363 534 J (address: [rdi|QWORD[.] + r10|QWORD * 4 + 32], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1370 536 rdx|QWORD = LEA [r10|QWORD + 12] size: QWORD  <||@
  Comment 1374 538 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1377 540 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1377 block B47 null  <||@
  Comment 1377 542 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1377 544 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1381 546 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1384 548 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 1390 block B49 null  <||@
  Comment 1390 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1390 556 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 1394 558 J (address: [rdi|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1400 560 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1404 562 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1407 564 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1407 block B50 null  <||@
  Comment 1407 566 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1407 568 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1410 570 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1413 572 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52  <||@
  Comment 1419 block B52 null  <||@
  Comment 1419 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1419 580 MOV (x: [rdi|QWORD[.] + r11|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1423 582 JUMP ~[] destination: B52 -> B53  <||@
  Comment 1423 block B53 null  <||@
  Comment 1423 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1423 586 TEST r14|DWORD y: 2147483647 size: DWORD  <||@
  Comment 1430 588 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B58 falseDestination: B53 -> B55  <||@
  Comment 1436 block B55 null  <||@
  Comment 1436 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1436 598 rdi|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 1441 600 rdi|DWORD = SHL rdi|DWORD y: 2 size: DWORD  <||@
  Comment 1444 602 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1447 604 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1451 606 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 1454 608 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1458 610 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1462 612 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1466 614 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 1469 616 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 1472 618 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1477 620 JUMP ~[] destination: B55 -> B56  <||@
  Comment 1482 block B70 loop 2 depth 1 header:1519|LoopBegin  <||@
  Comment 1482 750 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1488 752 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 1491 754 rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r8|QWORD) size: QWORD  <||@
  Comment 1497 756 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1500 758 MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1503 760 JUMP ~[] destination: B70 -> B56  <||@
  Comment 1503 block B56 loop 2 depth 1 header:1519|LoopBegin  <||@
  Comment 1503 622 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1503 624 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 1507 626 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B56 -> B58 falseDestination: B56 -> B70  <||@
  Comment 1509 block B58 null  <||@
  Comment 1509 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 592 stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1514 636 r14|QWORD[*] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1519 638 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1522 640 r10|QWORD = MOV stack:68|DWORD size: DWORD  <||@
  Comment 1527 642 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 1531 644 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 1535 646 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1538 648 stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1543 650 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1543 {Field[name=StubRoutines::_arrayof_oop_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd20, value=0x106813060]:0x106813060}  <||@
  Comment 1549 652 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1554 654 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 1561 656 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1566 658 MOV (x: [r14|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1570 660 rsi|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1577 662 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1582 664 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1586 666 CMP stack:68|DWORD y: 512 size: DWORD  <||@
  Comment 1594 668 BRANCH trueDestinationProbability: 0.9908160945669471 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B63  <||@
  Comment 1600 block B59 null  <||@
  Comment 1600 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1600 672 CMP stack:60|DWORD y: 512 size: DWORD  <||@
  Comment 1608 674 BRANCH trueDestinationProbability: 0.9909296705313714 condition: < trueDestination: B59 -> B63 falseDestination: B59 -> B61  <||@
  Comment 1614 block B63 null  <||@
  Comment 1614 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1614 702 CMP stack:68|DWORD y: 131072 size: DWORD  <||@
  Comment 1622 704 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B63 -> B64 falseDestination: B63 -> B68  <||@
  Comment 1628 block B64 null  <||@
  Comment 1628 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1628 708 CMP stack:60|DWORD y: 131073 size: DWORD  <||@
  Comment 1636 710 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B64 -> B66 falseDestination: B64 -> B67  <||@
  Comment 1642 block B66 null  <||@
  Comment 1642 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1642 718 rsi|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 1646 720 rdx|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD  <||@
  Comment 1650 722 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 1654 724 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1657 726 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1660 728 JUMP ~[] destination: B66 -> B75  <||@
  Comment 1665 block B81 null  <||@
  Comment 1665 852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1665 854 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1669 856 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1673 858 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1677 860 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 1683 block B83 null  <||@
  Comment 1683 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1683 908 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1687 910 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1694 912 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1694 914 JUMP ~[] destination: B83 -> B84  <||@
  Comment 1694 block B84 null  <||@
  Comment 1694 916 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1694 918 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1694 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1704 920 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1707 922 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1714 924 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1717 926 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1717 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1724 928 rdx|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1731 930 MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 1734 932 MOV (x: [rsi|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 1737 934 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 1741 936 MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1746 938 rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1751 940 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1755 942 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1759 944 MOV (x: [r14|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 1763 946 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1765 948 BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B88  <||@
  Comment 1771 block B88 null  <||@
  Comment 1771 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1771 988 r8|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1779 990 rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD  <||@
  Comment 1783 992 rsi|DWORD = SAR rbp|DWORD size: DWORD  <||@
  Comment 1787 994 rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1789 996 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 1796 998 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 1802 block B89 null  <||@
  Comment 1802 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1802 1002 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1805 1004 r8|DWORD = SETCC condition: >  <||@
  Comment 1813 1006 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1816 1008 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1821 1010 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1824 1012 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3]  <||@
  Comment 1824 9  <||@
  Comment 1831 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 1836 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1837 1014 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1842 1016 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1851 12  <||@
  Comment 1861 block B19 null  <||@
  Comment 1861 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1861 202 rdx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1865 204 r13|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1870 208 JUMP ~[] destination: B19 -> B109  <||@
  Comment 1875 block B96 null  <||@
  Comment 1875 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1875 1098 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1878 1100 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3]  <||@
  Comment 1878 9  <||@
  Comment 1879 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 1884 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1885 1102 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1890 1104 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1899 12  <||@
  Comment 1909 block B32 null  <||@
  Comment 1909 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1909 362 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1912 366 JUMP ~[] destination: B32 -> B33  <||@
  Comment 1917 block B85 null  <||@
  Comment 1917 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1917 952 rax|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 1921 954 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 1921 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 1927 956 rsi|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1932 958 rdx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rsi|DWORD) condition: =  <||@
  Comment 1940 960 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1942 962 rax|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1947 964 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rax|DWORD) condition: =  <||@
  Comment 1950 966 CMP (x: rbp|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1952 968 BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87  <||@
  Comment 1958 block B87 null  <||@
  Comment 1958 980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1958 982 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1963 984 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1972 12  <||@
  Comment 1982 block B114 null  <||@
  Comment 1982 1280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1982 1282 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1987 1284 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1991 1286 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 1995 1288 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1999 1290 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 2005 block B116 null  <||@
  Comment 2005 1318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2005 1320 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 2009 1322 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 2016 1324 rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2019 1326 JUMP ~[] destination: B116 -> B117  <||@
  Comment 2019 block B117 null  <||@
  Comment 2019 1328 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2019 1330 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2019 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2029 1332 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2032 1334 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 2039 1336 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 2042 1338 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 2042 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 2049 1340 rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 2057 1342 MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 2060 1344 MOV (x: [rsi|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 2064 1346 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 2068 1348 MOV (x: [rax|QWORD[.] + r14|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 2073 1350 rsi|QWORD[.] = LEA [rax|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD  <||@
  Comment 2078 1352 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2082 1354 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2086 1356 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2094 1358 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@55e3a1a7 encoding: base: 0 shift: 3  <||@
  Comment 2098 1360 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2101 1362 JUMP ~[] destination: B117 -> B120  <||@
  Comment 2106 block B41 null  <||@
  Comment 2106 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2106 466 stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2111 468 stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2116 470 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2121 472 stack:80|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2126 478 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 2126 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 2136 480 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2139 482 rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2141 484 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2146 486 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2149 488 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2152 490 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14, 79, 3]  <||@
  Comment 2152 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2157 [stack:16, stack:52, stack:56, stack:64]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:60|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:68|DWORD  |-  |- 
     stack:   |stack:64|DWORD     |                |   |  
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2158 492 JUMP ~[] destination: B41 -> B42  <||@
  Comment 2163 block B90 null  <||@
  Comment 2163 1018 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2163 1020 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 2170 1022 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 2176 block B91 null  <||@
  Comment 2176 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2176 1026 r8|DWORD = SHR r8|DWORD size: DWORD  <||@
  Comment 2179 1028 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2182 1030 r8|DWORD = SETCC condition: >  <||@
  Comment 2190 1032 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2193 1034 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2198 1036 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2201 1038 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3]  <||@
  Comment 2201 9  <||@
  Comment 2207 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 2212 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2213 1040 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2218 1042 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2227 12  <||@
  Comment 2237 block B26 null  <||@
  Comment 2237 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2237 272 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2240 274 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2240 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2250 276 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 2255 278 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2260 280 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3]  <||@
  Comment 2260 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2265 [r14:0, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                           |1                  |2                  |3  |4  |5 
     locals:  |r14|QWORD[.]                |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |int[-1|0xffffffffffffffff]  |                   |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2266 282 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2266 284 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2271 286 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2274 288 JUMP ~[] destination: B26 -> B28  <||@
  Comment 2279 block B15 null  <||@
  Comment 2279 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2279 172 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2284 174 JUMP ~[] destination: B15 -> B17  <||@
  Comment 2289 block B86 null  <||@
  Comment 2289 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2289 972 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2292 974 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3]  <||@
  Comment 2292 9  <||@
  Comment 2295 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 2300 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2301 976 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2311 978 JUMP ~[] destination: B86 -> B120  <||@
  Comment 2316 block B61 null  <||@
  Comment 2316 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2316 682 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2319 684 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2322 688 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87, 79, 3]  <||@
  Comment 2322 9  <||@
  Comment 2327 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 2332 [stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2333 690 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2338 692 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2343 694 JUMP ~[] destination: B61 -> B66  <||@
  Comment 2348 block B82 null  <||@
  Comment 2348 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2348 864 stack:68|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 2352 866 stack:60|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 2356 868 stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2361 870 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2366 872 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2370 874 r14|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 2373 876 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2373 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2383 878 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2388 880 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2393 882 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120, 3]  <||@
  Comment 2393 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2398 [r13:0, stack:28, stack:36, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1               |2                 
     locals:  |stack:32|QWORD[.]  |stack:96|DWORD  |stack:40|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4               |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:96|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2399 884 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2402 886 rbp|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2405 888 rax|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2409 890 rdi|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2413 892 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2418 894 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2423 896 r10|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 2427 898 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2432 900 rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 2436 902 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2441 904 JUMP ~[] destination: B82 -> B84  <||@
  Comment 2446 block B115 null  <||@
  Comment 2446 1292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2446 1294 stack:96|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 2450 1296 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2455 1298 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2455 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2465 1300 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2470 1302 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2475 1304 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3]  <||@
  Comment 2475 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2480 [stack:0, stack:16, stack:52, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD          |                   |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2481 1306 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2484 1308 r10|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD  <||@
  Comment 2488 1310 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2493 1312 r8|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2498 1314 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 2503 1316 JUMP ~[] destination: B115 -> B117  <||@
  Comment 2508 block B68 null  <||@
  Comment 2508 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2508 738 r10|DWORD = MOVE input: int[-248851|0xfffffffffffc33ed]  <||@
  Comment 2514 740 JUMP ~[] destination: B68 -> B69  <||@
  Comment 2514 block B69 null  <||@
  Comment 2514 742 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2514 744 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2521 746 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2528 748 DEOPT info [bci:73, 79, 3]  <||@
  Comment 2528 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2533 [rax:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1               |2  |3            
     locals:  |stack:32|QWORD[.]  |stack:68|DWORD  |-  |rax|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2534 block B105 null  <||@
  Comment 2534 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2534 1202 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2544 1204 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2548 1206 r10|DWORD = MOVE input: int[-211227|0xfffffffffffcc6e5]  <||@
  Comment 2554 1208 JUMP ~[] destination: B105 -> B107  <||@
  Comment 2554 block B107 null  <||@
  Comment 2554 1222 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2554 1224 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2561 1226 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2568 1228 DEOPT info [bci:116, 3]  <||@
  Comment 2568 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2573 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3  |4               |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:96|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2574 block B92 null  <||@
  Comment 2574 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2574 1046 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2577 1048 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2582 1050 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2585 1052 r10|DWORD = MOVE input: int[-224019|0xfffffffffffc94ed]  <||@
  Comment 2591 1054 JUMP ~[] destination: B92 -> B103  <||@
  Comment 2591 block B103 null  <||@
  Comment 2591 1182 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2591 1184 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2598 1186 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2605 1188 DEOPT info [bci:140, 3]  <||@
  Comment 2605 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2610 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |r11|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2611 block B102 null  <||@
  Comment 2611 1170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2611 1172 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2614 1174 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2619 1176 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2622 1178 r10|DWORD = MOVE input: int[-232211|0xfffffffffffc74ed]  <||@
  Comment 2628 1180 JUMP ~[] destination: B102 -> B103  <||@
  Comment 2630 block B72 null  <||@
  Comment 2630 768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2630 770 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2633 772 r10|DWORD = MOVE input: int[-235539|0xfffffffffffc67ed]  <||@
  Comment 2639 774 JUMP ~[] destination: B72 -> B73  <||@
  Comment 2639 block B73 null  <||@
  Comment 2639 776 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2639 778 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2646 780 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2653 782 DEOPT info [bci:10, 14, 79, 3]  <||@
  Comment 2653 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2658 [stack:56, stack:64]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r13|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1          |2  |3 
     locals:  |stack:32|QWORD[.]  |r11|DWORD  |-  |- 
     stack:   |r9|DWORD           |           |   |  
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2659 block B121 null  <||@
  Comment 2659 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2659 1394 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2669 1396 r10|DWORD = MOVE input: int[-251419|0xfffffffffffc29e5]  <||@
  Comment 2675 1398 JUMP ~[] destination: B121 -> B123  <||@
  Comment 2675 block B123 null  <||@
  Comment 2675 1410 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2675 1412 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2682 1414 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2689 1416 DEOPT info [bci:19, 3]  <||@
  Comment 2689 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2694 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD          |                   |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2695 block B104 null  <||@
  Comment 2695 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2695 1192 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2705 1194 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2709 1196 r10|DWORD = MOVE input: int[-213787|0xfffffffffffcbce5]  <||@
  Comment 2715 1198 JUMP ~[] destination: B104 -> B107  <||@
  Comment 2720 block B122 null  <||@
  Comment 2720 1400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2720 1402 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1664780200]  <||@
  Comment 2720 {Object[d.a@1664780200]}  <||@
  Comment 2730 1404 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2733 1406 r10|DWORD = MOVE input: int[-289084|0xfffffffffffb96c4]  <||@
  Comment 2739 1408 JUMP ~[] destination: B122 -> B123  <||@
  Comment 2741 block B20 null  <||@
  Comment 2741 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2741 212 MOV [r15|QWORD + 668] y: -202523 size: DWORD  <||@
  Comment 2752 214 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2759 216 DEOPT info [bci:2, 15, 16, 3]  <||@
  Comment 2759 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2764 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2765 block B35 null  <||@
  Comment 2765 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2765 388 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2768 390 r10|DWORD = MOVE input: int[-244577|0xfffffffffffc449f]  <||@
  Comment 2774 392 JUMP ~[] destination: B35 -> B73  <||@
  Comment 2779 block B67 null  <||@
  Comment 2779 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2779 732 r10|DWORD = MOVE input: int[-249107|0xfffffffffffc32ed]  <||@
  Comment 2785 734 JUMP ~[] destination: B67 -> B69  <||@
  Comment 2790 block B106 null  <||@
  Comment 2790 1210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2790 1212 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2794 1214 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@516136508]  <||@
  Comment 2794 {Object[d.a@516136508]}  <||@
  Comment 2804 1216 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2807 1218 r10|DWORD = MOVE input: int[-210236|0xfffffffffffccac4]  <||@
  Comment 2813 1220 JUMP ~[] destination: B106 -> B107  <||@
  Comment 2818 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2818 4  <||@
  Comment 2824 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2824 5  <||@
  HexCodeFile>>> <|@
end_nmethod
