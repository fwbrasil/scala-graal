begin_compilation
  name " HotSpotCompilation-6318[java.lang.String.compareTo(Object)]"
  method "HotSpotCompilation-6318[java.lang.String.compareTo(Object)]"
  date 1527005190326
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v143 v8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v31 v8 v147 v144 v148 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.compareTo(Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 111
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v101 v148 v149 i141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v76 #falseSuccessor: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.String.compareTo(String.java:111) [bci: 2]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v147 
=== Succesors ===
next: v135 
=== Usages ===
v129 
=== Predecessor ===
v75 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v147 #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.String.compareTo(String.java:111) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v138 
y: v128 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v138 y: v128  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v134 #falseSuccessor: v118  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
v134 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v113 v121 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v113 v121 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:96) [bci: 2]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a2 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:96) [bci: 2]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:97) [bci: 5]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:97) [bci: 5]
at java.lang.String.compareTo(String.java:111) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String) [bci: -1]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: void
=== Inputs ===
result: i12 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i12 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:99) [bci: 7]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: a139 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: a139  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:99) [bci: 8]
at java.lang.String.compareTo(String.java:111) [bci: 5]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v143 
=== Succesors ===
next: v149 
=== Usages ===
a37 v149 v145 
=== Predecessor ===
v148 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v143 #next: v149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a139 
=== Succesors ===
next: a140 
=== Usages ===
=== Predecessor ===
a139 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a139 #next: a140  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:100) [bci: 13]
at java.lang.String.compareTo(String.java:111) [bci: 5]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v144 
=== Succesors ===
next: i141 
=== Usages ===
a42 v146 
=== Predecessor ===
v149 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v144 #next: i141  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a140 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 24]
at java.lang.String.compareTo(String.java:111) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v146 
=== Succesors ===
next: i142 
=== Usages ===
i19 
=== Predecessor ===
a140 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v146 #next: i142  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a139 
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 20]
at java.lang.String.compareTo(String.java:111) [bci: 5]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v145 
=== Succesors ===
next: i21 
=== Usages ===
i17 
=== Predecessor ===
i141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v145 #next: i21  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:99) [bci: 8]
at java.lang.String.compareTo(String.java:111) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a139 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a139  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:100) [bci: 13]
at java.lang.String.compareTo(String.java:111) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a140 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a140  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 21]
at java.lang.String.compareTo(String.java:111) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 i19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 22]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i142 
y: i16 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i142 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 26]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i141 
y: i16 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i141 y: i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
kind1: char
kind2: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayCompareToNode.compareTo(Object, Object, int, int, JavaKind, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 33]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: i32
=== Inputs ===
array1: a37 
array2: a42 
length1: i17 
length2: i19 
lastLocationAccess: - 
=== Succesors ===
next: v29 
=== Usages ===
v29 
=== Predecessor ===
i142 >@ <|@
instruction <@ArrayCompareTo|@org.graalvm.compiler.replacements.nodes.ArrayCompareToNode>@ array1: a37 array2: a42 length1: i17 length2: i19 lastLocationAccess: - #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String) [bci: -1]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: void
=== Inputs ===
result: i21 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i21 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i21 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid a98 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8483
stableDimension: 0
stamp: i32 [-8483] ⇊00000000ffffdedd ⇈00000000ffffdedd
stampKind: i32
value: int[-8483|0xffffffffffffdedd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i97 
speculation: a98 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i97 speculation: a98  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v143 v8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v31 v8 v147 v144 v148 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.compareTo(Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 111
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v101 v148 v149 i141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v76 #falseSuccessor: v75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b3ada23 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v138 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.String.compareTo(String.java:111) [bci: 2]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v147 
=== Succesors ===
next: v135 
=== Usages ===
v129 
=== Predecessor ===
v75 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v147 #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.String.compareTo(String.java:111) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v138 
y: v128 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v138 y: v128  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v134 #falseSuccessor: v118  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
v134 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v113 v121 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v113 v121 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:96) [bci: 2]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a2 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:96) [bci: 2]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:97) [bci: 5]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:97) [bci: 5]
at java.lang.String.compareTo(String.java:111) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String) [bci: -1]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: void
=== Inputs ===
result: i12 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i12 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:99) [bci: 7]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: a139 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: a139  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a139 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:99) [bci: 8]
at java.lang.String.compareTo(String.java:111) [bci: 5]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v143 
=== Succesors ===
next: v149 
=== Usages ===
a37 v149 v145 
=== Predecessor ===
v148 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v143 #next: v149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a139 
=== Succesors ===
next: a140 
=== Usages ===
=== Predecessor ===
a139 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a139 #next: a140  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a140 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:100) [bci: 13]
at java.lang.String.compareTo(String.java:111) [bci: 5]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v144 
=== Succesors ===
next: i141 
=== Usages ===
a42 v146 
=== Predecessor ===
v149 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v144 #next: i141  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a140 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i141 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 24]
at java.lang.String.compareTo(String.java:111) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v146 
=== Succesors ===
next: i142 
=== Usages ===
i19 
=== Predecessor ===
a140 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v146 #next: i142  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a139 
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i142 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 20]
at java.lang.String.compareTo(String.java:111) [bci: 5]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v145 
=== Succesors ===
next: i21 
=== Usages ===
i17 
=== Predecessor ===
i141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v145 #next: i21  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:99) [bci: 8]
at java.lang.String.compareTo(String.java:111) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a139 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a139  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:100) [bci: 13]
at java.lang.String.compareTo(String.java:111) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a140 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a140  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 21]
at java.lang.String.compareTo(String.java:111) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 i19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 22]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i142 
y: i16 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i142 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 26]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i141 
y: i16 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i141 y: i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i21 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
kind1: char
kind2: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayCompareToNode.compareTo(Object, Object, int, int, JavaKind, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 33]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: i32
=== Inputs ===
array1: a37 
array2: a42 
length1: i17 
length2: i19 
lastLocationAccess: - 
=== Succesors ===
next: v29 
=== Usages ===
v29 
=== Predecessor ===
i142 >@ <|@
instruction <@ArrayCompareTo|@org.graalvm.compiler.replacements.nodes.ArrayCompareToNode>@ array1: a37 array2: a42 length1: i17 length2: i19 lastLocationAccess: - #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String) [bci: -1]
at java.lang.String.compareTo(String.java:111) [bci: 5]
stamp: void
=== Inputs ===
result: i21 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i21 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i21 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:111) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:111) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:111) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@518f73d6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@518f73d6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = ARRAY_COMPARE_TO (length1Value: rcx|DWORD, length2Value: rdx|DWORD, ~array1Value: v6|QWORD[.], ~array2Value: v7|QWORD[.]) {length1ValueTemp: rcx|DWORD, length2ValueTemp: rdx|DWORD, temp1: v10|QWORD[*], temp2: v11|QWORD[*], vectorTemp1: v12|DOUBLE} array1BaseOffset: 16 array2BaseOffset: 16 kind1: char kind2: char <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.compareTo(String.java:111) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid a98 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result int[-8483|0xffffffffffffdedd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8483
stableDimension: 0
stamp: i32 [-8483] ⇊00000000ffffdedd ⇈00000000ffffdedd
stampKind: i32
value: int[-8483|0xffffffffffffdedd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i97 
speculation: a98 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i97 speculation: a98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -8483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:111) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b3ada23 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:111) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:111) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:111) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@518f73d6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@518f73d6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = ARRAY_COMPARE_TO (length1Value: rcx|DWORD, length2Value: rdx|DWORD, ~array1Value: v6|QWORD[.], ~array2Value: v7|QWORD[.]) {length1ValueTemp: rcx|DWORD, length2ValueTemp: rdx|DWORD, temp1: v10|QWORD[*], temp2: v11|QWORD[*], vectorTemp1: v12|DOUBLE} array1BaseOffset: 16 array2BaseOffset: 16 kind1: char kind2: char <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -8483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:111) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: checkcast     #43         // java.lang.String
     5: invokevirtual #113        // compareTo:(java.lang.String)int
     8: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b3ada23 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:111) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:111) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:111) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@518f73d6 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@518f73d6 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = ARRAY_COMPARE_TO (length1Value: rcx|DWORD, length2Value: rdx|DWORD, ~array1Value: r11|QWORD[.], ~array2Value: r8|QWORD[.]) {length1ValueTemp: rcx|DWORD, length2ValueTemp: rdx|DWORD, temp1: r10|QWORD[*], temp2: r9|QWORD[*], vectorTemp1: xmm0|DOUBLE} array1BaseOffset: 16 array2BaseOffset: 16 kind1: char kind2: char <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 668] y: -8483 size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:111) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: checkcast     #43         // java.lang.String
     5: invokevirtual #113        // compareTo:(java.lang.String)int
     8: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B4" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b3ada23 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:111) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:111) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:111) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@518f73d6 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@518f73d6 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = ARRAY_COMPARE_TO (length1Value: rcx|DWORD, length2Value: rdx|DWORD, ~array1Value: r11|QWORD[.], ~array2Value: r8|QWORD[.]) {length1ValueTemp: rcx|DWORD, length2ValueTemp: rdx|DWORD, temp1: r10|QWORD[*], temp2: r9|QWORD[*], vectorTemp1: xmm0|DOUBLE} array1BaseOffset: 16 array2BaseOffset: 16 kind1: char kind2: char <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction MOV [r15|QWORD + 668] y: -8483 size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:111) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: checkcast     #43         // java.lang.String
     5: invokevirtual #113        // compareTo:(java.lang.String)int
     8: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104885d20f840d000000817a08addeadde0f8599010000483bd60f847801000085028b4e0c418504cc8b420c448b14c50c0000008b14cd0c000000448bd949c1e303448bc049c1e003d1e241d1e28bca418bd24d8d53104d8d48108bc12bca510f4ed085d20f8414010000410fb702410fb7092bc10f8509010000c1ea0183fa010f84f80000004d3bd10f84ef0000008bc283e2f00f8491000000c4c17a6f02c4c3796101197212c4c17a6f4210c4c37961411019731483c108410fb7044a410fb714492bc2e9b90000004d8d14424d8d0c4183e81083ea100f842700000048f7d8c4c17e6f0442c4c17def0441c4e27d17c00f85220000004883c01083ea1075e0c5fdefc04885c00f8470000000b8100000008bd048f7d8ebc7c5fdefc04d8d14424d8d0c41e96fffffff8bd083fa080f8c28000000c4c17a6f02c4c3796101190f8272ffffff4883ea080f842d0000004d8d14424d8d0c4148f7daeb0d4d8d14524d8d0c51ffca48f7da410fb70452410fb70c512bc1750a48ffc275ed58d1f8eb0159488b6c24104883c418850500000000c5f877c3b800000000488b6c24104883c418850500000000c5f877c341c7879c020000dddeffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b3ada23 slotKind: QWORD  <||@
  Comment 48 10 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 51 12 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 57 block B2 null  <||@
  Comment 57 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 57 16 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 57 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 64 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B7  <||@
  Comment 70 block B4 null  <||@
  Comment 70 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 30 CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 73 32 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 79 block B6 null  <||@
  Comment 79 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 36 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 79 [rdx:0, rsi:0]at java.lang.String.compareTo(String.java:111) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 38 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 84 40 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 84 [rcx:0, rdx:0, rsi:0]at java.lang.String.compareTo(String.java:111) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 84 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 42 rax|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 91 44 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 91 [rax:0, rcx:0, rdx:0, rsi:0]at java.lang.String.compareTo(String.java:111) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 91 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 99 46 rdx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 106 48 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@518f73d6 encoding: base: 0 shift: 3  <||@
  Comment 113 50 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@518f73d6 encoding: base: 0 shift: 3  <||@
  Comment 120 52 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 122 54 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 125 56 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 127 58 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 130 60 rax|DWORD = ARRAY_COMPARE_TO (length1Value: rcx|DWORD, length2Value: rdx|DWORD, ~array1Value: r11|QWORD[.], ~array2Value: r8|QWORD[.]) {length1ValueTemp: rcx|DWORD, length2ValueTemp: rdx|DWORD, temp1: r10|QWORD[*], temp2: r9|QWORD[*], vectorTemp1: xmm0|DOUBLE} array1BaseOffset: 16 array2BaseOffset: 16 kind1: char kind2: char  <||@
  Comment 436 66 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 445 12  <||@
  Comment 455 block B5 null  <||@
  Comment 455 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 455 70 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 460 72 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 469 12  <||@
  Comment 479 block B7 null  <||@
  Comment 479 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 76 MOV [r15|QWORD + 668] y: -8483 size: DWORD  <||@
  Comment 490 78 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 497 80 DEOPT info [bci:0]  <||@
  Comment 497 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 502 [rdx:0, rsi:0]at java.lang.String.compareTo(String.java:111) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 503 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 503 4  <||@
  Comment 509 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 509 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6318[java.lang.String.compareTo(Object)]"
  method "HotSpotCompilation-6318[java.lang.String.compareTo(Object)]"
  date 1527005190369
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106a9ea20 448b560849c1e203493bc20f852f74d6ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104885d20f840d000000817a08da0200f80f8599010000483bd60f847801000085028b4e0c418504cc8b420c448b14c50c0000008b14cd0c000000448bd949c1e303448bc049c1e003d1e241d1e28bca418bd24d8d53104d8d48108bc12bca510f4ed085d20f8414010000410fb702410fb7092bc10f8509010000c1ea0183fa010f84f80000004d3bd10f84ef0000008bc283e2f00f8491000000c4c17a6f02c4c3796101197212c4c17a6f4210c4c37961411019731483c108410fb7044a410fb714492bc2e9b90000004d8d14424d8d0c4183e81083ea100f842700000048f7d8c4c17e6f0442c4c17def0441c4e27d17c00f85220000004883c01083ea1075e0c5fdefc04885c00f8470000000b8100000008bd048f7d8ebc7c5fdefc04d8d14424d8d0c41e96fffffff8bd083fa080f8c28000000c4c17a6f02c4c3796101190f8272ffffff4883ea080f842d0000004d8d14424d8d0c4148f7daeb0d4d8d14524d8d0c51ffca48f7da410fb70452410fb70c512bc1750a48ffc275ed58d1f8eb0159488b6c24104883c41885052304dffdc5f877c3b800000000488b6c24104883c41885050b04dffdc5f877c341c7879c020000dddeffff4d89a7a8020000e8e889d6ff90e804ba1a0090e8de88d6ff90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b3ada23 slotKind: QWORD  <||@
  Comment 48 10 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 51 12 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 57 block B2 null  <||@
  Comment 57 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 57 16 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 57 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 64 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B7  <||@
  Comment 70 block B4 null  <||@
  Comment 70 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 30 CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 73 32 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 79 block B6 null  <||@
  Comment 79 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 36 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 79 [rdx:0, rsi:0]at java.lang.String.compareTo(String.java:111) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 38 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 84 40 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 84 [rcx:0, rdx:0, rsi:0]at java.lang.String.compareTo(String.java:111) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 84 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 42 rax|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 91 44 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 91 [rax:0, rcx:0, rdx:0, rsi:0]at java.lang.String.compareTo(String.java:111) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 91 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 99 46 rdx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 106 48 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@518f73d6 encoding: base: 0 shift: 3  <||@
  Comment 113 50 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@518f73d6 encoding: base: 0 shift: 3  <||@
  Comment 120 52 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 122 54 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 125 56 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 127 58 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 130 60 rax|DWORD = ARRAY_COMPARE_TO (length1Value: rcx|DWORD, length2Value: rdx|DWORD, ~array1Value: r11|QWORD[.], ~array2Value: r8|QWORD[.]) {length1ValueTemp: rcx|DWORD, length2ValueTemp: rdx|DWORD, temp1: r10|QWORD[*], temp2: r9|QWORD[*], vectorTemp1: xmm0|DOUBLE} array1BaseOffset: 16 array2BaseOffset: 16 kind1: char kind2: char  <||@
  Comment 436 66 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 445 12  <||@
  Comment 455 block B5 null  <||@
  Comment 455 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 455 70 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 460 72 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 469 12  <||@
  Comment 479 block B7 null  <||@
  Comment 479 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 76 MOV [r15|QWORD + 668] y: -8483 size: DWORD  <||@
  Comment 490 78 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 497 80 DEOPT info [bci:0]  <||@
  Comment 497 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 502 [rdx:0, rsi:0]at java.lang.String.compareTo(String.java:111) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 503 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 503 4  <||@
  Comment 509 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 509 5  <||@
  HexCodeFile>>> <|@
end_nmethod
