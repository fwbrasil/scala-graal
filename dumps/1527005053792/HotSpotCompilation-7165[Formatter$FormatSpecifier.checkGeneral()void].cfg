begin_compilation
  name " HotSpotCompilation-7165[java.util.Formatter$FormatSpecifier.checkGeneral()]"
  method "HotSpotCompilation-7165[java.util.Formatter$FormatSpecifier.checkGeneral()]"
  date 1527005179477
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i472 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i472  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v482 v484 v483 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 1]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v482 
=== Succesors ===
next: v416 
=== Usages ===
i355 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v482 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid i355 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 1]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i472 
=== Succesors ===
=== Usages ===
v5 v9 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i472  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 4]
rawvalue: 98
stableDimension: 0
stamp: i32 [98] ⇊0000000000000062 ⇈0000000000000062
stampKind: i32
value: int[98|0x62]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i4 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i355 y: i4  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.checkGeneral()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2949
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v455 i474 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v415 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
i472 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v415 #falseSuccessor: v413  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91155
stableDimension: 0
stamp: i32 [-91155] ⇊00000000fffe9bed ⇈00000000fffe9bed
stampKind: i32
value: int[-91155|0xfffffffffffe9bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 13]
rawvalue: 104
stableDimension: 0
stamp: i32 [104] ⇊0000000000000068 ⇈0000000000000068
stampKind: i32
value: int[104|0x68]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i8 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i355 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 15]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v419 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v419 #falseSuccessor: v417  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid i457 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91411
stableDimension: 0
stamp: i32 [-91411] ⇊00000000fffe9aed ⇈00000000fffe9aed
stampKind: i32
value: int[-91411|0xfffffffffffe9aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a473 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a473  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a473 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.f
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 51]
nullCheck: false
stamp: n# Ljava/util/Formatter$Flags;
=== Inputs ===
stateBefore: - 
guard: - 
address: v484 
=== Succesors ===
next: i474 
=== Usages ===
v485 
=== Predecessor ===
v417 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v484 #next: i474  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a473 
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 1]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 57]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v485 
=== Succesors ===
next: i475 
=== Usages ===
i59 i245 i215 i185 i155 i126 
=== Predecessor ===
a473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v485 #next: i475  <|@  <|@
f <@~|@floating>@ <|@
tid a31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 82]
rawvalue: Formatter.Flags@859099015
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@859099015]
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a31 
index: - 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a31 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v487 
=== Succesors ===
next: v428 
=== Usages ===
v128 i126 
=== Predecessor ===
i474 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v487 #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: i32
=== Inputs ===
x: i474 
y: i475 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i474 y: i475  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i475 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i126 y: i475  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v427 
falseSuccessor: v425 
=== Usages ===
=== Predecessor ===
i475 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v427 #falseSuccessor: v425  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104467
stableDimension: 0
stamp: i32 [-104467] ⇊00000000fffe67ed ⇈00000000fffe67ed
stampKind: i32
value: int[-104467|0xfffffffffffe67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: i476 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i476  <|@  <|@
f <@~|@floating>@ <|@
tid a35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 88]
rawvalue: Formatter.Flags@2009893684
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@2009893684]
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a35 
index: - 
=== Succesors ===
=== Usages ===
i476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a35 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v488 
=== Succesors ===
next: v432 
=== Usages ===
v157 i155 
=== Predecessor ===
v425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v488 #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: i32
=== Inputs ===
x: i474 
y: i476 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i474 y: i476  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i155 
y: i476 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i155 y: i476  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
i476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v431 #falseSuccessor: v429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104723
stableDimension: 0
stamp: i32 [-104723] ⇊00000000fffe66ed ⇈00000000fffe66ed
stampKind: i32
value: int[-104723|0xfffffffffffe66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v431 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: i477 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i477  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 94]
rawvalue: Formatter.Flags@271681927
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@271681927]
=== Inputs ===
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a39 
index: - 
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a39 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v489 
=== Succesors ===
next: v436 
=== Usages ===
v187 i185 
=== Predecessor ===
v429 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v489 #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: i32
=== Inputs ===
x: i474 
y: i477 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i474 y: i477  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i185 
y: i477 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i185 y: i477  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v435 
falseSuccessor: v433 
=== Usages ===
=== Predecessor ===
i477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v435 #falseSuccessor: v433  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104979
stableDimension: 0
stamp: i32 [-104979] ⇊00000000fffe65ed ⇈00000000fffe65ed
stampKind: i32
value: int[-104979|0xfffffffffffe65ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: i478 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i478  <|@  <|@
f <@~|@floating>@ <|@
tid a43 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 100]
rawvalue: Formatter.Flags@1952837958
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@1952837958]
=== Inputs ===
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a43 
index: - 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v490 
=== Succesors ===
next: v440 
=== Usages ===
v217 i215 
=== Predecessor ===
v433 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v490 #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: i32
=== Inputs ===
x: i474 
y: i478 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i474 y: i478  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i478 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i215 y: i478  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v439 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
i478 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v439 #falseSuccessor: v437  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid i467 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105235
stableDimension: 0
stamp: i32 [-105235] ⇊00000000fffe64ed ⇈00000000fffe64ed
stampKind: i32
value: int[-105235|0xfffffffffffe64ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v439 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: i479 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i479  <|@  <|@
f <@~|@floating>@ <|@
tid a47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 106]
rawvalue: Formatter.Flags@1921891745
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@1921891745]
=== Inputs ===
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a47 
index: - 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a47 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v491 
=== Succesors ===
next: v444 
=== Usages ===
v247 i245 
=== Predecessor ===
v437 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v491 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid i245 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: i32
=== Inputs ===
x: i474 
y: i479 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i474 y: i479  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i245 
y: i479 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i245 y: i479  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v441 
=== Usages ===
=== Predecessor ===
i479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v443 #falseSuccessor: v441  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105491
stableDimension: 0
stamp: i32 [-105491] ⇊00000000fffe63ed ⇈00000000fffe63ed
stampKind: i32
value: int[-105491|0xfffffffffffe63ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: i480 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i480  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.width
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 43]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v483 
=== Succesors ===
next: v16 
=== Usages ===
v13 
=== Predecessor ===
v441 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v483 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 46]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 47]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i480 
y: i12 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i480 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 47]
stamp: void
trueSuccessorProbability: 0.9478852069596171
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
i480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    probability 4606713010474983090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i481 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i481  <|@  <|@
f <@~|@floating>@ <|@
tid a18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 54]
rawvalue: Formatter.Flags@122446495
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@122446495]
=== Inputs ===
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a18 
index: - 
=== Succesors ===
=== Usages ===
i481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a18 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i481 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
=== Succesors ===
next: v448 
=== Usages ===
i59 v61 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v486 #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 57]
stamp: i32
=== Inputs ===
x: i474 
y: i481 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i474 y: i481  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 57]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i481 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i59 y: i481  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v447 
falseSuccessor: v445 
=== Usages ===
=== Predecessor ===
i481 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v447 #falseSuccessor: v445  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid i471 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -94995
stableDimension: 0
stamp: i32 [-94995] ⇊00000000fffe8ced ⇈00000000fffe8ced
stampKind: i32
value: int[-94995|0xfffffffffffe8ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B11" "B13" "B16" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-105491 - -91155] ⇊00000000fffe00e5 ⇈00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v449 
values: i451 i457 i461 i463 i465 i467 i469 i471 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v449 values: i451 i457 i461 i463 i465 i467 i469 i471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v450 v456 v460 v462 v464 v466 v468 v470 
=== Succesors ===
next: v455 
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v450 v456 v460 v462 v464 v466 v468 v470 #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid a452 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i453 
speculation: a452 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i453 speculation: a452  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 4606713010474983090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2957) [bci: 113]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4587671354236343520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2957) [bci: 113]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i472 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i472  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v482 v484 v483 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i472 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 1]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v482 
=== Succesors ===
next: v416 
=== Usages ===
i355 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v482 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid i355 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 1]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i472 
=== Succesors ===
=== Usages ===
v5 v9 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i472  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[98|0x62] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 4]
rawvalue: 98
stableDimension: 0
stamp: i32 [98] ⇊0000000000000062 ⇈0000000000000062
stampKind: i32
value: int[98|0x62]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i4 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i355 y: i4  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.checkGeneral()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2949
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v455 i474 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v415 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
i472 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v415 #falseSuccessor: v413  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@320d41f2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVZX [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 98 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
result int[-91155|0xfffffffffffe9bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91155
stableDimension: 0
stamp: i32 [-91155] ⇊00000000fffe9bed ⇈00000000fffe9bed
stampKind: i32
value: int[-91155|0xfffffffffffe9bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91155|0xfffffffffffe9bed]] destination: B1 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[104|0x68] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 13]
rawvalue: 104
stableDimension: 0
stamp: i32 [104] ⇊0000000000000068 ⇈0000000000000068
stampKind: i32
value: int[104|0x68]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i8 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i355 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 15]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v419 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v419 #falseSuccessor: v417  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 104 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid i457 <|@
result int[-91411|0xfffffffffffe9aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91411
stableDimension: 0
stamp: i32 [-91411] ⇊00000000fffe9aed ⇈00000000fffe9aed
stampKind: i32
value: int[-91411|0xfffffffffffe9aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91411|0xfffffffffffe9aed]] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a473 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a473  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a473 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.f
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 51]
nullCheck: false
stamp: n# Ljava/util/Formatter$Flags;
=== Inputs ===
stateBefore: - 
guard: - 
address: v484 
=== Succesors ===
next: i474 
=== Usages ===
v485 
=== Predecessor ===
v417 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v484 #next: i474  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a473 
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i474 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 1]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 57]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v485 
=== Succesors ===
next: i475 
=== Usages ===
i59 i245 i215 i185 i155 i126 
=== Predecessor ===
a473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v485 #next: i475  <|@  <|@
f <@~|@floating>@ <|@
tid a31 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 82]
rawvalue: Formatter.Flags@859099015
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@859099015]
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
result [v4|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a31 
index: - 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a31 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i475 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v487 
=== Succesors ===
next: v428 
=== Usages ===
v128 i126 
=== Predecessor ===
i474 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v487 #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: i32
=== Inputs ===
x: i474 
y: i475 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i474 y: i475  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i475 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i126 y: i475  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v427 
falseSuccessor: v425 
=== Usages ===
=== Predecessor ===
i475 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v427 #falseSuccessor: v425  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
result int[-104467|0xfffffffffffe67ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104467
stableDimension: 0
stamp: i32 [-104467] ⇊00000000fffe67ed ⇈00000000fffe67ed
stampKind: i32
value: int[-104467|0xfffffffffffe67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104467|0xfffffffffffe67ed]] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: i476 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i476  <|@  <|@
f <@~|@floating>@ <|@
tid a35 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 88]
rawvalue: Formatter.Flags@2009893684
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@2009893684]
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
result [v7|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a35 
index: - 
=== Succesors ===
=== Usages ===
i476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a35 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i476 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v488 
=== Succesors ===
next: v432 
=== Usages ===
v157 i155 
=== Predecessor ===
v425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v488 #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: i32
=== Inputs ===
x: i474 
y: i476 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i474 y: i476  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i155 
y: i476 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i155 y: i476  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
i476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v431 #falseSuccessor: v429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
result int[-104723|0xfffffffffffe66ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104723
stableDimension: 0
stamp: i32 [-104723] ⇊00000000fffe66ed ⇈00000000fffe66ed
stampKind: i32
value: int[-104723|0xfffffffffffe66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v431 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104723|0xfffffffffffe66ed]] destination: B7 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: i477 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i477  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 94]
rawvalue: Formatter.Flags@271681927
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@271681927]
=== Inputs ===
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
result [v10|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a39 
index: - 
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a39 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i477 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v489 
=== Succesors ===
next: v436 
=== Usages ===
v187 i185 
=== Predecessor ===
v429 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v489 #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: i32
=== Inputs ===
x: i474 
y: i477 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i474 y: i477  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i185 
y: i477 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i185 y: i477  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v435 
falseSuccessor: v433 
=== Usages ===
=== Predecessor ===
i477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v435 #falseSuccessor: v433  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AND (x: v3|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
result int[-104979|0xfffffffffffe65ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104979
stableDimension: 0
stamp: i32 [-104979] ⇊00000000fffe65ed ⇈00000000fffe65ed
stampKind: i32
value: int[-104979|0xfffffffffffe65ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104979|0xfffffffffffe65ed]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: i478 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i478  <|@  <|@
f <@~|@floating>@ <|@
tid a43 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 100]
rawvalue: Formatter.Flags@1952837958
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@1952837958]
=== Inputs ===
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
result [v13|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a43 
index: - 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i478 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v490 
=== Succesors ===
next: v440 
=== Usages ===
v217 i215 
=== Predecessor ===
v433 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v490 #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: i32
=== Inputs ===
x: i474 
y: i478 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i474 y: i478  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i478 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i215 y: i478  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v439 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
i478 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v439 #falseSuccessor: v437  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1952837958] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND (x: v3|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid i467 <|@
result int[-105235|0xfffffffffffe64ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105235
stableDimension: 0
stamp: i32 [-105235] ⇊00000000fffe64ed ⇈00000000fffe64ed
stampKind: i32
value: int[-105235|0xfffffffffffe64ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v439 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105235|0xfffffffffffe64ed]] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: i479 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i479  <|@  <|@
f <@~|@floating>@ <|@
tid a47 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 106]
rawvalue: Formatter.Flags@1921891745
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@1921891745]
=== Inputs ===
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
result [v16|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a47 
index: - 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a47 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i479 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v491 
=== Succesors ===
next: v444 
=== Usages ===
v247 i245 
=== Predecessor ===
v437 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v491 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid i245 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: i32
=== Inputs ===
x: i474 
y: i479 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i474 y: i479  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i245 
y: i479 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i245 y: i479  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v441 
=== Usages ===
=== Predecessor ===
i479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v443 #falseSuccessor: v441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v16|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = AND (x: v3|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
result int[-105491|0xfffffffffffe63ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105491
stableDimension: 0
stamp: i32 [-105491] ⇊00000000fffe63ed ⇈00000000fffe63ed
stampKind: i32
value: int[-105491|0xfffffffffffe63ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105491|0xfffffffffffe63ed]] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: i480 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i480  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i480 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.width
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 43]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v483 
=== Succesors ===
next: v16 
=== Usages ===
v13 
=== Predecessor ===
v441 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v483 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 46]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 47]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i480 
y: i12 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i480 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 47]
stamp: void
trueSuccessorProbability: 0.9478852069596171
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
i480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9478852069596171 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    probability 4606713010474983090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i481 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i481  <|@  <|@
f <@~|@floating>@ <|@
tid a18 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 54]
rawvalue: Formatter.Flags@122446495
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@122446495]
=== Inputs ===
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
result [v19|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a18 
index: - 
=== Succesors ===
=== Usages ===
i481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a18 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i481 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
=== Succesors ===
next: v448 
=== Usages ===
i59 v61 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v486 #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 57]
stamp: i32
=== Inputs ===
x: i474 
y: i481 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i474 y: i481  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 57]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i481 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i59 y: i481  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v447 
falseSuccessor: v445 
=== Usages ===
=== Predecessor ===
i481 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v447 #falseSuccessor: v445  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = AND (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid i471 <|@
result int[-94995|0xfffffffffffe8ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -94995
stableDimension: 0
stamp: i32 [-94995] ⇊00000000fffe8ced ⇈00000000fffe8ced
stampKind: i32
value: int[-94995|0xfffffffffffe8ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
v447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-94995|0xfffffffffffe8ced]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B11" "B13" "B16" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i453 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-105491 - -91155] ⇊00000000fffe00e5 ⇈00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v449 
values: i451 i457 i461 i463 i465 i467 i469 i471 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v449 values: i451 i457 i461 i463 i465 i467 i469 i471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v450 v456 v460 v462 v464 v466 v468 v470 
=== Succesors ===
next: v455 
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v450 v456 v460 v462 v464 v466 v468 v470 #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid a452 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i453 
speculation: a452 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i453 speculation: a452  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 4606713010474983090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2953) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2957) [bci: 113]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4587671354236343520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2955) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2957) [bci: 113]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@320d41f2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVZX [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 98 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 104 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AND (x: v3|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1952837958] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND (x: v3|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v16|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = AND (x: v3|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9478852069596171 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    probability 4606713010474983090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = AND (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 4606713010474983090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4587671354236343520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104467|0xfffffffffffe67ed]] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B11" "B13" "B16" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105491|0xfffffffffffe63ed]] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-94995|0xfffffffffffe8ced]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105235|0xfffffffffffe64ed]] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104723|0xfffffffffffe66ed]] destination: B7 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104979|0xfffffffffffe65ed]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91155|0xfffffffffffe9bed]] destination: B1 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91411|0xfffffffffffe9aed]] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #16         // c:char
     4: bipush        98
     6: if_icmpeq     18
     9: aload_0       
    10: getfield      #16         // c:char
    13: bipush        104
    15: if_icmpne     42
    18: aload_0       
    19: getfield      #7          // f:java.util.Formatter$Flags
    22: getstatic     #91         // java.util.Formatter$Flags.ALTERNATE:java.util.Formatter$Flags
    25: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    28: ifeq          42
    31: aload_0       
    32: getstatic     #91         // java.util.Formatter$Flags.ALTERNATE:java.util.Formatter$Flags
    35: aload_0       
    36: getfield      #16         // c:char
    39: invokespecial #92         // failMismatch:(java.util.Formatter$Flags, char)void
    42: aload_0       
    43: getfield      #10         // width:int
    46: iconst_m1     
    47: if_icmpne     75
    50: aload_0       
    51: getfield      #7          // f:java.util.Formatter$Flags
    54: getstatic     #101        // java.util.Formatter$Flags.LEFT_JUSTIFY:java.util.Formatter$Flags
    57: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    60: ifeq          75
    63: new           #139        // java.util.MissingFormatWidthException
    66: dup           
    67: aload_0       
    68: invokevirtual #111        // toString:()java.lang.String
    71: invokespecial #112        // java.util.MissingFormatWidthException.<init>:(java.lang.String)void
    74: athrow        
    75: aload_0       
    76: iconst_5      
    77: anewarray     #142        // java.util.Formatter$Flags
    80: dup           
    81: iconst_0      
    82: getstatic     #113        // java.util.Formatter$Flags.PLUS:java.util.Formatter$Flags
    85: aastore       
    86: dup           
    87: iconst_1      
    88: getstatic     #114        // java.util.Formatter$Flags.LEADING_SPACE:java.util.Formatter$Flags
    91: aastore       
    92: dup           
    93: iconst_2      
    94: getstatic     #115        // java.util.Formatter$Flags.ZERO_PAD:java.util.Formatter$Flags
    97: aastore       
    98: dup           
    99: iconst_3      
   100: getstatic     #116        // java.util.Formatter$Flags.GROUP:java.util.Formatter$Flags
   103: aastore       
   104: dup           
   105: iconst_4      
   106: getstatic     #117        // java.util.Formatter$Flags.PARENTHESES:java.util.Formatter$Flags
   109: aastore       
   110: invokespecial #118        // checkBadFlags:(java.util.Formatter$Flags[])void
   113: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@320d41f2 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOVZX [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMP r10|DWORD y: 98 size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction CMP r10|DWORD y: 104 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015] <|@ <|@
      nr   28  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684] <|@ <|@
      nr   40  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr   52  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1952837958] <|@ <|@
      nr   64  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745] <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMP [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.9478852069596171 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    probability 4606713010474983090
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   94  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   96  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 4606713010474983090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4587671354236343520
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B11" "B13" "B16" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-105235|0xfffffffffffe64ed] // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B7 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-104979|0xfffffffffffe65ed] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-91155|0xfffffffffffe9bed] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B1 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-91411|0xfffffffffffe9aed] // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #16         // c:char
     4: bipush        98
     6: if_icmpeq     18
     9: aload_0       
    10: getfield      #16         // c:char
    13: bipush        104
    15: if_icmpne     42
    18: aload_0       
    19: getfield      #7          // f:java.util.Formatter$Flags
    22: getstatic     #91         // java.util.Formatter$Flags.ALTERNATE:java.util.Formatter$Flags
    25: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    28: ifeq          42
    31: aload_0       
    32: getstatic     #91         // java.util.Formatter$Flags.ALTERNATE:java.util.Formatter$Flags
    35: aload_0       
    36: getfield      #16         // c:char
    39: invokespecial #92         // failMismatch:(java.util.Formatter$Flags, char)void
    42: aload_0       
    43: getfield      #10         // width:int
    46: iconst_m1     
    47: if_icmpne     75
    50: aload_0       
    51: getfield      #7          // f:java.util.Formatter$Flags
    54: getstatic     #101        // java.util.Formatter$Flags.LEFT_JUSTIFY:java.util.Formatter$Flags
    57: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    60: ifeq          75
    63: new           #139        // java.util.MissingFormatWidthException
    66: dup           
    67: aload_0       
    68: invokevirtual #111        // toString:()java.lang.String
    71: invokespecial #112        // java.util.MissingFormatWidthException.<init>:(java.lang.String)void
    74: athrow        
    75: aload_0       
    76: iconst_5      
    77: anewarray     #142        // java.util.Formatter$Flags
    80: dup           
    81: iconst_0      
    82: getstatic     #113        // java.util.Formatter$Flags.PLUS:java.util.Formatter$Flags
    85: aastore       
    86: dup           
    87: iconst_1      
    88: getstatic     #114        // java.util.Formatter$Flags.LEADING_SPACE:java.util.Formatter$Flags
    91: aastore       
    92: dup           
    93: iconst_2      
    94: getstatic     #115        // java.util.Formatter$Flags.ZERO_PAD:java.util.Formatter$Flags
    97: aastore       
    98: dup           
    99: iconst_3      
   100: getstatic     #116        // java.util.Formatter$Flags.GROUP:java.util.Formatter$Flags
   103: aastore       
   104: dup           
   105: iconst_4      
   106: getstatic     #117        // java.util.Formatter$Flags.PARENTHESES:java.util.Formatter$Flags
   109: aastore       
   110: invokespecial #118        // checkBadFlags:(java.util.Formatter$Flags[])void
   113: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@320d41f2 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOVZX [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMP r10|DWORD y: 98 size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction CMP r10|DWORD y: 104 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015] <|@ <|@
      nr   28  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684] <|@ <|@
      nr   40  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr   52  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1952837958] <|@ <|@
      nr   64  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745] <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMP [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.9478852069596171 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    probability 4606713010474983090
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   94  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   96  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 4606713010474983090
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors 
    xhandlers
    flags 
    probability 4587671354236343520
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B11" "B13" "B16" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-105235|0xfffffffffffe64ed] // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B7 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-104979|0xfffffffffffe65ed] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-91155|0xfffffffffffe9bed] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B1 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-91411|0xfffffffffffe9aed] // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #16         // c:char
     4: bipush        98
     6: if_icmpeq     18
     9: aload_0       
    10: getfield      #16         // c:char
    13: bipush        104
    15: if_icmpne     42
    18: aload_0       
    19: getfield      #7          // f:java.util.Formatter$Flags
    22: getstatic     #91         // java.util.Formatter$Flags.ALTERNATE:java.util.Formatter$Flags
    25: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    28: ifeq          42
    31: aload_0       
    32: getstatic     #91         // java.util.Formatter$Flags.ALTERNATE:java.util.Formatter$Flags
    35: aload_0       
    36: getfield      #16         // c:char
    39: invokespecial #92         // failMismatch:(java.util.Formatter$Flags, char)void
    42: aload_0       
    43: getfield      #10         // width:int
    46: iconst_m1     
    47: if_icmpne     75
    50: aload_0       
    51: getfield      #7          // f:java.util.Formatter$Flags
    54: getstatic     #101        // java.util.Formatter$Flags.LEFT_JUSTIFY:java.util.Formatter$Flags
    57: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    60: ifeq          75
    63: new           #139        // java.util.MissingFormatWidthException
    66: dup           
    67: aload_0       
    68: invokevirtual #111        // toString:()java.lang.String
    71: invokespecial #112        // java.util.MissingFormatWidthException.<init>:(java.lang.String)void
    74: athrow        
    75: aload_0       
    76: iconst_5      
    77: anewarray     #142        // java.util.Formatter$Flags
    80: dup           
    81: iconst_0      
    82: getstatic     #113        // java.util.Formatter$Flags.PLUS:java.util.Formatter$Flags
    85: aastore       
    86: dup           
    87: iconst_1      
    88: getstatic     #114        // java.util.Formatter$Flags.LEADING_SPACE:java.util.Formatter$Flags
    91: aastore       
    92: dup           
    93: iconst_2      
    94: getstatic     #115        // java.util.Formatter$Flags.ZERO_PAD:java.util.Formatter$Flags
    97: aastore       
    98: dup           
    99: iconst_3      
   100: getstatic     #116        // java.util.Formatter$Flags.GROUP:java.util.Formatter$Flags
   103: aastore       
   104: dup           
   105: iconst_4      
   106: getstatic     #117        // java.util.Formatter$Flags.PARENTHESES:java.util.Formatter$Flags
   109: aastore       
   110: invokespecial #118        // checkBadFlags:(java.util.Formatter$Flags[])void
   113: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410440fb756184183fa620f84330100004183fa680f8431010000448b561c468b14d50c00000049bbaddeaddeaddeadde458b5b0c458bc24523c3453bd80f84be00000049bbaddeaddeaddeadde458b5b0c458bc24523c3453bd80f84d300000049bbaddeaddeaddeadde458b5b0c458bc24523c3453bd80f84be00000049bbaddeaddeaddeadde458b5b0c458bc24523c3453bd80f849100000049bbaddeaddeaddeadde458b5b0c458bc24523c3453bd80f8464000000837e10ff0f852d00000049bbaddeaddeaddeadde458b5b0c4523d3453bda0f8448000000488b6c24104883c418850500000000c5f877c3488b6c24104883c418850500000000c5f877c341baed67feff4589979c0200004d89a7a8020000e8000000009041baed63feffebe441baed8cfeffebdc41baed64feffebd441baed66feffebcc41baed65feffebc441baed9bfeffebbc41baed9afeffebb4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@320d41f2 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOVZX [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 53 10 CMP r10|DWORD y: 98 size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 16 CMP r10|DWORD y: 104 size: DWORD  <||@
  Comment 67 18 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 73 block B4 null  <||@
  Comment 73 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 22 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 77 24 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 77 [rsi:0]at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 26 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015]  <||@
  Comment 85 {Object[Formatter.Flags@859099015]}  <||@
  Comment 95 28 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 99 30 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 105 32 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 108 34 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 114 block B6 null  <||@
  Comment 114 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 38 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684]  <||@
  Comment 114 {Object[Formatter.Flags@2009893684]}  <||@
  Comment 124 40 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 128 42 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 134 44 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 137 46 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 143 block B8 null  <||@
  Comment 143 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 143 50 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927]  <||@
  Comment 143 {Object[Formatter.Flags@271681927]}  <||@
  Comment 153 52 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 157 54 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 163 56 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 166 58 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 172 block B10 null  <||@
  Comment 172 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 172 62 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1952837958]  <||@
  Comment 172 {Object[Formatter.Flags@1952837958]}  <||@
  Comment 182 64 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 186 66 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 192 68 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 195 70 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 201 block B12 null  <||@
  Comment 201 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 74 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745]  <||@
  Comment 201 {Object[Formatter.Flags@1921891745]}  <||@
  Comment 211 76 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 215 78 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 221 80 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 224 82 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 230 block B14 null  <||@
  Comment 230 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 230 86 CMP [rsi|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 234 88 BRANCH trueDestinationProbability: 0.9478852069596171 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B19  <||@
  Comment 240 block B15 null  <||@
  Comment 240 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 92 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495]  <||@
  Comment 240 {Object[Formatter.Flags@122446495]}  <||@
  Comment 250 94 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 254 96 r10|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 257 98 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 260 100 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B18  <||@
  Comment 266 block B18 null  <||@
  Comment 266 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 104 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 275 12  <||@
  Comment 285 block B19 null  <||@
  Comment 285 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 285 108 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 294 12  <||@
  Comment 304 block B5 null  <||@
  Comment 304 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 304 -1 r10|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed]  <||@
  Comment 310 112 JUMP ~[] destination: B5 -> B17  <||@
  Comment 310 block B17 null  <||@
  Comment 310 142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 310 144 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 317 146 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 324 148 DEOPT info [bci:0]  <||@
  Comment 324 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 329 [rsi:0]at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 330 block B13 null  <||@
  Comment 330 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 330 -1 r10|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed]  <||@
  Comment 336 116 JUMP ~[] destination: B13 -> B17  <||@
  Comment 338 block B16 null  <||@
  Comment 338 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 338 -1 r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced]  <||@
  Comment 344 120 JUMP ~[] destination: B16 -> B17  <||@
  Comment 346 block B11 null  <||@
  Comment 346 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 346 -1 r10|DWORD = MOVE input: int[-105235|0xfffffffffffe64ed]  <||@
  Comment 352 124 JUMP ~[] destination: B11 -> B17  <||@
  Comment 354 block B7 null  <||@
  Comment 354 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 354 -1 r10|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed]  <||@
  Comment 360 128 JUMP ~[] destination: B7 -> B17  <||@
  Comment 362 block B9 null  <||@
  Comment 362 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 362 -1 r10|DWORD = MOVE input: int[-104979|0xfffffffffffe65ed]  <||@
  Comment 368 132 JUMP ~[] destination: B9 -> B17  <||@
  Comment 370 block B1 null  <||@
  Comment 370 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 -1 r10|DWORD = MOVE input: int[-91155|0xfffffffffffe9bed]  <||@
  Comment 376 136 JUMP ~[] destination: B1 -> B17  <||@
  Comment 378 block B3 null  <||@
  Comment 378 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 378 -1 r10|DWORD = MOVE input: int[-91411|0xfffffffffffe9aed]  <||@
  Comment 384 140 JUMP ~[] destination: B3 -> B17  <||@
  Comment 386 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 386 4  <||@
  Comment 392 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 392 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7165[java.util.Formatter$FormatSpecifier.checkGeneral()]"
  method "HotSpotCompilation-7165[java.util.Formatter$FormatSpecifier.checkGeneral()]"
  date 1527005179563
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10773e460 448b560849c1e203493bc20f85ef790cff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410440fb756184183fa620f84330100004183fa680f8431010000448b561c468b14d50c00000049bb68711ac006000000458b5b0c458bc24523c3453bd80f84be00000049bb78711ac006000000458b5b0c458bc24523c3453bd80f84d300000049bb88711ac006000000458b5b0c458bc24523c3453bd80f84be00000049bb98711ac006000000458b5b0c458bc24523c3453bd80f849100000049bba8711ac006000000458b5b0c458bc24523c3453bd80f8464000000837e10ff0f852d00000049bb58711ac006000000458b5b0c4523d3453bda0f8448000000488b6c24104883c41885058d0a15fdc5f877c3488b6c24104883c41885057a0a15fdc5f877c341baed67feff4589979c0200004d89a7a8020000e855900cff9041baed63feffebe441baed8cfeffebdc41baed64feffebd441baed66feffebcc41baed65feffebc441baed9bfeffebbc41baed9afeffebb4e839c050ff90e8138f0cff90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@320d41f2 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOVZX [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 53 10 CMP r10|DWORD y: 98 size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 16 CMP r10|DWORD y: 104 size: DWORD  <||@
  Comment 67 18 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 73 block B4 null  <||@
  Comment 73 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 22 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 77 24 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 77 [rsi:0]at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 26 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015]  <||@
  Comment 85 {Object[Formatter.Flags@859099015]}  <||@
  Comment 95 28 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 99 30 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 105 32 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 108 34 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 114 block B6 null  <||@
  Comment 114 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 38 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684]  <||@
  Comment 114 {Object[Formatter.Flags@2009893684]}  <||@
  Comment 124 40 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 128 42 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 134 44 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 137 46 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 143 block B8 null  <||@
  Comment 143 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 143 50 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927]  <||@
  Comment 143 {Object[Formatter.Flags@271681927]}  <||@
  Comment 153 52 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 157 54 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 163 56 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 166 58 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 172 block B10 null  <||@
  Comment 172 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 172 62 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1952837958]  <||@
  Comment 172 {Object[Formatter.Flags@1952837958]}  <||@
  Comment 182 64 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 186 66 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 192 68 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 195 70 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 201 block B12 null  <||@
  Comment 201 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 74 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745]  <||@
  Comment 201 {Object[Formatter.Flags@1921891745]}  <||@
  Comment 211 76 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 215 78 r8|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 221 80 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 224 82 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 230 block B14 null  <||@
  Comment 230 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 230 86 CMP [rsi|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 234 88 BRANCH trueDestinationProbability: 0.9478852069596171 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B19  <||@
  Comment 240 block B15 null  <||@
  Comment 240 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 92 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495]  <||@
  Comment 240 {Object[Formatter.Flags@122446495]}  <||@
  Comment 250 94 r11|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 254 96 r10|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 257 98 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 260 100 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B18  <||@
  Comment 266 block B18 null  <||@
  Comment 266 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 104 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 275 12  <||@
  Comment 285 block B19 null  <||@
  Comment 285 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 285 108 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 294 12  <||@
  Comment 304 block B5 null  <||@
  Comment 304 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 304 -1 r10|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed]  <||@
  Comment 310 112 JUMP ~[] destination: B5 -> B17  <||@
  Comment 310 block B17 null  <||@
  Comment 310 142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 310 144 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 317 146 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 324 148 DEOPT info [bci:0]  <||@
  Comment 324 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 329 [rsi:0]at java.util.Formatter$FormatSpecifier.checkGeneral(Formatter.java:2949) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 330 block B13 null  <||@
  Comment 330 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 330 -1 r10|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed]  <||@
  Comment 336 116 JUMP ~[] destination: B13 -> B17  <||@
  Comment 338 block B16 null  <||@
  Comment 338 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 338 -1 r10|DWORD = MOVE input: int[-94995|0xfffffffffffe8ced]  <||@
  Comment 344 120 JUMP ~[] destination: B16 -> B17  <||@
  Comment 346 block B11 null  <||@
  Comment 346 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 346 -1 r10|DWORD = MOVE input: int[-105235|0xfffffffffffe64ed]  <||@
  Comment 352 124 JUMP ~[] destination: B11 -> B17  <||@
  Comment 354 block B7 null  <||@
  Comment 354 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 354 -1 r10|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed]  <||@
  Comment 360 128 JUMP ~[] destination: B7 -> B17  <||@
  Comment 362 block B9 null  <||@
  Comment 362 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 362 -1 r10|DWORD = MOVE input: int[-104979|0xfffffffffffe65ed]  <||@
  Comment 368 132 JUMP ~[] destination: B9 -> B17  <||@
  Comment 370 block B1 null  <||@
  Comment 370 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 -1 r10|DWORD = MOVE input: int[-91155|0xfffffffffffe9bed]  <||@
  Comment 376 136 JUMP ~[] destination: B1 -> B17  <||@
  Comment 378 block B3 null  <||@
  Comment 378 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 378 -1 r10|DWORD = MOVE input: int[-91411|0xfffffffffffe9aed]  <||@
  Comment 384 140 JUMP ~[] destination: B3 -> B17  <||@
  Comment 386 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 386 4  <||@
  Comment 392 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 392 5  <||@
  HexCodeFile>>> <|@
end_nmethod
