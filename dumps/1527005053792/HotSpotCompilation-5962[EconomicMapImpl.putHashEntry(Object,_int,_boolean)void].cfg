begin_compilation
  name " HotSpotCompilation-5962[org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean)]"
  method "HotSpotCompilation-5962[org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean)]"
  date 1527005170107
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1528 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1528  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?446 ?134 ?178 ?317 v796 ?448 ?1223 ?282 ?193 ?466 v1564 ?431 ?1222 ?110 v1568 ?1221 ?609 v1563 ?587 ?119 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1563 
=== Succesors ===
next: v93 
=== Usages ===
a693 v721 v943 v945 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1563 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
value: a1528 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1528  <|@  <|@
f <@~|@floating>@ <|@
tid i1379 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1378 v1392 v1455 v1504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1373 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1374 j1389 j1452 j1501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1377 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1595 v1598 v1605 v1611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1510 v1512 v1513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1508 v1511 v1514 v1444 v1493 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?134 ?317 ?448 i32 ?431 ?466 i239 ?446 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 13]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i32 i260 i240 i183 i188 i239 i378 i379 i579 i580 a1416 a1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 37]
stamp: i32
=== Inputs ===
x: i3 
y: i12 
=== Succesors ===
=== Usages ===
?193 i175 ?178 i189 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
resultBits: 8
stamp: i8
=== Inputs ===
value: i32 
=== Succesors ===
=== Usages ===
v856 v810 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i3 
y: i12 
=== Succesors ===
=== Usages ===
i240 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i240 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i239 
y: i12 
=== Succesors ===
=== Usages ===
v834 v889 v1588 v1592 v933 v1581 v1578 v1585 v1590 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i239 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i161 i189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v20 v387 v481 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i14 i131 i377 i458 i582 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i126 i311 i617 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1237 a1323 v1314 v1288 v1247 v1302 v1272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1537 a1533 a1541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:307) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v612 v170 v247 v305 v321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1529 a1531 a1535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?134 v20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?134 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 561
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i3 i4 - - - - 
=== Succesors ===
=== Usages ===
?110 ?609 ?119 ?330 ?297 ?282 ?587 ?1221 ?1222 ?1223 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 i4 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v712 v724 v698 v1622 v1621 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 561
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 - - - - 
=== Succesors ===
=== Usages ===
v1237 v1621 v1622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7064097688878498
=== Inputs ===
condition: v721 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
a1528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v721 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1621 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a2 
=== Succesors ===
next: i608 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a2 #next: i608  <|@  <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@44692e3c
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i608 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?1221 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?134 
values: a1 - - 
=== Succesors ===
=== Usages ===
i608 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i608 <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v698 
stateDuring: ?1221 
=== Succesors ===
next: a1529 
=== Usages ===
?609 i616 i617 i594 i296 
=== Predecessor ===
v1621 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v698 stateDuring: ?1221 #next: a1529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1564 
=== Succesors ===
next: i1530 
=== Usages ===
a702 v1565 
=== Predecessor ===
i608 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1564 #next: i1530  <|@  <|@
tid ?609 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?134 
values: a1 - - i608 
=== Succesors ===
=== Usages ===
i1530 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - - i608  <|@  <|@
f <@~|@floating>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1529 
=== Succesors ===
=== Usages ===
i1530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?609 
guard: - 
address: v1565 
=== Succesors ===
next: v615 
=== Usages ===
v612 i597 i1226 
=== Predecessor ===
a1529 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?609 guard: - address: v1565 #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1530 
y: i137 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1530 y: i137  <|@  <|@
f <@~|@floating>@ <|@
tid a702 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1529 
=== Succesors ===
=== Usages ===
a284 a595 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1529  <|@  <|@
f <@~|@floating>@ <|@
tid i617 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i608 
y: i125 
=== Succesors ===
=== Usages ===
i616 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i608 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i616 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32
=== Inputs ===
x: i608 
y: i617 
=== Succesors ===
=== Usages ===
i601 i300 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i608 y: i617  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
i1530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v613 #falseSuccessor: v614  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602932431886806378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
v613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595590265099889163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
v614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid a942 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1528 
y: a942 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1528 y: a942  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.8855350555757266
=== Inputs ===
condition: v943 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v943 #trueSuccessor: v101 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1622 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a2 
=== Succesors ===
next: i118 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a2 #next: i118  <|@  <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@7a166cfe
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?1222 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?134 
values: a1 - - 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v712 
stateDuring: ?1222 
=== Succesors ===
next: a1531 
=== Usages ===
?119 i296 i310 i311 i594 
=== Predecessor ===
v1622 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v712 stateDuring: ?1222 #next: a1531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1564 
=== Succesors ===
next: i1532 
=== Usages ===
a714 v1566 
=== Predecessor ===
i118 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1564 #next: i1532  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?134 
values: a1 - - i118 
=== Succesors ===
=== Usages ===
i1532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - - i118  <|@  <|@
f <@~|@floating>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1531 
=== Succesors ===
=== Usages ===
i1532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?119 
guard: - 
address: v1566 
=== Succesors ===
next: v308 
=== Usages ===
v305 i597 i1226 
=== Predecessor ===
a1531 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?119 guard: - address: v1566 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1532 
y: i137 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1532 y: i137  <|@  <|@
f <@~|@floating>@ <|@
tid a714 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1531 
=== Succesors ===
=== Usages ===
a284 a595 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1531  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i118 
y: i125 
=== Succesors ===
=== Usages ===
i310 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i118 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32
=== Inputs ===
x: i118 
y: i311 
=== Succesors ===
=== Usages ===
i300 i601 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i118 y: i311  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
i1532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v306 #falseSuccessor: v307  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i594 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v585 
values: i118 i608 
=== Succesors ===
=== Usages ===
?587 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v585 values: i118 i608  <|@  <|@
f <@~|@floating>@ <|@
tid a595 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v585 
values: a714 a702 
=== Succesors ===
=== Usages ===
a341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v585 values: a714 a702  <|@  <|@
f <@~|@floating>@ <|@
tid i597 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v585 
values: i1532 i1530 
=== Succesors ===
=== Usages ===
i510 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v585 values: i1532 i1530  <|@  <|@
f <@~|@floating>@ <|@
tid i601 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v585 
values: i310 i616 
=== Succesors ===
=== Usages ===
i349 i581 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v585 values: i310 i616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v586 v588 
=== Succesors ===
next: a1533 
=== Usages ===
i594 a595 i597 i601 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v586 v588 #next: a1533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1568 
=== Succesors ===
next: i1534 
=== Usages ===
a742 v1570 
=== Predecessor ===
v585 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1568 #next: i1534  <|@  <|@
tid ?587 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?134 
values: a1 - - i594 
=== Succesors ===
=== Usages ===
i1534 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - - i594  <|@  <|@
f <@~|@floating>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1533 
=== Succesors ===
=== Usages ===
i1534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1534 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?587 
guard: - 
address: v1570 
=== Succesors ===
next: v583 
=== Usages ===
i582 i332 
=== Predecessor ===
a1533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?587 guard: - address: v1570 #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid i582 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1534 
y: i13 
=== Succesors ===
=== Usages ===
i581 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1534 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i581 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32
=== Inputs ===
x: i582 
y: i601 
=== Succesors ===
=== Usages ===
i580 i353 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i582 y: i601  <|@  <|@
f <@~|@floating>@ <|@
tid i580 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i581 
y: i12 
=== Succesors ===
=== Usages ===
i579 i365 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i581 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i580 
y: i12 
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i580 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid a742 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a1533 
=== Succesors ===
=== Usages ===
a335 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1533  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
i1534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1042  <|@  <|@
f <@~|@floating>@ <|@
tid a944 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v945 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1528 
y: a944 
=== Succesors ===
=== Usages ===
v1042 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1528 y: a944  <|@  <|@
f <@*|@fixed>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v945 
=== Succesors ===
trueSuccessor: v1041 
falseSuccessor: v1039 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v945 #trueSuccessor: v1041 #falseSuccessor: v1039  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1237 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid i1241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -184339
stableDimension: 0
stamp: i32 [-184339] ⇊00000000fffd2fed ⇈00000000fffd2fed
stampKind: i32
value: int[-184339|0xfffffffffffd2fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1241 
speculation: a1234 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1241 speculation: a1234  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i109 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i109  <|@  <|@
f <@~|@floating>@ <|@
tid a693 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a1528 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1528  <|@  <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5c65243b
stamp: void
targetMethod: HotSpotMethod<Equivalence.hashCode(Object)>
=== Inputs ===
arguments: a693 a2 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a693 a2  <|@  <|@
tid ?1223 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 0
=== Inputs ===
outerFrameState: ?134 
values: a1 - - 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
bci: 40
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Equivalence.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v724 
stateDuring: ?1223 
=== Succesors ===
next: a1535 
=== Usages ===
?110 i296 i127 i126 
=== Predecessor ===
v1039 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v724 stateDuring: ?1223 #next: a1535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1564 
=== Succesors ===
next: i1536 
=== Usages ===
a726 v1567 
=== Predecessor ===
i109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1564 #next: i1536  <|@  <|@
tid ?110 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 1
=== Inputs ===
outerFrameState: ?134 
values: a1 - - i109 
=== Succesors ===
=== Usages ===
v1247 i1536 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - - i109  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1535 
=== Succesors ===
=== Usages ===
i1536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?110 
guard: - 
address: v1567 
=== Succesors ===
next: v250 
=== Usages ===
v247 i510 i1226 
=== Predecessor ===
a1535 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?110 guard: - address: v1567 #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1536 
y: i137 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1536 y: i137  <|@  <|@
f <@~|@floating>@ <|@
tid a726 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1535 
=== Succesors ===
=== Usages ===
a341 a284 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1535  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i109 
y: i125 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i109 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32
=== Inputs ===
x: i109 
y: i126 
=== Succesors ===
=== Usages ===
i349 i300 i376 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i109 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v248 
falseSuccessor: v249 
=== Usages ===
=== Predecessor ===
i1536 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v248 #falseSuccessor: v249  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1537 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1568 
=== Succesors ===
next: v1050 
=== Usages ===
a735 v736 v1569 
=== Predecessor ===
v248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1568 #next: v1050  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
value: a1537 
=== Succesors ===
=== Usages ===
v1050 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1537  <|@  <|@
f <@*|@fixed>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v736 
=== Succesors ===
trueSuccessor: v1049 
falseSuccessor: v1047 
=== Usages ===
=== Predecessor ===
a1537 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v736 #trueSuccessor: v1049 #falseSuccessor: v1047  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1247 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1247  <|@  <|@
f <@~|@floating>@ <|@
tid i1249 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -188683
stableDimension: 0
stamp: i32 [-188683] ⇊00000000fffd1ef5 ⇈00000000fffd1ef5
stampKind: i32
value: int[-188683|0xfffffffffffd1ef5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?110 
actionAndReason: i1249 
speculation: a1234 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?110 actionAndReason: i1249 speculation: a1234  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1538 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1538  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1537 
=== Succesors ===
=== Usages ===
i1538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1569 
=== Succesors ===
next: v327 
=== Usages ===
i332 i377 
=== Predecessor ===
v1047 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1569 #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1538 
y: i13 
=== Succesors ===
=== Usages ===
i376 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1538 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32
=== Inputs ===
x: i127 
y: i377 
=== Succesors ===
=== Usages ===
i353 i379 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i127 y: i377  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i376 
y: i12 
=== Succesors ===
=== Usages ===
i378 i365 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i376 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i379 
y: i12 
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i379 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid a735 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a1537 
=== Succesors ===
=== Usages ===
a335 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1537  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
i1538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i332 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v325 
values: i1538 i1534 
=== Succesors ===
=== Usages ===
?297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i1538 i1534  <|@  <|@
f <@~|@floating>@ <|@
tid a335 <|@
d <@d|@=== Debug Properties ===
stamp: a# [B
valueDescription: a -
=== Inputs ===
merge: v325 
values: a735 a742 
=== Succesors ===
=== Usages ===
a1009 a1010 v1572 v1573 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: a735 a742  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v325 
values: a726 a595 
=== Succesors ===
=== Usages ===
a398 a400 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: a726 a595  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v325 
values: i127 i601 
=== Succesors ===
=== Usages ===
?297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i127 i601  <|@  <|@
f <@~|@floating>@ <|@
tid i353 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v325 
values: i376 i581 
=== Succesors ===
=== Usages ===
i417 v1573 i418 v761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i376 i581  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
valueDescription: i32
=== Inputs ===
merge: v325 
values: i378 i579 
=== Succesors ===
=== Usages ===
i424 i425 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i378 i579  <|@  <|@
f <@~|@floating>@ <|@
tid i365 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v325 
values: i379 i580 
=== Succesors ===
=== Usages ===
i427 i428 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i379 i580  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v325 
values: i1536 i597 
=== Succesors ===
=== Usages ===
i519 i524 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i1536 i597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v327 v583 
=== Succesors ===
next: i1539 
=== Usages ===
i332 a335 a341 i349 i353 i362 i365 i510 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v327 v583 #next: i1539  <|@  <|@
f <@~|@floating>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a335 
index: - 
=== Succesors ===
=== Usages ===
i1539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a335 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1539 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1572 
=== Succesors ===
next: v1058 
=== Usages ===
v761 
=== Predecessor ===
v325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1572 #next: v1058  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i353 
y: i1539 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i353 y: i1539  <|@  <|@
f <@*|@fixed>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v761 
=== Succesors ===
trueSuccessor: v1055 
falseSuccessor: v1057 
=== Usages ===
=== Predecessor ===
i1539 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v761 #trueSuccessor: v1055 #falseSuccessor: v1057  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1540 
=== Usages ===
i1540 
=== Predecessor ===
v1058 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1540  <|@  <|@
f <@~|@floating>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a335 
index: i353 
=== Succesors ===
=== Usages ===
i1540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a335 index: i353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1540 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1055 
address: v1573 
=== Succesors ===
next: v456 
=== Usages ===
i770 i947 
=== Predecessor ===
v1055 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1055 address: v1573 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid i947 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1540 
=== Succesors ===
=== Usages ===
i389 i388 i458 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1540  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
stamp: i32 [-1 - 254]
=== Inputs ===
x: i947 
y: i13 
=== Succesors ===
=== Usages ===
i434 i435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i947 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i770 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1540 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1540  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
rawvalue: 255
stableDimension: 0
stamp: i32 [255] ⇊00000000000000ff ⇈00000000000000ff
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
stamp: void
=== Inputs ===
x: i770 
y: i144 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i770 y: i144  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
stamp: void
trueSuccessorProbability: 0.8497818543939482
=== Inputs ===
condition: v460 
=== Succesors ===
trueSuccessor: v454 
falseSuccessor: v455 
=== Usages ===
=== Predecessor ===
i1540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v460 #trueSuccessor: v454 #falseSuccessor: v455  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603897950038791028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 4592757396130635377
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1620 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1620  <|@  <|@
tid ?297 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 401
stackSize: 2
=== Inputs ===
outerFrameState: ?134 
values: - - - i349 i332 
=== Succesors ===
=== Usages ===
v1620 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: - - - i349 i332  <|@  <|@
f <@*|@fixed>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 762
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?297 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?297  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B3" 
    successors "B22" "B87" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a284 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v280 
values: a726 a714 a702 
=== Succesors ===
=== Usages ===
a400 a398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v280 values: a726 a714 a702  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v280 
values: i109 i118 i608 
=== Succesors ===
=== Usages ===
?282 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v280 values: i109 i118 i608  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v280 
values: i127 i310 i616 
=== Succesors ===
=== Usages ===
?330 i132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v280 values: i127 i310 i616  <|@  <|@
f <@~|@floating>@ <|@
tid i1226 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v280 
values: i1536 i1532 i1530 
=== Succesors ===
=== Usages ===
v256 i524 v150 i519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v280 values: i1536 i1532 i1530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v283 v618 
=== Succesors ===
next: v1062 
=== Usages ===
a284 i296 i300 i1226 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v283 v618 #next: v1062  <|@  <|@
tid ?282 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?134 
values: a1 - i296 
=== Succesors ===
=== Usages ===
v1272 i1542 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - i296  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 v256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1226 
y: i149 
=== Succesors ===
=== Usages ===
v1062 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1226 y: i149  <|@  <|@
f <@*|@fixed>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v256 
=== Succesors ===
trueSuccessor: v1059 
falseSuccessor: v1061 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v256 #trueSuccessor: v1059 #falseSuccessor: v1061  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B85" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1541 
=== Usages ===
=== Predecessor ===
v1062 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1568 
=== Succesors ===
next: i1542 
=== Usages ===
a750 v1575 v1571 v1574 
=== Predecessor ===
v1059 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1568 #next: i1542  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1541 
=== Succesors ===
=== Usages ===
i1542 i1543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?282 
guard: - 
address: v1571 
=== Succesors ===
next: v1070 
=== Usages ===
i260 
=== Predecessor ===
a1541 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?282 guard: - address: v1571 #next: v1070  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1542 
y: i12 
=== Succesors ===
=== Usages ===
?330 i131 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1542 y: i12  <|@  <|@
tid ?330 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 401
stackSize: 2
=== Inputs ===
outerFrameState: ?134 
values: - - - i300 i260 
=== Succesors ===
=== Usages ===
v1302 i1543 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: - - - i300 i260  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1226 
y: i149 
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1226 y: i149  <|@  <|@
f <@*|@fixed>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v1067 
falseSuccessor: v1069 
=== Usages ===
=== Predecessor ===
i1542 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v1067 #falseSuccessor: v1069  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B84" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1543 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1543 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?330 
guard: - 
address: v1571 
=== Succesors ===
next: v1078 
=== Usages ===
v777 v787 
=== Predecessor ===
v1067 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?330 guard: - address: v1571 #next: v1078  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i260 
y: i13 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i260 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32
=== Inputs ===
x: i131 
y: i300 
=== Succesors ===
=== Usages ===
i418 i183 i417 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i131 y: i300  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i132 
y: i12 
=== Succesors ===
=== Usages ===
v777 i188 i427 v1574 i428 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i132 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i183 
y: i1543 
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i183 y: i1543  <|@  <|@
f <@*|@fixed>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v777 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1077 
=== Usages ===
=== Predecessor ===
i1543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v777 #trueSuccessor: v1075 #falseSuccessor: v1077  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B83" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
i1545 
=== Predecessor ===
v1078 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i183 
y: i12 
=== Succesors ===
=== Usages ===
v787 i424 v1575 i425 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i183 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i188 
y: i1543 
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i188 y: i1543  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v787 
=== Succesors ===
trueSuccessor: v1079 
falseSuccessor: v1081 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v787 #trueSuccessor: v1079 #falseSuccessor: v1081  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1544 
=== Usages ===
i1544 
=== Predecessor ===
v1082 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1544  <|@  <|@
f <@~|@floating>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i188 
index: a1541 
=== Succesors ===
=== Usages ===
i1544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i188 index: a1541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1544 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1079 
address: v1575 
=== Succesors ===
next: i1545 
=== Usages ===
i951 
=== Predecessor ===
v1079 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1079 address: v1575 #next: i1545  <|@  <|@
f <@~|@floating>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i183 
index: a1541 
=== Succesors ===
=== Usages ===
i1545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i183 index: a1541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1545 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1075 
address: v1574 
=== Succesors ===
next: v19 
=== Usages ===
i949 
=== Predecessor ===
i1544 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1075 address: v1574 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i951 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1544 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1544  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: i32 [0 - 65280] ⇈000000000000ff00
=== Inputs ===
x: i951 
y: i160 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i951 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i949 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1545 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1545  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i161 
y: i949 
=== Succesors ===
=== Usages ===
i389 i388 i14 v16 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i161 y: i949  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i162 
y: i13 
=== Succesors ===
=== Usages ===
i434 i435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i162 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i162 
y: i15 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i162 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid a750 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a1541 
=== Succesors ===
=== Usages ===
a1010 a1009 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1541  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
stamp: void
trueSuccessorProbability: 0.8497818543939482
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i1545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596893716258835328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B17" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605829374030866004
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i388 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v380 
values: i162 i947 
=== Succesors ===
=== Usages ===
i392 i391 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i162 i947  <|@  <|@
f <@~|@floating>@ <|@
tid a1009 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [B
valueDescription: a -
=== Inputs ===
merge: v380 
values: a750 a335 
=== Succesors ===
=== Usages ===
a393 a396 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: a750 a335  <|@  <|@
f <@~|@floating>@ <|@
tid a400 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v380 
values: a284 a341 
=== Succesors ===
=== Usages ===
a399 a402 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: a284 a341  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v380 
values: i132 i353 
=== Succesors ===
=== Usages ===
i416 i420 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i132 i353  <|@  <|@
f <@~|@floating>@ <|@
tid i425 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
valueDescription: i32
=== Inputs ===
merge: v380 
values: i188 i362 
=== Succesors ===
=== Usages ===
i423 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i188 i362  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v380 
values: i183 i365 
=== Succesors ===
=== Usages ===
i426 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i183 i365  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v380 
values: i14 i458 
=== Succesors ===
=== Usages ===
i433 i436 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i14 i458  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v380 
values: i1226 i510 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i1226 i510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v381 v382 
=== Succesors ===
next: v324 
=== Usages ===
i388 a1009 a400 i418 i425 i428 i435 i519 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v381 v382 #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i519 
y: i137 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i519 y: i137  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
trueSuccessorProbability: 0.7172659508813088
=== Inputs ===
condition: v321 
=== Succesors ===
trueSuccessor: v322 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v321 #trueSuccessor: v322 #falseSuccessor: v323  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603665283940575267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
v322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B49" 
    xhandlers
    flags 
    probability 4597824380651698371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4585623586407275999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B18" 
    successors "B32" "B82" 
    xhandlers
    flags 
    probability 4594580199367141040
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i389 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v383 
values: i162 i947 
=== Succesors ===
=== Usages ===
i392 i391 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i162 i947  <|@  <|@
f <@~|@floating>@ <|@
tid a1010 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [B
valueDescription: a -
=== Inputs ===
merge: v383 
values: a750 a335 
=== Succesors ===
=== Usages ===
a393 a396 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: a750 a335  <|@  <|@
f <@~|@floating>@ <|@
tid a398 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v383 
values: a284 a341 
=== Succesors ===
=== Usages ===
a402 a399 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: a284 a341  <|@  <|@
f <@~|@floating>@ <|@
tid i417 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v383 
values: i132 i353 
=== Succesors ===
=== Usages ===
i416 i420 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i132 i353  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
valueDescription: i32
=== Inputs ===
merge: v383 
values: i188 i362 
=== Succesors ===
=== Usages ===
i423 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i188 i362  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v383 
values: i183 i365 
=== Succesors ===
=== Usages ===
i426 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i183 i365  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v383 
values: i14 i458 
=== Succesors ===
=== Usages ===
i433 i436 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i14 i458  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v383 
values: i1226 i510 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i1226 i510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v384 v386 
=== Succesors ===
next: v26 
=== Usages ===
i389 a1010 a398 i417 i424 i427 i434 i524 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v384 v386 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i15 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9688694669877226
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v25 #falseSuccessor: v24  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B48" 
    xhandlers
    flags 
    probability 4594411715347728412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i137 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i524 y: i137  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
trueSuccessorProbability: 0.7172659508813088
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v171 #falseSuccessor: v172  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4592186668505823223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
v171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B28" 
    successors "B35" "B46" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i391 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v312 
values: i389 i388 
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: i389 i388  <|@  <|@
f <@~|@floating>@ <|@
tid a396 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [B
valueDescription: a -
=== Inputs ===
merge: v312 
values: a1010 a1009 
=== Succesors ===
=== Usages ===
v1577 v1576 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: a1010 a1009  <|@  <|@
f <@~|@floating>@ <|@
tid a402 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v312 
values: a398 a400 
=== Succesors ===
=== Usages ===
a1014 v1624 v1594 v1581 v1580 v1578 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: a398 a400  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v312 
values: i417 i418 
=== Succesors ===
=== Usages ===
v1577 ?178 ?431 v802 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: i417 i418  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v312 
values: i434 i435 
=== Succesors ===
=== Usages ===
i473 ?431 ?446 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: i434 i435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v313 v314 
=== Succesors ===
next: v1624 
=== Usages ===
i391 a396 a402 i420 i433 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v313 v314 #next: v1624  <|@  <|@
tid ?431 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 567
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - i420 i433 - - 
=== Succesors ===
=== Usages ===
v1314 v1624 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - i420 i433 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?431 
object: a402 
=== Succesors ===
next: i1546 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?431 object: a402 #next: i1546  <|@  <|@
f <@~|@floating>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a396 
index: - 
=== Succesors ===
=== Usages ===
i1546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1576 
=== Succesors ===
next: v1090 
=== Usages ===
v802 
=== Predecessor ===
v1624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1576 #next: v1090  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i420 
y: i1546 
=== Succesors ===
=== Usages ===
v1090 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i420 y: i1546  <|@  <|@
f <@*|@fixed>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v802 
=== Succesors ===
trueSuccessor: v1087 
falseSuccessor: v1089 
=== Usages ===
=== Predecessor ===
i1546 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v802 #trueSuccessor: v1087 #falseSuccessor: v1089  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B45" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1547 
=== Usages ===
v810 
=== Predecessor ===
v1090 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1547  <|@  <|@
f <@~|@floating>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a402 
index: - 
=== Succesors ===
=== Usages ===
i1547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a402 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1547 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1580 
=== Succesors ===
next: v1094 
=== Usages ===
v834 
=== Predecessor ===
v1087 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1580 #next: v1094  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i240 
y: i1547 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i240 y: i1547  <|@  <|@
f <@*|@fixed>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v834 
=== Succesors ===
trueSuccessor: v1091 
falseSuccessor: v1093 
=== Usages ===
=== Predecessor ===
i1547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v834 #trueSuccessor: v1091 #falseSuccessor: v1093  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B44" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v810 
=== Usages ===
v842 a1548 
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a396 
index: i420 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: i420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1087 
address: v1577 
value: i175 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1548 
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1087 address: v1577 value: i175 stateAfter: - lastLocationAccess: - #next: a1548  <|@  <|@
f <@~|@floating>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a402 
index: i240 
=== Succesors ===
=== Usages ===
a1548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a402 index: i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1091 
address: v1578 
=== Succesors ===
next: v479 
=== Usages ===
a824 v825 v1593 v1579 
=== Predecessor ===
v810 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1091 address: v1578 #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i391 
y: i15 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i391 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:569) [bci: 51]
stamp: void
trueSuccessorProbability: 0.8537740928179175
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v478 
=== Usages ===
=== Predecessor ===
a1548 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v477 #falseSuccessor: v478  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603665281834861782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1143 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1143  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 154]
stamp: void
=== Inputs ===
value: a1548 
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1548  <|@  <|@
f <@*|@fixed>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v825 
=== Succesors ===
trueSuccessor: v1142 
falseSuccessor: v1141 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v825 #trueSuccessor: v1142 #falseSuccessor: v1141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4588944920699131016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1359 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1359  <|@  <|@
f <@*|@fixed>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4603116275605903246
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1549 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1549  <|@  <|@
f <@~|@floating>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1548 
=== Succesors ===
=== Usages ===
v1549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1593 
=== Succesors ===
next: v1352 
=== Usages ===
v1508 
=== Predecessor ===
v1141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1593 #next: v1352  <|@  <|@
f <@~|@floating>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1549 
y: v1507 
=== Succesors ===
=== Usages ===
v1352 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1549 y: v1507  <|@  <|@
f <@*|@fixed>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
trueSuccessorProbability: 0.0312994621045396
=== Inputs ===
condition: v1508 
=== Succesors ===
trueSuccessor: v1350 
falseSuccessor: v1349 
=== Usages ===
=== Predecessor ===
v1549 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1508 #trueSuccessor: v1350 #falseSuccessor: v1349  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4580606098110055782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1550 
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1550  <|@  <|@
f <@~|@floating>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a402 
index: - 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a402 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1594 
=== Succesors ===
next: v1098 
=== Usages ===
v1510 
=== Predecessor ===
v1350 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1594 #next: v1098  <|@  <|@
f <@~|@floating>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1550 
y: v1509 
=== Succesors ===
=== Usages ===
v1098 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1550 y: v1509  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1510 
=== Succesors ===
trueSuccessor: v1095 
falseSuccessor: v1097 
=== Usages ===
=== Predecessor ===
v1550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1510 #trueSuccessor: v1095 #falseSuccessor: v1097  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 4580606098110055782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1551 
=== Usages ===
=== Predecessor ===
v1098 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1551  <|@  <|@
f <@~|@floating>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1548 
=== Succesors ===
=== Usages ===
a1551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 154]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1579 
=== Succesors ===
next: v842 
=== Usages ===
v842 
=== Predecessor ===
v1095 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1579 #next: v842  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a402 
index: i240 
=== Succesors ===
=== Usages ===
v842 j1372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a402 index: i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1091 
address: v1581 
value: a1551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1372 
=== Usages ===
=== Predecessor ===
a1551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1091 address: v1581 value: a1551 stateAfter: - lastLocationAccess: - #next: j1372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1581 
=== Succesors ===
next: v1378 
=== Usages ===
j1374 
=== Predecessor ===
v842 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1581 #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid j1374 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1372 
y: i1373 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1372 y: i1373  <|@  <|@
f <@~|@floating>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1374 
index: j1377 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1374 index: j1377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1595 
value: i1379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
j1372 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1595 value: i1379 stateAfter: - lastLocationAccess: - #next: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 160]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1618 
=== Usages ===
=== Predecessor ===
v1098 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1618  <|@  <|@
tid ?446 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 567
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - - i433 - - 
=== Succesors ===
=== Usages ===
?178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - - i433 - -  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setHashArray(int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 320
stackSize: 0
=== Inputs ===
outerFrameState: ?446 
values: a1 i420 i32 - 
=== Succesors ===
=== Usages ===
v1618 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: a1 i420 i32 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 831
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@500962259]
stamp: void
=== Inputs ===
stateBefore: ?178 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?178  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 4602961623208977251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1360  <|@  <|@
f <@*|@fixed>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1349 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" 
    xhandlers
    flags 
    probability 4592186685351531106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:570) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid a824 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1548 
=== Succesors ===
=== Usages ===
a469 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1548  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
v478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1317 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1317  <|@  <|@
f <@~|@floating>@ <|@
tid i1318 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -208923
stableDimension: 0
stamp: i32 [-208923] ⇊00000000fffccfe5 ⇈00000000fffccfe5
stampKind: i32
value: int[-208923|0xfffffffffffccfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1315 
=== Usages ===
=== Predecessor ===
v1090 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1315  <|@  <|@
f <@~|@floating>@ <|@
tid i1316 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -205595
stableDimension: 0
stamp: i32 [-205595] ⇊00000000fffcdce5 ⇈00000000fffcdce5
stampKind: i32
value: int[-205595|0xfffffffffffcdce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
v1089 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1312 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-208923 - -205595] ⇊00000000fffcc4e5 ⇈00000000fffcdff5
valueDescription: i32
=== Inputs ===
merge: v1309 
values: i1316 i1318 
=== Succesors ===
=== Usages ===
v1314 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1309 values: i1316 i1318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1315 v1317 
=== Succesors ===
next: v1314 
=== Usages ===
i1312 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1315 v1317 #next: v1314  <|@  <|@
f <@*|@fixed>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?431 
actionAndReason: i1312 
speculation: a1234 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?431 actionAndReason: i1312 speculation: a1234  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B49" 
    xhandlers
    flags 
    probability 4586091105579249793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B29" 
    successors "B50" "B80" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i392 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v315 
values: i389 i388 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: i389 i388  <|@  <|@
f <@~|@floating>@ <|@
tid a393 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [B
valueDescription: a -
=== Inputs ===
merge: v315 
values: a1010 a1009 
=== Succesors ===
=== Usages ===
v1584 v1582 v1583 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: a1010 a1009  <|@  <|@
f <@~|@floating>@ <|@
tid a399 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v315 
values: a398 a400 
=== Succesors ===
=== Usages ===
a1014 v1623 v1597 v1588 v1587 v1585 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: a398 a400  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v315 
values: i417 i418 
=== Succesors ===
=== Usages ===
?193 ?317 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: i417 i418  <|@  <|@
f <@~|@floating>@ <|@
tid i423 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
valueDescription: i32
=== Inputs ===
merge: v315 
values: i424 i425 
=== Succesors ===
=== Usages ===
v1584 v858 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: i424 i425  <|@  <|@
f <@~|@floating>@ <|@
tid i426 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v315 
values: i427 i428 
=== Succesors ===
=== Usages ===
v1583 v849 ?193 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: i427 i428  <|@  <|@
f <@~|@floating>@ <|@
tid i436 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v315 
values: i434 i435 
=== Succesors ===
=== Usages ===
i473 ?317 ?448 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: i434 i435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v316 v318 
=== Succesors ===
next: v1623 
=== Usages ===
i392 a393 a399 i416 i423 i426 i436 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v316 v318 #next: v1623  <|@  <|@
tid ?317 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 567
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - i416 i436 - - 
=== Succesors ===
=== Usages ===
v1288 v1623 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - i416 i436 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?317 
object: a399 
=== Succesors ===
next: i1552 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?317 object: a399 #next: i1552  <|@  <|@
f <@~|@floating>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a393 
index: - 
=== Succesors ===
=== Usages ===
i1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a393 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1582 
=== Succesors ===
next: v1114 
=== Usages ===
v849 v858 
=== Predecessor ===
v1623 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1582 #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i426 
y: i1552 
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i426 y: i1552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v849 
=== Succesors ===
trueSuccessor: v1111 
falseSuccessor: v1113 
=== Usages ===
=== Predecessor ===
i1552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v849 #trueSuccessor: v1111 #falseSuccessor: v1113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B79" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1118 
=== Usages ===
v856 
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1118  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i423 
y: i1552 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i423 y: i1552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v858 
=== Succesors ===
trueSuccessor: v1115 
falseSuccessor: v1117 
=== Usages ===
=== Predecessor ===
v1111 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v858 #trueSuccessor: v1115 #falseSuccessor: v1117  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B78" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1553 
=== Usages ===
v866 
=== Predecessor ===
v1118 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1553  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a399 
index: - 
=== Succesors ===
=== Usages ===
i1553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a399 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1587 
=== Succesors ===
next: v1122 
=== Usages ===
v889 
=== Predecessor ===
v1115 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1587 #next: v1122  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i240 
y: i1553 
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i240 y: i1553  <|@  <|@
f <@*|@fixed>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v889 
=== Succesors ===
trueSuccessor: v1119 
falseSuccessor: v1121 
=== Usages ===
=== Predecessor ===
i1553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v889 #trueSuccessor: v1119 #falseSuccessor: v1121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B60" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
v897 a1554 
=== Predecessor ===
v1122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a393 
index: i426 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a393 index: i426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1111 
address: v1583 
value: i175 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1111 address: v1583 value: i175 stateAfter: - lastLocationAccess: - #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a393 
index: i423 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a393 index: i423  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i32 
y: i160 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i32 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
resultBits: 8
stamp: i8
=== Inputs ===
value: i189 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1115 
address: v1584 
value: i190 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1554 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1115 address: v1584 value: i190 stateAfter: - lastLocationAccess: - #next: a1554  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a399 
index: i240 
=== Succesors ===
=== Usages ===
a1554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a399 index: i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1119 
address: v1585 
=== Succesors ===
next: v41 
=== Usages ===
v1596 v880 a1525 v1586 
=== Predecessor ===
v866 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1119 address: v1585 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i392 
y: i15 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i392 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:569) [bci: 51]
stamp: void
trueSuccessorProbability: 0.8537740928179175
=== Inputs ===
condition: v387 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
a1554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v387 #trueSuccessor: v39 #falseSuccessor: v40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4597824377331552480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1160 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1160  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 154]
stamp: void
=== Inputs ===
value: a1554 
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1554  <|@  <|@
f <@*|@fixed>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v880 
=== Succesors ===
trueSuccessor: v1159 
falseSuccessor: v1158 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v880 #trueSuccessor: v1159 #falseSuccessor: v1158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4582582307041237579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1357 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1357  <|@  <|@
f <@*|@fixed>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4596958741627450775
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1555 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1554 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1596 
=== Succesors ===
next: v1342 
=== Usages ===
v1511 
=== Predecessor ===
v1158 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1596 #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1555 
y: v1507 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1555 y: v1507  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
trueSuccessorProbability: 0.0312994621045396
=== Inputs ===
condition: v1511 
=== Succesors ===
trueSuccessor: v1340 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1511 #trueSuccessor: v1340 #falseSuccessor: v1339  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4574453074545740868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1556 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a399 
index: - 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a399 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1597 
=== Succesors ===
next: v1126 
=== Usages ===
v1512 
=== Predecessor ===
v1340 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1597 #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1556 
y: v1509 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1556 y: v1509  <|@  <|@
f <@*|@fixed>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1512 
=== Succesors ===
trueSuccessor: v1123 
falseSuccessor: v1125 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1512 #trueSuccessor: v1123 #falseSuccessor: v1125  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors 
    xhandlers
    flags 
    probability 4574453074545740868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1557 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1557  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1554 
=== Succesors ===
=== Usages ===
a1557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 154]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1586 
=== Succesors ===
next: v897 
=== Usages ===
v897 
=== Predecessor ===
v1123 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1586 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a399 
index: i240 
=== Succesors ===
=== Usages ===
v897 j1388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a399 index: i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1119 
address: v1588 
value: a1557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1388 
=== Usages ===
=== Predecessor ===
a1557 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1119 address: v1588 value: a1557 stateAfter: - lastLocationAccess: - #next: j1388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1588 
=== Succesors ===
next: v1392 
=== Usages ===
j1389 
=== Predecessor ===
v897 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1588 #next: v1392  <|@  <|@
f <@~|@floating>@ <|@
tid j1389 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1388 
y: i1373 
=== Succesors ===
=== Usages ===
v1598 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1388 y: i1373  <|@  <|@
f <@~|@floating>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1389 
index: j1377 
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1389 index: j1377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1598 
value: i1379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
j1388 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1598 value: i1379 stateAfter: - lastLocationAccess: - #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 160]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1392 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1619 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1619  <|@  <|@
tid ?448 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 567
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - - i436 - - 
=== Succesors ===
=== Usages ===
?193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - - i436 - -  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setHashArray(int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 325
stackSize: 0
=== Inputs ===
outerFrameState: ?448 
values: a1 i416 i32 i426 
=== Succesors ===
=== Usages ===
v1619 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?448 values: a1 i416 i32 i426  <|@  <|@
f <@*|@fixed>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 886
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@500962259]
stamp: void
=== Inputs ===
stateBefore: ?193 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?193  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4596714896240198965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1358 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1358  <|@  <|@
f <@*|@fixed>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1339 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4586091118859833360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:570) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid a1525 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1554 
=== Succesors ===
=== Usages ===
a469 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1554  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B44" 
    successors "B62" "B76" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a469 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v464 
values: a1525 a824 
=== Succesors ===
=== Usages ===
v1589 v1600 v1174 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v464 values: a1525 a824  <|@  <|@
f <@~|@floating>@ <|@
tid a1014 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v464 
values: a399 a402 
=== Succesors ===
=== Usages ===
v1599 v1591 v1590 v1592 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v464 values: a399 a402  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v464 
values: i436 i433 
=== Succesors ===
=== Usages ===
v1497 v1448 ?466 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v464 values: i436 i433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v465 v467 
=== Succesors ===
next: v1558 
=== Usages ===
a469 a1014 i473 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v465 v467 #next: v1558  <|@  <|@
f <@~|@floating>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1014 
index: - 
=== Succesors ===
=== Usages ===
v1558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1014 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1599 
=== Succesors ===
next: v1134 
=== Usages ===
v1513 
=== Predecessor ===
v464 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1599 #next: v1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1558 
y: v1509 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1558 y: v1509  <|@  <|@
tid ?466 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 568
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - - i473 - - 
=== Succesors ===
=== Usages ===
v1324 a1416 a1469 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - - i473 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1513 
=== Succesors ===
trueSuccessor: v1131 
falseSuccessor: v1133 
=== Usages ===
=== Predecessor ===
v1558 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1513 #trueSuccessor: v1131 #falseSuccessor: v1133  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B75" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1559 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1559  <|@  <|@
f <@~|@floating>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1014 
index: - 
=== Succesors ===
=== Usages ===
i1559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1014 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 121]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1591 
=== Succesors ===
next: v1138 
=== Usages ===
v933 
=== Predecessor ===
v1131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1591 #next: v1138  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i240 
y: i1559 
=== Succesors ===
=== Usages ===
v1138 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i240 y: i1559  <|@  <|@
f <@*|@fixed>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v933 
=== Succesors ===
trueSuccessor: v1135 
falseSuccessor: v1137 
=== Usages ===
=== Predecessor ===
i1559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v933 #trueSuccessor: v1135 #falseSuccessor: v1137  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1177 
=== Usages ===
a1562 v916 v941 
=== Predecessor ===
v1138 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1177  <|@  <|@
f <@~|@floating>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1014 
index: i240 
=== Succesors ===
=== Usages ===
v941 v916 j1451 j1500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1014 index: i240  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
value: a469 
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a469  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1485 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1139 
=== Succesors ===
=== Usages ===
v1608 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1139  <|@  <|@
f <@~|@floating>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1485 
index: - 
=== Succesors ===
=== Usages ===
j1489 j1440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1485 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i819 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1469 a1416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1416 a1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j699 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1520 j1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1174 
=== Succesors ===
trueSuccessor: v1176 
falseSuccessor: v1175 
=== Usages ===
=== Predecessor ===
v1135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1174 #trueSuccessor: v1176 #falseSuccessor: v1175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 4579543552661361952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v1177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
v1176 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B70" 
    xhandlers
    flags 
    probability 4593887356410708963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1560 
=== Usages ===
=== Predecessor ===
v1177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1560  <|@  <|@
f <@~|@floating>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a469 
index: - 
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1600 
=== Succesors ===
next: v1332 
=== Usages ===
v1514 
=== Predecessor ===
v1175 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1600 #next: v1332  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1560 
y: v1507 
=== Succesors ===
=== Usages ===
v1332 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1560 y: v1507  <|@  <|@
f <@*|@fixed>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
trueSuccessorProbability: 0.22436794305351004
=== Inputs ===
condition: v1514 
=== Succesors ===
trueSuccessor: v1330 
falseSuccessor: v1329 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1514 #trueSuccessor: v1330 #falseSuccessor: v1329  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4584128163311315693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1404 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1404 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1423 
=== Usages ===
v1601 v1602 
=== Predecessor ===
v1330 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1423  <|@  <|@
f <@~|@floating>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: - 
=== Succesors ===
=== Usages ===
j1423 v1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1601 
=== Succesors ===
next: j1424 
=== Usages ===
j1515 j1429 v1612 
=== Predecessor ===
j1404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1601 #next: j1424  <|@  <|@
f <@~|@floating>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: - 
=== Succesors ===
=== Usages ===
j1424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1602 
=== Succesors ===
next: v1412 
=== Usages ===
v1409 
=== Predecessor ===
j1423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1602 #next: v1412  <|@  <|@
f <@~|@floating>@ <|@
tid j1515 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1423 
y: j699 
=== Succesors ===
=== Usages ===
v1409 v1425 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1423 y: j699  <|@  <|@
f <@~|@floating>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1424 
y: j1515 
=== Succesors ===
=== Usages ===
v1412 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1424 y: j1515  <|@  <|@
f <@*|@fixed>@ <|@
tid v1412 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1409 
=== Succesors ===
trueSuccessor: v1410 
falseSuccessor: v1411 
=== Usages ===
=== Predecessor ===
j1424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1409 #trueSuccessor: v1410 #falseSuccessor: v1411  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4554057026462051689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1416 
=== Usages ===
=== Predecessor ===
v1412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1416 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?466 
arguments: v1402 i819 i12 
=== Succesors ===
next: j1417 
=== Usages ===
j1417 
=== Predecessor ===
v1410 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?466 arguments: v1402 i819 i12 #next: j1417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1417 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1416 
=== Succesors ===
next: v1430 
=== Usages ===
j1429 
=== Predecessor ===
a1416 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1416 #next: v1430  <|@  <|@
f <@*|@fixed>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
j1417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4584043453892286775
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1425 
=== Usages ===
=== Predecessor ===
v1412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1601 
value: j1515 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1421 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1601 value: j1515 stateAfter: - lastLocationAccess: - #next: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1423 
index: - 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1423 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1612 
=== Succesors ===
next: v1428 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1612 #next: v1428  <|@  <|@
f <@*|@fixed>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
v1421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4584128163311315693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1429 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1427 
values: j1423 j1417 
=== Succesors ===
=== Usages ===
v1604 v1603 a1194 v1613 v1614 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1427 values: j1423 j1417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1428 v1430 
=== Succesors ===
next: a1194 
=== Usages ===
j1429 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1428 v1430 #next: a1194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1194 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1429 
=== Succesors ===
next: j1440 
=== Usages ===
a1200 
=== Predecessor ===
v1427 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1429 #next: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1608 
=== Succesors ===
next: v1441 
=== Usages ===
v1441 
=== Predecessor ===
a1194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1608 #next: v1441  <|@  <|@
f <@~|@floating>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1429 
index: - 
=== Succesors ===
=== Usages ===
v1441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1603 
value: j1440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1444 
=== Usages ===
=== Predecessor ===
j1440 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1603 value: j1440 stateAfter: - lastLocationAccess: - #next: v1444  <|@  <|@
f <@~|@floating>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1429 
index: - 
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1604 
value: v1507 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1448 
=== Usages ===
=== Predecessor ===
v1441 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1604 value: v1507 stateAfter: - lastLocationAccess: - #next: v1448  <|@  <|@
f <@~|@floating>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1429 
index: - 
=== Succesors ===
=== Usages ===
v1448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1613 
value: i473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1561 
=== Usages ===
=== Predecessor ===
v1444 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1613 value: i473 stateAfter: - lastLocationAccess: - #next: a1561  <|@  <|@
f <@~|@floating>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a469 
index: - 
=== Succesors ===
=== Usages ===
a1561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1589 
=== Succesors ===
next: v1450 
=== Usages ===
v1450 
=== Predecessor ===
v1448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1589 #next: v1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1429 
index: - 
=== Succesors ===
=== Usages ===
v1450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1614 
value: a1561 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1200 
=== Usages ===
=== Predecessor ===
a1561 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1614 value: a1561 stateAfter: - lastLocationAccess: - #next: a1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1200 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1194 
=== Succesors ===
next: v1201 
=== Usages ===
a915 
=== Predecessor ===
v1450 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1194 #next: v1201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
a1200 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid a915 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
op: Compress
stamp: n -
=== Inputs ===
value: a1200 
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1135 
address: v1592 
value: a915 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1451 
=== Usages ===
=== Predecessor ===
v1201 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1135 address: v1592 value: a915 stateAfter: - lastLocationAccess: - #next: j1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1592 
=== Succesors ===
next: v1455 
=== Usages ===
j1452 
=== Predecessor ===
v916 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1592 #next: v1455  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1451 
y: i1373 
=== Succesors ===
=== Usages ===
v1605 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1451 y: i1373  <|@  <|@
f <@~|@floating>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1452 
index: j1377 
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1452 index: j1377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1605 
value: i1379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
j1451 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1605 value: i1379 stateAfter: - lastLocationAccess: - #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 160]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 4591985357427789067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1333 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1333  <|@  <|@
f <@*|@fixed>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
v1329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4593034098787827631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1185 v1333 
=== Succesors ===
next: j1458 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1185 v1333 #next: j1458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1458 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1473 
=== Usages ===
v1606 v1607 
=== Predecessor ===
v1327 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1473  <|@  <|@
f <@~|@floating>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1458 
index: - 
=== Succesors ===
=== Usages ===
j1473 v1475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1473 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1606 
=== Succesors ===
next: j1474 
=== Usages ===
j1520 j1479 v1615 
=== Predecessor ===
j1458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1606 #next: j1474  <|@  <|@
f <@~|@floating>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1458 
index: - 
=== Succesors ===
=== Usages ===
j1474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1607 
=== Succesors ===
next: v1466 
=== Usages ===
v1463 
=== Predecessor ===
j1473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1607 #next: v1466  <|@  <|@
f <@~|@floating>@ <|@
tid j1520 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1473 
y: j699 
=== Succesors ===
=== Usages ===
v1463 v1475 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1473 y: j699  <|@  <|@
f <@~|@floating>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1474 
y: j1520 
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1474 y: j1520  <|@  <|@
f <@*|@fixed>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1463 
=== Succesors ===
trueSuccessor: v1464 
falseSuccessor: v1465 
=== Usages ===
=== Predecessor ===
j1474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1463 #trueSuccessor: v1464 #falseSuccessor: v1465  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4562999416898726087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1469 
=== Usages ===
=== Predecessor ===
v1466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1469 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?466 
arguments: v1402 i819 i12 
=== Succesors ===
next: j1470 
=== Usages ===
j1470 
=== Predecessor ===
v1464 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?466 arguments: v1402 i819 i12 #next: j1470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1470 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1469 
=== Succesors ===
next: v1480 
=== Usages ===
j1479 
=== Predecessor ===
a1469 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1469 #next: v1480  <|@  <|@
f <@*|@fixed>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1477 
=== Predecessor ===
j1470 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4592950402006581004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1475 
=== Usages ===
=== Predecessor ===
v1466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1606 
value: j1520 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1472 
=== Usages ===
=== Predecessor ===
v1465 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1606 value: j1520 stateAfter: - lastLocationAccess: - #next: v1472  <|@  <|@
f <@~|@floating>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1473 
index: - 
=== Succesors ===
=== Usages ===
v1472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1473 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1615 
=== Succesors ===
next: v1478 
=== Usages ===
=== Predecessor ===
v1475 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1615 #next: v1478  <|@  <|@
f <@*|@fixed>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1477 
=== Predecessor ===
v1472 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 4593034098787827631
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1479 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1477 
values: j1473 j1470 
=== Succesors ===
=== Usages ===
v1610 v1609 a1204 v1616 v1617 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1477 values: j1473 j1470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1478 v1480 
=== Succesors ===
next: a1204 
=== Usages ===
j1479 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1478 v1480 #next: a1204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1204 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1479 
=== Succesors ===
next: j1489 
=== Usages ===
a1210 
=== Predecessor ===
v1477 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1479 #next: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1608 
=== Succesors ===
next: v1490 
=== Usages ===
v1490 
=== Predecessor ===
a1204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1608 #next: v1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1479 
index: - 
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1479 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1609 
value: j1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
j1489 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1609 value: j1489 stateAfter: - lastLocationAccess: - #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1479 
index: - 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1479 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1610 
value: v1507 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1490 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1610 value: v1507 stateAfter: - lastLocationAccess: - #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1479 
index: - 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1479 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1616 
value: i473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1562 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1616 value: i473 stateAfter: - lastLocationAccess: - #next: a1562  <|@  <|@
f <@~|@floating>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1014 
index: i240 
=== Succesors ===
=== Usages ===
a1562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1014 index: i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1562 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 121]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1135 
address: v1590 
=== Succesors ===
next: v1499 
=== Usages ===
v1499 
=== Predecessor ===
v1497 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1135 address: v1590 #next: v1499  <|@  <|@
f <@~|@floating>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1479 
index: - 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1479 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1617 
value: a1562 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1210 
=== Usages ===
=== Predecessor ===
a1562 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1617 value: a1562 stateAfter: - lastLocationAccess: - #next: a1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1210 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1204 
=== Succesors ===
next: v1211 
=== Usages ===
a940 
=== Predecessor ===
v1499 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1204 #next: v1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
a1210 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v941  <|@  <|@
f <@~|@floating>@ <|@
tid a940 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
op: Compress
stamp: n -
=== Inputs ===
value: a1210 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1135 
address: v1592 
value: a940 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1500 
=== Usages ===
=== Predecessor ===
v1211 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1135 address: v1592 value: a940 stateAfter: - lastLocationAccess: - #next: j1500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1592 
=== Succesors ===
next: v1504 
=== Usages ===
j1501 
=== Predecessor ===
v941 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1592 #next: v1504  <|@  <|@
f <@~|@floating>@ <|@
tid j1501 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1500 
y: i1373 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1500 y: i1373  <|@  <|@
f <@~|@floating>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1501 
index: j1377 
=== Succesors ===
=== Usages ===
v1504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1501 index: j1377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1611 
value: i1379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
j1500 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1611 value: i1379 stateAfter: - lastLocationAccess: - #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 160]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1325 
=== Usages ===
=== Predecessor ===
v1138 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1325  <|@  <|@
f <@~|@floating>@ <|@
tid i1326 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -260635
stableDimension: 0
stamp: i32 [-260635] ⇊00000000fffc05e5 ⇈00000000fffc05e5
stampKind: i32
value: int[-260635|0xfffffffffffc05e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1322 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1319 
=== Predecessor ===
v1137 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1320 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1320  <|@  <|@
f <@~|@floating>@ <|@
tid a1258 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@500962259
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@500962259]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1323 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1321 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -260412
stableDimension: 0
stamp: i32 [-260412] ⇊00000000fffc06c4 ⇈00000000fffc06c4
stampKind: i32
value: int[-260412|0xfffffffffffc06c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1322 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1319 
=== Predecessor ===
v1133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1322 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-260635 - -260412] ⇊00000000fffc04c4 ⇈00000000fffc07e5
valueDescription: i32
=== Inputs ===
merge: v1319 
values: i1321 i1326 
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1319 values: i1321 i1326  <|@  <|@
f <@~|@floating>@ <|@
tid a1323 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1319 
values: a1258 a1234 
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1319 values: a1258 a1234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1320 v1325 
=== Succesors ===
next: v1324 
=== Usages ===
i1322 a1323 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1320 v1325 #next: v1324  <|@  <|@
f <@*|@fixed>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?466 
actionAndReason: i1322 
speculation: a1323 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?466 actionAndReason: i1322 speculation: a1323  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1295 
=== Usages ===
=== Predecessor ===
v1122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1295  <|@  <|@
f <@~|@floating>@ <|@
tid i1296 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -223259
stableDimension: 0
stamp: i32 [-223259] ⇊00000000fffc97e5 ⇈00000000fffc97e5
stampKind: i32
value: int[-223259|0xfffffffffffc97e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
v1121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1293 
=== Usages ===
=== Predecessor ===
v1118 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1293  <|@  <|@
f <@~|@floating>@ <|@
tid i1294 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -219931
stableDimension: 0
stamp: i32 [-219931] ⇊00000000fffca4e5 ⇈00000000fffca4e5
stampKind: i32
value: int[-219931|0xfffffffffffca4e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
v1117 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1291 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1291  <|@  <|@
f <@~|@floating>@ <|@
tid i1292 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -217627
stableDimension: 0
stamp: i32 [-217627] ⇊00000000fffcade5 ⇈00000000fffcade5
stampKind: i32
value: int[-217627|0xfffffffffffcade5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
v1113 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B79" "B78" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1286 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-223259 - -217627] ⇊00000000fffc84e5 ⇈00000000fffcbff5
valueDescription: i32
=== Inputs ===
merge: v1283 
values: i1292 i1294 i1296 
=== Succesors ===
=== Usages ===
v1288 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1283 values: i1292 i1294 i1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1291 v1293 v1295 
=== Succesors ===
next: v1288 
=== Usages ===
i1286 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1291 v1293 v1295 #next: v1288  <|@  <|@
f <@*|@fixed>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?317 
actionAndReason: i1286 
speculation: a1234 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?317 actionAndReason: i1286 speculation: a1234  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4572041510774887048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:564) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:564) [bci: 28]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@215ae6ef
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1224 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 564
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:564) [bci: 28]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v796 
stateDuring: ?1224 
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v796 stateDuring: ?1224 #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:565) [bci: 31]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1307 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1307  <|@  <|@
f <@~|@floating>@ <|@
tid i1308 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -201755
stableDimension: 0
stamp: i32 [-201755] ⇊00000000fffcebe5 ⇈00000000fffcebe5
stampKind: i32
value: int[-201755|0xfffffffffffcebe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1081 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1305 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1305  <|@  <|@
f <@~|@floating>@ <|@
tid i1306 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -199195
stableDimension: 0
stamp: i32 [-199195] ⇊00000000fffcf5e5 ⇈00000000fffcf5e5
stampKind: i32
value: int[-199195|0xfffffffffffcf5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1077 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1303 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1303  <|@  <|@
f <@~|@floating>@ <|@
tid i1304 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -197395
stableDimension: 0
stamp: i32 [-197395] ⇊00000000fffcfced ⇈00000000fffcfced
stampKind: i32
value: int[-197395|0xfffffffffffcfced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1069 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1300 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-201755 - -197395] ⇊00000000fffce0e5 ⇈00000000fffcfffd
valueDescription: i32
=== Inputs ===
merge: v1297 
values: i1304 i1306 i1308 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1297 values: i1304 i1306 i1308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1303 v1305 v1307 
=== Succesors ===
next: v1302 
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1303 v1305 v1307 #next: v1302  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?330 
actionAndReason: i1300 
speculation: a1234 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1297 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?330 actionAndReason: i1300 speculation: a1234  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1272 
=== Usages ===
=== Predecessor ===
v1062 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1272  <|@  <|@
f <@~|@floating>@ <|@
tid i1274 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -191507
stableDimension: 0
stamp: i32 [-191507] ⇊00000000fffd13ed ⇈00000000fffd13ed
stampKind: i32
value: int[-191507|0xfffffffffffd13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?282 
actionAndReason: i1274 
speculation: a1234 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?282 actionAndReason: i1274 speculation: a1234  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1528 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1528  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?446 ?134 ?178 ?317 v796 ?448 ?1223 ?282 ?193 ?466 v1564 ?431 ?1222 ?110 v1568 ?1221 ?609 v1563 ?587 ?119 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1563 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1528 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1563 
=== Succesors ===
next: v93 
=== Usages ===
a693 v721 v943 v945 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1563 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
value: a1528 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1528  <|@  <|@
f <@~|@floating>@ <|@
tid i1379 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1378 v1392 v1455 v1504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1373 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1374 j1389 j1452 j1501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1377 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1595 v1598 v1605 v1611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1510 v1512 v1513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1507 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1508 v1511 v1514 v1444 v1493 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?134 ?317 ?448 i32 ?431 ?466 i239 ?446 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 13]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i32 i260 i240 i183 i188 i239 i378 i379 i579 i580 a1416 a1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 37]
stamp: i32
=== Inputs ===
x: i3 
y: i12 
=== Succesors ===
=== Usages ===
?193 i175 ?178 i189 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
resultBits: 8
stamp: i8
=== Inputs ===
value: i32 
=== Succesors ===
=== Usages ===
v856 v810 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i3 
y: i12 
=== Succesors ===
=== Usages ===
i240 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i240 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i239 
y: i12 
=== Succesors ===
=== Usages ===
v834 v889 v1588 v1592 v933 v1581 v1578 v1585 v1590 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i239 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i161 i189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v20 v387 v481 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i14 i131 i377 i458 i582 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i126 i311 i617 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1234 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1237 a1323 v1314 v1288 v1247 v1302 v1272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1568 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1537 a1533 a1541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
result int[512|0x200] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:307) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v612 v170 v247 v305 v321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1564 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1529 a1531 a1535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?134 v20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?134 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 561
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i3 i4 - - - - 
=== Succesors ===
=== Usages ===
?110 ?609 ?119 ?330 ?297 ?282 ?587 ?1221 ?1222 ?1223 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 i4 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v712 v724 v698 v1622 v1621 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 561
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 - - - - 
=== Succesors ===
=== Usages ===
v1237 v1621 v1622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7064097688878498
=== Inputs ===
condition: v721 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
a1528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v721 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2c4f3436 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1621 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a2 
=== Succesors ===
next: i608 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a2 #next: i608  <|@  <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@44692e3c
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i608 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?1221 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?134 
values: a1 - - 
=== Succesors ===
=== Usages ===
i608 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i608 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v698 
stateDuring: ?1221 
=== Succesors ===
next: a1529 
=== Usages ===
?609 i616 i617 i594 i296 
=== Predecessor ===
v1621 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v698 stateDuring: ?1221 #next: a1529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1529 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1564 
=== Succesors ===
next: i1530 
=== Usages ===
a702 v1565 
=== Predecessor ===
i608 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1564 #next: i1530  <|@  <|@
tid ?609 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?134 
values: a1 - - i608 
=== Succesors ===
=== Usages ===
i1530 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - - i608  <|@  <|@
f <@~|@floating>@ <|@
tid v1565 <|@
result [v10|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1529 
=== Succesors ===
=== Usages ===
i1530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1530 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?609 
guard: - 
address: v1565 
=== Succesors ===
next: v615 
=== Usages ===
v612 i597 i1226 
=== Predecessor ===
a1529 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?609 guard: - address: v1565 #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1530 
y: i137 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1530 y: i137  <|@  <|@
f <@~|@floating>@ <|@
tid a702 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1529 
=== Succesors ===
=== Usages ===
a284 a595 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1529  <|@  <|@
f <@~|@floating>@ <|@
tid i617 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i608 
y: i125 
=== Succesors ===
=== Usages ===
i616 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i608 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i616 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32
=== Inputs ===
x: i608 
y: i617 
=== Succesors ===
=== Usages ===
i601 i300 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i608 y: i617  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
i1530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v613 #falseSuccessor: v614  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v9|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHR v9|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = XOR (x: v9|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602932431886806378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
v613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v12|QWORD[.], v11|DWORD, v14|DWORD] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595590265099889163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
v614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.], v9|DWORD, v14|DWORD, v11|DWORD] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid a942 <|@
result NarrowOop[Equivalence$1@1642007824] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1528 
y: a942 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1528 y: a942  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.8855350555757266
=== Inputs ===
condition: v943 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v943 #trueSuccessor: v101 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1622 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a2 
=== Succesors ===
next: i118 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a2 #next: i118  <|@  <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@7a166cfe
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?1222 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?134 
values: a1 - - 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i118 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v712 
stateDuring: ?1222 
=== Succesors ===
next: a1531 
=== Usages ===
?119 i296 i310 i311 i594 
=== Predecessor ===
v1622 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v712 stateDuring: ?1222 #next: a1531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1531 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1564 
=== Succesors ===
next: i1532 
=== Usages ===
a714 v1566 
=== Predecessor ===
i118 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1564 #next: i1532  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?134 
values: a1 - - i118 
=== Succesors ===
=== Usages ===
i1532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - - i118  <|@  <|@
f <@~|@floating>@ <|@
tid v1566 <|@
result [v16|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1531 
=== Succesors ===
=== Usages ===
i1532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1532 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?119 
guard: - 
address: v1566 
=== Succesors ===
next: v308 
=== Usages ===
v305 i597 i1226 
=== Predecessor ===
a1531 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?119 guard: - address: v1566 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1532 
y: i137 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1532 y: i137  <|@  <|@
f <@~|@floating>@ <|@
tid a714 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1531 
=== Succesors ===
=== Usages ===
a284 a595 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1531  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i118 
y: i125 
=== Succesors ===
=== Usages ===
i310 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i118 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32
=== Inputs ===
x: i118 
y: i311 
=== Succesors ===
=== Usages ===
i300 i601 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i118 y: i311  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
i1532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v306 #falseSuccessor: v307  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v15|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHR v15|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = XOR (x: v15|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD, v18|QWORD[.], v17|DWORD, v20|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i594 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v585 
values: i118 i608 
=== Succesors ===
=== Usages ===
?587 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v585 values: i118 i608  <|@  <|@
f <@~|@floating>@ <|@
tid a595 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v585 
values: a714 a702 
=== Succesors ===
=== Usages ===
a341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v585 values: a714 a702  <|@  <|@
f <@~|@floating>@ <|@
tid i597 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v585 
values: i1532 i1530 
=== Succesors ===
=== Usages ===
i510 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v585 values: i1532 i1530  <|@  <|@
f <@~|@floating>@ <|@
tid i601 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v585 
values: i310 i616 
=== Succesors ===
=== Usages ===
i349 i581 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v585 values: i310 i616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v586 v588 
=== Succesors ===
next: a1533 
=== Usages ===
i594 a595 i597 i601 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v586 v588 #next: a1533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1533 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1568 
=== Succesors ===
next: i1534 
=== Usages ===
a742 v1570 
=== Predecessor ===
v585 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1568 #next: i1534  <|@  <|@
tid ?587 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?134 
values: a1 - - i594 
=== Succesors ===
=== Usages ===
i1534 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - - i594  <|@  <|@
f <@~|@floating>@ <|@
tid v1570 <|@
result [v25|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1533 
=== Succesors ===
=== Usages ===
i1534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1534 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?587 
guard: - 
address: v1570 
=== Succesors ===
next: v583 
=== Usages ===
i582 i332 
=== Predecessor ===
a1533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?587 guard: - address: v1570 #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid i582 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1534 
y: i13 
=== Succesors ===
=== Usages ===
i581 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1534 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i581 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32
=== Inputs ===
x: i582 
y: i601 
=== Succesors ===
=== Usages ===
i580 i353 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i582 y: i601  <|@  <|@
f <@~|@floating>@ <|@
tid i580 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i581 
y: i12 
=== Succesors ===
=== Usages ===
i579 i365 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i581 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i580 
y: i12 
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i580 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid a742 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a1533 
=== Succesors ===
=== Usages ===
a335 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1533  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
i1534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|DWORD, v22|QWORD[.], v23|DWORD, v24|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v21|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v27|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SHL v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD, v31|QWORD[.], v22|QWORD[.], v24|DWORD, v28|DWORD, v30|DWORD, v29|DWORD, v23|DWORD] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.], v15|DWORD, v20|DWORD, v17|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1042  <|@  <|@
f <@~|@floating>@ <|@
tid a944 <|@
result NarrowOop[Equivalence$3@1213634123] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v945 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1528 
y: a944 
=== Succesors ===
=== Usages ===
v1042 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1528 y: a944  <|@  <|@
f <@*|@fixed>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v945 
=== Succesors ===
trueSuccessor: v1041 
falseSuccessor: v1039 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v945 #trueSuccessor: v1041 #falseSuccessor: v1039  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1237 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid i1241 <|@
result int[-184339|0xfffffffffffd2fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -184339
stableDimension: 0
stamp: i32 [-184339] ⇊00000000fffd2fed ⇈00000000fffd2fed
stampKind: i32
value: int[-184339|0xfffffffffffd2fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1241 
speculation: a1234 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1241 speculation: a1234  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -184339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i109 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i109  <|@  <|@
f <@~|@floating>@ <|@
tid a693 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a1528 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1528  <|@  <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5c65243b
stamp: void
targetMethod: HotSpotMethod<Equivalence.hashCode(Object)>
=== Inputs ===
arguments: a693 a2 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a693 a2  <|@  <|@
tid ?1223 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 0
=== Inputs ===
outerFrameState: ?134 
values: a1 - - 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i109 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 40
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Equivalence.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v724 
stateDuring: ?1223 
=== Succesors ===
next: a1535 
=== Usages ===
?110 i296 i127 i126 
=== Predecessor ===
v1039 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v724 stateDuring: ?1223 #next: a1535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1535 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1564 
=== Succesors ===
next: i1536 
=== Usages ===
a726 v1567 
=== Predecessor ===
i109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1564 #next: i1536  <|@  <|@
tid ?110 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 1
=== Inputs ===
outerFrameState: ?134 
values: a1 - - i109 
=== Succesors ===
=== Usages ===
v1247 i1536 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - - i109  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
result [v34|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1535 
=== Succesors ===
=== Usages ===
i1536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1536 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?110 
guard: - 
address: v1567 
=== Succesors ===
next: v250 
=== Usages ===
v247 i510 i1226 
=== Predecessor ===
a1535 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?110 guard: - address: v1567 #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1536 
y: i137 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1536 y: i137  <|@  <|@
f <@~|@floating>@ <|@
tid a726 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1535 
=== Succesors ===
=== Usages ===
a341 a284 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1535  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i109 
y: i125 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i109 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32
=== Inputs ===
x: i109 
y: i126 
=== Succesors ===
=== Usages ===
i349 i300 i376 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i109 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v248 
falseSuccessor: v249 
=== Usages ===
=== Predecessor ===
i1536 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v248 #falseSuccessor: v249  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 2] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v33|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 2] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR v33|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = XOR (x: v33|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1537 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1537 <|@
result v39|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1568 
=== Succesors ===
next: v1050 
=== Usages ===
a735 v736 v1569 
=== Predecessor ===
v248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1568 #next: v1050  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
value: a1537 
=== Succesors ===
=== Usages ===
v1050 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1537  <|@  <|@
f <@*|@fixed>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v736 
=== Succesors ===
trueSuccessor: v1049 
falseSuccessor: v1047 
=== Usages ===
=== Predecessor ===
a1537 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v736 #trueSuccessor: v1049 #falseSuccessor: v1047  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD[.], y: v39|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1247 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1247  <|@  <|@
f <@~|@floating>@ <|@
tid i1249 <|@
result int[-188683|0xfffffffffffd1ef5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -188683
stableDimension: 0
stamp: i32 [-188683] ⇊00000000fffd1ef5 ⇈00000000fffd1ef5
stampKind: i32
value: int[-188683|0xfffffffffffd1ef5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?110 
actionAndReason: i1249 
speculation: a1234 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?110 actionAndReason: i1249 speculation: a1234  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -188683 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v33|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:43, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1538 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1538  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
result [v39|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1537 
=== Succesors ===
=== Usages ===
i1538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1538 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1569 
=== Succesors ===
next: v327 
=== Usages ===
i332 i377 
=== Predecessor ===
v1047 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1569 #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1538 
y: i13 
=== Succesors ===
=== Usages ===
i376 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1538 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32
=== Inputs ===
x: i127 
y: i377 
=== Succesors ===
=== Usages ===
i353 i379 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i127 y: i377  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i376 
y: i12 
=== Succesors ===
=== Usages ===
i378 i365 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i376 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i379 
y: i12 
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i379 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid a735 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a1537 
=== Succesors ===
=== Usages ===
a335 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1537  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
i1538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = AND (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SHL v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = INC v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD, v45|QWORD[.], v36|QWORD[.], v38|DWORD, v42|DWORD, v44|DWORD, v43|DWORD, v35|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i332 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v325 
values: i1538 i1534 
=== Succesors ===
=== Usages ===
?297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i1538 i1534  <|@  <|@
f <@~|@floating>@ <|@
tid a335 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [B
valueDescription: a -
=== Inputs ===
merge: v325 
values: a735 a742 
=== Succesors ===
=== Usages ===
a1009 a1010 v1572 v1573 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: a735 a742  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v325 
values: a726 a595 
=== Succesors ===
=== Usages ===
a398 a400 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: a726 a595  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v325 
values: i127 i601 
=== Succesors ===
=== Usages ===
?297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i127 i601  <|@  <|@
f <@~|@floating>@ <|@
tid i353 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v325 
values: i376 i581 
=== Succesors ===
=== Usages ===
i417 v1573 i418 v761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i376 i581  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
valueDescription: i32
=== Inputs ===
merge: v325 
values: i378 i579 
=== Succesors ===
=== Usages ===
i424 i425 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i378 i579  <|@  <|@
f <@~|@floating>@ <|@
tid i365 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v325 
values: i379 i580 
=== Succesors ===
=== Usages ===
i427 i428 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i379 i580  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v325 
values: i1536 i597 
=== Succesors ===
=== Usages ===
i519 i524 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i1536 i597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v327 v583 
=== Succesors ===
next: i1539 
=== Usages ===
i332 a335 a341 i349 i353 i362 i365 i510 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v327 v583 #next: i1539  <|@  <|@
f <@~|@floating>@ <|@
tid v1572 <|@
result [v47|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a335 
index: - 
=== Succesors ===
=== Usages ===
i1539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a335 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1539 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1572 
=== Succesors ===
next: v1058 
=== Usages ===
v761 
=== Predecessor ===
v325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1572 #next: v1058  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i353 
y: i1539 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i353 y: i1539  <|@  <|@
f <@*|@fixed>@ <|@
tid v1058 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v761 
=== Succesors ===
trueSuccessor: v1055 
falseSuccessor: v1057 
=== Usages ===
=== Predecessor ===
i1539 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v761 #trueSuccessor: v1055 #falseSuccessor: v1057  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|DWORD, v47|QWORD[.], v48|QWORD[.], v49|DWORD, v50|DWORD, v51|DWORD, v52|DWORD, v53|DWORD] = LABEL numbPhis: 8 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: [v47|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1540 
=== Usages ===
i1540 
=== Predecessor ===
v1058 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1540  <|@  <|@
f <@~|@floating>@ <|@
tid v1573 <|@
result [v47|QWORD[.] + v50|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a335 
index: i353 
=== Succesors ===
=== Usages ===
i1540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a335 index: i353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1540 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1055 
address: v1573 
=== Succesors ===
next: v456 
=== Usages ===
i770 i947 
=== Predecessor ===
v1055 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1055 address: v1573 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid i947 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1540 
=== Succesors ===
=== Usages ===
i389 i388 i458 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1540  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
stamp: i32 [-1 - 254]
=== Inputs ===
x: i947 
y: i13 
=== Succesors ===
=== Usages ===
i434 i435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i947 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i770 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1540 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1540  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result int[255|0xff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
rawvalue: 255
stableDimension: 0
stamp: i32 [255] ⇊00000000000000ff ⇈00000000000000ff
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
stamp: void
=== Inputs ===
x: i770 
y: i144 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i770 y: i144  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
stamp: void
trueSuccessorProbability: 0.8497818543939482
=== Inputs ===
condition: v460 
=== Succesors ===
trueSuccessor: v454 
falseSuccessor: v455 
=== Usages ===
=== Predecessor ===
i1540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v460 #trueSuccessor: v454 #falseSuccessor: v455  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVSXB [v47|QWORD[.] + v50|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVZXB v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = DEC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVSXB v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v57|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8497818543939482 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603897950038791028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v47|QWORD[.], v48|QWORD[.], v50|DWORD, v51|DWORD, v52|DWORD, v56|DWORD, v53|DWORD] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 4592757396130635377
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v47|QWORD[.], v48|QWORD[.], v50|DWORD, v51|DWORD, v52|DWORD, v56|DWORD, v53|DWORD] destination: B18 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1620 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1620  <|@  <|@
tid ?297 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 401
stackSize: 2
=== Inputs ===
outerFrameState: ?134 
values: - - - i349 i332 
=== Succesors ===
=== Usages ===
v1620 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: - - - i349 i332  <|@  <|@
f <@*|@fixed>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 762
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?297 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?297  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -195099 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v49|DWORD v46|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.], v33|DWORD, v38|DWORD, v35|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B3" 
    successors "B22" "B87" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a284 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v280 
values: a726 a714 a702 
=== Succesors ===
=== Usages ===
a400 a398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v280 values: a726 a714 a702  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v280 
values: i109 i118 i608 
=== Succesors ===
=== Usages ===
?282 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v280 values: i109 i118 i608  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v280 
values: i127 i310 i616 
=== Succesors ===
=== Usages ===
?330 i132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v280 values: i127 i310 i616  <|@  <|@
f <@~|@floating>@ <|@
tid i1226 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v280 
values: i1536 i1532 i1530 
=== Succesors ===
=== Usages ===
v256 i524 v150 i519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v280 values: i1536 i1532 i1530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v283 v618 
=== Succesors ===
next: v1062 
=== Usages ===
a284 i296 i300 i1226 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v283 v618 #next: v1062  <|@  <|@
tid ?282 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?134 
values: a1 - i296 
=== Succesors ===
=== Usages ===
v1272 i1542 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1 - i296  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
result int[131072|0x20000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 v256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1226 
y: i149 
=== Succesors ===
=== Usages ===
v1062 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1226 y: i149  <|@  <|@
f <@*|@fixed>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v256 
=== Succesors ===
trueSuccessor: v1059 
falseSuccessor: v1061 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v256 #trueSuccessor: v1059 #falseSuccessor: v1061  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.], v59|DWORD, v60|DWORD, v61|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B85" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1541 
=== Usages ===
=== Predecessor ===
v1062 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1541 <|@
result v62|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1568 
=== Succesors ===
next: i1542 
=== Usages ===
a750 v1575 v1571 v1574 
=== Predecessor ===
v1059 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1568 #next: i1542  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
result [v62|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1541 
=== Succesors ===
=== Usages ===
i1542 i1543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1542 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?282 
guard: - 
address: v1571 
=== Succesors ===
next: v1070 
=== Usages ===
i260 
=== Predecessor ===
a1541 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?282 guard: - address: v1571 #next: v1070  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1542 
y: i12 
=== Succesors ===
=== Usages ===
?330 i131 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1542 y: i12  <|@  <|@
tid ?330 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 401
stackSize: 2
=== Inputs ===
outerFrameState: ?134 
values: - - - i300 i260 
=== Succesors ===
=== Usages ===
v1302 i1543 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: - - - i300 i260  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1226 
y: i149 
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1226 y: i149  <|@  <|@
f <@*|@fixed>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v1067 
falseSuccessor: v1069 
=== Usages ===
=== Predecessor ===
i1542 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v1067 #falseSuccessor: v1069  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v59|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v63|DWORD = MOV [v62|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SHR v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B84" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1543 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1543 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?330 
guard: - 
address: v1571 
=== Succesors ===
next: v1078 
=== Usages ===
v777 v787 
=== Predecessor ===
v1067 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?330 guard: - address: v1571 #next: v1078  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i260 
y: i13 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i260 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: i32
=== Inputs ===
x: i131 
y: i300 
=== Succesors ===
=== Usages ===
i418 i183 i417 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i131 y: i300  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i132 
y: i12 
=== Succesors ===
=== Usages ===
v777 i188 i427 v1574 i428 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i132 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i183 
y: i1543 
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i183 y: i1543  <|@  <|@
f <@*|@fixed>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v777 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1077 
=== Usages ===
=== Predecessor ===
i1543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v777 #trueSuccessor: v1075 #falseSuccessor: v1077  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v60|DWORD v64|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v65|DWORD = MOV [v62|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 2] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = DEC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = AND (x: v66|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = SHL v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B83" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
i1545 
=== Predecessor ===
v1078 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i183 
y: i12 
=== Succesors ===
=== Usages ===
v787 i424 v1575 i425 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i183 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i188 
y: i1543 
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i188 y: i1543  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v787 
=== Succesors ===
trueSuccessor: v1079 
falseSuccessor: v1081 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v787 #trueSuccessor: v1079 #falseSuccessor: v1081  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = INC v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1544 
=== Usages ===
i1544 
=== Predecessor ===
v1082 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1544  <|@  <|@
f <@~|@floating>@ <|@
tid v1575 <|@
result [v69|DWORD + v62|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i188 
index: a1541 
=== Succesors ===
=== Usages ===
i1544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i188 index: a1541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1544 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1079 
address: v1575 
=== Succesors ===
next: i1545 
=== Usages ===
i951 
=== Predecessor ===
v1079 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1079 address: v1575 #next: i1545  <|@  <|@
f <@~|@floating>@ <|@
tid v1574 <|@
result [v68|DWORD + v62|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i183 
index: a1541 
=== Succesors ===
=== Usages ===
i1545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i183 index: a1541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1545 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1075 
address: v1574 
=== Succesors ===
next: v19 
=== Usages ===
i949 
=== Predecessor ===
i1544 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1075 address: v1574 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i951 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1544 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1544  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: i32 [0 - 65280] ⇈000000000000ff00
=== Inputs ===
x: i951 
y: i160 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i951 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i949 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1545 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1545  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i161 
y: i949 
=== Succesors ===
=== Usages ===
i389 i388 i14 v16 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i161 y: i949  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i162 
y: i13 
=== Succesors ===
=== Usages ===
i434 i435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i162 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i162 
y: i15 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i162 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid a750 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a1541 
=== Succesors ===
=== Usages ===
a1010 a1009 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1541  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
stamp: void
trueSuccessorProbability: 0.8497818543939482
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i1545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVSXB [v69|DWORD + v62|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVZXB v70|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SHL v71|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVZXB [v68|DWORD + v62|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = OR (x: v72|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC v74|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8497818543939482 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596893716258835328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|DWORD, v76|QWORD[.], v58|QWORD[.], v67|DWORD, v69|DWORD, v68|DWORD, v75|DWORD, v61|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B17" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605829374030866004
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i388 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v380 
values: i162 i947 
=== Succesors ===
=== Usages ===
i392 i391 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i162 i947  <|@  <|@
f <@~|@floating>@ <|@
tid a1009 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [B
valueDescription: a -
=== Inputs ===
merge: v380 
values: a750 a335 
=== Succesors ===
=== Usages ===
a393 a396 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: a750 a335  <|@  <|@
f <@~|@floating>@ <|@
tid a400 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v380 
values: a284 a341 
=== Succesors ===
=== Usages ===
a399 a402 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: a284 a341  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v380 
values: i132 i353 
=== Succesors ===
=== Usages ===
i416 i420 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i132 i353  <|@  <|@
f <@~|@floating>@ <|@
tid i425 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
valueDescription: i32
=== Inputs ===
merge: v380 
values: i188 i362 
=== Succesors ===
=== Usages ===
i423 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i188 i362  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v380 
values: i183 i365 
=== Succesors ===
=== Usages ===
i426 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i183 i365  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v380 
values: i14 i458 
=== Succesors ===
=== Usages ===
i433 i436 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i14 i458  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v380 
values: i1226 i510 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i1226 i510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v381 v382 
=== Succesors ===
next: v324 
=== Usages ===
i388 a1009 a400 i418 i425 i428 i435 i519 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v381 v382 #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i519 
y: i137 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i519 y: i137  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
trueSuccessorProbability: 0.7172659508813088
=== Inputs ===
condition: v321 
=== Succesors ===
trueSuccessor: v322 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v321 #trueSuccessor: v322 #falseSuccessor: v323  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD, v78|QWORD[.], v79|QWORD[.], v80|DWORD, v81|DWORD, v82|DWORD, v83|DWORD, v84|DWORD] = LABEL numbPhis: 8 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v84|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603665283940575267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
v322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD, v78|QWORD[.], v79|QWORD[.], v80|DWORD, v83|DWORD] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B49" 
    xhandlers
    flags 
    probability 4597824380651698371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD, v78|QWORD[.], v79|QWORD[.], v80|DWORD, v81|DWORD, v82|DWORD, v83|DWORD] destination: B29 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4585623586407275999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|DWORD, v76|QWORD[.], v58|QWORD[.], v67|DWORD, v69|DWORD, v68|DWORD, v75|DWORD, v61|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B18" 
    successors "B32" "B82" 
    xhandlers
    flags 
    probability 4594580199367141040
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i389 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v383 
values: i162 i947 
=== Succesors ===
=== Usages ===
i392 i391 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i162 i947  <|@  <|@
f <@~|@floating>@ <|@
tid a1010 <|@
result v86|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [B
valueDescription: a -
=== Inputs ===
merge: v383 
values: a750 a335 
=== Succesors ===
=== Usages ===
a393 a396 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: a750 a335  <|@  <|@
f <@~|@floating>@ <|@
tid a398 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v383 
values: a284 a341 
=== Succesors ===
=== Usages ===
a402 a399 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: a284 a341  <|@  <|@
f <@~|@floating>@ <|@
tid i417 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v383 
values: i132 i353 
=== Succesors ===
=== Usages ===
i416 i420 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i132 i353  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
valueDescription: i32
=== Inputs ===
merge: v383 
values: i188 i362 
=== Succesors ===
=== Usages ===
i423 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i188 i362  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v383 
values: i183 i365 
=== Succesors ===
=== Usages ===
i426 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i183 i365  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v383 
values: i14 i458 
=== Succesors ===
=== Usages ===
i433 i436 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i14 i458  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v383 
values: i1226 i510 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i1226 i510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v384 v386 
=== Succesors ===
next: v26 
=== Usages ===
i389 a1010 a398 i417 i424 i427 i434 i524 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v384 v386 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i15 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9688694669877226
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v25 #falseSuccessor: v24  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD[.], v87|QWORD[.], v88|DWORD, v89|DWORD, v90|DWORD, v91|DWORD, v92|DWORD] = LABEL numbPhis: 8 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9688694669877226 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B48" 
    xhandlers
    flags 
    probability 4594411715347728412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i137 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i524 y: i137  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
trueSuccessorProbability: 0.7172659508813088
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v171 #falseSuccessor: v172  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v92|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4592186668505823223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
v171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|DWORD, v86|QWORD[.], v87|QWORD[.], v88|DWORD, v91|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B28" 
    successors "B35" "B46" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i391 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v312 
values: i389 i388 
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: i389 i388  <|@  <|@
f <@~|@floating>@ <|@
tid a396 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [B
valueDescription: a -
=== Inputs ===
merge: v312 
values: a1010 a1009 
=== Succesors ===
=== Usages ===
v1577 v1576 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: a1010 a1009  <|@  <|@
f <@~|@floating>@ <|@
tid a402 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v312 
values: a398 a400 
=== Succesors ===
=== Usages ===
a1014 v1624 v1594 v1581 v1580 v1578 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: a398 a400  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v312 
values: i417 i418 
=== Succesors ===
=== Usages ===
v1577 ?178 ?431 v802 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: i417 i418  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v312 
values: i434 i435 
=== Succesors ===
=== Usages ===
i473 ?431 ?446 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: i434 i435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v313 v314 
=== Succesors ===
next: v1624 
=== Usages ===
i391 a396 a402 i420 i433 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v313 v314 #next: v1624  <|@  <|@
tid ?431 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 567
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - i420 i433 - - 
=== Succesors ===
=== Usages ===
v1314 v1624 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - i420 i433 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?431 
object: a402 
=== Succesors ===
next: i1546 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?431 object: a402 #next: i1546  <|@  <|@
f <@~|@floating>@ <|@
tid v1576 <|@
result [v94|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a396 
index: - 
=== Succesors ===
=== Usages ===
i1546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1546 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1576 
=== Succesors ===
next: v1090 
=== Usages ===
v802 
=== Predecessor ===
v1624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1576 #next: v1090  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i420 
y: i1546 
=== Succesors ===
=== Usages ===
v1090 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i420 y: i1546  <|@  <|@
f <@*|@fixed>@ <|@
tid v1090 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v802 
=== Succesors ===
trueSuccessor: v1087 
falseSuccessor: v1089 
=== Usages ===
=== Predecessor ===
i1546 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v802 #trueSuccessor: v1087 #falseSuccessor: v1089  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD, v94|QWORD[.], v95|QWORD[.], v96|DWORD, v97|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v96|DWORD v97|DWORD - - 
>@ <|@ instruction NULLCHECK [v95|QWORD[.]] state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: [v94|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B34 -> B35 falseDestination: B34 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B45" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1547 
=== Usages ===
v810 
=== Predecessor ===
v1090 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1547  <|@  <|@
f <@~|@floating>@ <|@
tid v1580 <|@
result [v95|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a402 
index: - 
=== Succesors ===
=== Usages ===
i1547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a402 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1547 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1580 
=== Succesors ===
next: v1094 
=== Usages ===
v834 
=== Predecessor ===
v1087 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1580 #next: v1094  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i240 
y: i1547 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i240 y: i1547  <|@  <|@
f <@*|@fixed>@ <|@
tid v1094 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v834 
=== Succesors ===
trueSuccessor: v1091 
falseSuccessor: v1093 
=== Usages ===
=== Predecessor ===
i1547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v834 #trueSuccessor: v1091 #falseSuccessor: v1093  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: [v95|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B35 -> B36 falseDestination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B44" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v810 
=== Usages ===
v842 a1548 
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid v1577 <|@
result [v94|QWORD[.] + v96|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a396 
index: i420 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: i420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1087 
address: v1577 
value: i175 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1548 
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1087 address: v1577 value: i175 stateAfter: - lastLocationAccess: - #next: a1548  <|@  <|@
f <@~|@floating>@ <|@
tid v1578 <|@
result [v95|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a402 
index: i240 
=== Succesors ===
=== Usages ===
a1548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a402 index: i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1548 <|@
result v98|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1091 
address: v1578 
=== Succesors ===
next: v479 
=== Usages ===
a824 v825 v1593 v1579 
=== Predecessor ===
v810 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1091 address: v1578 #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i391 
y: i15 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i391 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:569) [bci: 51]
stamp: void
trueSuccessorProbability: 0.8537740928179175
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v478 
=== Usages ===
=== Predecessor ===
a1548 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v477 #falseSuccessor: v478  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v94|QWORD[.] + v96|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[.] = MOV [v95|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8537740928179175 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603665281834861782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1143 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1143  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 154]
stamp: void
=== Inputs ===
value: a1548 
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1548  <|@  <|@
f <@*|@fixed>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v825 
=== Succesors ===
trueSuccessor: v1142 
falseSuccessor: v1141 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v825 #trueSuccessor: v1142 #falseSuccessor: v1141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|DWORD[.], y: v98|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4588944920699131016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1359 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1359  <|@  <|@
f <@*|@fixed>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4603116275605903246
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1549 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1549  <|@  <|@
f <@~|@floating>@ <|@
tid v1593 <|@
result [v98|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1548 
=== Succesors ===
=== Usages ===
v1549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1549 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1593 
=== Succesors ===
next: v1352 
=== Usages ===
v1508 
=== Predecessor ===
v1141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1593 #next: v1352  <|@  <|@
f <@~|@floating>@ <|@
tid v1508 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1549 
y: v1507 
=== Succesors ===
=== Usages ===
v1352 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1549 y: v1507  <|@  <|@
f <@*|@fixed>@ <|@
tid v1352 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
trueSuccessorProbability: 0.0312994621045396
=== Inputs ===
condition: v1508 
=== Succesors ===
trueSuccessor: v1350 
falseSuccessor: v1349 
=== Usages ===
=== Predecessor ===
v1549 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1508 #trueSuccessor: v1350 #falseSuccessor: v1349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v98|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0312994621045396 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4580606098110055782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1550 
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1550  <|@  <|@
f <@~|@floating>@ <|@
tid v1594 <|@
result [v95|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a402 
index: - 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a402 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1550 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1594 
=== Succesors ===
next: v1098 
=== Usages ===
v1510 
=== Predecessor ===
v1350 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1594 #next: v1098  <|@  <|@
f <@~|@floating>@ <|@
tid v1510 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1550 
y: v1509 
=== Succesors ===
=== Usages ===
v1098 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1550 y: v1509  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1510 
=== Succesors ===
trueSuccessor: v1095 
falseSuccessor: v1097 
=== Usages ===
=== Predecessor ===
v1550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1510 #trueSuccessor: v1095 #falseSuccessor: v1097  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v95|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 4580606098110055782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1551 
=== Usages ===
=== Predecessor ===
v1098 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1551  <|@  <|@
f <@~|@floating>@ <|@
tid v1579 <|@
result [v98|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1548 
=== Succesors ===
=== Usages ===
a1551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1551 <|@
result v99|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 154]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1579 
=== Succesors ===
next: v842 
=== Usages ===
v842 
=== Predecessor ===
v1095 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1579 #next: v842  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
result [v95|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a402 
index: i240 
=== Succesors ===
=== Usages ===
v842 j1372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a402 index: i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1091 
address: v1581 
value: a1551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1372 
=== Usages ===
=== Predecessor ===
a1551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1091 address: v1581 value: a1551 stateAfter: - lastLocationAccess: - #next: j1372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1372 <|@
result [v95|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1581 
=== Succesors ===
next: v1378 
=== Usages ===
j1374 
=== Predecessor ===
v842 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1581 #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid j1374 <|@
result v100|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1372 
y: i1373 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1372 y: i1373  <|@  <|@
f <@~|@floating>@ <|@
tid v1595 <|@
result [v100|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1374 
index: j1377 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1374 index: j1377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1595 
value: i1379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
j1372 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1595 value: i1379 stateAfter: - lastLocationAccess: - #next: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 160]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = MOV [v98|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[.] + v8|DWORD * 4 + 16], y: v99|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = LEA [v95|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[*] = SHR v101|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v100|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1618 
=== Usages ===
=== Predecessor ===
v1098 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1618  <|@  <|@
tid ?446 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 567
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - - i433 - - 
=== Succesors ===
=== Usages ===
?178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - - i433 - -  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setHashArray(int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 320
stackSize: 0
=== Inputs ===
outerFrameState: ?446 
values: a1 i420 i32 - 
=== Succesors ===
=== Usages ===
v1618 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: a1 i420 i32 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 831
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@500962259]
stamp: void
=== Inputs ===
stateBefore: ?178 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?178  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -212796 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 19]
locals: v0|QWORD[.] v96|DWORD v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v97|DWORD - - 
>@ <|@ instruction DEOPT info [bci:19, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 4602961623208977251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1360  <|@  <|@
f <@*|@fixed>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1349 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" 
    xhandlers
    flags 
    probability 4592186685351531106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:570) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid a824 <|@
result v103|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1548 
=== Succesors ===
=== Usages ===
a469 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1548  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
v478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|QWORD[.], v95|QWORD[.], v97|DWORD] destination: B44 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1317 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1317  <|@  <|@
f <@~|@floating>@ <|@
tid i1318 <|@
result int[-208923|0xfffffffffffccfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -208923
stableDimension: 0
stamp: i32 [-208923] ⇊00000000fffccfe5 ⇈00000000fffccfe5
stampKind: i32
value: int[-208923|0xfffffffffffccfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-208923|0xfffffffffffccfe5]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1315 
=== Usages ===
=== Predecessor ===
v1090 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1315  <|@  <|@
f <@~|@floating>@ <|@
tid i1316 <|@
result int[-205595|0xfffffffffffcdce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -205595
stableDimension: 0
stamp: i32 [-205595] ⇊00000000fffcdce5 ⇈00000000fffcdce5
stampKind: i32
value: int[-205595|0xfffffffffffcdce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
v1089 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-205595|0xfffffffffffcdce5]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1312 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-208923 - -205595] ⇊00000000fffcc4e5 ⇈00000000fffcdff5
valueDescription: i32
=== Inputs ===
merge: v1309 
values: i1316 i1318 
=== Succesors ===
=== Usages ===
v1314 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1309 values: i1316 i1318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1315 v1317 
=== Succesors ===
next: v1314 
=== Usages ===
i1312 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1315 v1317 #next: v1314  <|@  <|@
f <@*|@fixed>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?431 
actionAndReason: i1312 
speculation: a1234 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?431 actionAndReason: i1312 speculation: a1234  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v96|DWORD v97|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B49" 
    xhandlers
    flags 
    probability 4586091105579249793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|DWORD, v86|QWORD[.], v87|QWORD[.], v88|DWORD, v89|DWORD, v90|DWORD, v91|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B29" 
    successors "B50" "B80" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i392 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v315 
values: i389 i388 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: i389 i388  <|@  <|@
f <@~|@floating>@ <|@
tid a393 <|@
result v106|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [B
valueDescription: a -
=== Inputs ===
merge: v315 
values: a1010 a1009 
=== Succesors ===
=== Usages ===
v1584 v1582 v1583 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: a1010 a1009  <|@  <|@
f <@~|@floating>@ <|@
tid a399 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v315 
values: a398 a400 
=== Succesors ===
=== Usages ===
a1014 v1623 v1597 v1588 v1587 v1585 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: a398 a400  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v315 
values: i417 i418 
=== Succesors ===
=== Usages ===
?193 ?317 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: i417 i418  <|@  <|@
f <@~|@floating>@ <|@
tid i423 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
valueDescription: i32
=== Inputs ===
merge: v315 
values: i424 i425 
=== Succesors ===
=== Usages ===
v1584 v858 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: i424 i425  <|@  <|@
f <@~|@floating>@ <|@
tid i426 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v315 
values: i427 i428 
=== Succesors ===
=== Usages ===
v1583 v849 ?193 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: i427 i428  <|@  <|@
f <@~|@floating>@ <|@
tid i436 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v315 
values: i434 i435 
=== Succesors ===
=== Usages ===
i473 ?317 ?448 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v315 values: i434 i435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v316 v318 
=== Succesors ===
next: v1623 
=== Usages ===
i392 a393 a399 i416 i423 i426 i436 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v316 v318 #next: v1623  <|@  <|@
tid ?317 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 567
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - i416 i436 - - 
=== Succesors ===
=== Usages ===
v1288 v1623 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - i416 i436 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?317 
object: a399 
=== Succesors ===
next: i1552 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?317 object: a399 #next: i1552  <|@  <|@
f <@~|@floating>@ <|@
tid v1582 <|@
result [v106|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a393 
index: - 
=== Succesors ===
=== Usages ===
i1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a393 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1552 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1582 
=== Succesors ===
next: v1114 
=== Usages ===
v849 v858 
=== Predecessor ===
v1623 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1582 #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i426 
y: i1552 
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i426 y: i1552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v849 
=== Succesors ===
trueSuccessor: v1111 
falseSuccessor: v1113 
=== Usages ===
=== Predecessor ===
i1552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v849 #trueSuccessor: v1111 #falseSuccessor: v1113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|DWORD, v106|QWORD[.], v107|QWORD[.], v108|DWORD, v109|DWORD, v110|DWORD, v111|DWORD] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v108|DWORD v111|DWORD - - 
>@ <|@ instruction NULLCHECK [v107|QWORD[.]] state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOV [v106|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v112|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B79" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1118 
=== Usages ===
v856 
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1118  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i423 
y: i1552 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i423 y: i1552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v858 
=== Succesors ===
trueSuccessor: v1115 
falseSuccessor: v1117 
=== Usages ===
=== Predecessor ===
v1111 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v858 #trueSuccessor: v1115 #falseSuccessor: v1117  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v112|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B78" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1553 
=== Usages ===
v866 
=== Predecessor ===
v1118 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1553  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
result [v107|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a399 
index: - 
=== Succesors ===
=== Usages ===
i1553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a399 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1553 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1587 
=== Succesors ===
next: v1122 
=== Usages ===
v889 
=== Predecessor ===
v1115 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1587 #next: v1122  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i240 
y: i1553 
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i240 y: i1553  <|@  <|@
f <@*|@fixed>@ <|@
tid v1122 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v889 
=== Succesors ===
trueSuccessor: v1119 
falseSuccessor: v1121 
=== Usages ===
=== Predecessor ===
i1553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v889 #trueSuccessor: v1119 #falseSuccessor: v1121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: [v107|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B51 -> B52 falseDestination: B51 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B60" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
v897 a1554 
=== Predecessor ===
v1122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
result [v106|QWORD[.] + v110|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a393 
index: i426 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a393 index: i426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1111 
address: v1583 
value: i175 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1111 address: v1583 value: i175 stateAfter: - lastLocationAccess: - #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
result [v106|QWORD[.] + v109|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a393 
index: i423 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a393 index: i423  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i32 
y: i160 
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i32 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
resultBits: 8
stamp: i8
=== Inputs ===
value: i189 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v866 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1115 
address: v1584 
value: i190 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1554 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1115 address: v1584 value: i190 stateAfter: - lastLocationAccess: - #next: a1554  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
result [v107|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a399 
index: i240 
=== Succesors ===
=== Usages ===
a1554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a399 index: i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1554 <|@
result v114|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1119 
address: v1585 
=== Succesors ===
next: v41 
=== Usages ===
v1596 v880 a1525 v1586 
=== Predecessor ===
v866 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1119 address: v1585 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i392 
y: i15 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i392 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:569) [bci: 51]
stamp: void
trueSuccessorProbability: 0.8537740928179175
=== Inputs ===
condition: v387 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
a1554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v387 #trueSuccessor: v39 #falseSuccessor: v40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v106|QWORD[.] + v110|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = SAR v6|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v106|QWORD[.] + v109|DWORD * 1 + 16], y: v113|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v107|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v105|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8537740928179175 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4597824377331552480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1160 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1160  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 154]
stamp: void
=== Inputs ===
value: a1554 
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1554  <|@  <|@
f <@*|@fixed>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v880 
=== Succesors ===
trueSuccessor: v1159 
falseSuccessor: v1158 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v880 #trueSuccessor: v1159 #falseSuccessor: v1158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD[.], y: v114|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4582582307041237579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1357 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1357  <|@  <|@
f <@*|@fixed>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4596958741627450775
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1555 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid v1596 <|@
result [v114|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1554 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1555 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1596 
=== Succesors ===
next: v1342 
=== Usages ===
v1511 
=== Predecessor ===
v1158 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1596 #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1555 
y: v1507 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1555 y: v1507  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
trueSuccessorProbability: 0.0312994621045396
=== Inputs ===
condition: v1511 
=== Succesors ===
trueSuccessor: v1340 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1511 #trueSuccessor: v1340 #falseSuccessor: v1339  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v114|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0312994621045396 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4574453074545740868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1556 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1597 <|@
result [v107|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a399 
index: - 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a399 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1556 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1597 
=== Succesors ===
next: v1126 
=== Usages ===
v1512 
=== Predecessor ===
v1340 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1597 #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1556 
y: v1509 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1556 y: v1509  <|@  <|@
f <@*|@fixed>@ <|@
tid v1126 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1512 
=== Succesors ===
trueSuccessor: v1123 
falseSuccessor: v1125 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1512 #trueSuccessor: v1123 #falseSuccessor: v1125  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v107|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors 
    xhandlers
    flags 
    probability 4574453074545740868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1557 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1557  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
result [v114|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1554 
=== Succesors ===
=== Usages ===
a1557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1557 <|@
result v115|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 154]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1586 
=== Succesors ===
next: v897 
=== Usages ===
v897 
=== Predecessor ===
v1123 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1586 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
result [v107|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a399 
index: i240 
=== Succesors ===
=== Usages ===
v897 j1388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a399 index: i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1119 
address: v1588 
value: a1557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1388 
=== Usages ===
=== Predecessor ===
a1557 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1119 address: v1588 value: a1557 stateAfter: - lastLocationAccess: - #next: j1388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1388 <|@
result [v107|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1588 
=== Succesors ===
next: v1392 
=== Usages ===
j1389 
=== Predecessor ===
v897 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1588 #next: v1392  <|@  <|@
f <@~|@floating>@ <|@
tid j1389 <|@
result v116|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1388 
y: i1373 
=== Succesors ===
=== Usages ===
v1598 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1388 y: i1373  <|@  <|@
f <@~|@floating>@ <|@
tid v1598 <|@
result [v116|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1389 
index: j1377 
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1389 index: j1377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1598 
value: i1379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
j1388 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1598 value: i1379 stateAfter: - lastLocationAccess: - #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 160]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1392 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD[.] = MOV [v114|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD[.] + v8|DWORD * 4 + 16], y: v115|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = LEA [v107|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[*] = SHR v117|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v116|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1619 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1619  <|@  <|@
tid ?448 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 567
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - - i436 - - 
=== Succesors ===
=== Usages ===
?193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - - i436 - -  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setHashArray(int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 325
stackSize: 0
=== Inputs ===
outerFrameState: ?448 
values: a1 i416 i32 i426 
=== Succesors ===
=== Usages ===
v1619 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?448 values: a1 i416 i32 i426  <|@  <|@
f <@*|@fixed>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 886
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@500962259]
stamp: void
=== Inputs ===
stateBefore: ?193 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?193  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -226876 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:325) [bci: 57]
locals: v0|QWORD[.] v108|DWORD v6|DWORD v110|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v111|DWORD - - 
>@ <|@ instruction DEOPT info [bci:57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4596714896240198965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1358 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1358  <|@  <|@
f <@*|@fixed>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1339 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4586091118859833360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:570) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid a1525 <|@
result v119|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1554 
=== Succesors ===
=== Usages ===
a469 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1554  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v119|QWORD[.], v107|QWORD[.], v111|DWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B44" 
    successors "B62" "B76" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a469 <|@
result v120|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v464 
values: a1525 a824 
=== Succesors ===
=== Usages ===
v1589 v1600 v1174 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v464 values: a1525 a824  <|@  <|@
f <@~|@floating>@ <|@
tid a1014 <|@
result v121|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v464 
values: a399 a402 
=== Succesors ===
=== Usages ===
v1599 v1591 v1590 v1592 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v464 values: a399 a402  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v464 
values: i436 i433 
=== Succesors ===
=== Usages ===
v1497 v1448 ?466 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v464 values: i436 i433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v465 v467 
=== Succesors ===
next: v1558 
=== Usages ===
a469 a1014 i473 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v465 v467 #next: v1558  <|@  <|@
f <@~|@floating>@ <|@
tid v1599 <|@
result [v121|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1014 
index: - 
=== Succesors ===
=== Usages ===
v1558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1014 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1558 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1599 
=== Succesors ===
next: v1134 
=== Usages ===
v1513 
=== Predecessor ===
v464 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1599 #next: v1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1558 
y: v1509 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1558 y: v1509  <|@  <|@
tid ?466 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 568
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - - i473 - - 
=== Succesors ===
=== Usages ===
v1324 a1416 a1469 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - - i473 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1513 
=== Succesors ===
trueSuccessor: v1131 
falseSuccessor: v1133 
=== Usages ===
=== Predecessor ===
v1558 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1513 #trueSuccessor: v1131 #falseSuccessor: v1133  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v120|QWORD[.], v121|QWORD[.], v122|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOV [v121|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v123|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B75" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1559 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1559  <|@  <|@
f <@~|@floating>@ <|@
tid v1591 <|@
result [v121|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1014 
index: - 
=== Succesors ===
=== Usages ===
i1559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1014 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1559 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 121]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1591 
=== Succesors ===
next: v1138 
=== Usages ===
v933 
=== Predecessor ===
v1131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1591 #next: v1138  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i240 
y: i1559 
=== Succesors ===
=== Usages ===
v1138 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i240 y: i1559  <|@  <|@
f <@*|@fixed>@ <|@
tid v1138 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v933 
=== Succesors ===
trueSuccessor: v1135 
falseSuccessor: v1137 
=== Usages ===
=== Predecessor ===
i1559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v933 #trueSuccessor: v1135 #falseSuccessor: v1137  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: [v121|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1177 
=== Usages ===
a1562 v916 v941 
=== Predecessor ===
v1138 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1177  <|@  <|@
f <@~|@floating>@ <|@
tid v1592 <|@
result [v121|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1014 
index: i240 
=== Succesors ===
=== Usages ===
v941 v916 j1451 j1500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1014 index: i240  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
value: a469 
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a469  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1485 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1139 
=== Succesors ===
=== Usages ===
v1608 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1139  <|@  <|@
f <@~|@floating>@ <|@
tid v1608 <|@
result [v124|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1485 
index: - 
=== Succesors ===
=== Usages ===
j1489 j1440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1485 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i819 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1469 a1416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1402 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1416 a1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j699 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1520 j1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1174 
=== Succesors ===
trueSuccessor: v1176 
falseSuccessor: v1175 
=== Usages ===
=== Predecessor ===
v1135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1174 #trueSuccessor: v1176 #falseSuccessor: v1175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v120|QWORD[.], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 4579543552661361952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v1177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
v1176 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B70" 
    xhandlers
    flags 
    probability 4593887356410708963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1560 
=== Usages ===
=== Predecessor ===
v1177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1560  <|@  <|@
f <@~|@floating>@ <|@
tid v1600 <|@
result [v120|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a469 
index: - 
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1560 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1600 
=== Succesors ===
next: v1332 
=== Usages ===
v1514 
=== Predecessor ===
v1175 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1600 #next: v1332  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1560 
y: v1507 
=== Succesors ===
=== Usages ===
v1332 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1560 y: v1507  <|@  <|@
f <@*|@fixed>@ <|@
tid v1332 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
trueSuccessorProbability: 0.22436794305351004
=== Inputs ===
condition: v1514 
=== Succesors ===
trueSuccessor: v1330 
falseSuccessor: v1329 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1514 #trueSuccessor: v1330 #falseSuccessor: v1329  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v120|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.22436794305351004 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4584128163311315693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1404 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1404 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1423 
=== Usages ===
v1601 v1602 
=== Predecessor ===
v1330 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1423  <|@  <|@
f <@~|@floating>@ <|@
tid v1601 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: - 
=== Succesors ===
=== Usages ===
j1423 v1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1423 <|@
result v126|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1601 
=== Succesors ===
next: j1424 
=== Usages ===
j1515 j1429 v1612 
=== Predecessor ===
j1404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1601 #next: j1424  <|@  <|@
f <@~|@floating>@ <|@
tid v1602 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: - 
=== Succesors ===
=== Usages ===
j1424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1424 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1602 
=== Succesors ===
next: v1412 
=== Usages ===
v1409 
=== Predecessor ===
j1423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1602 #next: v1412  <|@  <|@
f <@~|@floating>@ <|@
tid j1515 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1423 
y: j699 
=== Succesors ===
=== Usages ===
v1409 v1425 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1423 y: j699  <|@  <|@
f <@~|@floating>@ <|@
tid v1409 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1424 
y: j1515 
=== Succesors ===
=== Usages ===
v1412 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1424 y: j1515  <|@  <|@
f <@*|@fixed>@ <|@
tid v1412 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1409 
=== Succesors ===
trueSuccessor: v1410 
falseSuccessor: v1411 
=== Usages ===
=== Predecessor ===
j1424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1409 #trueSuccessor: v1410 #falseSuccessor: v1411  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = LEA [v126|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v127|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4554057026462051689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1416 
=== Usages ===
=== Predecessor ===
v1412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1416 <|@
result v128|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?466 
arguments: v1402 i819 i12 
=== Succesors ===
next: j1417 
=== Usages ===
j1417 
=== Predecessor ===
v1410 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?466 arguments: v1402 i819 i12 #next: j1417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1417 <|@
result v128|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1416 
=== Succesors ===
next: v1430 
=== Usages ===
j1429 
=== Predecessor ===
a1416 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1416 #next: v1430  <|@  <|@
f <@*|@fixed>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
j1417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v125|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v2|DWORD - - v122|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41] <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|QWORD[.]] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4584043453892286775
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1425 
=== Usages ===
=== Predecessor ===
v1412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1601 
value: j1515 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1421 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1601 value: j1515 stateAfter: - lastLocationAccess: - #next: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid v1612 <|@
result [v126|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1423 
index: - 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1423 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1612 
=== Succesors ===
next: v1428 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1612 #next: v1428  <|@  <|@
f <@*|@fixed>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
v1421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v126|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v126|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4584128163311315693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1429 <|@
result v129|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1427 
values: j1423 j1417 
=== Succesors ===
=== Usages ===
v1604 v1603 a1194 v1613 v1614 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1427 values: j1423 j1417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1428 v1430 
=== Succesors ===
next: a1194 
=== Usages ===
j1429 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1428 v1430 #next: a1194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1194 <|@
result v130|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1429 
=== Succesors ===
next: j1440 
=== Usages ===
a1200 
=== Predecessor ===
v1427 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1429 #next: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1440 <|@
result v131|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1608 
=== Succesors ===
next: v1441 
=== Usages ===
v1441 
=== Predecessor ===
a1194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1608 #next: v1441  <|@  <|@
f <@~|@floating>@ <|@
tid v1603 <|@
result [v129|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1429 
index: - 
=== Succesors ===
=== Usages ===
v1441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1603 
value: j1440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1444 
=== Usages ===
=== Predecessor ===
j1440 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1603 value: j1440 stateAfter: - lastLocationAccess: - #next: v1444  <|@  <|@
f <@~|@floating>@ <|@
tid v1604 <|@
result [v129|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1429 
index: - 
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1604 
value: v1507 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1448 
=== Usages ===
=== Predecessor ===
v1441 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1604 value: v1507 stateAfter: - lastLocationAccess: - #next: v1448  <|@  <|@
f <@~|@floating>@ <|@
tid v1613 <|@
result [v129|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1429 
index: - 
=== Succesors ===
=== Usages ===
v1448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1613 
value: i473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1561 
=== Usages ===
=== Predecessor ===
v1444 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1613 value: i473 stateAfter: - lastLocationAccess: - #next: a1561  <|@  <|@
f <@~|@floating>@ <|@
tid v1589 <|@
result [v120|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a469 
index: - 
=== Succesors ===
=== Usages ===
a1561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1561 <|@
result v132|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1589 
=== Succesors ===
next: v1450 
=== Usages ===
v1450 
=== Predecessor ===
v1448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1589 #next: v1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1614 <|@
result [v129|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1429 
index: - 
=== Succesors ===
=== Usages ===
v1450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1614 
value: a1561 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1200 
=== Usages ===
=== Predecessor ===
a1561 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1614 value: a1561 stateAfter: - lastLocationAccess: - #next: a1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1200 <|@
result v130|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1194 
=== Succesors ===
next: v1201 
=== Usages ===
a915 
=== Predecessor ===
v1450 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1194 #next: v1201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
a1200 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid a915 <|@
result v133|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
op: Compress
stamp: n -
=== Inputs ===
value: a1200 
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1135 
address: v1592 
value: a915 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1451 
=== Usages ===
=== Predecessor ===
v1201 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1135 address: v1592 value: a915 stateAfter: - lastLocationAccess: - #next: j1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1451 <|@
result [v121|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1592 
=== Succesors ===
next: v1455 
=== Usages ===
j1452 
=== Predecessor ===
v916 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1592 #next: v1455  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
result v134|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1451 
y: i1373 
=== Succesors ===
=== Usages ===
v1605 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1451 y: i1373  <|@  <|@
f <@~|@floating>@ <|@
tid v1605 <|@
result [v134|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1452 
index: j1377 
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1452 index: j1377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1605 
value: i1379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
j1451 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1605 value: i1379 stateAfter: - lastLocationAccess: - #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 160]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE v129|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOV [v124|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v129|QWORD[*]], y: v131|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v129|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v129|QWORD[*] + 12], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[.] = MOV [v120|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v129|QWORD[*] + 16], y: v132|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD[.] = COMPRESSPOINTER (input: v130|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[.] + v8|DWORD * 4 + 16], y: v133|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = LEA [v121|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[*] = SHR v135|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v134|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 4591985357427789067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1333 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1333  <|@  <|@
f <@*|@fixed>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
v1329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4593034098787827631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1185 v1333 
=== Succesors ===
next: j1458 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1185 v1333 #next: j1458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1458 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1473 
=== Usages ===
v1606 v1607 
=== Predecessor ===
v1327 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1473  <|@  <|@
f <@~|@floating>@ <|@
tid v1606 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1458 
index: - 
=== Succesors ===
=== Usages ===
j1473 v1475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1473 <|@
result v136|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1606 
=== Succesors ===
next: j1474 
=== Usages ===
j1520 j1479 v1615 
=== Predecessor ===
j1458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1606 #next: j1474  <|@  <|@
f <@~|@floating>@ <|@
tid v1607 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1458 
index: - 
=== Succesors ===
=== Usages ===
j1474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1474 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1607 
=== Succesors ===
next: v1466 
=== Usages ===
v1463 
=== Predecessor ===
j1473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1607 #next: v1466  <|@  <|@
f <@~|@floating>@ <|@
tid j1520 <|@
result v137|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1473 
y: j699 
=== Succesors ===
=== Usages ===
v1463 v1475 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1473 y: j699  <|@  <|@
f <@~|@floating>@ <|@
tid v1463 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1474 
y: j1520 
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1474 y: j1520  <|@  <|@
f <@*|@fixed>@ <|@
tid v1466 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1463 
=== Succesors ===
trueSuccessor: v1464 
falseSuccessor: v1465 
=== Usages ===
=== Predecessor ===
j1474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1463 #trueSuccessor: v1464 #falseSuccessor: v1465  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = LEA [v136|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4562999416898726087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1469 
=== Usages ===
=== Predecessor ===
v1466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1469 <|@
result v138|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?466 
arguments: v1402 i819 i12 
=== Succesors ===
next: j1470 
=== Usages ===
j1470 
=== Predecessor ===
v1464 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?466 arguments: v1402 i819 i12 #next: j1470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1470 <|@
result v138|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1469 
=== Succesors ===
next: v1480 
=== Usages ===
j1479 
=== Predecessor ===
a1469 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1469 #next: v1480  <|@  <|@
f <@*|@fixed>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1477 
=== Predecessor ===
j1470 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v125|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v2|DWORD - - v122|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41] <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD[.]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4592950402006581004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1475 
=== Usages ===
=== Predecessor ===
v1466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1606 
value: j1520 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1472 
=== Usages ===
=== Predecessor ===
v1465 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1606 value: j1520 stateAfter: - lastLocationAccess: - #next: v1472  <|@  <|@
f <@~|@floating>@ <|@
tid v1615 <|@
result [v136|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1473 
index: - 
=== Succesors ===
=== Usages ===
v1472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1473 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1615 
=== Succesors ===
next: v1478 
=== Usages ===
=== Predecessor ===
v1475 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1615 #next: v1478  <|@  <|@
f <@*|@fixed>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1477 
=== Predecessor ===
v1472 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v137|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v136|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|QWORD] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 4593034098787827631
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1479 <|@
result v139|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1477 
values: j1473 j1470 
=== Succesors ===
=== Usages ===
v1610 v1609 a1204 v1616 v1617 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1477 values: j1473 j1470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1478 v1480 
=== Succesors ===
next: a1204 
=== Usages ===
j1479 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1478 v1480 #next: a1204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1204 <|@
result v140|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1479 
=== Succesors ===
next: j1489 
=== Usages ===
a1210 
=== Predecessor ===
v1477 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1479 #next: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1489 <|@
result v141|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1608 
=== Succesors ===
next: v1490 
=== Usages ===
v1490 
=== Predecessor ===
a1204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1608 #next: v1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1609 <|@
result [v139|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1479 
index: - 
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1479 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1609 
value: j1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
j1489 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1609 value: j1489 stateAfter: - lastLocationAccess: - #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1610 <|@
result [v139|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1479 
index: - 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1479 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1610 
value: v1507 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1490 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1610 value: v1507 stateAfter: - lastLocationAccess: - #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid v1616 <|@
result [v139|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1479 
index: - 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1479 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1616 
value: i473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1562 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1616 value: i473 stateAfter: - lastLocationAccess: - #next: a1562  <|@  <|@
f <@~|@floating>@ <|@
tid v1590 <|@
result [v121|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1014 
index: i240 
=== Succesors ===
=== Usages ===
a1562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1014 index: i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1562 <|@
result v142|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 121]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1135 
address: v1590 
=== Succesors ===
next: v1499 
=== Usages ===
v1499 
=== Predecessor ===
v1497 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1135 address: v1590 #next: v1499  <|@  <|@
f <@~|@floating>@ <|@
tid v1617 <|@
result [v139|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1479 
index: - 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1479 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1617 
value: a1562 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1210 
=== Usages ===
=== Predecessor ===
a1562 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1617 value: a1562 stateAfter: - lastLocationAccess: - #next: a1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1210 <|@
result v140|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1204 
=== Succesors ===
next: v1211 
=== Usages ===
a940 
=== Predecessor ===
v1499 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1204 #next: v1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
a1210 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v941  <|@  <|@
f <@~|@floating>@ <|@
tid a940 <|@
result v143|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
op: Compress
stamp: n -
=== Inputs ===
value: a1210 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1135 
address: v1592 
value: a940 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1500 
=== Usages ===
=== Predecessor ===
v1211 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1135 address: v1592 value: a940 stateAfter: - lastLocationAccess: - #next: j1500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1500 <|@
result [v121|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1592 
=== Succesors ===
next: v1504 
=== Usages ===
j1501 
=== Predecessor ===
v941 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1592 #next: v1504  <|@  <|@
f <@~|@floating>@ <|@
tid j1501 <|@
result v144|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1500 
y: i1373 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1500 y: i1373  <|@  <|@
f <@~|@floating>@ <|@
tid v1611 <|@
result [v144|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1501 
index: j1377 
=== Succesors ===
=== Usages ===
v1504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1501 index: j1377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1611 
value: i1379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
j1500 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1611 value: i1379 stateAfter: - lastLocationAccess: - #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 160]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE v139|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v124|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*]], y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v139|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*] + 12], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|DWORD[.] = MOV [v121|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*] + 16], y: v142|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|DWORD[.] = COMPRESSPOINTER (input: v140|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[.] + v8|DWORD * 4 + 16], y: v143|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = LEA [v121|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[*] = SHR v145|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v144|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1325 
=== Usages ===
=== Predecessor ===
v1138 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1325  <|@  <|@
f <@~|@floating>@ <|@
tid i1326 <|@
result int[-260635|0xfffffffffffc05e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -260635
stableDimension: 0
stamp: i32 [-260635] ⇊00000000fffc05e5 ⇈00000000fffc05e5
stampKind: i32
value: int[-260635|0xfffffffffffc05e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1322 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1319 
=== Predecessor ===
v1137 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-260635|0xfffffffffffc05e5], Object[null]] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1320 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1320  <|@  <|@
f <@~|@floating>@ <|@
tid a1258 <|@
result v146|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@500962259
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@500962259]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1323 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1321 <|@
result int[-260412|0xfffffffffffc06c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -260412
stableDimension: 0
stamp: i32 [-260412] ⇊00000000fffc06c4 ⇈00000000fffc06c4
stampKind: i32
value: int[-260412|0xfffffffffffc06c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1322 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1319 
=== Predecessor ===
v1133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-260412|0xfffffffffffc06c4], v146|QWORD[.]] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1322 <|@
result v147|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-260635 - -260412] ⇊00000000fffc04c4 ⇈00000000fffc07e5
valueDescription: i32
=== Inputs ===
merge: v1319 
values: i1321 i1326 
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1319 values: i1321 i1326  <|@  <|@
f <@~|@floating>@ <|@
tid a1323 <|@
result v148|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1319 
values: a1258 a1234 
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1319 values: a1258 a1234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1320 v1325 
=== Succesors ===
next: v1324 
=== Usages ===
i1322 a1323 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1320 v1325 #next: v1324  <|@  <|@
f <@*|@fixed>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?466 
actionAndReason: i1322 
speculation: a1323 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?466 actionAndReason: i1322 speculation: a1323  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v147|DWORD, v148|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v147|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v148|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v2|DWORD - - v122|DWORD - - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1295 
=== Usages ===
=== Predecessor ===
v1122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1295  <|@  <|@
f <@~|@floating>@ <|@
tid i1296 <|@
result int[-223259|0xfffffffffffc97e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -223259
stableDimension: 0
stamp: i32 [-223259] ⇊00000000fffc97e5 ⇈00000000fffc97e5
stampKind: i32
value: int[-223259|0xfffffffffffc97e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
v1121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-223259|0xfffffffffffc97e5]] destination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1293 
=== Usages ===
=== Predecessor ===
v1118 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1293  <|@  <|@
f <@~|@floating>@ <|@
tid i1294 <|@
result int[-219931|0xfffffffffffca4e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -219931
stableDimension: 0
stamp: i32 [-219931] ⇊00000000fffca4e5 ⇈00000000fffca4e5
stampKind: i32
value: int[-219931|0xfffffffffffca4e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
v1117 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-219931|0xfffffffffffca4e5]] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1291 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1291  <|@  <|@
f <@~|@floating>@ <|@
tid i1292 <|@
result int[-217627|0xfffffffffffcade5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -217627
stableDimension: 0
stamp: i32 [-217627] ⇊00000000fffcade5 ⇈00000000fffcade5
stampKind: i32
value: int[-217627|0xfffffffffffcade5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
v1113 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-217627|0xfffffffffffcade5]] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B79" "B78" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1286 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-223259 - -217627] ⇊00000000fffc84e5 ⇈00000000fffcbff5
valueDescription: i32
=== Inputs ===
merge: v1283 
values: i1292 i1294 i1296 
=== Succesors ===
=== Usages ===
v1288 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1283 values: i1292 i1294 i1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1291 v1293 v1295 
=== Succesors ===
next: v1288 
=== Usages ===
i1286 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1291 v1293 v1295 #next: v1288  <|@  <|@
f <@*|@fixed>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?317 
actionAndReason: i1286 
speculation: a1234 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?317 actionAndReason: i1286 speculation: a1234  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v149|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v149|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v108|DWORD v111|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4572041510774887048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:564) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:564) [bci: 28]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@215ae6ef
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1224 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 564
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:564) [bci: 28]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v796 
stateDuring: ?1224 
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v796 stateDuring: ?1224 #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:565) [bci: 31]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:564) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1307 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1307  <|@  <|@
f <@~|@floating>@ <|@
tid i1308 <|@
result int[-201755|0xfffffffffffcebe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -201755
stableDimension: 0
stamp: i32 [-201755] ⇊00000000fffcebe5 ⇈00000000fffcebe5
stampKind: i32
value: int[-201755|0xfffffffffffcebe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1081 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-201755|0xfffffffffffcebe5]] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1305 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1305  <|@  <|@
f <@~|@floating>@ <|@
tid i1306 <|@
result int[-199195|0xfffffffffffcf5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -199195
stableDimension: 0
stamp: i32 [-199195] ⇊00000000fffcf5e5 ⇈00000000fffcf5e5
stampKind: i32
value: int[-199195|0xfffffffffffcf5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1077 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-199195|0xfffffffffffcf5e5]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1303 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1303  <|@  <|@
f <@~|@floating>@ <|@
tid i1304 <|@
result int[-197395|0xfffffffffffcfced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -197395
stableDimension: 0
stamp: i32 [-197395] ⇊00000000fffcfced ⇈00000000fffcfced
stampKind: i32
value: int[-197395|0xfffffffffffcfced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1069 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197395|0xfffffffffffcfced]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1300 <|@
result v150|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-201755 - -197395] ⇊00000000fffce0e5 ⇈00000000fffcfffd
valueDescription: i32
=== Inputs ===
merge: v1297 
values: i1304 i1306 i1308 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1297 values: i1304 i1306 i1308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1303 v1305 v1307 
=== Succesors ===
next: v1302 
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1303 v1305 v1307 #next: v1302  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?330 
actionAndReason: i1300 
speculation: a1234 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1297 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?330 actionAndReason: i1300 speculation: a1234  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v150|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v150|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v60|DWORD v64|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1272 
=== Usages ===
=== Predecessor ===
v1062 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1272  <|@  <|@
f <@~|@floating>@ <|@
tid i1274 <|@
result int[-191507|0xfffffffffffd13ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -191507
stableDimension: 0
stamp: i32 [-191507] ⇊00000000fffd13ed ⇈00000000fffd13ed
stampKind: i32
value: int[-191507|0xfffffffffffd13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?282 
actionAndReason: i1274 
speculation: a1234 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?282 actionAndReason: i1274 speculation: a1234  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -191507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v59|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2c4f3436 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v9|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHR v9|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = XOR (x: v9|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602932431886806378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v12|QWORD[.], v11|DWORD, v14|DWORD] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|DWORD, v22|QWORD[.], v23|DWORD, v24|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v21|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v27|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SHL v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD, v31|QWORD[.], v22|QWORD[.], v24|DWORD, v28|DWORD, v30|DWORD, v29|DWORD, v23|DWORD] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|DWORD, v47|QWORD[.], v48|QWORD[.], v49|DWORD, v50|DWORD, v51|DWORD, v52|DWORD, v53|DWORD] = LABEL numbPhis: 8 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: [v47|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVSXB [v47|QWORD[.] + v50|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVZXB v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = DEC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVSXB v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v57|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8497818543939482 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603897950038791028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v47|QWORD[.], v48|QWORD[.], v50|DWORD, v51|DWORD, v52|DWORD, v56|DWORD, v53|DWORD] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B17" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605829374030866004
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD, v78|QWORD[.], v79|QWORD[.], v80|DWORD, v81|DWORD, v82|DWORD, v83|DWORD, v84|DWORD] = LABEL numbPhis: 8 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v84|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603665283940575267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD, v78|QWORD[.], v79|QWORD[.], v80|DWORD, v83|DWORD] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B28" 
    successors "B35" "B46" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD, v94|QWORD[.], v95|QWORD[.], v96|DWORD, v97|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v96|DWORD v97|DWORD - - 
>@ <|@ instruction NULLCHECK [v95|QWORD[.]] state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: [v94|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B34 -> B35 falseDestination: B34 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B45" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: [v95|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B35 -> B36 falseDestination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B44" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v94|QWORD[.] + v96|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[.] = MOV [v95|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8537740928179175 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603665281834861782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|DWORD[.], y: v98|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4603116275605903246
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v98|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0312994621045396 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 4602961623208977251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v15|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHR v15|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = XOR (x: v15|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD, v18|QWORD[.], v17|DWORD, v20|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B49" 
    xhandlers
    flags 
    probability 4597824380651698371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD, v78|QWORD[.], v79|QWORD[.], v80|DWORD, v81|DWORD, v82|DWORD, v83|DWORD] destination: B29 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B29" 
    successors "B50" "B80" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|DWORD, v106|QWORD[.], v107|QWORD[.], v108|DWORD, v109|DWORD, v110|DWORD, v111|DWORD] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v108|DWORD v111|DWORD - - 
>@ <|@ instruction NULLCHECK [v107|QWORD[.]] state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOV [v106|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v112|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B79" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v112|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B78" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: [v107|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B51 -> B52 falseDestination: B51 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B60" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v106|QWORD[.] + v110|DWORD * 1 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = SAR v6|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v106|QWORD[.] + v109|DWORD * 1 + 16], y: v113|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v107|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v105|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8537740928179175 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4597824377331552480
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD[.], y: v114|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4596958741627450775
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v114|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0312994621045396 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4596714896240198965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595590265099889163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.], v9|DWORD, v14|DWORD, v11|DWORD] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B3" 
    successors "B22" "B87" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.], v59|DWORD, v60|DWORD, v61|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B85" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v59|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v63|DWORD = MOV [v62|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SHR v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B84" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v60|DWORD v64|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v65|DWORD = MOV [v62|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 2] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = DEC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = AND (x: v66|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = SHL v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B83" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = INC v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVSXB [v69|DWORD + v62|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVZXB v70|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SHL v71|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVZXB [v68|DWORD + v62|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = OR (x: v72|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC v74|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8497818543939482 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596893716258835328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|DWORD, v76|QWORD[.], v58|QWORD[.], v67|DWORD, v69|DWORD, v68|DWORD, v75|DWORD, v61|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 4592757396130635377
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v47|QWORD[.], v48|QWORD[.], v50|DWORD, v51|DWORD, v52|DWORD, v56|DWORD, v53|DWORD] destination: B18 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B18" 
    successors "B32" "B82" 
    xhandlers
    flags 
    probability 4594580199367141040
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD[.], v87|QWORD[.], v88|DWORD, v89|DWORD, v90|DWORD, v91|DWORD, v92|DWORD] = LABEL numbPhis: 8 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9688694669877226 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B48" 
    xhandlers
    flags 
    probability 4594411715347728412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v92|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4592186668505823223
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|DWORD, v86|QWORD[.], v87|QWORD[.], v88|DWORD, v91|DWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" 
    xhandlers
    flags 
    probability 4592186685351531106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|QWORD[.], v95|QWORD[.], v97|DWORD] destination: B44 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B44" 
    successors "B62" "B76" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      LIR
      nr   -1  <|@ instruction [v120|QWORD[.], v121|QWORD[.], v122|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOV [v121|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v123|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B75" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: [v121|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v120|QWORD[.], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B70" 
    xhandlers
    flags 
    probability 4593887356410708963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v120|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.22436794305351004 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 4591985357427789067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4593034098787827631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = LEA [v136|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4592950402006581004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v137|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v136|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|QWORD] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 4593034098787827631
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE v139|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v124|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*]], y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v139|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*] + 12], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|DWORD[.] = MOV [v121|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*] + 16], y: v142|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|DWORD[.] = COMPRESSPOINTER (input: v140|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[.] + v8|DWORD * 4 + 16], y: v143|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = LEA [v121|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[*] = SHR v145|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v144|QWORD[*] + v151|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.], v15|DWORD, v20|DWORD, v17|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4588944920699131016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4586091118859833360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v119|QWORD[.], v107|QWORD[.], v111|DWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B49" 
    xhandlers
    flags 
    probability 4586091105579249793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|DWORD, v86|QWORD[.], v87|QWORD[.], v88|DWORD, v89|DWORD, v90|DWORD, v91|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4585623586407275999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|DWORD, v76|QWORD[.], v58|QWORD[.], v67|DWORD, v69|DWORD, v68|DWORD, v75|DWORD, v61|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 2] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v33|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 2] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR v33|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = XOR (x: v33|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD[.], y: v39|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = AND (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SHL v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = INC v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD, v45|QWORD[.], v36|QWORD[.], v38|DWORD, v42|DWORD, v44|DWORD, v43|DWORD, v35|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4584128163311315693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = LEA [v126|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v127|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4584043453892286775
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v126|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v126|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4584128163311315693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE v129|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOV [v124|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v129|QWORD[*]], y: v131|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v129|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v129|QWORD[*] + 12], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[.] = MOV [v120|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v129|QWORD[*] + 16], y: v132|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD[.] = COMPRESSPOINTER (input: v130|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[.] + v8|DWORD * 4 + 16], y: v133|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = LEA [v121|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[*] = SHR v135|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v134|QWORD[*] + v151|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4582582307041237579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4580606098110055782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v95|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 4580606098110055782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = MOV [v98|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[.] + v8|DWORD * 4 + 16], y: v99|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = LEA [v95|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[*] = SHR v101|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v100|QWORD[*] + v153|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 4579543552661361952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.], v33|DWORD, v38|DWORD, v35|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4574453074545740868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v107|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors 
    xhandlers
    flags 
    probability 4574453074545740868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD[.] = MOV [v114|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD[.] + v8|DWORD * 4 + 16], y: v115|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = LEA [v107|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[*] = SHR v117|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v116|QWORD[*] + v152|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4572041510774887048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:564) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4562999416898726087
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v154|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v2|DWORD - - v122|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41] <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD[.]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4554057026462051689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v155|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v2|DWORD - - v122|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41] <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|QWORD[.]] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -195099 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v49|DWORD v46|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-205595|0xfffffffffffcdce5]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v96|DWORD v97|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -226876 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:325) [bci: 57]
locals: v0|QWORD[.] v108|DWORD v6|DWORD v110|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v111|DWORD - - 
>@ <|@ instruction DEOPT info [bci:57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-217627|0xfffffffffffcade5]] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B79" "B78" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v149|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v149|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v108|DWORD v111|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-208923|0xfffffffffffccfe5]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -191507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v59|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -188683 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v33|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:43, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-219931|0xfffffffffffca4e5]] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-199195|0xfffffffffffcf5e5]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v150|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v150|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v60|DWORD v64|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -184339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-260412|0xfffffffffffc06c4], v146|QWORD[.]] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v147|DWORD, v148|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v147|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v148|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v2|DWORD - - v122|DWORD - - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-223259|0xfffffffffffc97e5]] destination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197395|0xfffffffffffcfced]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -212796 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 19]
locals: v0|QWORD[.] v96|DWORD v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v97|DWORD - - 
>@ <|@ instruction DEOPT info [bci:19, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-260635|0xfffffffffffc05e5], Object[null]] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-201755|0xfffffffffffcebe5]] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokespecial #35         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokespecial #36         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokespecial #58         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokespecial #40         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokespecial #37         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #52         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #64         // java.lang.AssertionError
    69: dup           
    70: ldc           #76         // "this cannot happend and would create an endless collision link cycle"
    72: invokespecial #62         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #42         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #43         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokespecial #44         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokespecial #37         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #43         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokespecial #44         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #42         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokespecial #44         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2c4f3436 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction r8|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602932431886806378
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rbx|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 8 align: false label: ? <|@ <|@
      nr  226  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVZXB r8|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVSXB r8|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction TEST r8|DWORD y: 255 size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.8497818543939482 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603897950038791028
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B17" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605829374030866004
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 8 align: false label: ? <|@ <|@
      nr  358  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4603665283940575267
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B28" 
    successors "B35" "B46" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: r13|QWORD[.] - stack:48|DWORD - rcx|DWORD rax|DWORD - - 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:32] <|@ <|@
      nr  416  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  418  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B34 -> B35 falseDestination: B34 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B45" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction CMP (x: r14|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B35 -> B36 falseDestination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B44" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  434  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  436  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 0.8537740928179175 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603665281834861782
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4603116275605903246
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.0312994621045396 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 4602961623208977251
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [rdx:0, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   90  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r11|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   94  <|@ instruction r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP r10|DWORD y: 512 size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B49" 
    xhandlers
    flags 
    probability 4597824380651698371
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B29 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B29" 
    successors "B50" "B80" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr  530  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: r13|QWORD[.] - stack:48|DWORD - rcx|DWORD rax|DWORD - - 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:32] <|@ <|@
      nr  532  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  534  <|@ instruction CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B79" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction CMP (x: rsi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B78" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction CMP (x: r14|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B51 -> B52 falseDestination: B51 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B60" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction MOVB (x: [rdx|QWORD[.] + rbx|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  554  <|@ instruction rsi|DWORD = SAR r11|DWORD y: 8 size: DWORD <|@ <|@
      nr  556  <|@ instruction MOVB (x: [rdx|QWORD[.] + rdi|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  558  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  560  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.8537740928179175 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4597824377331552480
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  568  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4596958741627450775
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.0312994621045396 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4596714896240198965
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595590265099889163
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B3" 
    successors "B22" "B87" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  282  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B85" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: r13|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  292  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B84" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 2] <|@ <|@
      nr  302  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction rbx|DWORD = AND (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rdi|DWORD = SHL rbx|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction CMP (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B83" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rdx|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVSXB [rdx|DWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVZXB r8|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = SHL r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVZXB [rdi|DWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.8497818543939482 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596893716258835328
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 4592757396130635377
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B18 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B18" 
    successors "B32" "B82" 
    xhandlers
    flags 
    probability 4594580199367141040
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 8 align: false label: ? <|@ <|@
      nr  396  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.9688694669877226 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B48" 
    xhandlers
    flags 
    probability 4594411715347728412
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr  404  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4592186668505823223
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" 
    xhandlers
    flags 
    probability 4592186685351531106
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B44 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B44" 
    successors "B62" "B76" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  624  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  626  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B75" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction CMP (x: r14|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  640  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  642  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B70" 
    xhandlers
    flags 
    probability 4593887356410708963
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 0.22436794305351004 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 4591985357427789067
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B64" "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4593034098787827631
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  744  <|@ instruction r9|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: r9|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4592950402006581004
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  780  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 4593034098787827631
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  788  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  794  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  796  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  800  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  802  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  806  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  810  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  812  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4588944920699131016
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4586091118859833360
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B49" 
    xhandlers
    flags 
    probability 4586091105579249793
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4585623586407275999
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r9|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 2] <|@ <|@
      nr  166  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: r13|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 2] <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  176  <|@ instruction r10|DWORD = XOR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction r8|DWORD[.] = MOV [r13|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  186  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|DWORD = AND (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction rbx|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction rdi|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4584128163311315693
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction r9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = LEA [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  664  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4584043453892286775
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~[r9|QWORD + 216] instr: 0 <|@ <|@
      nr  704  <|@ instruction r9|QWORD[*] = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4584128163311315693
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rcx|QWORD[.] = MOVE r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r9|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV [r9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction MOV (x: [r9|QWORD[*] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction MOV (x: [r9|QWORD[*] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  724  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  726  <|@ instruction MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  732  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  734  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4582582307041237579
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4580606098110055782
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 4580606098110055782
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  466  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  474  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 4579543552661361952
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4574453074545740868
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors 
    xhandlers
    flags 
    probability 4574453074545740868
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  598  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  600  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4572041510774887048
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:564) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28] <|@ <|@
      nr  880  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4562999416898726087
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  758  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  760  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [r13:0, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: r13|QWORD[.] - stack:48|DWORD - - stack:40|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41] <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  768  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4554057026462051689
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  676  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  680  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  682  <|@ st <@st|@reference-map: [r13:0, stack:8, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: r13|QWORD[.] - stack:48|DWORD - - stack:40|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41] <|@ <|@
      nr  684  <|@ instruction r9|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  688  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  690  <|@ instruction rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction MOV [r15|QWORD + 668] y: -195099 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD r10|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-205595|0xfffffffffffcdce5] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: r13|QWORD[.] - stack:48|DWORD - rcx|DWORD rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259] <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 668] y: -226876 size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:325) [bci: 57]
locals: r13|QWORD[.] rcx|DWORD r11|DWORD rbx|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
locals: r13|QWORD[.] - stack:48|DWORD - - rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction r10|DWORD = MOVE input: int[-217627|0xfffffffffffcade5] <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B79" "B78" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  872  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: r13|QWORD[.] - stack:48|DWORD - rcx|DWORD rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r10|DWORD = MOVE input: int[-208923|0xfffffffffffccfe5] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  916  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction MOV [r15|QWORD + 668] y: -191507 size: DWORD <|@ <|@
      nr  920  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  922  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: r13|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD r10|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction MOV [r15|QWORD + 668] y: -188683 size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: r13|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD r10|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:43, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction r10|DWORD = MOVE input: int[-219931|0xfffffffffffca4e5] <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction r11|DWORD = MOVE input: int[-199195|0xfffffffffffcf5e5] <|@ <|@
      nr  894  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  908  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  912  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD r10|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [r15|QWORD + 668] y: -184339 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rdx:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] stack:48|DWORD r10|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259] <|@ <|@
      nr  830  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-260412|0xfffffffffffc06c4] <|@ <|@
      nr  834  <|@ instruction rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: r13|QWORD[.] - rcx|DWORD - - rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction r10|DWORD = MOVE input: int[-223259|0xfffffffffffc97e5] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction r11|DWORD = MOVE input: int[-197395|0xfffffffffffcfced] <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259] <|@ <|@
      nr  482  <|@ instruction MOV [r15|QWORD + 668] y: -212796 size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 19]
locals: r13|QWORD[.] rcx|DWORD r11|DWORD - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
locals: r13|QWORD[.] - stack:48|DWORD - - rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:19, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  818  <|@ instruction r10|DWORD = MOVE input: int[-260635|0xfffffffffffc05e5] <|@ <|@
      nr  820  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction r11|DWORD = MOVE input: int[-201755|0xfffffffffffcebe5] <|@ <|@
      nr  886  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokespecial #35         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokespecial #36         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokespecial #58         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokespecial #40         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokespecial #37         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #52         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #64         // java.lang.AssertionError
    69: dup           
    70: ldc           #76         // "this cannot happend and would create an endless collision link cycle"
    72: invokespecial #62         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #42         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #43         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokespecial #44         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokespecial #37         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #43         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokespecial #44         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #42         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokespecial #44         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2c4f3436 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction r9|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B3" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction r8|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B7 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rbx|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 8 align: false label: ? <|@ <|@
      nr  226  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVZXB r8|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVSXB r8|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction TEST r8|DWORD y: 255 size: DWORD <|@ <|@
      nr  246  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.8497818543939482 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" "B16" 
    successors "B34" "B49" 
    xhandlers
    flags 
    probability 4605829374030866004
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 8 align: false label: ? <|@ <|@
      nr  358  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B27 -> B34 falseDestination: B27 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" "B27" 
    successors "B35" "B46" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: r13|QWORD[.] - stack:48|DWORD - rcx|DWORD rax|DWORD - - 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:32] <|@ <|@
      nr  416  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  418  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B34 -> B35 falseDestination: B34 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B45" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction CMP (x: r14|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B35 -> B36 falseDestination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B44" 
    xhandlers
    flags 
    probability 4604605564920907554
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  434  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  436  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 0.8537740928179175 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603665281834861782
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4603116275605903246
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.0312994621045396 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 4602961623208977251
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [rdx:0, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   90  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction r11|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   94  <|@ instruction r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP r10|DWORD y: 512 size: DWORD <|@ <|@
      nr  102  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B32" "B27" 
    successors "B50" "B80" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr  522  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ st <@st|@reference-map: [rdx:0, r10:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: r13|QWORD[.] - stack:48|DWORD - rcx|DWORD rax|DWORD - - 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:32] <|@ <|@
      nr  532  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  534  <|@ instruction CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B79" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction CMP (x: rsi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B78" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction CMP (x: r14|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B51 -> B52 falseDestination: B51 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B60" 
    xhandlers
    flags 
    probability 4598741085666419314
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction MOVB (x: [rdx|QWORD[.] + rbx|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  554  <|@ instruction rsi|DWORD = SAR r11|DWORD y: 8 size: DWORD <|@ <|@
      nr  556  <|@ instruction MOVB (x: [rdx|QWORD[.] + rdi|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  558  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  560  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.8537740928179175 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4597824377331552480
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  568  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4596958741627450775
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.0312994621045396 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4596714896240198965
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595590265099889163
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B3" 
    successors "B22" "B87" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  282  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B85" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: r13|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction r9|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  292  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B84" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 2] <|@ <|@
      nr  302  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction rbx|DWORD = AND (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rdi|DWORD = SHL rbx|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction CMP (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B83" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rdx|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r8|DWORD = MOVSXB [rdx|DWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVZXB r8|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = SHL r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVZXB [rdi|DWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.8497818543939482 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" "B16" 
    successors "B32" "B82" 
    xhandlers
    flags 
    probability 4594580199367141040
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 8 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.9688694669877226 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B49" 
    xhandlers
    flags 
    probability 4594411715347728412
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr  408  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B32 -> B34 falseDestination: B32 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" 
    xhandlers
    flags 
    probability 4592186685351531106
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B44 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B44" 
    successors "B62" "B76" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  624  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  626  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  628  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B75" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction CMP (x: r14|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B71" "B65" 
    xhandlers
    flags 
    probability 4594411727090728245
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  640  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  642  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B71 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B71" 
    xhandlers
    flags 
    probability 4593887356410708963
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 0.22436794305351004 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4593034098787827631
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  744  <|@ instruction r9|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: r9|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4592950402006581004
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  780  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 4593034098787827631
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  788  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  794  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  796  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  800  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  802  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  804  <|@ instruction MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  806  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  808  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  810  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  812  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4588944920699131016
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B61" 
    xhandlers
    flags 
    probability 4586091118859833360
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 2] <|@ <|@
      nr  166  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: r13|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD stack:44|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 2] <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  176  <|@ instruction r10|DWORD = XOR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction r8|DWORD[.] = MOV [r13|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  186  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|DWORD = AND (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction rbx|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction rdi|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4584128163311315693
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction r9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = LEA [r9|QWORD + 24] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  664  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4584043453892286775
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~[r9|QWORD + 216] instr: 0 <|@ <|@
      nr  704  <|@ instruction r9|QWORD[*] = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4584128163311315693
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rcx|QWORD[.] = MOVE r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r9|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV [r9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction MOV (x: [r9|QWORD[*] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  722  <|@ instruction MOV (x: [r9|QWORD[*] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  724  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3 <|@ <|@
      nr  726  <|@ instruction MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  732  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  734  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4582582307041237579
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4580606098110055782
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 4580606098110055782
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  466  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  474  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  476  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4574453074545740868
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors 
    xhandlers
    flags 
    probability 4574453074545740868
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  598  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  600  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4572041510774887048
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:564) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28] <|@ <|@
      nr  880  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4562999416898726087
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  758  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  760  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [r13:0, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: r13|QWORD[.] - stack:48|DWORD - - stack:40|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41] <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  768  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4554057026462051689
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  676  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  680  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  682  <|@ st <@st|@reference-map: [r13:0, stack:8, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: r13|QWORD[.] - stack:48|DWORD - - stack:40|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41] <|@ <|@
      nr  684  <|@ instruction r9|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  688  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  690  <|@ instruction rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction MOV [r15|QWORD + 668] y: -195099 size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD r10|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction r10|DWORD = MOVE input: int[-205595|0xfffffffffffcdce5] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  516  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: r13|QWORD[.] - stack:48|DWORD - rcx|DWORD rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259] <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 668] y: -226876 size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:325) [bci: 57]
locals: r13|QWORD[.] rcx|DWORD r11|DWORD rbx|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
locals: r13|QWORD[.] - stack:48|DWORD - - rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction r10|DWORD = MOVE input: int[-217627|0xfffffffffffcade5] <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B79" "B78" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  872  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32]
locals: r13|QWORD[.] - stack:48|DWORD - rcx|DWORD rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r10|DWORD = MOVE input: int[-208923|0xfffffffffffccfe5] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  916  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction MOV [r15|QWORD + 668] y: -191507 size: DWORD <|@ <|@
      nr  920  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  922  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: r13|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD r10|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction MOV [r15|QWORD + 668] y: -188683 size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: r13|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD r10|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:43, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction r10|DWORD = MOVE input: int[-219931|0xfffffffffffca4e5] <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction r11|DWORD = MOVE input: int[-199195|0xfffffffffffcf5e5] <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  902  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  910  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  912  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: r13|QWORD[.] - stack:48|DWORD r10|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [r15|QWORD + 668] y: -184339 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rdx:0, r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] stack:48|DWORD r10|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259] <|@ <|@
      nr  830  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-260412|0xfffffffffffc06c4] <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: r13|QWORD[.] - rcx|DWORD - - rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction r10|DWORD = MOVE input: int[-223259|0xfffffffffffc97e5] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction r11|DWORD = MOVE input: int[-197395|0xfffffffffffcfced] <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259] <|@ <|@
      nr  482  <|@ instruction MOV [r15|QWORD + 668] y: -212796 size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 19]
locals: r13|QWORD[.] rcx|DWORD r11|DWORD - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
locals: r13|QWORD[.] - stack:48|DWORD - - rax|DWORD - - 
>@ <|@ instruction DEOPT info [bci:19, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  818  <|@ instruction r10|DWORD = MOVE input: int[-260635|0xfffffffffffc05e5] <|@ <|@
      nr  822  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction r11|DWORD = MOVE input: int[-201755|0xfffffffffffcebe5] <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokespecial #35         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokespecial #36         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokespecial #58         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokespecial #40         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokespecial #37         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #52         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #64         // java.lang.AssertionError
    69: dup           
    70: ldc           #76         // "this cannot happend and would create an endless collision link cycle"
    72: invokespecial #62         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #42         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #43         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokespecial #44         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokespecial #37         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #43         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokespecial #44         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #42         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokespecial #44         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304889742420448b5620448bd941ffc3448bc941d1e141ffc14585d20f850f01000044894c241c44895c24184489442414894c24108502488bf248b8ffffffffffffffff0f1f4000e80000000090488b742420448b5618468b1cd50c00000049c1e203448bc041c1e8104433c04181fb000200000f83990100008b561c448b0cd50c000000418bc9ffc94123c88bd9d1e38bfbffc748c1e2033b4a0c0f8354050000440fbe440a10450fb6c8418bc1ffc8450fbec041f7c0ff0000004c8bee0f85da0100004181fb000200000f83cd0000004185023b4a0c0f8338050000448b74241c453b720c0f837f050000448b5c241844885c0a10438b74b2104585c90f85c001000085f60f8475020000813cf508000000addeadde0f8488030000488b6c24304883c438850500000000c5f877c344894c241c44895c24184489442414894c24104181faaddeadde0f854d0200008502488bf248b8ffffffffffffffffe80000000090488b7424208b5618448b14d50c00000048c1e203448bd841c1eb104433d84181fa00020000458bc30f83e0010000458bda4c8bd2e9dbfeffff448b74241c448b5c24184185028b720c3bf30f869b0400003bf70f86ef040000453b720c0f835b05000044885c1a10418bf3c1fe084088743a10438b74b2104585c90f85ae01000085f60f84a4020000813cf508000000addeadde0f84f5020000488b6c24304883c438850500000000c5f877c34c8bee4181fb000002000f8351040000418b751c448b0cf50c00000041d1e94181fb000002000f83f00400008b0cf50c000000418bd9ffcb4123d88bfbd1e73bcf0f865c0400008bd7ffc23bca0f8605050000440fbe44f210450fb6c041c1e008440fb64cf710450bc1458bc841ffc948c1e6034585c0418bc18bcb458bc88bdf8bfa488bd60f8426feffff498bf2448b5424144585d20f85890200004181fb000200004c8bd60f8212feffffe9dafeffff48c1e603458b5a084181fbaddeadde0f851b040000453b720c0f837504000049bb00e01b170100000049b8addeaddeaddeadde4885f60f840d000000817e08addeadde0f841e010000498b77604c8d4e184d3b4f700f87390200004d894f600f1886d80000004c8bce4d8b80a80000004c8906c74608addeadde89460c478b44b2104489461049c1e90347894cb2104b8d74b21048c1ee094688241e488b6c24304883c438850500000000c5f877c34c8bee458bda4c8bd2e994feffff488b6c24304883c438850500000000c5f877c348c1e603e92bffffff4181faaddeadde0f842a03000049c1e203498bf248b8ffffffffffffffff0f1f4000e800000000904c8b6c2420418b7518448b1cf50c00000048c1e603448bd041c1ea104433d04181fb000200000f83f8000000458b451c4585c00f8492020000468b0cc50c000000418bc9ffc94123ca8bd9d1e38bfbffc749c1e003498bd0458bc24c8bd6498bf5e96dfcffff4d8b4f60498d4918493b4f700f876301000049894f60410f1881d8000000498bc94d8b80a80000004d890141c74108addeadde4189410c8b76104189711048c1e90343894cb2104b8d74b21048c1ee094688241e488b6c24304883c438850500000000c5f877c3488b6c24304883c438850500000000c5f877c341817a08addeadde0f858302000049bb00e01b17010000008b34f510000000438974b2104b8d74b21048c1ee094688241e488b6c24304883c438850500000000c5f877c3458bc24c8bd6e921fdffff41817a08addeadde0f852d01000049bb00e01b17010000008b34f510000000438974b2104b8d74b21048c1ee094688241e488b6c24304883c438850500000000c5f877c3498bf50f1f4000e80000000090488b6c24304883c438850500000000c5f877c3894424184c8954242048beaddeaddeaddeaddeba02000000b901000000e80000000090488bf049bb00e01b170100000049b8addeaddeaddeadde8b4424184c8b542420e98afdffff894424184c89542420488974240848baaddeaddeaddeadde488bf2ba02000000b901000000e800000000904c8bc849bb00e01b170100000049b8addeaddeaddeadde8b4424184c8b542420488b742408e954feffff448b5424144c8bee41c7879c020000e505fdff4d89a7a8020000e8000000009041bae5dcfcff4589979c0200004d89a7a8020000e8000000009049baaddeaddeaddeadde41c7879c020000c489fcff4d8997a8020000e8000000009041bae5adfcff4589979c0200004d89a7a8020000e8000000009041bae5cffcffeba8448b54241441c7879c020000ed13fdff4d89a7a8020000e80000000090448b54241441c7879c020000f51efdff4d89a7a8020000e8000000009041bae5a4fcffeba241bbe5f5fcff448b54241445899f9c0200004d89a7a8020000e80000000090448b5424144c8bee41c7879c020000ed2ffdff4d89a7a8020000e800000000908944241849baaddeaddeaddeadde4d8bda41bac406fcff8b4c24104589979c0200004d899fa8020000e8000000009041bae597fcffe929ffffff41bbedfcfcffeb8549baaddeaddeaddeadde41c7879c020000c4c0fcff4d8997a8020000e8000000009049bb000000000000000041bae505fcffeba141bbe5ebfcffe946ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2c4f3436 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 57 10 r11|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 63 12 r9|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 69 14 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 72 16 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 75 18 BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 81 block B1 null  <||@
  Comment 81 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 22 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 86 24 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 91 26 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 96 28 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 100 30 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 100 [rdx:0, stack:32]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 100 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 102 32 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 105 34 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2]  <||@
  Comment 105 7  <||@
  Comment 119 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 124 [stack:32]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 125 36 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 130 38 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 134 40 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2]  <||@
  Comment 134 [rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 134 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 142 42 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 146 44 r8|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 153 46 r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 156 48 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 163 50 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B7 falseDestination: B1 -> B3  <||@
  Comment 169 block B7 null  <||@
  Comment 169 110 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 169 112 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 172 114 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2]  <||@
  Comment 172 [rdx:0, rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 172 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 180 116 rcx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 185 118 rcx|DWORD = AND (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 188 120 rbx|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 192 122 rdi|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 196 124 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 200 126 JUMP ~[] destination: B7 -> B15  <||@
  Comment 200 block B15 null  <||@
  Comment 200 224 [] = LABEL numbPhis: 8 align: false label: ?  <||@
  Comment 200 226 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 203 228 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 209 block B16 null  <||@
  Comment 209 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 232 r8|DWORD = MOVSXB [rdx|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD  <||@
  Comment 215 234 r9|DWORD = MOVZXB r8|DWORD size: DWORD  <||@
  Comment 219 236 rax|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 224 238 r8|DWORD = MOVSXB r8|DWORD size: DWORD  <||@
  Comment 228 240 TEST r8|DWORD y: 255 size: DWORD  <||@
  Comment 235 246 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 238 242 BRANCH trueDestinationProbability: 0.8497818543939482 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B31  <||@
  Comment 244 block B27 null  <||@
  Comment 244 356 [] = LABEL numbPhis: 8 align: false label: ?  <||@
  Comment 244 358 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 251 360 BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B27 -> B34 falseDestination: B27 -> B49  <||@
  Comment 257 block B34 null  <||@
  Comment 257 412 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 257 414 NULLCHECK [r10|QWORD[.]] state [bci:32]  <||@
  Comment 257 [rdx:0, r10:0, r13:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4          |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |rcx|DWORD  |rax|DWORD  |-  |-   <||@
  Comment 257 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 260 416 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 263 418 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B34 -> B35 falseDestination: B34 -> B46  <||@
  Comment 269 block B35 null  <||@
  Comment 269 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 422 r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 274 424 CMP (x: r14|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 278 426 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B35 -> B36 falseDestination: B35 -> B45  <||@
  Comment 284 block B36 null  <||@
  Comment 284 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 284 430 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 289 432 MOVB (x: [rdx|QWORD[.] + rcx|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 294 434 rsi|DWORD[.] = MOV [r10|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 299 436 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 302 438 BRANCH trueDestinationProbability: 0.8537740928179175 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B44  <||@
  Comment 308 block B37 null  <||@
  Comment 308 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 442 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 310 444 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 316 block B39 null  <||@
  Comment 316 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 316 452 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 316 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 327 454 BRANCH trueDestinationProbability: 0.0312994621045396 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B43  <||@
  Comment 333 block B43 null  <||@
  Comment 333 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 490 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 342 12  <||@
  Comment 352 block B4 null  <||@
  Comment 352 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 64 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 357 66 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 362 68 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 367 70 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 371 72 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 371 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 378 74 BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 384 block B5 null  <||@
  Comment 384 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 384 78 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 384 [rdx:0, stack:32]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 384 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 386 80 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 389 82 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2]  <||@
  Comment 389 7  <||@
  Comment 399 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 404 [stack:32]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 405 84 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 410 86 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 413 88 r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2]  <||@
  Comment 413 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 413 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 421 90 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 425 92 r11|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 432 94 r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 435 96 CMP r10|DWORD y: 512 size: DWORD  <||@
  Comment 442 102 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 445 98 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8  <||@
  Comment 451 block B6 null  <||@
  Comment 451 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 104 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 454 106 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 457 108 JUMP ~[] destination: B6 -> B7  <||@
  Comment 462 block B49 null  <||@
  Comment 462 528 [] = LABEL numbPhis: 7 align: false label: ?  <||@
  Comment 462 522 r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 467 524 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 472 530 NULLCHECK [r10|QWORD[.]] state [bci:32]  <||@
  Comment 472 [rdx:0, r10:0, r13:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4          |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |rcx|DWORD  |rax|DWORD  |-  |-   <||@
  Comment 472 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 475 532 rsi|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 478 534 CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 480 536 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B80  <||@
  Comment 486 block B50 null  <||@
  Comment 486 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 486 540 CMP (x: rsi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 488 542 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B79  <||@
  Comment 494 block B51 null  <||@
  Comment 494 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 494 546 CMP (x: r14|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 498 548 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B51 -> B52 falseDestination: B51 -> B78  <||@
  Comment 504 block B52 null  <||@
  Comment 504 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 504 552 MOVB (x: [rdx|QWORD[.] + rbx|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 509 554 rsi|DWORD = SAR r11|DWORD y: 8 size: DWORD  <||@
  Comment 515 556 MOVB (x: [rdx|QWORD[.] + rdi|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 520 558 rsi|DWORD[.] = MOV [r10|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 525 560 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 528 562 BRANCH trueDestinationProbability: 0.8537740928179175 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B60  <||@
  Comment 534 block B53 null  <||@
  Comment 534 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 534 566 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 536 568 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 542 block B55 null  <||@
  Comment 542 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 542 576 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 542 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 553 578 BRANCH trueDestinationProbability: 0.0312994621045396 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B59  <||@
  Comment 559 block B59 null  <||@
  Comment 559 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 614 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 568 12  <||@
  Comment 578 block B3 null  <||@
  Comment 578 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 578 58 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 581 60 JUMP ~[] destination: B3 -> B21  <||@
  Comment 581 block B21 null  <||@
  Comment 581 280 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 581 282 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 588 284 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B87  <||@
  Comment 594 block B22 null  <||@
  Comment 594 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 594 288 rsi|DWORD[.] = MOV [r13|QWORD[.] + 28] size: DWORD  <||@
  Comment 598 290 r9|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 2]  <||@
  Comment 598 [rsi:0, r10:0, r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |r13|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 598 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 606 292 r9|DWORD = SHR r9|DWORD size: DWORD  <||@
  Comment 609 294 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 616 296 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B85  <||@
  Comment 622 block B23 null  <||@
  Comment 622 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 622 300 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 2]  <||@
  Comment 622 [rsi:0, r10:0, r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1         |2 
     locals:  |-         |-         |- 
     stack:   |r8|DWORD  |r9|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 622 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 629 302 rbx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 634 304 rbx|DWORD = AND (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 637 306 rdi|DWORD = SHL rbx|DWORD size: DWORD  <||@
  Comment 641 308 CMP (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 643 310 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B84  <||@
  Comment 649 block B24 null  <||@
  Comment 649 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 314 rdx|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 653 316 CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 655 318 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B83  <||@
  Comment 661 block B25 null  <||@
  Comment 661 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 661 322 r8|DWORD = MOVSXB [rdx|DWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 667 324 r8|DWORD = MOVZXB r8|DWORD size: DWORD  <||@
  Comment 671 326 r8|DWORD = SHL r8|DWORD y: 8 size: DWORD  <||@
  Comment 675 328 r9|DWORD = MOVZXB [rdi|DWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 681 330 r8|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 684 332 r9|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 690 334 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 694 336 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 697 342 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 700 344 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 702 346 r9|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 705 348 rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 707 350 rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 709 352 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 712 338 BRANCH trueDestinationProbability: 0.8497818543939482 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B31  <||@
  Comment 718 block B31 null  <||@
  Comment 718 394 [] = LABEL numbPhis: 8 align: false label: ?  <||@
  Comment 718 388 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 721 390 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 726 396 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 729 398 BRANCH trueDestinationProbability: 0.9688694669877226 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B82  <||@
  Comment 735 block B32 null  <||@
  Comment 735 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 402 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 742 408 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 745 404 BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B32 -> B34 falseDestination: B32 -> B49  <||@
  Comment 756 block B44 null  <||@
  Comment 756 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 756 494 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 760 496 JUMP ~[] destination: B44 -> B61  <||@
  Comment 760 block B61 null  <||@
  Comment 760 622 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 760 624 r11|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 764 626 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 764 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 771 628 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B76  <||@
  Comment 777 block B62 null  <||@
  Comment 777 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 777 632 CMP (x: r14|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 781 634 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B75  <||@
  Comment 787 block B63 null  <||@
  Comment 787 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 787 638 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 797 640 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 797 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 807 642 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 810 644 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B71 falseDestination: B63 -> B65  <||@
  Comment 816 block B65 null  <||@
  Comment 816 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 652 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 816 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 823 654 BRANCH trueDestinationProbability: 0.22436794305351004 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B71  <||@
  Comment 829 block B71 null  <||@
  Comment 829 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 829 742 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 833 744 r9|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 837 746 CMP (x: r9|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 841 748 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 847 block B73 null  <||@
  Comment 847 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 847 778 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 851 780 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 858 782 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 858 784 JUMP ~[] destination: B73 -> B74  <||@
  Comment 858 block B74 null  <||@
  Comment 858 786 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 858 788 r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 861 790 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 868 792 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 871 794 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 871 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 878 796 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 881 798 r8|DWORD[.] = MOV [r10|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 886 800 MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 890 802 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 894 804 MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 899 806 rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD  <||@
  Comment 904 808 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 908 810 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 912 812 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 921 12  <||@
  Comment 931 block B8 null  <||@
  Comment 931 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 931 132 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 934 134 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 937 136 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 940 138 JUMP ~[] destination: B8 -> B21  <||@
  Comment 945 block B38 null  <||@
  Comment 945 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 945 448 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 954 12  <||@
  Comment 964 block B60 null  <||@
  Comment 964 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 964 618 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 968 620 JUMP ~[] destination: B60 -> B61  <||@
  Comment 973 block B9 null  <||@
  Comment 973 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 973 142 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 973 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 980 144 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 986 block B11 null  <||@
  Comment 986 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 986 160 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 990 162 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 993 164 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 2]  <||@
  Comment 993 7  <||@
  Comment 1007 {HotSpotMethod<Equivalence.hashCode(Object)>}  <||@
  Comment 1012 [stack:32]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1013 166 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1018 168 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1022 170 r11|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 2]  <||@
  Comment 1022 [rsi:0, r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1022 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1030 172 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 1034 174 r10|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 1041 176 r10|DWORD = XOR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1044 178 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 1051 180 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20  <||@
  Comment 1057 block B12 null  <||@
  Comment 1057 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1057 184 r8|DWORD[.] = MOV [r13|QWORD[.] + 28] size: DWORD  <||@
  Comment 1061 186 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1064 188 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 1070 block B14 null  <||@
  Comment 1070 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1070 202 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1078 204 rcx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 1083 206 rcx|DWORD = AND (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1086 208 rbx|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 1090 210 rdi|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 1094 212 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 1098 214 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1101 216 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1104 218 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1107 220 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1110 222 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1115 block B66 null  <||@
  Comment 1115 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1115 658 r9|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1119 660 rcx|QWORD = LEA [r9|QWORD + 24] size: QWORD  <||@
  Comment 1123 662 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1127 664 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68  <||@
  Comment 1133 block B68 null  <||@
  Comment 1133 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1133 700 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1137 702 AMD64PREFETCH ~[r9|QWORD + 216] instr: 0  <||@
  Comment 1145 704 r9|QWORD[*] = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1145 706 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1145 block B69 null  <||@
  Comment 1145 708 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1145 710 rcx|QWORD[.] = MOVE r9|QWORD[*] moveKind: QWORD  <||@
  Comment 1148 712 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1155 714 MOV (x: [r9|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 1158 716 MOV [r9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1158 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1166 718 MOV (x: [r9|QWORD[*] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 1170 720 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1173 722 MOV (x: [r9|QWORD[*] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1177 724 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 1181 726 MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1186 728 rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1191 730 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1195 732 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1199 734 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1208 12  <||@
  Comment 1218 block B54 null  <||@
  Comment 1218 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1218 572 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1227 12  <||@
  Comment 1237 block B40 null  <||@
  Comment 1237 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 458 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1237 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1245 460 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1251 block B41 null  <||@
  Comment 1251 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1251 464 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1261 466 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1268 468 MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1273 470 rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1278 472 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1282 474 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1286 476 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1295 12  <||@
  Comment 1305 block B20 null  <||@
  Comment 1305 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1305 274 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1308 276 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1311 278 JUMP ~[] destination: B20 -> B21  <||@
  Comment 1316 block B56 null  <||@
  Comment 1316 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1316 582 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1316 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1324 584 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1330 block B57 null  <||@
  Comment 1330 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1330 588 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1340 590 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1347 592 MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1352 594 rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1357 596 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1361 598 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1365 600 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1374 12  <||@
  Comment 1384 block B82 null  <||@
  Comment 1384 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 876 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 878 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28]  <||@
  Comment 1387 9  <||@
  Comment 1391 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 1396 []at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:564) [bci: 28, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1397 880 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1406 12  <||@
  Comment 1416 block B72 null  <||@
  Comment 1416 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1416 752 stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1420 754 stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1425 756 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1425 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1435 758 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1440 760 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1445 762 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41]  <||@
  Comment 1445 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1450 [r13:0, stack:32]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4  |5               |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |stack:40|DWORD  |-  |-   <||@
  Comment 1451 764 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1454 766 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1464 768 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1464 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1474 770 rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1478 772 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1483 774 JUMP ~[] destination: B72 -> B74  <||@
  Comment 1488 block B67 null  <||@
  Comment 1488 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1488 668 stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1492 670 stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1497 672 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1502 674 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1502 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1512 676 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1515 678 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1520 680 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1525 682 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41]  <||@
  Comment 1525 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1530 [r13:0, stack:8, stack:32]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4  |5               |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |stack:40|DWORD  |-  |-   <||@
  Comment 1531 684 r9|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1534 686 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1544 688 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1544 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1554 690 rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1558 692 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1563 694 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1568 696 JUMP ~[] destination: B67 -> B69  <||@
  Comment 1573 block B19 null  <||@
  Comment 1573 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1573 262 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1578 264 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1581 266 MOV [r15|QWORD + 668] y: -195099 size: DWORD  <||@
  Comment 1592 268 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1599 270 DEOPT info [bci:64, 2]  <||@
  Comment 1599 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1604 [r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1         |2 
     locals:  |-         |-         |- 
     stack:   |r8|DWORD  |r9|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3          |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |r10|DWORD  |-  |-  |-  |-   <||@
  Comment 1605 block B46 null  <||@
  Comment 1605 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1605 506 r10|DWORD = MOVE input: int[-205595|0xfffffffffffcdce5]  <||@
  Comment 1611 508 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1611 block B47 null  <||@
  Comment 1611 510 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1611 512 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1618 514 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1625 516 DEOPT info [bci:32]  <||@
  Comment 1625 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1630 [r13:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4          |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |rcx|DWORD  |rax|DWORD  |-  |-   <||@
  Comment 1631 block B58 null  <||@
  Comment 1631 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1631 604 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259]  <||@
  Comment 1631 {Object[d.a@500962259]}  <||@
  Comment 1641 606 MOV [r15|QWORD + 668] y: -226876 size: DWORD  <||@
  Comment 1652 608 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1659 610 DEOPT info [bci:57, 38]  <||@
  Comment 1659 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1664 [r13:0]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:325) [bci: 57, duringCall: false, rethrow: false]
              |0             |1          |2          |3         
     locals:  |r13|QWORD[.]  |rcx|DWORD  |r11|DWORD  |rbx|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38, duringCall: true, rethrow: false]
              |0             |1  |2               |3  |4  |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |rax|DWORD  |-  |-   <||@
  Comment 1665 block B80 null  <||@
  Comment 1665 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1665 862 r10|DWORD = MOVE input: int[-217627|0xfffffffffffcade5]  <||@
  Comment 1671 864 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1671 block B81 null  <||@
  Comment 1671 866 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1671 868 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1678 870 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1685 872 DEOPT info [bci:32]  <||@
  Comment 1685 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1690 [r13:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4          |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |rcx|DWORD  |rax|DWORD  |-  |-   <||@
  Comment 1691 block B45 null  <||@
  Comment 1691 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1691 500 r10|DWORD = MOVE input: int[-208923|0xfffffffffffccfe5]  <||@
  Comment 1697 502 JUMP ~[] destination: B45 -> B47  <||@
  Comment 1699 block B87 null  <||@
  Comment 1699 914 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1699 916 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1704 918 MOV [r15|QWORD + 668] y: -191507 size: DWORD  <||@
  Comment 1715 920 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1722 922 DEOPT info [bci:52, 2]  <||@
  Comment 1722 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1727 [r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |r13|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3          |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |r10|DWORD  |-  |-  |-  |-   <||@
  Comment 1728 block B13 null  <||@
  Comment 1728 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1728 192 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1733 194 MOV [r15|QWORD + 668] y: -188683 size: DWORD  <||@
  Comment 1744 196 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1751 198 DEOPT info [bci:43, 2]  <||@
  Comment 1751 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1756 [r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3          |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |r10|DWORD  |-  |-  |-  |-   <||@
  Comment 1757 block B79 null  <||@
  Comment 1757 854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1757 856 r10|DWORD = MOVE input: int[-219931|0xfffffffffffca4e5]  <||@
  Comment 1763 858 JUMP ~[] destination: B79 -> B81  <||@
  Comment 1765 block B84 null  <||@
  Comment 1765 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1765 892 r11|DWORD = MOVE input: int[-199195|0xfffffffffffcf5e5]  <||@
  Comment 1771 896 JUMP ~[] destination: B84 -> B86  <||@
  Comment 1771 block B86 null  <||@
  Comment 1771 906 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1771 902 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1776 908 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1783 910 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1790 912 DEOPT info [bci:64, 2]  <||@
  Comment 1790 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1795 [r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1         |2 
     locals:  |-         |-         |- 
     stack:   |r8|DWORD  |r9|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3          |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |r10|DWORD  |-  |-  |-  |-   <||@
  Comment 1796 block B10 null  <||@
  Comment 1796 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 148 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1801 150 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1804 152 MOV [r15|QWORD + 668] y: -184339 size: DWORD  <||@
  Comment 1815 154 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1822 156 DEOPT info [bci:0]  <||@
  Comment 1822 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1827 [rdx:0, r13:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2               |3          |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |stack:48|DWORD  |r10|DWORD  |-  |-  |-  |-   <||@
  Comment 1828 block B76 null  <||@
  Comment 1828 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1828 826 stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1832 828 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259]  <||@
  Comment 1832 {Object[d.a@500962259]}  <||@
  Comment 1842 830 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1845 832 r10|DWORD = MOVE input: int[-260412|0xfffffffffffc06c4]  <||@
  Comment 1851 838 JUMP ~[] destination: B76 -> B77  <||@
  Comment 1851 block B77 null  <||@
  Comment 1851 840 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1851 836 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1855 842 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1862 844 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1869 846 DEOPT info [bci:41]  <||@
  Comment 1869 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1874 [r13:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0             |1  |2          |3  |4  |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |rcx|DWORD  |-  |-  |rax|DWORD  |-  |-   <||@
  Comment 1875 block B78 null  <||@
  Comment 1875 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1875 850 r10|DWORD = MOVE input: int[-223259|0xfffffffffffc97e5]  <||@
  Comment 1881 852 JUMP ~[] destination: B78 -> B81  <||@
  Comment 1886 block B85 null  <||@
  Comment 1886 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1886 900 r11|DWORD = MOVE input: int[-197395|0xfffffffffffcfced]  <||@
  Comment 1892 904 JUMP ~[] destination: B85 -> B86  <||@
  Comment 1894 block B42 null  <||@
  Comment 1894 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1894 480 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259]  <||@
  Comment 1894 {Object[d.a@500962259]}  <||@
  Comment 1904 482 MOV [r15|QWORD + 668] y: -212796 size: DWORD  <||@
  Comment 1915 484 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1922 486 DEOPT info [bci:19, 38]  <||@
  Comment 1922 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1927 [r13:0]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 19, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r13|QWORD[.]  |rcx|DWORD  |r11|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38, duringCall: true, rethrow: false]
              |0             |1  |2               |3  |4  |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |rax|DWORD  |-  |-   <||@
  Comment 1928 block B75 null  <||@
  Comment 1928 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1928 816 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1938 818 r10|DWORD = MOVE input: int[-260635|0xfffffffffffc05e5]  <||@
  Comment 1944 822 JUMP ~[] destination: B75 -> B77  <||@
  Comment 1946 block B83 null  <||@
  Comment 1946 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1946 884 r11|DWORD = MOVE input: int[-201755|0xfffffffffffcebe5]  <||@
  Comment 1952 888 JUMP ~[] destination: B83 -> B86  <||@
  Comment 1957 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1957 4  <||@
  Comment 1963 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1963 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5962[org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean)]"
  method "HotSpotCompilation-5962[org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean)]"
  date 1527005170535
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106c10420 448b560849c1e203493bc20f852f5abfff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304889742420448b5620448bd941ffc3448bc941d1e141ffc14585d20f850f01000044894c241c44895c24184489442414894c24108502488bf248b8ffffffffffffffff0f1f4000e8445ebfff90488b742420448b5618468b1cd50c00000049c1e203448bc041c1e8104433c04181fb000200000f83990100008b561c448b0cd50c000000418bc9ffc94123c88bd9d1e38bfbffc748c1e2033b4a0c0f8354050000440fbe440a10450fb6c8418bc1ffc8450fbec041f7c0ff0000004c8bee0f85da0100004181fb000200000f83cd0000004185023b4a0c0f8338050000448b74241c453b720c0f837f050000448b5c241844885c0a10438b74b2104585c90f85c001000085f60f8475020000813cf508000000bc3e01f80f8488030000488b6c24304883c43885058aeac7fdc5f877c344894c241c44895c24184489442414894c24104181fa750300d80f854d0200008502488bf248b8ffffffffffffffffe82c5dbfff90488b7424208b5618448b14d50c00000048c1e203448bd841c1eb104433d84181fa00020000458bc30f83e0010000458bda4c8bd2e9dbfeffff448b74241c448b5c24184185028b720c3bf30f869b0400003bf70f86ef040000453b720c0f835b05000044885c1a10418bf3c1fe084088743a10438b74b2104585c90f85ae01000085f60f84a4020000813cf508000000bc3e01f80f84f5020000488b6c24304883c4388505a8e9c7fdc5f877c34c8bee4181fb000002000f8351040000418b751c448b0cf50c00000041d1e94181fb000002000f83f00400008b0cf50c000000418bd9ffcb4123d88bfbd1e73bcf0f865c0400008bd7ffc23bca0f8605050000440fbe44f210450fb6c041c1e008440fb64cf710450bc1458bc841ffc948c1e6034585c0418bc18bcb458bc88bdf8bfa488bd60f8426feffff498bf2448b5424144585d20f85890200004181fb000200004c8bd60f8212feffffe9dafeffff48c1e603458b5a084181fbf52200f80f851b040000453b720c0f837504000049bb00e01b170100000049b8e0f509c0070000004885f60f840d000000817e08bc3e01f80f841e010000498b77604c8d4e184d3b4f700f87390200004d894f600f1886d80000004c8bce4d8b80a80000004c8906c74608bc3e01f889460c478b44b2104489461049c1e90347894cb2104b8d74b21048c1ee094688241e488b6c24304883c438850547e8c7fdc5f877c34c8bee458bda4c8bd2e994feffff488b6c24304883c438850526e8c7fdc5f877c348c1e603e92bffffff4181fa770300d80f842a03000049c1e203498bf248b8ffffffffffffffff0f1f4000e8cc5abfff904c8b6c2420418b7518448b1cf50c00000048c1e603448bd041c1ea104433d04181fb000200000f83f8000000458b451c4585c00f8492020000468b0cc50c000000418bc9ffc94123ca8bd9d1e38bfbffc749c1e003498bd0458bc24c8bd6498bf5e96dfcffff4d8b4f60498d4918493b4f700f876301000049894f60410f1881d8000000498bc94d8b80a80000004d890141c74108bc3e01f84189410c8b76104189711048c1e90343894cb2104b8d74b21048c1ee094688241e488b6c24304883c438850528e7c7fdc5f877c3488b6c24304883c438850515e7c7fdc5f877c341817a08f52200f80f858302000049bb00e01b17010000008b34f510000000438974b2104b8d74b21048c1ee094688241e488b6c24304883c4388505d1e6c7fdc5f877c3458bc24c8bd6e921fdffff41817a08f52200f80f852d01000049bb00e01b17010000008b34f510000000438974b2104b8d74b21048c1ee094688241e488b6c24304883c438850582e6c7fdc5f877c3498bf50f1f4000e80c57bfff90488b6c24304883c438850562e6c7fdc5f877c3894424184c8954242048be680b00c007000000ba02000000b901000000e81664380090488bf049bb00e01b170100000049b8e0f509c0070000008b4424184c8b542420e98afdffff894424184c89542420488974240848ba680b00c007000000488bf2ba02000000b901000000e8c6633800904c8bc849bb00e01b170100000049b8e0f509c0070000008b4424184c8b542420488b742408e954feffff448b5424144c8bee41c7879c020000e505fdff4d89a7a8020000e89a6bbfff9041bae5dcfcff4589979c0200004d89a7a8020000e8806bbfff9049bac08838bf0700000041c7879c020000c489fcff4d8997a8020000e85e6bbfff9041bae5adfcff4589979c0200004d89a7a8020000e8446bbfff9041bae5cffcffeba8448b54241441c7879c020000ed13fdff4d89a7a8020000e81f6bbfff90448b54241441c7879c020000f51efdff4d89a7a8020000e8026bbfff9041bae5a4fcffeba241bbe5f5fcff448b54241445899f9c0200004d89a7a8020000e8db6abfff90448b5424144c8bee41c7879c020000ed2ffdff4d89a7a8020000e8bb6abfff908944241849bac08838bf070000004d8bda41bac406fcff8b4c24104589979c0200004d899fa8020000e88c6abfff9041bae597fcffe929ffffff41bbedfcfcffeb8549bac08838bf0700000041c7879c020000c4c0fcff4d8997a8020000e8576abfff9049bb000000000000000041bae505fcffeba141bbe5ebfcffe946ffffffe8569a030090e83069bfff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2c4f3436 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 57 10 r11|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 63 12 r9|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 69 14 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 72 16 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 75 18 BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 81 block B1 null  <||@
  Comment 81 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 22 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 86 24 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 91 26 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 96 28 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 100 30 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 100 [rdx:0, stack:32]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 100 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 102 32 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 105 34 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2]  <||@
  Comment 105 7  <||@
  Comment 119 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 124 [stack:32]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 125 36 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 130 38 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 134 40 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2]  <||@
  Comment 134 [rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 134 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 142 42 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 146 44 r8|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 153 46 r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 156 48 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 163 50 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B7 falseDestination: B1 -> B3  <||@
  Comment 169 block B7 null  <||@
  Comment 169 110 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 169 112 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 172 114 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2]  <||@
  Comment 172 [rdx:0, rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 172 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 180 116 rcx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 185 118 rcx|DWORD = AND (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 188 120 rbx|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 192 122 rdi|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 196 124 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 200 126 JUMP ~[] destination: B7 -> B15  <||@
  Comment 200 block B15 null  <||@
  Comment 200 224 [] = LABEL numbPhis: 8 align: false label: ?  <||@
  Comment 200 226 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 203 228 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 209 block B16 null  <||@
  Comment 209 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 232 r8|DWORD = MOVSXB [rdx|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD  <||@
  Comment 215 234 r9|DWORD = MOVZXB r8|DWORD size: DWORD  <||@
  Comment 219 236 rax|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 224 238 r8|DWORD = MOVSXB r8|DWORD size: DWORD  <||@
  Comment 228 240 TEST r8|DWORD y: 255 size: DWORD  <||@
  Comment 235 246 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 238 242 BRANCH trueDestinationProbability: 0.8497818543939482 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B31  <||@
  Comment 244 block B27 null  <||@
  Comment 244 356 [] = LABEL numbPhis: 8 align: false label: ?  <||@
  Comment 244 358 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 251 360 BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B27 -> B34 falseDestination: B27 -> B49  <||@
  Comment 257 block B34 null  <||@
  Comment 257 412 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 257 414 NULLCHECK [r10|QWORD[.]] state [bci:32]  <||@
  Comment 257 [rdx:0, r10:0, r13:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4          |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |rcx|DWORD  |rax|DWORD  |-  |-   <||@
  Comment 257 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 260 416 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 263 418 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B34 -> B35 falseDestination: B34 -> B46  <||@
  Comment 269 block B35 null  <||@
  Comment 269 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 422 r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 274 424 CMP (x: r14|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 278 426 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B35 -> B36 falseDestination: B35 -> B45  <||@
  Comment 284 block B36 null  <||@
  Comment 284 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 284 430 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 289 432 MOVB (x: [rdx|QWORD[.] + rcx|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 294 434 rsi|DWORD[.] = MOV [r10|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 299 436 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 302 438 BRANCH trueDestinationProbability: 0.8537740928179175 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B44  <||@
  Comment 308 block B37 null  <||@
  Comment 308 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 442 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 310 444 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 316 block B39 null  <||@
  Comment 316 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 316 452 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 316 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 327 454 BRANCH trueDestinationProbability: 0.0312994621045396 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B43  <||@
  Comment 333 block B43 null  <||@
  Comment 333 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 490 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 342 12  <||@
  Comment 352 block B4 null  <||@
  Comment 352 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 64 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 357 66 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 362 68 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 367 70 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 371 72 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 371 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 378 74 BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 384 block B5 null  <||@
  Comment 384 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 384 78 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 384 [rdx:0, stack:32]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 384 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 386 80 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 389 82 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2]  <||@
  Comment 389 7  <||@
  Comment 399 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 404 [stack:32]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 405 84 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 410 86 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 413 88 r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2]  <||@
  Comment 413 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 413 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 421 90 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 425 92 r11|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 432 94 r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 435 96 CMP r10|DWORD y: 512 size: DWORD  <||@
  Comment 442 102 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 445 98 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8  <||@
  Comment 451 block B6 null  <||@
  Comment 451 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 104 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 454 106 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 457 108 JUMP ~[] destination: B6 -> B7  <||@
  Comment 462 block B49 null  <||@
  Comment 462 528 [] = LABEL numbPhis: 7 align: false label: ?  <||@
  Comment 462 522 r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 467 524 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 472 530 NULLCHECK [r10|QWORD[.]] state [bci:32]  <||@
  Comment 472 [rdx:0, r10:0, r13:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4          |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |rcx|DWORD  |rax|DWORD  |-  |-   <||@
  Comment 472 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 475 532 rsi|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 478 534 CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 480 536 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B80  <||@
  Comment 486 block B50 null  <||@
  Comment 486 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 486 540 CMP (x: rsi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 488 542 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B79  <||@
  Comment 494 block B51 null  <||@
  Comment 494 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 494 546 CMP (x: r14|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 498 548 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B51 -> B52 falseDestination: B51 -> B78  <||@
  Comment 504 block B52 null  <||@
  Comment 504 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 504 552 MOVB (x: [rdx|QWORD[.] + rbx|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 509 554 rsi|DWORD = SAR r11|DWORD y: 8 size: DWORD  <||@
  Comment 515 556 MOVB (x: [rdx|QWORD[.] + rdi|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 520 558 rsi|DWORD[.] = MOV [r10|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 525 560 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 528 562 BRANCH trueDestinationProbability: 0.8537740928179175 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B60  <||@
  Comment 534 block B53 null  <||@
  Comment 534 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 534 566 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 536 568 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 542 block B55 null  <||@
  Comment 542 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 542 576 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 542 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 553 578 BRANCH trueDestinationProbability: 0.0312994621045396 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B59  <||@
  Comment 559 block B59 null  <||@
  Comment 559 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 614 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 568 12  <||@
  Comment 578 block B3 null  <||@
  Comment 578 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 578 58 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 581 60 JUMP ~[] destination: B3 -> B21  <||@
  Comment 581 block B21 null  <||@
  Comment 581 280 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 581 282 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 588 284 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B87  <||@
  Comment 594 block B22 null  <||@
  Comment 594 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 594 288 rsi|DWORD[.] = MOV [r13|QWORD[.] + 28] size: DWORD  <||@
  Comment 598 290 r9|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 2]  <||@
  Comment 598 [rsi:0, r10:0, r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |r13|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 598 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 606 292 r9|DWORD = SHR r9|DWORD size: DWORD  <||@
  Comment 609 294 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 616 296 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B85  <||@
  Comment 622 block B23 null  <||@
  Comment 622 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 622 300 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 2]  <||@
  Comment 622 [rsi:0, r10:0, r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1         |2 
     locals:  |-         |-         |- 
     stack:   |r8|DWORD  |r9|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 622 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 629 302 rbx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 634 304 rbx|DWORD = AND (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 637 306 rdi|DWORD = SHL rbx|DWORD size: DWORD  <||@
  Comment 641 308 CMP (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 643 310 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B84  <||@
  Comment 649 block B24 null  <||@
  Comment 649 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 314 rdx|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 653 316 CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 655 318 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B83  <||@
  Comment 661 block B25 null  <||@
  Comment 661 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 661 322 r8|DWORD = MOVSXB [rdx|DWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 667 324 r8|DWORD = MOVZXB r8|DWORD size: DWORD  <||@
  Comment 671 326 r8|DWORD = SHL r8|DWORD y: 8 size: DWORD  <||@
  Comment 675 328 r9|DWORD = MOVZXB [rdi|DWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 681 330 r8|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 684 332 r9|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 690 334 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 694 336 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 697 342 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 700 344 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 702 346 r9|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 705 348 rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 707 350 rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 709 352 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 712 338 BRANCH trueDestinationProbability: 0.8497818543939482 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B31  <||@
  Comment 718 block B31 null  <||@
  Comment 718 394 [] = LABEL numbPhis: 8 align: false label: ?  <||@
  Comment 718 388 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 721 390 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 726 396 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 729 398 BRANCH trueDestinationProbability: 0.9688694669877226 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B82  <||@
  Comment 735 block B32 null  <||@
  Comment 735 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 402 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 742 408 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 745 404 BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B32 -> B34 falseDestination: B32 -> B49  <||@
  Comment 756 block B44 null  <||@
  Comment 756 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 756 494 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 760 496 JUMP ~[] destination: B44 -> B61  <||@
  Comment 760 block B61 null  <||@
  Comment 760 622 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 760 624 r11|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 764 626 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 764 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 771 628 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B76  <||@
  Comment 777 block B62 null  <||@
  Comment 777 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 777 632 CMP (x: r14|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 781 634 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B75  <||@
  Comment 787 block B63 null  <||@
  Comment 787 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 787 638 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 797 640 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 797 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 807 642 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 810 644 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B71 falseDestination: B63 -> B65  <||@
  Comment 816 block B65 null  <||@
  Comment 816 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 652 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 816 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 823 654 BRANCH trueDestinationProbability: 0.22436794305351004 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B71  <||@
  Comment 829 block B71 null  <||@
  Comment 829 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 829 742 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 833 744 r9|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 837 746 CMP (x: r9|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 841 748 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 847 block B73 null  <||@
  Comment 847 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 847 778 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 851 780 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 858 782 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 858 784 JUMP ~[] destination: B73 -> B74  <||@
  Comment 858 block B74 null  <||@
  Comment 858 786 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 858 788 r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 861 790 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 868 792 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 871 794 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 871 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 878 796 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 881 798 r8|DWORD[.] = MOV [r10|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 886 800 MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 890 802 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 894 804 MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 899 806 rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD  <||@
  Comment 904 808 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 908 810 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 912 812 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 921 12  <||@
  Comment 931 block B8 null  <||@
  Comment 931 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 931 132 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 934 134 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 937 136 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 940 138 JUMP ~[] destination: B8 -> B21  <||@
  Comment 945 block B38 null  <||@
  Comment 945 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 945 448 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 954 12  <||@
  Comment 964 block B60 null  <||@
  Comment 964 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 964 618 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 968 620 JUMP ~[] destination: B60 -> B61  <||@
  Comment 973 block B9 null  <||@
  Comment 973 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 973 142 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 973 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 980 144 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 986 block B11 null  <||@
  Comment 986 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 986 160 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 990 162 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 993 164 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 2]  <||@
  Comment 993 7  <||@
  Comment 1007 {HotSpotMethod<Equivalence.hashCode(Object)>}  <||@
  Comment 1012 [stack:32]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1013 166 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1018 168 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1022 170 r11|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 2]  <||@
  Comment 1022 [rsi:0, r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1022 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1030 172 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 1034 174 r10|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 1041 176 r10|DWORD = XOR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1044 178 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 1051 180 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20  <||@
  Comment 1057 block B12 null  <||@
  Comment 1057 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1057 184 r8|DWORD[.] = MOV [r13|QWORD[.] + 28] size: DWORD  <||@
  Comment 1061 186 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1064 188 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 1070 block B14 null  <||@
  Comment 1070 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1070 202 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1078 204 rcx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 1083 206 rcx|DWORD = AND (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1086 208 rbx|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 1090 210 rdi|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 1094 212 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 1098 214 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1101 216 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1104 218 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1107 220 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1110 222 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1115 block B66 null  <||@
  Comment 1115 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1115 658 r9|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1119 660 rcx|QWORD = LEA [r9|QWORD + 24] size: QWORD  <||@
  Comment 1123 662 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1127 664 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68  <||@
  Comment 1133 block B68 null  <||@
  Comment 1133 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1133 700 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1137 702 AMD64PREFETCH ~[r9|QWORD + 216] instr: 0  <||@
  Comment 1145 704 r9|QWORD[*] = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1145 706 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1145 block B69 null  <||@
  Comment 1145 708 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1145 710 rcx|QWORD[.] = MOVE r9|QWORD[*] moveKind: QWORD  <||@
  Comment 1148 712 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1155 714 MOV (x: [r9|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 1158 716 MOV [r9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1158 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1166 718 MOV (x: [r9|QWORD[*] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 1170 720 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1173 722 MOV (x: [r9|QWORD[*] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1177 724 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65f7dcdd encoding: base: 0 shift: 3  <||@
  Comment 1181 726 MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1186 728 rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1191 730 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1195 732 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1199 734 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1208 12  <||@
  Comment 1218 block B54 null  <||@
  Comment 1218 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1218 572 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1227 12  <||@
  Comment 1237 block B40 null  <||@
  Comment 1237 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 458 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1237 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1245 460 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1251 block B41 null  <||@
  Comment 1251 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1251 464 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1261 466 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1268 468 MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1273 470 rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1278 472 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1282 474 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1286 476 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1295 12  <||@
  Comment 1305 block B20 null  <||@
  Comment 1305 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1305 274 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1308 276 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1311 278 JUMP ~[] destination: B20 -> B21  <||@
  Comment 1316 block B56 null  <||@
  Comment 1316 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1316 582 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1316 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1324 584 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1330 block B57 null  <||@
  Comment 1330 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1330 588 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1340 590 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1347 592 MOV (x: [r10|QWORD[.] + r14|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1352 594 rsi|QWORD[.] = LEA [r10|QWORD[.] + r14|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1357 596 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1361 598 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1365 600 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1374 12  <||@
  Comment 1384 block B82 null  <||@
  Comment 1384 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 876 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 878 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28]  <||@
  Comment 1387 9  <||@
  Comment 1391 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 1396 []at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:564) [bci: 28, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1397 880 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1406 12  <||@
  Comment 1416 block B72 null  <||@
  Comment 1416 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1416 752 stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1420 754 stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1425 756 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1425 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1435 758 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1440 760 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1445 762 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41]  <||@
  Comment 1445 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1450 [r13:0, stack:32]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4  |5               |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |stack:40|DWORD  |-  |-   <||@
  Comment 1451 764 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1454 766 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1464 768 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1464 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1474 770 rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1478 772 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1483 774 JUMP ~[] destination: B72 -> B74  <||@
  Comment 1488 block B67 null  <||@
  Comment 1488 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1488 668 stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1492 670 stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1497 672 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1502 674 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1502 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1512 676 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1515 678 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1520 680 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1525 682 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41]  <||@
  Comment 1525 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1530 [r13:0, stack:8, stack:32]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4  |5               |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |stack:40|DWORD  |-  |-   <||@
  Comment 1531 684 r9|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1534 686 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1544 688 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1544 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1554 690 rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1558 692 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1563 694 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1568 696 JUMP ~[] destination: B67 -> B69  <||@
  Comment 1573 block B19 null  <||@
  Comment 1573 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1573 262 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1578 264 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1581 266 MOV [r15|QWORD + 668] y: -195099 size: DWORD  <||@
  Comment 1592 268 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1599 270 DEOPT info [bci:64, 2]  <||@
  Comment 1599 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1604 [r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1         |2 
     locals:  |-         |-         |- 
     stack:   |r8|DWORD  |r9|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3          |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |r10|DWORD  |-  |-  |-  |-   <||@
  Comment 1605 block B46 null  <||@
  Comment 1605 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1605 506 r10|DWORD = MOVE input: int[-205595|0xfffffffffffcdce5]  <||@
  Comment 1611 508 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1611 block B47 null  <||@
  Comment 1611 510 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1611 512 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1618 514 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1625 516 DEOPT info [bci:32]  <||@
  Comment 1625 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1630 [r13:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4          |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |rcx|DWORD  |rax|DWORD  |-  |-   <||@
  Comment 1631 block B58 null  <||@
  Comment 1631 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1631 604 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259]  <||@
  Comment 1631 {Object[d.a@500962259]}  <||@
  Comment 1641 606 MOV [r15|QWORD + 668] y: -226876 size: DWORD  <||@
  Comment 1652 608 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1659 610 DEOPT info [bci:57, 38]  <||@
  Comment 1659 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1664 [r13:0]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:325) [bci: 57, duringCall: false, rethrow: false]
              |0             |1          |2          |3         
     locals:  |r13|QWORD[.]  |rcx|DWORD  |r11|DWORD  |rbx|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38, duringCall: true, rethrow: false]
              |0             |1  |2               |3  |4  |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |rax|DWORD  |-  |-   <||@
  Comment 1665 block B80 null  <||@
  Comment 1665 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1665 862 r10|DWORD = MOVE input: int[-217627|0xfffffffffffcade5]  <||@
  Comment 1671 864 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1671 block B81 null  <||@
  Comment 1671 866 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1671 868 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1678 870 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1685 872 DEOPT info [bci:32]  <||@
  Comment 1685 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1690 [r13:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4          |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |rcx|DWORD  |rax|DWORD  |-  |-   <||@
  Comment 1691 block B45 null  <||@
  Comment 1691 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1691 500 r10|DWORD = MOVE input: int[-208923|0xfffffffffffccfe5]  <||@
  Comment 1697 502 JUMP ~[] destination: B45 -> B47  <||@
  Comment 1699 block B87 null  <||@
  Comment 1699 914 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1699 916 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1704 918 MOV [r15|QWORD + 668] y: -191507 size: DWORD  <||@
  Comment 1715 920 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1722 922 DEOPT info [bci:52, 2]  <||@
  Comment 1722 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1727 [r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |r13|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3          |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |r10|DWORD  |-  |-  |-  |-   <||@
  Comment 1728 block B13 null  <||@
  Comment 1728 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1728 192 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1733 194 MOV [r15|QWORD + 668] y: -188683 size: DWORD  <||@
  Comment 1744 196 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1751 198 DEOPT info [bci:43, 2]  <||@
  Comment 1751 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1756 [r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3          |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |r10|DWORD  |-  |-  |-  |-   <||@
  Comment 1757 block B79 null  <||@
  Comment 1757 854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1757 856 r10|DWORD = MOVE input: int[-219931|0xfffffffffffca4e5]  <||@
  Comment 1763 858 JUMP ~[] destination: B79 -> B81  <||@
  Comment 1765 block B84 null  <||@
  Comment 1765 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1765 892 r11|DWORD = MOVE input: int[-199195|0xfffffffffffcf5e5]  <||@
  Comment 1771 896 JUMP ~[] destination: B84 -> B86  <||@
  Comment 1771 block B86 null  <||@
  Comment 1771 906 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1771 902 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1776 908 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1783 910 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1790 912 DEOPT info [bci:64, 2]  <||@
  Comment 1790 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1795 [r13:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1         |2 
     locals:  |-         |-         |- 
     stack:   |r8|DWORD  |r9|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3          |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |r10|DWORD  |-  |-  |-  |-   <||@
  Comment 1796 block B10 null  <||@
  Comment 1796 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 148 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1801 150 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1804 152 MOV [r15|QWORD + 668] y: -184339 size: DWORD  <||@
  Comment 1815 154 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1822 156 DEOPT info [bci:0]  <||@
  Comment 1822 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1827 [rdx:0, r13:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2               |3          |4  |5  |6  |7 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |stack:48|DWORD  |r10|DWORD  |-  |-  |-  |-   <||@
  Comment 1828 block B76 null  <||@
  Comment 1828 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1828 826 stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1832 828 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259]  <||@
  Comment 1832 {Object[d.a@500962259]}  <||@
  Comment 1842 830 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1845 832 r10|DWORD = MOVE input: int[-260412|0xfffffffffffc06c4]  <||@
  Comment 1851 838 JUMP ~[] destination: B76 -> B77  <||@
  Comment 1851 block B77 null  <||@
  Comment 1851 840 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1851 836 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1855 842 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1862 844 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1869 846 DEOPT info [bci:41]  <||@
  Comment 1869 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1874 [r13:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0             |1  |2          |3  |4  |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |rcx|DWORD  |-  |-  |rax|DWORD  |-  |-   <||@
  Comment 1875 block B78 null  <||@
  Comment 1875 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1875 850 r10|DWORD = MOVE input: int[-223259|0xfffffffffffc97e5]  <||@
  Comment 1881 852 JUMP ~[] destination: B78 -> B81  <||@
  Comment 1886 block B85 null  <||@
  Comment 1886 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1886 900 r11|DWORD = MOVE input: int[-197395|0xfffffffffffcfced]  <||@
  Comment 1892 904 JUMP ~[] destination: B85 -> B86  <||@
  Comment 1894 block B42 null  <||@
  Comment 1894 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1894 480 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@500962259]  <||@
  Comment 1894 {Object[d.a@500962259]}  <||@
  Comment 1904 482 MOV [r15|QWORD + 668] y: -212796 size: DWORD  <||@
  Comment 1915 484 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1922 486 DEOPT info [bci:19, 38]  <||@
  Comment 1922 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1927 [r13:0]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 19, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r13|QWORD[.]  |rcx|DWORD  |r11|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38, duringCall: true, rethrow: false]
              |0             |1  |2               |3  |4  |5          |6  |7 
     locals:  |r13|QWORD[.]  |-  |stack:48|DWORD  |-  |-  |rax|DWORD  |-  |-   <||@
  Comment 1928 block B75 null  <||@
  Comment 1928 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1928 816 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1938 818 r10|DWORD = MOVE input: int[-260635|0xfffffffffffc05e5]  <||@
  Comment 1944 822 JUMP ~[] destination: B75 -> B77  <||@
  Comment 1946 block B83 null  <||@
  Comment 1946 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1946 884 r11|DWORD = MOVE input: int[-201755|0xfffffffffffcebe5]  <||@
  Comment 1952 888 JUMP ~[] destination: B83 -> B86  <||@
  Comment 1957 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1957 4  <||@
  Comment 1963 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1963 5  <||@
  HexCodeFile>>> <|@
end_nmethod
