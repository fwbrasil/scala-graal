begin_compilation
  name " HotSpotCompilation-9397[org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(Object)]"
  method "HotSpotCompilation-9397[org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(Object)]"
  date 1527005213036
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1239 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1239  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?319 ?107 ?92 ?387 ?410 ?172 ?23 ?1079 ?1078 v1275 ?1077 ?536 v708 v726 v1274 v1279 ?514 ?266 ?83 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1239 a1260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
=== Succesors ===
next: v66 
=== Usages ===
a567 v595 v808 v810 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1274 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
value: a1239 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1239  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i134 i252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:337) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 v24 i175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 i247 i237 i210 i416 i205 i182 i380 i381 i501 i502 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 v203 v233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 12]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 i322 v402 i104 i504 i379 v401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i99 i289 i544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1094 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 v1181 v1125 v1153 v1165 v1107 v1141 v1117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a809 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v810 v819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1248 a1244 a1252 a1268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a807 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v808 v820 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:307) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 v330 v224 v283 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1240 a1242 a1246 a1263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v586 ?107 ?387 ?172 ?23 v733 v726 v598 v572 v1305 v141 v729 v708 ?410 v1304 v1306 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 335
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - 
=== Succesors ===
=== Usages ===
?83 ?536 ?92 ?339 ?275 ?266 ?514 ?1077 ?1078 ?1079 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - -  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 335
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - 
=== Succesors ===
=== Usages ===
v1097 v1304 v1305 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7064097688878498
=== Inputs ===
condition: v595 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
a1239 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v595 #trueSuccessor: v64 #falseSuccessor: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1304 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: i535 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: i535  <|@  <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@726e62c9
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i535 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?1077 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 - - 
=== Succesors ===
=== Usages ===
i535 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i535 <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v572 
stateDuring: ?1077 
=== Succesors ===
next: a1240 
=== Usages ===
?536 i543 i544 i521 i274 
=== Predecessor ===
v1304 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v572 stateDuring: ?1077 #next: a1240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
=== Succesors ===
next: i1241 
=== Usages ===
a576 v1276 
=== Predecessor ===
i535 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 #next: i1241  <|@  <|@
tid ?536 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 - - i535 
=== Succesors ===
=== Usages ===
i1241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - - i535  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1240 
=== Succesors ===
=== Usages ===
i1241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?536 
guard: - 
address: v1276 
=== Succesors ===
next: v542 
=== Usages ===
v539 i1087 
=== Predecessor ===
a1240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?536 guard: - address: v1276 #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1241 
y: i110 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1241 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid a576 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1240 
=== Succesors ===
=== Usages ===
a427 a522 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1240  <|@  <|@
f <@~|@floating>@ <|@
tid i544 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i535 
y: i98 
=== Succesors ===
=== Usages ===
i543 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i535 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid i543 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32
=== Inputs ===
x: i535 
y: i544 
=== Succesors ===
=== Usages ===
i528 i278 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i535 y: i544  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v539 
=== Succesors ===
trueSuccessor: v540 
falseSuccessor: v541 
=== Usages ===
=== Predecessor ===
i1241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v539 #trueSuccessor: v540 #falseSuccessor: v541  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602932431886806378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595590265099889163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1239 
y: a807 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1239 y: a807  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.8855350555757266
=== Inputs ===
condition: v808 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v808 #trueSuccessor: v74 #falseSuccessor: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1305 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: i91 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: i91  <|@  <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@1fbc3468
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?1078 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 - - 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v586 
stateDuring: ?1078 
=== Succesors ===
next: a1242 
=== Usages ===
?92 i274 i288 i289 i521 
=== Predecessor ===
v1305 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v586 stateDuring: ?1078 #next: a1242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
=== Succesors ===
next: i1243 
=== Usages ===
a588 v1277 
=== Predecessor ===
i91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 #next: i1243  <|@  <|@
tid ?92 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 - - i91 
=== Succesors ===
=== Usages ===
i1243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - - i91  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1242 
=== Succesors ===
=== Usages ===
i1243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?92 
guard: - 
address: v1277 
=== Succesors ===
next: v286 
=== Usages ===
v283 i1087 
=== Predecessor ===
a1242 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?92 guard: - address: v1277 #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1243 
y: i110 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1243 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid a588 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1242 
=== Succesors ===
=== Usages ===
a427 a522 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1242  <|@  <|@
f <@~|@floating>@ <|@
tid i289 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i91 
y: i98 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i91 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32
=== Inputs ===
x: i91 
y: i289 
=== Succesors ===
=== Usages ===
i278 i528 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i91 y: i289  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
i1243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v284 #falseSuccessor: v285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v513  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v512 
values: i91 i535 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v512 values: i91 i535  <|@  <|@
f <@~|@floating>@ <|@
tid a522 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v512 
values: a588 a576 
=== Succesors ===
=== Usages ===
a428 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v512 values: a588 a576  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v512 
values: i288 i543 
=== Succesors ===
=== Usages ===
i348 i503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v512 values: i288 i543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v513 v515 
=== Succesors ===
next: a1244 
=== Usages ===
i521 a522 i528 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v513 v515 #next: a1244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
=== Succesors ===
next: i1245 
=== Usages ===
a616 v1281 
=== Predecessor ===
v512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1279 #next: i1245  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 - - i521 
=== Succesors ===
=== Usages ===
i1245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - - i521  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1244 
=== Succesors ===
=== Usages ===
i1245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1245 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v1281 
=== Succesors ===
next: v505 
=== Usages ===
i504 i341 
=== Predecessor ===
a1244 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v1281 #next: v505  <|@  <|@
f <@~|@floating>@ <|@
tid i504 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1245 
y: i11 
=== Succesors ===
=== Usages ===
i503 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1245 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32
=== Inputs ===
x: i504 
y: i528 
=== Succesors ===
=== Usages ===
i502 i352 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i504 y: i528  <|@  <|@
f <@~|@floating>@ <|@
tid i502 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i503 
y: i10 
=== Succesors ===
=== Usages ===
i501 i367 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i503 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i501 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i502 
y: i10 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i502 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid a616 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a1244 
=== Succesors ===
=== Usages ===
a344 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
i1245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v267  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1239 
y: a809 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1239 y: a809  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v810 
=== Succesors ===
trueSuccessor: v900 
falseSuccessor: v898 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v810 #trueSuccessor: v900 #falseSuccessor: v898  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1097 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1097  <|@  <|@
f <@~|@floating>@ <|@
tid i1101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152083
stableDimension: 0
stamp: i32 [-152083] ⇊00000000fffdaded ⇈00000000fffdaded
stampKind: i32
value: int[-152083|0xfffffffffffdaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1101 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1101 speculation: a1094  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i82 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i82  <|@  <|@
f <@~|@floating>@ <|@
tid a567 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a1239 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1239  <|@  <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@12a7d719
stamp: void
targetMethod: HotSpotMethod<Equivalence.hashCode(Object)>
=== Inputs ===
arguments: a567 a2 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a567 a2  <|@  <|@
tid ?1079 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 - - 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
bci: 40
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Equivalence.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v598 
stateDuring: ?1079 
=== Succesors ===
next: a1246 
=== Usages ===
?83 i274 i100 i99 
=== Predecessor ===
v898 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v598 stateDuring: ?1079 #next: a1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1246 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
=== Succesors ===
next: i1247 
=== Usages ===
a600 v1278 
=== Predecessor ===
i82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 #next: i1247  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 - - i82 
=== Succesors ===
=== Usages ===
v1117 i1247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - - i82  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1246 
=== Succesors ===
=== Usages ===
i1247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?83 
guard: - 
address: v1278 
=== Succesors ===
next: v227 
=== Usages ===
v224 i1087 
=== Predecessor ===
a1246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?83 guard: - address: v1278 #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1247 
y: i110 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1247 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid a600 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1246 
=== Succesors ===
=== Usages ===
a428 a427 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1246  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i82 
y: i98 
=== Succesors ===
=== Usages ===
i100 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i82 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32
=== Inputs ===
x: i82 
y: i99 
=== Succesors ===
=== Usages ===
i348 i278 i378 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i82 y: i99  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
i1247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v225 #falseSuccessor: v226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1248 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
=== Succesors ===
next: v909 
=== Usages ===
a609 v610 v1280 
=== Predecessor ===
v225 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1279 #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
value: a1248 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1248  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v610 
=== Succesors ===
trueSuccessor: v908 
falseSuccessor: v906 
=== Usages ===
=== Predecessor ===
a1248 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v610 #trueSuccessor: v908 #falseSuccessor: v906  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1117  <|@  <|@
f <@~|@floating>@ <|@
tid i1119 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -156427
stableDimension: 0
stamp: i32 [-156427] ⇊00000000fffd9cf5 ⇈00000000fffd9cf5
stampKind: i32
value: int[-156427|0xfffffffffffd9cf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?83 
actionAndReason: i1119 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?83 actionAndReason: i1119 speculation: a1094  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1249 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1249  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1248 
=== Succesors ===
=== Usages ===
i1249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1249 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1280 
=== Succesors ===
next: v336 
=== Usages ===
i341 i379 
=== Predecessor ===
v906 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1280 #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1249 
y: i11 
=== Succesors ===
=== Usages ===
i378 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1249 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32
=== Inputs ===
x: i100 
y: i379 
=== Succesors ===
=== Usages ===
i352 i381 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i100 y: i379  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i378 
y: i10 
=== Succesors ===
=== Usages ===
i380 i367 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i378 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i381 
y: i10 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i381 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid a609 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a1248 
=== Succesors ===
=== Usages ===
a344 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1248  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
i1249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v334 
values: i1249 i1245 
=== Succesors ===
=== Usages ===
?275 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i1249 i1245  <|@  <|@
f <@~|@floating>@ <|@
tid a344 <|@
d <@d|@=== Debug Properties ===
stamp: a# [B
valueDescription: a -
=== Inputs ===
merge: v334 
values: a609 a616 
=== Succesors ===
=== Usages ===
v1284 v1283 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: a609 a616  <|@  <|@
f <@~|@floating>@ <|@
tid a428 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v334 
values: a600 a522 
=== Succesors ===
=== Usages ===
a432 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: a600 a522  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v334 
values: i100 i528 
=== Succesors ===
=== Usages ===
?275 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i100 i528  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v334 
values: i378 i503 
=== Succesors ===
=== Usages ===
i392 v1284 v635 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i378 i503  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
valueDescription: i32
=== Inputs ===
merge: v334 
values: i380 i501 
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i380 i501  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v334 
values: i381 i502 
=== Succesors ===
=== Usages ===
i395 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i381 i502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v336 v505 
=== Succesors ===
next: i1250 
=== Usages ===
i341 a344 a428 i348 i352 i364 i367 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v336 v505 #next: i1250  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a344 
index: - 
=== Succesors ===
=== Usages ===
i1250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1250 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
=== Succesors ===
next: v917 
=== Usages ===
v635 
=== Predecessor ===
v334 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1283 #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i352 
y: i1250 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i352 y: i1250  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v635 
=== Succesors ===
trueSuccessor: v914 
falseSuccessor: v916 
=== Usages ===
=== Predecessor ===
i1250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v635 #trueSuccessor: v914 #falseSuccessor: v916  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1251 
=== Usages ===
i1251 
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1251  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a344 
index: i352 
=== Succesors ===
=== Usages ===
i1251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: i352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1251 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v914 
address: v1284 
=== Succesors ===
next: v400 
=== Usages ===
i644 i812 
=== Predecessor ===
v914 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v914 address: v1284 #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid i644 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1251 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1251  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
rawvalue: 255
stableDimension: 0
stamp: i32 [255] ⇊00000000000000ff ⇈00000000000000ff
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:337) [bci: 16]
stamp: void
=== Inputs ===
x: i644 
y: i117 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i644 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:337) [bci: 16]
stamp: void
trueSuccessorProbability: 3.6476064753699716E-4
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v399 
=== Usages ===
=== Predecessor ===
i1251 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v398 #falseSuccessor: v399  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4553666385632288877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:356) [bci: 106]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604907115545472838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid i812 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1251 
=== Succesors ===
=== Usages ===
i390 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1251  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1303 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1303  <|@  <|@
tid ?275 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 401
stackSize: 2
=== Inputs ===
outerFrameState: ?107 
values: - - - i348 i341 
=== Succesors ===
=== Usages ===
v1303 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - i348 i341  <|@  <|@
f <@*|@fixed>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 636
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?275 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?275  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B3" 
    successors "B22" "B81" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a427 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v264 
values: a600 a588 a576 
=== Succesors ===
=== Usages ===
a432 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v264 values: a600 a588 a576  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v264 
values: i82 i91 i535 
=== Succesors ===
=== Usages ===
?266 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v264 values: i82 i91 i535  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v264 
values: i100 i288 i543 
=== Succesors ===
=== Usages ===
?339 i105 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v264 values: i100 i288 i543  <|@  <|@
f <@~|@floating>@ <|@
tid i1087 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v264 
values: i1247 i1243 i1241 
=== Succesors ===
=== Usages ===
v123 v233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v264 values: i1247 i1243 i1241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v265 v267 v545 
=== Succesors ===
next: v921 
=== Usages ===
a427 i274 i278 i1087 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v265 v267 v545 #next: v921  <|@  <|@
tid ?266 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 - i274 
=== Succesors ===
=== Usages ===
v1125 i1253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - i274  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1087 
y: i122 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1087 y: i122  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v918 
falseSuccessor: v920 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v918 #falseSuccessor: v920  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B79" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1252 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
=== Succesors ===
next: i1253 
=== Usages ===
v1286 v1285 v1282 
=== Predecessor ===
v918 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1279 #next: i1253  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1252 
=== Succesors ===
=== Usages ===
i1253 i1254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1253 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?266 
guard: - 
address: v1282 
=== Succesors ===
next: v929 
=== Usages ===
i237 
=== Predecessor ===
a1252 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?266 guard: - address: v1282 #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1253 
y: i10 
=== Succesors ===
=== Usages ===
?339 i104 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1253 y: i10  <|@  <|@
tid ?339 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 401
stackSize: 2
=== Inputs ===
outerFrameState: ?107 
values: - - - i278 i237 
=== Succesors ===
=== Usages ===
v1153 i1254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - i278 i237  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1087 
y: i122 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1087 y: i122  <|@  <|@
f <@*|@fixed>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v123 
=== Succesors ===
trueSuccessor: v926 
falseSuccessor: v928 
=== Usages ===
=== Predecessor ===
i1253 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v123 #trueSuccessor: v926 #falseSuccessor: v928  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1254 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1254 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?339 
guard: - 
address: v1282 
=== Succesors ===
next: v937 
=== Usages ===
v651 v661 
=== Predecessor ===
v926 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?339 guard: - address: v1282 #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i237 
y: i11 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i237 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32
=== Inputs ===
x: i104 
y: i278 
=== Succesors ===
=== Usages ===
i392 i205 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i104 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i105 
y: i10 
=== Succesors ===
=== Usages ===
v651 i210 i395 v1285 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i105 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i205 
y: i1254 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i205 y: i1254  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v936 
=== Usages ===
=== Predecessor ===
i1254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v934 #falseSuccessor: v936  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
i1256 
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i205 
y: i10 
=== Succesors ===
=== Usages ===
v661 i394 v1286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i205 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i210 
y: i1254 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i210 y: i1254  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v661 
=== Succesors ===
trueSuccessor: v938 
falseSuccessor: v940 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v661 #trueSuccessor: v938 #falseSuccessor: v940  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1255 
=== Usages ===
i1255 
=== Predecessor ===
v941 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1255  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i210 
index: a1252 
=== Succesors ===
=== Usages ===
i1255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i210 index: a1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1255 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v938 
address: v1286 
=== Succesors ===
next: i1256 
=== Usages ===
i816 
=== Predecessor ===
v938 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v938 address: v1286 #next: i1256  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i205 
index: a1252 
=== Succesors ===
=== Usages ===
i1256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i205 index: a1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1256 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v934 
address: v1285 
=== Succesors ===
next: v17 
=== Usages ===
i814 
=== Predecessor ===
i1255 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v934 address: v1285 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid i816 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1255 
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1255  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: i32 [0 - 65280] ⇈000000000000ff00
=== Inputs ===
x: i816 
y: i133 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i816 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i814 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1256 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1256  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i134 
y: i814 
=== Succesors ===
=== Usages ===
v14 i390 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i134 y: i814  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:337) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i13 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i135 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:337) [bci: 16]
stamp: void
trueSuccessorProbability: 3.6476064753699716E-4
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
i1256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v15 #falseSuccessor: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4546419961690210543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:356) [bci: 106]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4598215655483329752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
v16 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B18" 
    successors "B29" "B75" 
    xhandlers
    flags 
    probability 4607179133328184754
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i390 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v385 
values: i135 i812 
=== Succesors ===
=== Usages ===
i12 ?387 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v385 values: i135 i812  <|@  <|@
f <@~|@floating>@ <|@
tid a432 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v385 
values: a427 a428 
=== Succesors ===
=== Usages ===
v1290 v1289 a412 v1287 v1288 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v385 values: a427 a428  <|@  <|@
f <@~|@floating>@ <|@
tid i392 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v385 
values: i105 i352 
=== Succesors ===
=== Usages ===
v1297 ?387 v751 ?23 ?172 v1295 v771 ?410 ?319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v385 values: i105 i352  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
valueDescription: i32
=== Inputs ===
merge: v385 
values: i210 i364 
=== Succesors ===
=== Usages ===
v1299 v798 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v385 values: i210 i364  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v385 
values: i205 i367 
=== Succesors ===
=== Usages ===
v1298 v788 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v385 values: i205 i367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v386 v388 
=== Succesors ===
next: i1257 
=== Usages ===
i390 a432 i392 i394 i395 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v386 v388 #next: i1257  <|@  <|@
tid ?387 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 336
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i392 - - - - - i390 
=== Succesors ===
=== Usages ===
v1165 i1257 v1306 v1262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i392 - - - - - i390  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a432 
index: - 
=== Succesors ===
=== Usages ===
i1257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a432 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1257 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?387 
guard: - 
address: v1287 
=== Succesors ===
next: v949 
=== Usages ===
v675 v698 v1236 
=== Predecessor ===
v385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?387 guard: - address: v1287 #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 12]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i390 
y: i11 
=== Succesors ===
=== Usages ===
i19 ?23 ?172 ?410 v511 v244 v243 v726 v708 ?319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i390 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i12 
y: i10 
=== Succesors ===
=== Usages ===
v1288 i182 v675 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i12 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i1257 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i19 y: i1257  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v675 
=== Succesors ===
trueSuccessor: v946 
falseSuccessor: v948 
=== Usages ===
=== Predecessor ===
i1257 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v675 #trueSuccessor: v946 #falseSuccessor: v948  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607179133328184754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1258 
=== Usages ===
a1258 
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1258  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a432 
index: i19 
=== Succesors ===
=== Usages ===
a1258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a432 index: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v946 
address: v1288 
=== Succesors ===
next: v144 
=== Usages ===
a684 
=== Predecessor ===
v946 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v946 address: v1288 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid a684 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1258 
=== Succesors ===
=== Usages ===
v733 v141 v729 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1258  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a684 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a684  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:340) [bci: 38]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i19 
y: i10 
=== Succesors ===
=== Usages ===
v1292 v1290 v1289 v716 v698 v1236 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1233 v1234 v1235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v142 
falseSuccessor: v143 
=== Usages ===
=== Predecessor ===
a1258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v142 #falseSuccessor: v143  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591557354072086653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i1257 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i182 y: i1257  <|@  <|@
f <@*|@fixed>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1236 
=== Succesors ===
trueSuccessor: v950 
falseSuccessor: v952 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1236 #trueSuccessor: v950 #falseSuccessor: v952  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591557354072086653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1259 
=== Usages ===
a1259 
=== Predecessor ===
v953 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1259  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a432 
index: i182 
=== Succesors ===
=== Usages ===
a1259 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a432 index: i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1259 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v950 
address: v1289 
=== Succesors ===
next: v411 
=== Usages ===
a694 
=== Predecessor ===
v950 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v950 address: v1289 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid a694 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1259 
=== Succesors ===
=== Usages ===
a414 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1259  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
a1259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid i1169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -175899
stableDimension: 0
stamp: i32 [-175899] ⇊00000000fffd50e5 ⇈00000000fffd50e5
stampKind: i32
value: int[-175899|0xfffffffffffd50e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v952 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B39" 
    xhandlers
    flags 
    probability 4606317516652069538
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1260 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1260  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1260 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
=== Succesors ===
next: v150 
=== Usages ===
a696 v730 v819 v820 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1274 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
value: a1260 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1260  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v730 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
a1260 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v730 #trueSuccessor: v148 #falseSuccessor: v149  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v957 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v957  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i1257 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i182 y: i1257  <|@  <|@
f <@*|@fixed>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v698 
=== Succesors ===
trueSuccessor: v954 
falseSuccessor: v956 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v698 #trueSuccessor: v954 #falseSuccessor: v956  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1261 
=== Usages ===
a1261 
=== Predecessor ===
v957 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1261  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a432 
index: i182 
=== Succesors ===
=== Usages ===
a1261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a432 index: i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1261 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v954 
address: v1290 
=== Succesors ===
next: v1262 
=== Usages ===
a706 v1300 
=== Predecessor ===
v954 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v954 address: v1290 #next: v1262  <|@  <|@
f <@~|@floating>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1261 
=== Succesors ===
=== Usages ===
v1262 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?387 
guard: - 
address: v1300 
=== Succesors ===
next: v1205 
=== Usages ===
v1233 
=== Predecessor ===
a1261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?387 guard: - address: v1300 #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1262 
y: v1232 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1262 y: v1232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1233 
=== Succesors ===
trueSuccessor: v1203 
falseSuccessor: v1202 
=== Usages ===
=== Predecessor ===
v1262 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1233 #trueSuccessor: v1203 #falseSuccessor: v1202  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: i466 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i466  <|@  <|@
f <@~|@floating>@ <|@
tid a706 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1261 
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1261  <|@  <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5f8d96b
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)>
=== Inputs ===
arguments: a1 a2 a706 i12 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 a706 i12  <|@  <|@
tid ?1081 <|@
d <@d|@=== Debug Properties ===
bci: 102
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 351
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i466 <|@
d <@d|@=== Debug Properties ===
bci: 102
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findAndRemoveWithCollision
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v708 
stateDuring: ?1081 
=== Succesors ===
next: v468 
=== Usages ===
v468 
=== Predecessor ===
v1203 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v708 stateDuring: ?1081 #next: v468  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 105]
stamp: void
=== Inputs ===
result: i466 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i466 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i466 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1220 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid i1175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -181011
stableDimension: 0
stamp: i32 [-181011] ⇊00000000fffd3ced ⇈00000000fffd3ced
stampKind: i32
value: int[-181011|0xfffffffffffd3ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v1202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1172 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1172  <|@  <|@
f <@~|@floating>@ <|@
tid i1173 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -178971
stableDimension: 0
stamp: i32 [-178971] ⇊00000000fffd44e5 ⇈00000000fffd44e5
stampKind: i32
value: int[-178971|0xfffffffffffd44e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v956 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1260 
y: a807 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1260 y: a807  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 339
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i392 i12 - - - - 
=== Succesors ===
=== Usages ===
?1082 ?1080 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i392 i12 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v820 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v153 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v820 #trueSuccessor: v158 #falseSuccessor: v153  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580722999714720334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1306 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?387 
object: a2 
=== Succesors ===
next: i162 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?387 object: a2 #next: i162  <|@  <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4819b37
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a684 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a684  <|@  <|@
tid ?1080 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?172 
values: - - - 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?172 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v729 
stateDuring: ?1080 
=== Succesors ===
next: v176 
=== Usages ===
i175 
=== Predecessor ===
v1306 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v729 stateDuring: ?1080 #next: v176  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
i162 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4574868613586214169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1260 
y: a809 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1260 y: a809  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v819 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v819 #trueSuccessor: v154 #falseSuccessor: v159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4535579446752114705
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
v154 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4574849245533021217
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i167 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i167  <|@  <|@
f <@~|@floating>@ <|@
tid a696 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a1260 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1260  <|@  <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@7ae0e0bb
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a696 a2 a684 
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a696 a2 a684  <|@  <|@
tid ?1082 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?172 
values: - - - 
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?172 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v733 
stateDuring: ?1082 
=== Succesors ===
next: v177 
=== Usages ===
i175 
=== Predecessor ===
v159 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v733 stateDuring: ?1082 #next: v177  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
i167 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" "B42" 
    successors "B45" "B73" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v173 
values: i162 i167 i13 
=== Succesors ===
=== Usages ===
?23 v24 i416 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v173 values: i162 i167 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v176 v177 v179 
=== Succesors ===
next: a1263 
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v176 v177 v179 #next: a1263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
=== Succesors ===
next: i1264 
=== Usages ===
a710 v1291 
=== Predecessor ===
v173 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 #next: i1264  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 339
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i392 i12 - - - - i175 
=== Succesors ===
=== Usages ===
v1107 i1264 v1266 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i392 i12 - - - - i175  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1263 
=== Succesors ===
=== Usages ===
i1264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?23 
guard: - 
address: v1291 
=== Succesors ===
next: v973 
=== Usages ===
v716 
=== Predecessor ===
a1263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?23 guard: - address: v1291 #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i1264 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i182 y: i1264  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v716 
=== Succesors ===
trueSuccessor: v970 
falseSuccessor: v972 
=== Usages ===
=== Predecessor ===
i1264 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v716 #trueSuccessor: v970 #falseSuccessor: v972  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1265 
=== Usages ===
a1265 
=== Predecessor ===
v973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1265  <|@  <|@
f <@~|@floating>@ <|@
tid a710 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1263 
=== Succesors ===
=== Usages ===
v1292 a412 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1263  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a710 
index: i182 
=== Succesors ===
=== Usages ===
a1265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v970 
address: v1292 
=== Succesors ===
next: v27 
=== Usages ===
a724 v1301 
=== Predecessor ===
v970 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v970 address: v1292 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid a724 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1265 
=== Succesors ===
=== Usages ===
v726 a414 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1265  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i175 
y: i13 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i175 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stamp: void
trueSuccessorProbability: 0.06941669128251464
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
a1265 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v25 #falseSuccessor: v26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4565551245696639902
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1266 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1266  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1265 
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?23 
guard: - 
address: v1301 
=== Succesors ===
next: v1215 
=== Usages ===
v1234 
=== Predecessor ===
v25 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?23 guard: - address: v1301 #next: v1215  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1266 
y: v1232 
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1266 y: v1232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1234 
=== Succesors ===
trueSuccessor: v1213 
falseSuccessor: v1212 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1234 #trueSuccessor: v1213 #falseSuccessor: v1212  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4565551245696639902
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: i58 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i58  <|@  <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5653ffe1
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)>
=== Inputs ===
arguments: a1 a2 a724 i12 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 a724 i12  <|@  <|@
tid ?1083 <|@
d <@d|@=== Debug Properties ===
bci: 102
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 351
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
bci: 102
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findAndRemoveWithCollision
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v726 
stateDuring: ?1083 
=== Succesors ===
next: v60 
=== Usages ===
v60 
=== Predecessor ===
v1213 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v726 stateDuring: ?1083 #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 105]
stamp: void
=== Inputs ===
result: i58 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i58 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i58 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1221 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1221  <|@  <|@
f <@~|@floating>@ <|@
tid i1111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -185619
stableDimension: 0
stamp: i32 [-185619] ⇊00000000fffd2aed ⇈00000000fffd2aed
stampKind: i32
value: int[-185619|0xfffffffffffd2aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
v1212 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4582283371147997018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:340) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
v26 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B31" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4593213891506979924
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a412 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v408 
values: a710 a432 
=== Succesors ===
=== Usages ===
v1296 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v408 values: a710 a432  <|@  <|@
f <@~|@floating>@ <|@
tid a414 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v408 
values: a724 a694 
=== Succesors ===
=== Usages ===
v1302 v1293 v1049 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v408 values: a724 a694  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v408 
values: i175 i10 
=== Succesors ===
=== Usages ===
?410 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v408 values: i175 i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v409 v411 
=== Succesors ===
next: i1267 
=== Usages ===
a412 a414 i416 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v409 v411 #next: i1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a412 
index: - 
=== Succesors ===
=== Usages ===
i1267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1267 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1296 
=== Succesors ===
next: a1268 
=== Usages ===
v330 v203 
=== Predecessor ===
v408 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1296 #next: a1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1268 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
=== Succesors ===
next: v1052 
=== Usages ===
v1298 v1299 v1294 v1295 v1297 
=== Predecessor ===
i1267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1279 #next: v1052  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1268 
=== Succesors ===
=== Usages ===
i1271 i1272 i1273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1268  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1267 
y: i110 
=== Succesors ===
=== Usages ===
v333 v195 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1267 y: i110  <|@  <|@
tid ?410 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 339
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i392 i12 - - - - i416 
=== Succesors ===
=== Usages ===
v1181 i1272 i1271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i392 i12 - - - - i416  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
value: a414 
=== Succesors ===
=== Usages ===
v1052 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1049 
=== Succesors ===
trueSuccessor: v1051 
falseSuccessor: v1050 
=== Usages ===
=== Predecessor ===
a1268 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1049 #trueSuccessor: v1051 #falseSuccessor: v1050  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 4577993198456105435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v1052 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
v1051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B58" 
    xhandlers
    flags 
    probability 4592358944422598425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1269 
=== Usages ===
=== Predecessor ===
v1052 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1269  <|@  <|@
f <@~|@floating>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a414 
index: - 
=== Succesors ===
=== Usages ===
v1269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a414 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1302 
=== Succesors ===
next: v1195 
=== Usages ===
v1235 
=== Predecessor ===
v1050 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1302 #next: v1195  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1269 
y: v1232 
=== Succesors ===
=== Usages ===
v1195 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1269 y: v1232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
trueSuccessorProbability: 0.12575621779072377
=== Inputs ===
condition: v1235 
=== Succesors ===
trueSuccessor: v1193 
falseSuccessor: v1192 
=== Usages ===
=== Predecessor ===
v1269 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1235 #trueSuccessor: v1193 #falseSuccessor: v1192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B57" 
    xhandlers
    flags 
    probability 4578894695426551180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1270 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1270  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a414 
index: - 
=== Succesors ===
=== Usages ===
i1270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a414 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1270 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:344) [bci: 63]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1293 
=== Succesors ===
next: v195 
=== Usages ===
i322 i247 
=== Predecessor ===
v1193 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1293 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i247 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 73]
stamp: i32
=== Inputs ===
x: i1270 
y: i10 
=== Succesors ===
=== Usages ===
i252 i250 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1270 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
resultBits: 8
stamp: i8
=== Inputs ===
value: i247 
=== Succesors ===
=== Usages ===
i1084 v759 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i247  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 0.7172659508813088
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
i1270 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v193 #falseSuccessor: v194  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4576706030330233616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1271 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1271 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?410 
guard: - 
address: v1294 
=== Succesors ===
next: v989 
=== Usages ===
v751 
=== Predecessor ===
v193 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?410 guard: - address: v1294 #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i392 
y: i1271 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i392 y: i1271  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v986 
falseSuccessor: v988 
=== Usages ===
=== Predecessor ===
i1271 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v986 #falseSuccessor: v988  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 4576706030330233616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v759 
=== Usages ===
v759 
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i392 
index: a1268 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i392 index: a1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v986 
address: v1295 
value: i250 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v986 address: v1295 value: i250 stateAfter: - lastLocationAccess: - #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i12 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i12 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1188 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1188  <|@  <|@
f <@~|@floating>@ <|@
tid i1189 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -192539
stableDimension: 0
stamp: i32 [-192539] ⇊00000000fffd0fe5 ⇈00000000fffd0fe5
stampKind: i32
value: int[-192539|0xfffffffffffd0fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1179 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
v988 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B65" 
    xhandlers
    flags 
    probability 4570901082911582702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i247 
y: i133 
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i247 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i257 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
resultBits: 8
stamp: i8
=== Inputs ===
value: i252 
=== Succesors ===
=== Usages ===
i1085 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i252  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 4591391310216911208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
v1192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    probability 4592246257301292707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1060 v1196 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1060 v1196 #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i825 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v779 i1084 i1085 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 0.7172659508813088
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v331 #falseSuccessor: v332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4590102613928838395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1272 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1272 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?410 
guard: - 
address: v1294 
=== Succesors ===
next: v997 
=== Usages ===
v771 
=== Predecessor ===
v331 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?410 guard: - address: v1294 #next: v997  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i392 
y: i1272 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i392 y: i1272  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v771 
=== Succesors ===
trueSuccessor: v994 
falseSuccessor: v996 
=== Usages ===
=== Predecessor ===
i1272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v771 #trueSuccessor: v994 #falseSuccessor: v996  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 4590102613928838395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
v779 
=== Predecessor ===
v997 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i392 
index: a1268 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i392 index: a1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v994 
address: v1297 
value: i825 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v994 address: v1297 value: i825 stateAfter: - lastLocationAccess: - #next: v511  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i12 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i12 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1186 
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1186  <|@  <|@
f <@~|@floating>@ <|@
tid i1187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -197659
stableDimension: 0
stamp: i32 [-197659] ⇊00000000fffcfbe5 ⇈00000000fffcfbe5
stampKind: i32
value: int[-197659|0xfffffffffffcfbe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1179 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
v996 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1179 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-197659 - -191243] ⇊00000000fffc00e5 ⇈00000000fffdfff5
valueDescription: i32
=== Inputs ===
merge: v1176 
values: i1187 i1189 
=== Succesors ===
=== Usages ===
v1181 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1176 values: i1187 i1189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1186 v1188 
=== Succesors ===
next: v1181 
=== Usages ===
i1179 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1186 v1188 #next: v1181  <|@  <|@
f <@*|@fixed>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?410 
actionAndReason: i1179 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1176 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?410 actionAndReason: i1179 speculation: a1094  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4584231794898241183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v332 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" "B64" 
    successors "B66" "B71" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i322 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v317 
values: i1270 i11 
=== Succesors ===
=== Usages ===
?319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: i1270 i11  <|@  <|@
f <@~|@floating>@ <|@
tid i1085 <|@
d <@d|@=== Debug Properties ===
stamp: i8
valueDescription: i8
=== Inputs ===
merge: v317 
values: i257 i825 
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: i257 i825  <|@  <|@
f <@~|@floating>@ <|@
tid i1084 <|@
d <@d|@=== Debug Properties ===
stamp: i8
valueDescription: i8
=== Inputs ===
merge: v317 
values: i250 i825 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: i250 i825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v318 v320 
=== Succesors ===
next: v1001 
=== Usages ===
i322 i1085 i1084 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v318 v320 #next: v1001  <|@  <|@
tid ?319 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 346
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i392 i12 - - i322 - 
=== Succesors ===
=== Usages ===
v1141 i1273 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i392 i12 - - i322 -  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1267 
y: i122 
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1267 y: i122  <|@  <|@
f <@*|@fixed>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v998 
falseSuccessor: v1000 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v998 #falseSuccessor: v1000  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1273 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1273 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?319 
guard: - 
address: v1294 
=== Succesors ===
next: v1009 
=== Usages ===
v788 v798 
=== Predecessor ===
v998 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?319 guard: - address: v1294 #next: v1009  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i395 
y: i1273 
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i395 y: i1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v788 
=== Succesors ===
trueSuccessor: v1006 
falseSuccessor: v1008 
=== Usages ===
=== Predecessor ===
i1273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v788 #trueSuccessor: v1006 #falseSuccessor: v1008  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1013 
=== Usages ===
v796 
=== Predecessor ===
v1009 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i394 
y: i1273 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i394 y: i1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v798 
=== Succesors ===
trueSuccessor: v1010 
falseSuccessor: v1012 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v798 #trueSuccessor: v1010 #falseSuccessor: v1012  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v796 
=== Usages ===
v806 
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i395 
index: a1268 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i395 index: a1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1006 
address: v1298 
value: i1084 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1006 address: v1298 value: i1084 stateAfter: - lastLocationAccess: - #next: v806  <|@  <|@
f <@~|@floating>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i394 
index: a1268 
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i394 index: a1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1010 
address: v1299 
value: i1085 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1010 address: v1299 value: i1085 stateAfter: - lastLocationAccess: - #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i12 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i12 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1146 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1146  <|@  <|@
f <@~|@floating>@ <|@
tid i1147 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -204571
stableDimension: 0
stamp: i32 [-204571] ⇊00000000fffce0e5 ⇈00000000fffce0e5
stampKind: i32
value: int[-204571|0xfffffffffffce0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
v1012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1144 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid i1145 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -202011
stableDimension: 0
stamp: i32 [-202011] ⇊00000000fffceae5 ⇈00000000fffceae5
stampKind: i32
value: int[-202011|0xfffffffffffceae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
v1008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1142 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1142  <|@  <|@
f <@~|@floating>@ <|@
tid i1143 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -199699
stableDimension: 0
stamp: i32 [-199699] ⇊00000000fffcf3ed ⇈00000000fffcf3ed
stampKind: i32
value: int[-199699|0xfffffffffffcf3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
v1000 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1139 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-204571 - -199699] ⇊00000000fffce0e5 ⇈00000000fffcfffd
valueDescription: i32
=== Inputs ===
merge: v1136 
values: i1143 i1145 i1147 
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1136 values: i1143 i1145 i1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1142 v1144 v1146 
=== Succesors ===
next: v1141 
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1142 v1144 v1146 #next: v1141  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?319 
actionAndReason: i1139 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1136 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?319 actionAndReason: i1139 speculation: a1094  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1108 
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1108  <|@  <|@
f <@~|@floating>@ <|@
tid i1109 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -183579
stableDimension: 0
stamp: i32 [-183579] ⇊00000000fffd32e5 ⇈00000000fffd32e5
stampKind: i32
value: int[-183579|0xfffffffffffd32e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
v972 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B48" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1105 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-185619 - -182283] ⇊00000000fffd22e5 ⇈00000000fffd3ffd
valueDescription: i32
=== Inputs ===
merge: v1102 
values: i1109 i1111 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1102 values: i1109 i1111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1108 v1221 
=== Succesors ===
next: v1107 
=== Usages ===
i1105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1108 v1221 #next: v1107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?23 
actionAndReason: i1105 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?23 actionAndReason: i1105 speculation: a1094  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1166 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1166  <|@  <|@
f <@~|@floating>@ <|@
tid i1167 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -173083
stableDimension: 0
stamp: i32 [-173083] ⇊00000000fffd5be5 ⇈00000000fffd5be5
stampKind: i32
value: int[-173083|0xfffffffffffd5be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B32" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1163 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-186123 - -171787] ⇊00000000fffd00e5 ⇈00000000fffd7ffd
valueDescription: i32
=== Inputs ===
merge: v1160 
values: i1167 i1169 i1173 i1175 
=== Succesors ===
=== Usages ===
v1165 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1160 values: i1167 i1169 i1173 i1175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1166 v1168 v1172 v1220 
=== Succesors ===
next: v1165 
=== Usages ===
i1163 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1166 v1168 v1172 v1220 #next: v1165  <|@  <|@
f <@*|@fixed>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?387 
actionAndReason: i1163 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?387 actionAndReason: i1163 speculation: a1094  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1158 
=== Usages ===
=== Predecessor ===
v941 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1158  <|@  <|@
f <@~|@floating>@ <|@
tid i1159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -169499
stableDimension: 0
stamp: i32 [-169499] ⇊00000000fffd69e5 ⇈00000000fffd69e5
stampKind: i32
value: int[-169499|0xfffffffffffd69e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1148 
=== Predecessor ===
v940 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid i1157 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -166939
stableDimension: 0
stamp: i32 [-166939] ⇊00000000fffd73e5 ⇈00000000fffd73e5
stampKind: i32
value: int[-166939|0xfffffffffffd73e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1148 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1154 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1154  <|@  <|@
f <@~|@floating>@ <|@
tid i1155 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -165139
stableDimension: 0
stamp: i32 [-165139] ⇊00000000fffd7aed ⇈00000000fffd7aed
stampKind: i32
value: int[-165139|0xfffffffffffd7aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1148 
=== Predecessor ===
v928 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" "B77" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1151 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-169499 - -165139] ⇊00000000fffd60e5 ⇈00000000fffd7bfd
valueDescription: i32
=== Inputs ===
merge: v1148 
values: i1155 i1157 i1159 
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1148 values: i1155 i1157 i1159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1154 v1156 v1158 
=== Succesors ===
next: v1153 
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1154 v1156 v1158 #next: v1153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?339 
actionAndReason: i1151 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1148 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?339 actionAndReason: i1151 speculation: a1094  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid i1127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -159251
stableDimension: 0
stamp: i32 [-159251] ⇊00000000fffd91ed ⇈00000000fffd91ed
stampKind: i32
value: int[-159251|0xfffffffffffd91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?266 
actionAndReason: i1127 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?266 actionAndReason: i1127 speculation: a1094  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1239 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1239  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?319 ?107 ?92 ?387 ?410 ?172 ?23 ?1079 ?1078 v1275 ?1077 ?536 v708 v726 v1274 v1279 ?514 ?266 ?83 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1239 a1260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1239 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
=== Succesors ===
next: v66 
=== Usages ===
a567 v595 v808 v810 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1274 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
value: a1239 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1239  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i134 i252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:337) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 v24 i175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 i247 i237 i210 i416 i205 i182 i380 i381 i501 i502 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
result int[131072|0x20000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 v203 v233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 12]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 i322 v402 i104 i504 i379 v401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i99 i289 i544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1094 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 v1181 v1125 v1153 v1165 v1107 v1141 v1117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a809 <|@
result NarrowOop[Equivalence$3@1213634123] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v810 v819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1248 a1244 a1252 a1268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a807 <|@
result NarrowOop[Equivalence$1@1642007824] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v808 v820 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result int[512|0x200] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:307) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 v330 v224 v283 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1240 a1242 a1246 a1263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v586 ?107 ?387 ?172 ?23 v733 v726 v598 v572 v1305 v141 v729 v708 ?410 v1304 v1306 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 335
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - 
=== Succesors ===
=== Usages ===
?83 ?536 ?92 ?339 ?275 ?266 ?514 ?1077 ?1078 ?1079 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - -  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 335
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - 
=== Succesors ===
=== Usages ===
v1097 v1304 v1305 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7064097688878498
=== Inputs ===
condition: v595 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
a1239 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v595 #trueSuccessor: v64 #falseSuccessor: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@152347c1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1304 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: i535 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: i535  <|@  <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@726e62c9
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i535 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?1077 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 - - 
=== Succesors ===
=== Usages ===
i535 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i535 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v572 
stateDuring: ?1077 
=== Succesors ===
next: a1240 
=== Usages ===
?536 i543 i544 i521 i274 
=== Predecessor ===
v1304 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v572 stateDuring: ?1077 #next: a1240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1240 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
=== Succesors ===
next: i1241 
=== Usages ===
a576 v1276 
=== Predecessor ===
i535 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 #next: i1241  <|@  <|@
tid ?536 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 - - i535 
=== Succesors ===
=== Usages ===
i1241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - - i535  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1240 
=== Succesors ===
=== Usages ===
i1241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1241 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?536 
guard: - 
address: v1276 
=== Succesors ===
next: v542 
=== Usages ===
v539 i1087 
=== Predecessor ===
a1240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?536 guard: - address: v1276 #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1241 
y: i110 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1241 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid a576 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1240 
=== Succesors ===
=== Usages ===
a427 a522 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1240  <|@  <|@
f <@~|@floating>@ <|@
tid i544 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i535 
y: i98 
=== Succesors ===
=== Usages ===
i543 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i535 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid i543 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32
=== Inputs ===
x: i535 
y: i544 
=== Succesors ===
=== Usages ===
i528 i278 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i535 y: i544  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v539 
=== Succesors ===
trueSuccessor: v540 
falseSuccessor: v541 
=== Usages ===
=== Predecessor ===
i1241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v539 #trueSuccessor: v540 #falseSuccessor: v541  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v3|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR v3|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = XOR (x: v3|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602932431886806378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD, v6|QWORD[.], v8|DWORD] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595590265099889163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.], v3|DWORD, v8|DWORD, v5|DWORD] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1239 
y: a807 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1239 y: a807  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.8855350555757266
=== Inputs ===
condition: v808 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v808 #trueSuccessor: v74 #falseSuccessor: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1305 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: i91 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: i91  <|@  <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@1fbc3468
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?1078 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 - - 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v586 
stateDuring: ?1078 
=== Succesors ===
next: a1242 
=== Usages ===
?92 i274 i288 i289 i521 
=== Predecessor ===
v1305 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v586 stateDuring: ?1078 #next: a1242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1242 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
=== Succesors ===
next: i1243 
=== Usages ===
a588 v1277 
=== Predecessor ===
i91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 #next: i1243  <|@  <|@
tid ?92 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 - - i91 
=== Succesors ===
=== Usages ===
i1243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - - i91  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
result [v10|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1242 
=== Succesors ===
=== Usages ===
i1243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1243 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?92 
guard: - 
address: v1277 
=== Succesors ===
next: v286 
=== Usages ===
v283 i1087 
=== Predecessor ===
a1242 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?92 guard: - address: v1277 #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1243 
y: i110 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1243 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid a588 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1242 
=== Succesors ===
=== Usages ===
a427 a522 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1242  <|@  <|@
f <@~|@floating>@ <|@
tid i289 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i91 
y: i98 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i91 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32
=== Inputs ===
x: i91 
y: i289 
=== Succesors ===
=== Usages ===
i278 i528 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i91 y: i289  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
i1243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v284 #falseSuccessor: v285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v9|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHR v9|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = XOR (x: v9|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v513  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v12|QWORD[.], v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i521 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v512 
values: i91 i535 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v512 values: i91 i535  <|@  <|@
f <@~|@floating>@ <|@
tid a522 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v512 
values: a588 a576 
=== Succesors ===
=== Usages ===
a428 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v512 values: a588 a576  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v512 
values: i288 i543 
=== Succesors ===
=== Usages ===
i348 i503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v512 values: i288 i543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v513 v515 
=== Succesors ===
next: a1244 
=== Usages ===
i521 a522 i528 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v513 v515 #next: a1244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1244 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
=== Succesors ===
next: i1245 
=== Usages ===
a616 v1281 
=== Predecessor ===
v512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1279 #next: i1245  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 - - i521 
=== Succesors ===
=== Usages ===
i1245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - - i521  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
result [v18|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1244 
=== Succesors ===
=== Usages ===
i1245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1245 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v1281 
=== Succesors ===
next: v505 
=== Usages ===
i504 i341 
=== Predecessor ===
a1244 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v1281 #next: v505  <|@  <|@
f <@~|@floating>@ <|@
tid i504 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1245 
y: i11 
=== Succesors ===
=== Usages ===
i503 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1245 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32
=== Inputs ===
x: i504 
y: i528 
=== Succesors ===
=== Usages ===
i502 i352 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i504 y: i528  <|@  <|@
f <@~|@floating>@ <|@
tid i502 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i503 
y: i10 
=== Succesors ===
=== Usages ===
i501 i367 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i503 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i501 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i502 
y: i10 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i502 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid a616 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a1244 
=== Succesors ===
=== Usages ===
a344 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
i1245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD, v16|QWORD[.], v17|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v15|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = AND (x: v20|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHL v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v24|QWORD[.], v16|QWORD[.], v17|DWORD, v21|DWORD, v23|DWORD, v22|DWORD] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v267  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.], v9|DWORD, v14|DWORD, v11|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1239 
y: a809 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1239 y: a809  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v810 
=== Succesors ===
trueSuccessor: v900 
falseSuccessor: v898 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v810 #trueSuccessor: v900 #falseSuccessor: v898  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1097 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1097  <|@  <|@
f <@~|@floating>@ <|@
tid i1101 <|@
result int[-152083|0xfffffffffffdaded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152083
stableDimension: 0
stamp: i32 [-152083] ⇊00000000fffdaded ⇈00000000fffdaded
stampKind: i32
value: int[-152083|0xfffffffffffdaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1101 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1101 speculation: a1094  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -152083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i82 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i82  <|@  <|@
f <@~|@floating>@ <|@
tid a567 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a1239 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1239  <|@  <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@12a7d719
stamp: void
targetMethod: HotSpotMethod<Equivalence.hashCode(Object)>
=== Inputs ===
arguments: a567 a2 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a567 a2  <|@  <|@
tid ?1079 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 - - 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i82 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 40
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Equivalence.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v598 
stateDuring: ?1079 
=== Succesors ===
next: a1246 
=== Usages ===
?83 i274 i100 i99 
=== Predecessor ===
v898 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v598 stateDuring: ?1079 #next: a1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1246 <|@
result v27|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
=== Succesors ===
next: i1247 
=== Usages ===
a600 v1278 
=== Predecessor ===
i82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 #next: i1247  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 - - i82 
=== Succesors ===
=== Usages ===
v1117 i1247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - - i82  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
result [v27|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1246 
=== Succesors ===
=== Usages ===
i1247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1247 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?83 
guard: - 
address: v1278 
=== Succesors ===
next: v227 
=== Usages ===
v224 i1087 
=== Predecessor ===
a1246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?83 guard: - address: v1278 #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1247 
y: i110 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1247 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid a600 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1246 
=== Succesors ===
=== Usages ===
a428 a427 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1246  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i82 
y: i98 
=== Succesors ===
=== Usages ===
i100 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i82 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32
=== Inputs ===
x: i82 
y: i99 
=== Succesors ===
=== Usages ===
i348 i278 i378 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i82 y: i99  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
i1247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v225 #falseSuccessor: v226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 2] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v26|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v28|DWORD = MOV [v27|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 2] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SHR v26|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = XOR (x: v26|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1248 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1248 <|@
result v32|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
=== Succesors ===
next: v909 
=== Usages ===
a609 v610 v1280 
=== Predecessor ===
v225 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1279 #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
value: a1248 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1248  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v610 
=== Succesors ===
trueSuccessor: v908 
falseSuccessor: v906 
=== Usages ===
=== Predecessor ===
a1248 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v610 #trueSuccessor: v908 #falseSuccessor: v906  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD[.], y: v32|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1117  <|@  <|@
f <@~|@floating>@ <|@
tid i1119 <|@
result int[-156427|0xfffffffffffd9cf5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -156427
stableDimension: 0
stamp: i32 [-156427] ⇊00000000fffd9cf5 ⇈00000000fffd9cf5
stampKind: i32
value: int[-156427|0xfffffffffffd9cf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?83 
actionAndReason: i1119 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?83 actionAndReason: i1119 speculation: a1094  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -156427 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v26|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:43, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1249 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1249  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
result [v32|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1248 
=== Succesors ===
=== Usages ===
i1249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1249 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1280 
=== Succesors ===
next: v336 
=== Usages ===
i341 i379 
=== Predecessor ===
v906 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1280 #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1249 
y: i11 
=== Succesors ===
=== Usages ===
i378 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1249 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32
=== Inputs ===
x: i100 
y: i379 
=== Succesors ===
=== Usages ===
i352 i381 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i100 y: i379  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i378 
y: i10 
=== Succesors ===
=== Usages ===
i380 i367 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i378 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i381 
y: i10 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i381 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid a609 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a1248 
=== Succesors ===
=== Usages ===
a344 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1248  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
i1249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOV [v32|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = DEC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = AND (x: v31|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SHL v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v38|QWORD[.], v29|QWORD[.], v31|DWORD, v35|DWORD, v37|DWORD, v36|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i341 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v334 
values: i1249 i1245 
=== Succesors ===
=== Usages ===
?275 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i1249 i1245  <|@  <|@
f <@~|@floating>@ <|@
tid a344 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [B
valueDescription: a -
=== Inputs ===
merge: v334 
values: a609 a616 
=== Succesors ===
=== Usages ===
v1284 v1283 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: a609 a616  <|@  <|@
f <@~|@floating>@ <|@
tid a428 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v334 
values: a600 a522 
=== Succesors ===
=== Usages ===
a432 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: a600 a522  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v334 
values: i100 i528 
=== Succesors ===
=== Usages ===
?275 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i100 i528  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v334 
values: i378 i503 
=== Succesors ===
=== Usages ===
i392 v1284 v635 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i378 i503  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
valueDescription: i32
=== Inputs ===
merge: v334 
values: i380 i501 
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i380 i501  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v334 
values: i381 i502 
=== Succesors ===
=== Usages ===
i395 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i381 i502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v336 v505 
=== Succesors ===
next: i1250 
=== Usages ===
i341 a344 a428 i348 i352 i364 i367 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v336 v505 #next: i1250  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
result [v40|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a344 
index: - 
=== Succesors ===
=== Usages ===
i1250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1250 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
=== Succesors ===
next: v917 
=== Usages ===
v635 
=== Predecessor ===
v334 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1283 #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i352 
y: i1250 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i352 y: i1250  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v635 
=== Succesors ===
trueSuccessor: v914 
falseSuccessor: v916 
=== Usages ===
=== Predecessor ===
i1250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v635 #trueSuccessor: v914 #falseSuccessor: v916  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD, v40|QWORD[.], v41|QWORD[.], v42|DWORD, v43|DWORD, v44|DWORD, v45|DWORD] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: [v40|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1251 
=== Usages ===
i1251 
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1251  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
result [v40|QWORD[.] + v43|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a344 
index: i352 
=== Succesors ===
=== Usages ===
i1251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: i352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1251 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v914 
address: v1284 
=== Succesors ===
next: v400 
=== Usages ===
i644 i812 
=== Predecessor ===
v914 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v914 address: v1284 #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid i644 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1251 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1251  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result int[255|0xff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
rawvalue: 255
stableDimension: 0
stamp: i32 [255] ⇊00000000000000ff ⇈00000000000000ff
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:337) [bci: 16]
stamp: void
=== Inputs ===
x: i644 
y: i117 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i644 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:337) [bci: 16]
stamp: void
trueSuccessorProbability: 3.6476064753699716E-4
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v399 
=== Usages ===
=== Predecessor ===
i1251 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v398 #falseSuccessor: v399  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVSXB [v40|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v47|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.6476064753699716E-4 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4553666385632288877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:356) [bci: 106]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604907115545472838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid i812 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1251 
=== Succesors ===
=== Usages ===
i390 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1251  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD, v41|QWORD[.], v43|DWORD, v44|DWORD, v45|DWORD] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1303 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1303  <|@  <|@
tid ?275 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 401
stackSize: 2
=== Inputs ===
outerFrameState: ?107 
values: - - - i348 i341 
=== Succesors ===
=== Usages ===
v1303 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - i348 i341  <|@  <|@
f <@*|@fixed>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 636
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?275 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?275  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -162843 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v42|DWORD v39|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.], v26|DWORD, v31|DWORD, v28|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B3" 
    successors "B22" "B81" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a427 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v264 
values: a600 a588 a576 
=== Succesors ===
=== Usages ===
a432 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v264 values: a600 a588 a576  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v264 
values: i82 i91 i535 
=== Succesors ===
=== Usages ===
?266 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v264 values: i82 i91 i535  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v264 
values: i100 i288 i543 
=== Succesors ===
=== Usages ===
?339 i105 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v264 values: i100 i288 i543  <|@  <|@
f <@~|@floating>@ <|@
tid i1087 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v264 
values: i1247 i1243 i1241 
=== Succesors ===
=== Usages ===
v123 v233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v264 values: i1247 i1243 i1241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v265 v267 v545 
=== Succesors ===
next: v921 
=== Usages ===
a427 i274 i278 i1087 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v265 v267 v545 #next: v921  <|@  <|@
tid ?266 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 - i274 
=== Succesors ===
=== Usages ===
v1125 i1253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 - i274  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1087 
y: i122 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1087 y: i122  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v918 
falseSuccessor: v920 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v918 #falseSuccessor: v920  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.], v50|DWORD, v51|DWORD, v52|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v52|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B79" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1252 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1252 <|@
result v53|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
=== Succesors ===
next: i1253 
=== Usages ===
v1286 v1285 v1282 
=== Predecessor ===
v918 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1279 #next: i1253  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
result [v53|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1252 
=== Succesors ===
=== Usages ===
i1253 i1254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1253 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?266 
guard: - 
address: v1282 
=== Succesors ===
next: v929 
=== Usages ===
i237 
=== Predecessor ===
a1252 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?266 guard: - address: v1282 #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1253 
y: i10 
=== Succesors ===
=== Usages ===
?339 i104 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1253 y: i10  <|@  <|@
tid ?339 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 401
stackSize: 2
=== Inputs ===
outerFrameState: ?107 
values: - - - i278 i237 
=== Succesors ===
=== Usages ===
v1153 i1254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - i278 i237  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1087 
y: i122 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1087 y: i122  <|@  <|@
f <@*|@fixed>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v123 
=== Succesors ===
trueSuccessor: v926 
falseSuccessor: v928 
=== Usages ===
=== Predecessor ===
i1253 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v123 #trueSuccessor: v926 #falseSuccessor: v928  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v50|DWORD 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v54|DWORD = MOV [v53|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SHR v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v52|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1254 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1254 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?339 
guard: - 
address: v1282 
=== Succesors ===
next: v937 
=== Usages ===
v651 v661 
=== Predecessor ===
v926 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?339 guard: - address: v1282 #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i237 
y: i11 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i237 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: i32
=== Inputs ===
x: i104 
y: i278 
=== Succesors ===
=== Usages ===
i392 i205 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i104 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i105 
y: i10 
=== Succesors ===
=== Usages ===
v651 i210 i395 v1285 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i105 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i205 
y: i1254 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i205 y: i1254  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v936 
=== Usages ===
=== Predecessor ===
i1254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v934 #falseSuccessor: v936  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v51|DWORD v55|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v56|DWORD = MOV [v53|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 2] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = AND (x: v57|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SHL v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
i1256 
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i205 
y: i10 
=== Succesors ===
=== Usages ===
v661 i394 v1286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i205 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i210 
y: i1254 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i210 y: i1254  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v661 
=== Succesors ===
trueSuccessor: v938 
falseSuccessor: v940 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v661 #trueSuccessor: v938 #falseSuccessor: v940  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1255 
=== Usages ===
i1255 
=== Predecessor ===
v941 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1255  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
result [v60|DWORD + v53|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i210 
index: a1252 
=== Succesors ===
=== Usages ===
i1255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i210 index: a1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1255 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v938 
address: v1286 
=== Succesors ===
next: i1256 
=== Usages ===
i816 
=== Predecessor ===
v938 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v938 address: v1286 #next: i1256  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
result [v59|DWORD + v53|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i205 
index: a1252 
=== Succesors ===
=== Usages ===
i1256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i205 index: a1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1256 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v934 
address: v1285 
=== Succesors ===
next: v17 
=== Usages ===
i814 
=== Predecessor ===
i1255 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v934 address: v1285 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid i816 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1255 
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1255  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: i32 [0 - 65280] ⇈000000000000ff00
=== Inputs ===
x: i816 
y: i133 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i816 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i814 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1256 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1256  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i134 
y: i814 
=== Succesors ===
=== Usages ===
v14 i390 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i134 y: i814  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:337) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i13 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i135 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:337) [bci: 16]
stamp: void
trueSuccessorProbability: 3.6476064753699716E-4
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
i1256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v15 #falseSuccessor: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVSXB [v60|DWORD + v53|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVZXB v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SHL v62|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVZXB [v59|DWORD + v53|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = OR (x: v63|DWORD, y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v65|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.6476064753699716E-4 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4546419961690210543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:356) [bci: 106]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4598215655483329752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
v16 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|DWORD, v49|QWORD[.], v58|DWORD, v60|DWORD, v59|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B18" 
    successors "B29" "B75" 
    xhandlers
    flags 
    probability 4607179133328184754
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i390 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v385 
values: i135 i812 
=== Succesors ===
=== Usages ===
i12 ?387 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v385 values: i135 i812  <|@  <|@
f <@~|@floating>@ <|@
tid a432 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v385 
values: a427 a428 
=== Succesors ===
=== Usages ===
v1290 v1289 a412 v1287 v1288 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v385 values: a427 a428  <|@  <|@
f <@~|@floating>@ <|@
tid i392 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v385 
values: i105 i352 
=== Succesors ===
=== Usages ===
v1297 ?387 v751 ?23 ?172 v1295 v771 ?410 ?319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v385 values: i105 i352  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
valueDescription: i32
=== Inputs ===
merge: v385 
values: i210 i364 
=== Succesors ===
=== Usages ===
v1299 v798 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v385 values: i210 i364  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v385 
values: i205 i367 
=== Succesors ===
=== Usages ===
v1298 v788 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v385 values: i205 i367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v386 v388 
=== Succesors ===
next: i1257 
=== Usages ===
i390 a432 i392 i394 i395 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v386 v388 #next: i1257  <|@  <|@
tid ?387 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 336
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i392 - - - - - i390 
=== Succesors ===
=== Usages ===
v1165 i1257 v1306 v1262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i392 - - - - - i390  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
result [v67|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a432 
index: - 
=== Succesors ===
=== Usages ===
i1257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a432 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1257 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?387 
guard: - 
address: v1287 
=== Succesors ===
next: v949 
=== Usages ===
v675 v698 v1236 
=== Predecessor ===
v385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?387 guard: - address: v1287 #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 12]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i390 
y: i11 
=== Succesors ===
=== Usages ===
i19 ?23 ?172 ?410 v511 v244 v243 v726 v708 ?319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i390 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i12 
y: i10 
=== Succesors ===
=== Usages ===
v1288 i182 v675 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i12 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i1257 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i19 y: i1257  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v675 
=== Succesors ===
trueSuccessor: v946 
falseSuccessor: v948 
=== Usages ===
=== Predecessor ===
i1257 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v675 #trueSuccessor: v946 #falseSuccessor: v948  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|QWORD[.], v68|DWORD, v69|DWORD, v70|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: v66|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD - - - - - 
>@ <|@ instruction v71|DWORD = MOV [v67|QWORD[.] + 12] size: DWORD state [bci:11] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = DEC v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607179133328184754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1258 
=== Usages ===
a1258 
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1258  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
result [v67|QWORD[.] + v73|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a432 
index: i19 
=== Succesors ===
=== Usages ===
a1258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a432 index: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1258 <|@
result v74|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v946 
address: v1288 
=== Succesors ===
next: v144 
=== Usages ===
a684 
=== Predecessor ===
v946 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v946 address: v1288 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid a684 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1258 
=== Succesors ===
=== Usages ===
v733 v141 v729 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1258  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a684 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a684  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:340) [bci: 38]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i19 
y: i10 
=== Succesors ===
=== Usages ===
v1292 v1290 v1289 v716 v698 v1236 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1233 v1234 v1235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v142 
falseSuccessor: v143 
=== Usages ===
=== Predecessor ===
a1258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v142 #falseSuccessor: v143  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[.] = MOV [v67|QWORD[.] + v73|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591557354072086653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i1257 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i182 y: i1257  <|@  <|@
f <@*|@fixed>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1236 
=== Succesors ===
trueSuccessor: v950 
falseSuccessor: v952 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1236 #trueSuccessor: v950 #falseSuccessor: v952  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591557354072086653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1259 
=== Usages ===
a1259 
=== Predecessor ===
v953 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1259  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
result [v67|QWORD[.] + v76|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a432 
index: i182 
=== Succesors ===
=== Usages ===
a1259 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a432 index: i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1259 <|@
result v77|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v950 
address: v1289 
=== Succesors ===
next: v411 
=== Usages ===
a694 
=== Predecessor ===
v950 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v950 address: v1289 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid a694 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1259 
=== Succesors ===
=== Usages ===
a414 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1259  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
a1259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = MOV [v67|QWORD[.] + v76|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[.], v78|QWORD[.], int[1|0x1]] destination: B31 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid i1169 <|@
result int[-175899|0xfffffffffffd50e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -175899
stableDimension: 0
stamp: i32 [-175899] ⇊00000000fffd50e5 ⇈00000000fffd50e5
stampKind: i32
value: int[-175899|0xfffffffffffd50e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v952 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-175899|0xfffffffffffd50e5]] destination: B32 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B39" 
    xhandlers
    flags 
    probability 4606317516652069538
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1260 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1260  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1260 <|@
result v79|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
=== Succesors ===
next: v150 
=== Usages ===
a696 v730 v819 v820 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1274 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
value: a1260 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1260  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v730 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
a1260 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v730 #trueSuccessor: v148 #falseSuccessor: v149  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v957 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v957  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i1257 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i182 y: i1257  <|@  <|@
f <@*|@fixed>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v698 
=== Succesors ===
trueSuccessor: v954 
falseSuccessor: v956 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v698 #trueSuccessor: v954 #falseSuccessor: v956  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1261 
=== Usages ===
a1261 
=== Predecessor ===
v957 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1261  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
result [v67|QWORD[.] + v76|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a432 
index: i182 
=== Succesors ===
=== Usages ===
a1261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a432 index: i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1261 <|@
result v80|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v954 
address: v1290 
=== Succesors ===
next: v1262 
=== Usages ===
a706 v1300 
=== Predecessor ===
v954 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v954 address: v1290 #next: v1262  <|@  <|@
f <@~|@floating>@ <|@
tid v1300 <|@
result [v80|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1261 
=== Succesors ===
=== Usages ===
v1262 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1262 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?387 
guard: - 
address: v1300 
=== Succesors ===
next: v1205 
=== Usages ===
v1233 
=== Predecessor ===
a1261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?387 guard: - address: v1300 #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1262 
y: v1232 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1262 y: v1232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1205 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1233 
=== Succesors ===
trueSuccessor: v1203 
falseSuccessor: v1202 
=== Usages ===
=== Predecessor ===
v1262 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1233 #trueSuccessor: v1203 #falseSuccessor: v1202  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v67|QWORD[.] + v76|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: v66|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD - - - - - 
>@ <|@ instruction CMP [v80|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:11] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: i466 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i466  <|@  <|@
f <@~|@floating>@ <|@
tid a706 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1261 
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1261  <|@  <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5f8d96b
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)>
=== Inputs ===
arguments: a1 a2 a706 i12 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 a706 i12  <|@  <|@
tid ?1081 <|@
d <@d|@=== Debug Properties ===
bci: 102
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 351
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i466 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 102
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findAndRemoveWithCollision
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v708 
stateDuring: ?1081 
=== Succesors ===
next: v468 
=== Usages ===
v468 
=== Predecessor ===
v1203 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v708 stateDuring: ?1081 #next: v468  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 105]
stamp: void
=== Inputs ===
result: i466 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i466 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i466 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
locals: - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:102] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v82|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1220 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid i1175 <|@
result int[-181011|0xfffffffffffd3ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -181011
stableDimension: 0
stamp: i32 [-181011] ⇊00000000fffd3ced ⇈00000000fffd3ced
stampKind: i32
value: int[-181011|0xfffffffffffd3ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v1202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-181011|0xfffffffffffd3ced]] destination: B37 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1172 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1172  <|@  <|@
f <@~|@floating>@ <|@
tid i1173 <|@
result int[-178971|0xfffffffffffd44e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -178971
stableDimension: 0
stamp: i32 [-178971] ⇊00000000fffd44e5 ⇈00000000fffd44e5
stampKind: i32
value: int[-178971|0xfffffffffffd44e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v956 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-178971|0xfffffffffffd44e5]] destination: B38 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1260 
y: a807 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1260 y: a807  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 339
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i392 i12 - - - - 
=== Succesors ===
=== Usages ===
?1082 ?1080 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i392 i12 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v820 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v153 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v820 #trueSuccessor: v158 #falseSuccessor: v153  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v79|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580722999714720334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1306 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?387 
object: a2 
=== Succesors ===
next: i162 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?387 object: a2 #next: i162  <|@  <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4819b37
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a684 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a684  <|@  <|@
tid ?1080 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?172 
values: - - - 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?172 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i162 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v729 
stateDuring: ?1080 
=== Succesors ===
next: v176 
=== Usages ===
i175 
=== Predecessor ===
v1306 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v729 stateDuring: ?1080 #next: v176  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
i162 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: v66|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:11] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 30] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|DWORD] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4574868613586214169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1260 
y: a809 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1260 y: a809  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v819 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v819 #trueSuccessor: v154 #falseSuccessor: v159  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v79|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4535579446752114705
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
v154 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4574849245533021217
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i167 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i167  <|@  <|@
f <@~|@floating>@ <|@
tid a696 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a1260 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1260  <|@  <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@7ae0e0bb
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a696 a2 a684 
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a696 a2 a684  <|@  <|@
tid ?1082 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?172 
values: - - - 
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?172 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i167 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v733 
stateDuring: ?1082 
=== Succesors ===
next: v177 
=== Usages ===
i175 
=== Predecessor ===
v159 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v733 stateDuring: ?1082 #next: v177  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
i167 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 30] <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" "B42" 
    successors "B45" "B73" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i175 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v173 
values: i162 i167 i13 
=== Succesors ===
=== Usages ===
?23 v24 i416 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v173 values: i162 i167 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v176 v177 v179 
=== Succesors ===
next: a1263 
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v176 v177 v179 #next: a1263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1263 <|@
result v87|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
=== Succesors ===
next: i1264 
=== Usages ===
a710 v1291 
=== Predecessor ===
v173 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 #next: i1264  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 339
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i392 i12 - - - - i175 
=== Succesors ===
=== Usages ===
v1107 i1264 v1266 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i392 i12 - - - - i175  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
result [v87|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1263 
=== Succesors ===
=== Usages ===
i1264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1264 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?23 
guard: - 
address: v1291 
=== Succesors ===
next: v973 
=== Usages ===
v716 
=== Predecessor ===
a1263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?23 guard: - address: v1291 #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i1264 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i182 y: i1264  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v716 
=== Succesors ===
trueSuccessor: v970 
falseSuccessor: v972 
=== Usages ===
=== Predecessor ===
i1264 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v716 #trueSuccessor: v970 #falseSuccessor: v972  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: v86|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction CMP (x: v76|DWORD, y: [v87|DWORD[.] * 8 + 12]) size: DWORD state [bci:33] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B44 -> B45 falseDestination: B44 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1265 
=== Usages ===
a1265 
=== Predecessor ===
v973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1265  <|@  <|@
f <@~|@floating>@ <|@
tid a710 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1263 
=== Succesors ===
=== Usages ===
v1292 a412 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1263  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
result [v88|QWORD[.] + v76|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a710 
index: i182 
=== Succesors ===
=== Usages ===
a1265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1265 <|@
result v89|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v970 
address: v1292 
=== Succesors ===
next: v27 
=== Usages ===
a724 v1301 
=== Predecessor ===
v970 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v970 address: v1292 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid a724 <|@
result v90|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1265 
=== Succesors ===
=== Usages ===
v726 a414 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1265  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i175 
y: i13 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i175 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stamp: void
trueSuccessorProbability: 0.06941669128251464
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
a1265 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v25 #falseSuccessor: v26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = MOV [v88|QWORD[.] + v76|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|DWORD, y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06941669128251464 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4565551245696639902
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1266 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1266  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
result [v89|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1265 
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1266 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?23 
guard: - 
address: v1301 
=== Succesors ===
next: v1215 
=== Usages ===
v1234 
=== Predecessor ===
v25 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?23 guard: - address: v1301 #next: v1215  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1266 
y: v1232 
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1266 y: v1232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1215 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1234 
=== Succesors ===
trueSuccessor: v1213 
falseSuccessor: v1212 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1234 #trueSuccessor: v1213 #falseSuccessor: v1212  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: v86|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction CMP [v89|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:33] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4565551245696639902
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: i58 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i58  <|@  <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5653ffe1
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)>
=== Inputs ===
arguments: a1 a2 a724 i12 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 a724 i12  <|@  <|@
tid ?1083 <|@
d <@d|@=== Debug Properties ===
bci: 102
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 351
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i58 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 102
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findAndRemoveWithCollision
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v726 
stateDuring: ?1083 
=== Succesors ===
next: v60 
=== Usages ===
v60 
=== Predecessor ===
v1213 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v726 stateDuring: ?1083 #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 105]
stamp: void
=== Inputs ===
result: i58 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i58 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i58 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
locals: - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:102] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v91|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1221 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1221  <|@  <|@
f <@~|@floating>@ <|@
tid i1111 <|@
result int[-185619|0xfffffffffffd2aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -185619
stableDimension: 0
stamp: i32 [-185619] ⇊00000000fffd2aed ⇈00000000fffd2aed
stampKind: i32
value: int[-185619|0xfffffffffffd2aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:350) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
v1212 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-185619|0xfffffffffffd2aed]] destination: B48 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4582283371147997018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:340) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
v26 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD[.], v90|QWORD[.], v86|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B31" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4593213891506979924
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a412 <|@
result v92|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v408 
values: a710 a432 
=== Succesors ===
=== Usages ===
v1296 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v408 values: a710 a432  <|@  <|@
f <@~|@floating>@ <|@
tid a414 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v408 
values: a724 a694 
=== Succesors ===
=== Usages ===
v1302 v1293 v1049 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v408 values: a724 a694  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v408 
values: i175 i10 
=== Succesors ===
=== Usages ===
?410 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v408 values: i175 i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v409 v411 
=== Succesors ===
next: i1267 
=== Usages ===
a412 a414 i416 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v409 v411 #next: i1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1296 <|@
result [v92|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a412 
index: - 
=== Succesors ===
=== Usages ===
i1267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1267 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1296 
=== Succesors ===
next: a1268 
=== Usages ===
v330 v203 
=== Predecessor ===
v408 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1296 #next: a1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1268 <|@
result v96|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
=== Succesors ===
next: v1052 
=== Usages ===
v1298 v1299 v1294 v1295 v1297 
=== Predecessor ===
i1267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1279 #next: v1052  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
result [v96|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1268 
=== Succesors ===
=== Usages ===
i1271 i1272 i1273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1268  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1267 
y: i110 
=== Succesors ===
=== Usages ===
v333 v195 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1267 y: i110  <|@  <|@
tid ?410 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 339
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i392 i12 - - - - i416 
=== Succesors ===
=== Usages ===
v1181 i1272 i1271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i392 i12 - - - - i416  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
value: a414 
=== Succesors ===
=== Usages ===
v1052 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1049 
=== Succesors ===
trueSuccessor: v1051 
falseSuccessor: v1050 
=== Usages ===
=== Predecessor ===
a1268 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1049 #trueSuccessor: v1051 #falseSuccessor: v1050  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|QWORD[.], v93|QWORD[.], v94|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOV [v92|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|QWORD[.], y: v93|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 4577993198456105435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v1052 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
v1051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B58" 
    xhandlers
    flags 
    probability 4592358944422598425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1269 
=== Usages ===
=== Predecessor ===
v1052 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1269  <|@  <|@
f <@~|@floating>@ <|@
tid v1302 <|@
result [v93|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a414 
index: - 
=== Succesors ===
=== Usages ===
v1269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a414 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1269 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1302 
=== Succesors ===
next: v1195 
=== Usages ===
v1235 
=== Predecessor ===
v1050 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1302 #next: v1195  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1269 
y: v1232 
=== Succesors ===
=== Usages ===
v1195 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1269 y: v1232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1195 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
trueSuccessorProbability: 0.12575621779072377
=== Inputs ===
condition: v1235 
=== Succesors ===
trueSuccessor: v1193 
falseSuccessor: v1192 
=== Usages ===
=== Predecessor ===
v1269 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1235 #trueSuccessor: v1193 #falseSuccessor: v1192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v93|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12575621779072377 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B57" 
    xhandlers
    flags 
    probability 4578894695426551180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1270 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1270  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
result [v93|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a414 
index: - 
=== Succesors ===
=== Usages ===
i1270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a414 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1270 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:344) [bci: 63]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1293 
=== Succesors ===
next: v195 
=== Usages ===
i322 i247 
=== Predecessor ===
v1193 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1293 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i247 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 73]
stamp: i32
=== Inputs ===
x: i1270 
y: i10 
=== Succesors ===
=== Usages ===
i252 i250 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1270 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
resultBits: 8
stamp: i8
=== Inputs ===
value: i247 
=== Succesors ===
=== Usages ===
i1084 v759 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i247  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 0.7172659508813088
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
i1270 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v193 #falseSuccessor: v194  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOV [v93|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = INC v97|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4576706030330233616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1271 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1271 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?410 
guard: - 
address: v1294 
=== Succesors ===
next: v989 
=== Usages ===
v751 
=== Predecessor ===
v193 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?410 guard: - address: v1294 #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i392 
y: i1271 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i392 y: i1271  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v986 
falseSuccessor: v988 
=== Usages ===
=== Predecessor ===
i1271 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v986 #falseSuccessor: v988  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: v94|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction CMP (x: v68|DWORD, y: [v96|DWORD[.] * 8 + 12]) size: DWORD state [bci:33] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 4576706030330233616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v759 
=== Usages ===
v759 
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
result [v68|DWORD + v96|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i392 
index: a1268 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i392 index: a1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v986 
address: v1295 
value: i250 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v986 address: v1295 value: i250 stateAfter: - lastLocationAccess: - #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i12 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i12 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v68|DWORD + v96|DWORD[.] * 8 + 16], y: v98|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1188 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1188  <|@  <|@
f <@~|@floating>@ <|@
tid i1189 <|@
result int[-192539|0xfffffffffffd0fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -192539
stableDimension: 0
stamp: i32 [-192539] ⇊00000000fffd0fe5 ⇈00000000fffd0fe5
stampKind: i32
value: int[-192539|0xfffffffffffd0fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1179 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
v988 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-192539|0xfffffffffffd0fe5]] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B65" 
    xhandlers
    flags 
    probability 4570901082911582702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i247 
y: i133 
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i247 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i257 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
resultBits: 8
stamp: i8
=== Inputs ===
value: i252 
=== Succesors ===
=== Usages ===
i1085 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i252  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = SAR v98|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|DWORD, v99|DWORD, v98|DWORD] destination: B57 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 4591391310216911208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
v1192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    probability 4592246257301292707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:342) [bci: 48]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1060 v1196 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1060 v1196 #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i825 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v779 i1084 i1085 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:319) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 0.7172659508813088
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v331 #falseSuccessor: v332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4590102613928838395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1272 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1272 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?410 
guard: - 
address: v1294 
=== Succesors ===
next: v997 
=== Usages ===
v771 
=== Predecessor ===
v331 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?410 guard: - address: v1294 #next: v997  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i392 
y: i1272 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i392 y: i1272  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v771 
=== Succesors ===
trueSuccessor: v994 
falseSuccessor: v996 
=== Usages ===
=== Predecessor ===
i1272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v771 #trueSuccessor: v994 #falseSuccessor: v996  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: v94|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction CMP (x: v68|DWORD, y: [v96|DWORD[.] * 8 + 12]) size: DWORD state [bci:33] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 4590102613928838395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
v779 
=== Predecessor ===
v997 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
result [v68|DWORD + v96|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i392 
index: a1268 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i392 index: a1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v994 
address: v1297 
value: i825 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v994 address: v1297 value: i825 stateAfter: - lastLocationAccess: - #next: v511  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i12 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i12 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v68|DWORD + v96|DWORD[.] * 8 + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1186 
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1186  <|@  <|@
f <@~|@floating>@ <|@
tid i1187 <|@
result int[-197659|0xfffffffffffcfbe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -197659
stableDimension: 0
stamp: i32 [-197659] ⇊00000000fffcfbe5 ⇈00000000fffcfbe5
stampKind: i32
value: int[-197659|0xfffffffffffcfbe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1179 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
v996 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197659|0xfffffffffffcfbe5]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1179 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-197659 - -191243] ⇊00000000fffc00e5 ⇈00000000fffdfff5
valueDescription: i32
=== Inputs ===
merge: v1176 
values: i1187 i1189 
=== Succesors ===
=== Usages ===
v1181 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1176 values: i1187 i1189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1186 v1188 
=== Succesors ===
next: v1181 
=== Usages ===
i1179 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1186 v1188 #next: v1181  <|@  <|@
f <@*|@fixed>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?410 
actionAndReason: i1179 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1176 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?410 actionAndReason: i1179 speculation: a1094  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: v94|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4584231794898241183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v332 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff], byte[0|0x0], byte[0|0x0]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" "B64" 
    successors "B66" "B71" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i322 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v317 
values: i1270 i11 
=== Succesors ===
=== Usages ===
?319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: i1270 i11  <|@  <|@
f <@~|@floating>@ <|@
tid i1085 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i8
valueDescription: i8
=== Inputs ===
merge: v317 
values: i257 i825 
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: i257 i825  <|@  <|@
f <@~|@floating>@ <|@
tid i1084 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i8
valueDescription: i8
=== Inputs ===
merge: v317 
values: i250 i825 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: i250 i825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v318 v320 
=== Succesors ===
next: v1001 
=== Usages ===
i322 i1085 i1084 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v318 v320 #next: v1001  <|@  <|@
tid ?319 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findAndRemoveHash(Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 346
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i392 i12 - - i322 - 
=== Succesors ===
=== Usages ===
v1141 i1273 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i392 i12 - - i322 -  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1267 
y: i122 
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1267 y: i122  <|@  <|@
f <@*|@fixed>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v998 
falseSuccessor: v1000 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v998 #falseSuccessor: v1000  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|DWORD, v102|DWORD, v103|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1273 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1273 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?319 
guard: - 
address: v1294 
=== Succesors ===
next: v1009 
=== Usages ===
v788 v798 
=== Predecessor ===
v998 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?319 guard: - address: v1294 #next: v1009  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i395 
y: i1273 
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i395 y: i1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v788 
=== Succesors ===
trueSuccessor: v1006 
falseSuccessor: v1008 
=== Usages ===
=== Predecessor ===
i1273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v788 #trueSuccessor: v1006 #falseSuccessor: v1008  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 68]
locals: v0|QWORD[.] - v68|DWORD v72|DWORD - - v101|DWORD - 
>@ <|@ instruction v104|DWORD = MOV [v96|DWORD[.] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v104|DWORD, y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1013 
=== Usages ===
v796 
=== Predecessor ===
v1009 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i394 
y: i1273 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i394 y: i1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v798 
=== Succesors ===
trueSuccessor: v1010 
falseSuccessor: v1012 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v798 #trueSuccessor: v1010 #falseSuccessor: v1012  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v104|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v796 
=== Usages ===
v806 
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
result [v70|DWORD + v96|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i395 
index: a1268 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i395 index: a1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1006 
address: v1298 
value: i1084 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1006 address: v1298 value: i1084 stateAfter: - lastLocationAccess: - #next: v806  <|@  <|@
f <@~|@floating>@ <|@
tid v1299 <|@
result [v69|DWORD + v96|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i394 
index: a1268 
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i394 index: a1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1010 
address: v1299 
value: i1085 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1010 address: v1299 value: i1085 stateAfter: - lastLocationAccess: - #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i12 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i12 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v70|DWORD + v96|DWORD[.] * 8 + 16], y: v103|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|DWORD + v96|DWORD[.] * 8 + 16], y: v102|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1146 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1146  <|@  <|@
f <@~|@floating>@ <|@
tid i1147 <|@
result int[-204571|0xfffffffffffce0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -204571
stableDimension: 0
stamp: i32 [-204571] ⇊00000000fffce0e5 ⇈00000000fffce0e5
stampKind: i32
value: int[-204571|0xfffffffffffce0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
v1012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-204571|0xfffffffffffce0e5]] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1144 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid i1145 <|@
result int[-202011|0xfffffffffffceae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -202011
stableDimension: 0
stamp: i32 [-202011] ⇊00000000fffceae5 ⇈00000000fffceae5
stampKind: i32
value: int[-202011|0xfffffffffffceae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
v1008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-202011|0xfffffffffffceae5]] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1142 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1142  <|@  <|@
f <@~|@floating>@ <|@
tid i1143 <|@
result int[-199699|0xfffffffffffcf3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -199699
stableDimension: 0
stamp: i32 [-199699] ⇊00000000fffcf3ed ⇈00000000fffcf3ed
stampKind: i32
value: int[-199699|0xfffffffffffcf3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
v1000 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-199699|0xfffffffffffcf3ed]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1139 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-204571 - -199699] ⇊00000000fffce0e5 ⇈00000000fffcfffd
valueDescription: i32
=== Inputs ===
merge: v1136 
values: i1143 i1145 i1147 
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1136 values: i1143 i1145 i1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1142 v1144 v1146 
=== Succesors ===
next: v1141 
=== Usages ===
i1139 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1142 v1144 v1146 #next: v1141  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?319 
actionAndReason: i1139 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1136 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?319 actionAndReason: i1139 speculation: a1094  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 68]
locals: v0|QWORD[.] - v68|DWORD v72|DWORD - - v101|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:349) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1108 
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1108  <|@  <|@
f <@~|@floating>@ <|@
tid i1109 <|@
result int[-183579|0xfffffffffffd32e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -183579
stableDimension: 0
stamp: i32 [-183579] ⇊00000000fffd32e5 ⇈00000000fffd32e5
stampKind: i32
value: int[-183579|0xfffffffffffd32e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
v972 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-183579|0xfffffffffffd32e5]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B48" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1105 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-185619 - -182283] ⇊00000000fffd22e5 ⇈00000000fffd3ffd
valueDescription: i32
=== Inputs ===
merge: v1102 
values: i1109 i1111 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1102 values: i1109 i1111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1108 v1221 
=== Succesors ===
next: v1107 
=== Usages ===
i1105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1108 v1221 #next: v1107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?23 
actionAndReason: i1105 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?23 actionAndReason: i1105 speculation: a1094  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: v86|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:338) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1166 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1166  <|@  <|@
f <@~|@floating>@ <|@
tid i1167 <|@
result int[-173083|0xfffffffffffd5be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -173083
stableDimension: 0
stamp: i32 [-173083] ⇊00000000fffd5be5 ⇈00000000fffd5be5
stampKind: i32
value: int[-173083|0xfffffffffffd5be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
v948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-173083|0xfffffffffffd5be5]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B32" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1163 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-186123 - -171787] ⇊00000000fffd00e5 ⇈00000000fffd7ffd
valueDescription: i32
=== Inputs ===
merge: v1160 
values: i1167 i1169 i1173 i1175 
=== Succesors ===
=== Usages ===
v1165 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1160 values: i1167 i1169 i1173 i1175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1166 v1168 v1172 v1220 
=== Succesors ===
next: v1165 
=== Usages ===
i1163 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1166 v1168 v1172 v1220 #next: v1165  <|@  <|@
f <@*|@fixed>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?387 
actionAndReason: i1163 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?387 actionAndReason: i1163 speculation: a1094  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: v66|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1158 
=== Usages ===
=== Predecessor ===
v941 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1158  <|@  <|@
f <@~|@floating>@ <|@
tid i1159 <|@
result int[-169499|0xfffffffffffd69e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -169499
stableDimension: 0
stamp: i32 [-169499] ⇊00000000fffd69e5 ⇈00000000fffd69e5
stampKind: i32
value: int[-169499|0xfffffffffffd69e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1148 
=== Predecessor ===
v940 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-169499|0xfffffffffffd69e5]] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid i1157 <|@
result int[-166939|0xfffffffffffd73e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -166939
stableDimension: 0
stamp: i32 [-166939] ⇊00000000fffd73e5 ⇈00000000fffd73e5
stampKind: i32
value: int[-166939|0xfffffffffffd73e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1148 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-166939|0xfffffffffffd73e5]] destination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1154 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1154  <|@  <|@
f <@~|@floating>@ <|@
tid i1155 <|@
result int[-165139|0xfffffffffffd7aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -165139
stableDimension: 0
stamp: i32 [-165139] ⇊00000000fffd7aed ⇈00000000fffd7aed
stampKind: i32
value: int[-165139|0xfffffffffffd7aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1148 
=== Predecessor ===
v928 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-165139|0xfffffffffffd7aed]] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" "B77" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1151 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-169499 - -165139] ⇊00000000fffd60e5 ⇈00000000fffd7bfd
valueDescription: i32
=== Inputs ===
merge: v1148 
values: i1155 i1157 i1159 
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1148 values: i1155 i1157 i1159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1154 v1156 v1158 
=== Succesors ===
next: v1153 
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1154 v1156 v1158 #next: v1153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?339 
actionAndReason: i1151 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1148 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?339 actionAndReason: i1151 speculation: a1094  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v51|DWORD v55|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid i1127 <|@
result int[-159251|0xfffffffffffd91ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -159251
stableDimension: 0
stamp: i32 [-159251] ⇊00000000fffd91ed ⇈00000000fffd91ed
stampKind: i32
value: int[-159251|0xfffffffffffd91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?266 
actionAndReason: i1127 
speculation: a1094 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?266 actionAndReason: i1127 speculation: a1094  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -159251 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v50|DWORD 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@152347c1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v3|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR v3|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = XOR (x: v3|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602932431886806378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD, v6|QWORD[.], v8|DWORD] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD, v16|QWORD[.], v17|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v15|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = AND (x: v20|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHL v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v24|QWORD[.], v16|QWORD[.], v17|DWORD, v21|DWORD, v23|DWORD, v22|DWORD] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD, v40|QWORD[.], v41|QWORD[.], v42|DWORD, v43|DWORD, v44|DWORD, v45|DWORD] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: [v40|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVSXB [v40|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v47|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.6476064753699716E-4 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604907115545472838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD, v41|QWORD[.], v43|DWORD, v44|DWORD, v45|DWORD] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B18" 
    successors "B29" "B75" 
    xhandlers
    flags 
    probability 4607179133328184754
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|QWORD[.], v68|DWORD, v69|DWORD, v70|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: v66|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD - - - - - 
>@ <|@ instruction v71|DWORD = MOV [v67|QWORD[.] + 12] size: DWORD state [bci:11] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = DEC v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607179133328184754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[.] = MOV [v67|QWORD[.] + v73|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B39" 
    xhandlers
    flags 
    probability 4606317516652069538
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v67|QWORD[.] + v76|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: v66|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD - - - - - 
>@ <|@ instruction CMP [v80|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:11] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
locals: - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:102] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v82|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v9|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHR v9|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = XOR (x: v9|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v12|QWORD[.], v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595590265099889163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.], v3|DWORD, v8|DWORD, v5|DWORD] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B3" 
    successors "B22" "B81" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.], v50|DWORD, v51|DWORD, v52|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v52|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B79" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v50|DWORD 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v54|DWORD = MOV [v53|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SHR v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v52|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v51|DWORD v55|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v56|DWORD = MOV [v53|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 2] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = AND (x: v57|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SHL v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVSXB [v60|DWORD + v53|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVZXB v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SHL v62|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVZXB [v59|DWORD + v53|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = OR (x: v63|DWORD, y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v65|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.6476064753699716E-4 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4598215655483329752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|DWORD, v49|QWORD[.], v58|DWORD, v60|DWORD, v59|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591557354072086653
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591557354072086653
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = MOV [v67|QWORD[.] + v76|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[.], v78|QWORD[.], int[1|0x1]] destination: B31 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B31" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4593213891506979924
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|QWORD[.], v93|QWORD[.], v94|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOV [v92|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|QWORD[.], y: v93|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B58" 
    xhandlers
    flags 
    probability 4592358944422598425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v93|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12575621779072377 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 4591391310216911208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    probability 4592246257301292707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4590102613928838395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: v94|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction CMP (x: v68|DWORD, y: [v96|DWORD[.] * 8 + 12]) size: DWORD state [bci:33] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 4590102613928838395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v68|DWORD + v96|DWORD[.] * 8 + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.], v9|DWORD, v14|DWORD, v11|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 2] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v26|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction v28|DWORD = MOV [v27|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 2] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SHR v26|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = XOR (x: v26|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD[.], y: v32|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOV [v32|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = DEC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = AND (x: v31|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SHL v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v38|QWORD[.], v29|QWORD[.], v31|DWORD, v35|DWORD, v37|DWORD, v36|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4584231794898241183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff], byte[0|0x0], byte[0|0x0]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" "B64" 
    successors "B66" "B71" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|DWORD, v102|DWORD, v103|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 68]
locals: v0|QWORD[.] - v68|DWORD v72|DWORD - - v101|DWORD - 
>@ <|@ instruction v104|DWORD = MOV [v96|DWORD[.] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v104|DWORD, y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v104|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v70|DWORD + v96|DWORD[.] * 8 + 16], y: v103|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|DWORD + v96|DWORD[.] * 8 + 16], y: v102|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v79|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580722999714720334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: v66|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:11] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 30] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|DWORD] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" "B42" 
    successors "B45" "B73" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: v86|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction CMP (x: v76|DWORD, y: [v87|DWORD[.] * 8 + 12]) size: DWORD state [bci:33] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B44 -> B45 falseDestination: B44 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = MOV [v88|QWORD[.] + v76|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|DWORD, y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06941669128251464 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4582283371147997018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD[.], v90|QWORD[.], v86|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B57" 
    xhandlers
    flags 
    probability 4578894695426551180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOV [v93|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = INC v97|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4576706030330233616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: v94|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction CMP (x: v68|DWORD, y: [v96|DWORD[.] * 8 + 12]) size: DWORD state [bci:33] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 4576706030330233616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v68|DWORD + v96|DWORD[.] * 8 + 16], y: v98|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 4577993198456105435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.], v26|DWORD, v31|DWORD, v28|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4574868613586214169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v79|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4574849245533021217
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 30] <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B65" 
    xhandlers
    flags 
    probability 4570901082911582702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = SAR v98|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|DWORD, v99|DWORD, v98|DWORD] destination: B57 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4565551245696639902
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: v86|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction CMP [v89|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:33] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4565551245696639902
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
locals: - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:102] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v91|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4553666385632288877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4546419961690210543
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4535579446752114705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -156427 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v26|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:43, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-173083|0xfffffffffffd5be5]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B32" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: v66|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-185619|0xfffffffffffd2aed]] destination: B48 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B48" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: v86|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-192539|0xfffffffffffd0fe5]] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: v94|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v68|DWORD v72|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-178971|0xfffffffffffd44e5]] destination: B38 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -152083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-175899|0xfffffffffffd50e5]] destination: B32 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197659|0xfffffffffffcfbe5]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-169499|0xfffffffffffd69e5]] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" "B77" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v51|DWORD v55|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-166939|0xfffffffffffd73e5]] destination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-202011|0xfffffffffffceae5]] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 68]
locals: v0|QWORD[.] - v68|DWORD v72|DWORD - - v101|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-165139|0xfffffffffffd7aed]] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-204571|0xfffffffffffce0e5]] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -162843 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v42|DWORD v39|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-181011|0xfffffffffffd3ced]] destination: B37 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -159251 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v50|DWORD 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-183579|0xfffffffffffd32e5]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-199699|0xfffffffffffcf3ed]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokespecial #35         // getHashIndex:(java.lang.Object)int
     5: istore_2      
     6: aload_0       
     7: iload_2       
     8: invokespecial #36         // getHashArray:(int)int
    11: iconst_1      
    12: isub          
    13: istore_3      
    14: iload_3       
    15: iconst_m1     
    16: if_icmpeq     106
    19: aload_0       
    20: iload_3       
    21: invokespecial #3          // getKey:(int)java.lang.Object
    24: astore        4
    26: aload_0       
    27: aload_1       
    28: aload         4
    30: invokespecial #30         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    33: ifeq          79
    36: aload_0       
    37: iload_3       
    38: invokespecial #37         // getRawValue:(int)java.lang.Object
    41: astore        5
    43: iconst_m1     
    44: istore        6
    46: aload         5
    48: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    51: ifeq          68
    54: aload         5
    56: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    59: astore        7
    61: aload         7
    63: getfield      #39         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    66: istore        6
    68: aload_0       
    69: iload_2       
    70: iload         6
    72: iconst_1      
    73: iadd          
    74: invokespecial #40         // setHashArray:(int, int)void
    77: iload_3       
    78: ireturn       
    79: aload_0       
    80: iload_3       
    81: invokespecial #37         // getRawValue:(int)java.lang.Object
    84: astore        5
    86: aload         5
    88: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    91: ifeq          106
    94: aload_0       
    95: aload_1       
    96: aload         5
    98: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
   101: iload_3       
   102: invokespecial #41         // findAndRemoveWithCollision:(java.lang.Object, org.graalvm.collections.EconomicMapImpl$CollisionLink, int)int
   105: ireturn       
   106: iconst_m1     
   107: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@152347c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction r8|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602932431886806378
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   94  <|@ instruction r9|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr  202  <|@ instruction CMP (x: r9|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction rdx|DWORD = MOVSXB [rdx|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  210  <|@ instruction r11|DWORD = MOVSXB rdx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction TEST r11|DWORD y: 255 size: DWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 3.6476064753699716E-4 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604907115545472838
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rdx|DWORD = MOVZXB rdx|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B18" 
    successors "B29" "B75" 
    xhandlers
    flags 
    probability 4607179133328184754
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  326  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: rdx|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:60|DWORD - - - - - 
>@ <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD state [bci:11] <|@ <|@
      nr  328  <|@ instruction r8|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction rdi|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  332  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607179133328184754
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rdi|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction CMP (x: rax|QWORD[.], y: stack:40|QWORD[.]) size: QWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B39" 
    xhandlers
    flags 
    probability 4606317516652069538
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rbp|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  378  <|@ instruction TEST (x: rbp|DWORD[.], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rcx|DWORD[.] = MOV [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: rdx|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:60|DWORD - - - - - 
>@ <|@ instruction CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:11] <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
locals: - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:102] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rdx:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   70  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction CMP r10|DWORD y: 512 size: DWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595590265099889163
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B3" 
    successors "B22" "B81" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  252  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B79" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = SHR rcx|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD rcx|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 2] <|@ <|@
      nr  272  <|@ instruction r9|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rbx|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdi|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  286  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVSXB [rdi|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = SHL rcx|DWORD y: 8 size: DWORD <|@ <|@
      nr  298  <|@ instruction rdx|DWORD = MOVZXB [rbx|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  300  <|@ instruction rcx|DWORD = OR (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 3.6476064753699716E-4 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4598215655483329752
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction stack:52|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591557354072086653
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591557354072086653
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  362  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B31 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B31" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4593213891506979924
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rcx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  546  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  548  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B58" 
    xhandlers
    flags 
    probability 4592358944422598425
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.12575621779072377 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    probability 4591391310216911208
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    probability 4592246257301292707
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction CMP rcx|DWORD y: 512 size: DWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4590102613928838395
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:33] <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 4590102613928838395
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  626  <|@ instruction rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 2] <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 2] <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction r8|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  150  <|@ instruction r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP rcx|DWORD y: 512 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  160  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r11|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  178  <|@ instruction r10|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction r9|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  184  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4584231794898241183
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: byte[0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: byte[0|0x0] <|@ <|@
      nr  650  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" "B64" 
    successors "B66" "B71" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  656  <|@ instruction CMP rcx|DWORD y: 131072 size: DWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 68]
locals: rsi|QWORD[.] - r11|DWORD stack:64|DWORD - - rdx|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  664  <|@ instruction CMP (x: rcx|DWORD, y: stack:52|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction CMP (x: rcx|DWORD, y: stack:56|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction MOVB (x: [r9|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  682  <|@ instruction MOVB (x: [rcx|DWORD + r8|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  684  <|@ instruction rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580722999714720334
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: rdx|DWORD 
locals: stack:32|QWORD[.] r10|QWORD[.] stack:60|DWORD - - - - - 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:11] <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 30] <|@ <|@
      nr  444  <|@ instruction rdi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" "B42" 
    successors "B45" "B73" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:33] <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B44 -> B45 falseDestination: B44 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.06941669128251464 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4582283371147997018
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B57" 
    xhandlers
    flags 
    probability 4578894695426551180
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  568  <|@ instruction r10|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  570  <|@ instruction CMP rcx|DWORD y: 512 size: DWORD <|@ <|@
      nr  572  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4576706030330233616
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:33] <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 4576706030330233616
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  586  <|@ instruction rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B59" 
    xhandlers
    flags 
    probability 4577993198456105435
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4574868613586214169
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4574849245533021217
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 30] <|@ <|@
      nr  482  <|@ instruction rdi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B65" 
    xhandlers
    flags 
    probability 4570901082911582702
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction rax|DWORD = SAR r10|DWORD y: 8 size: DWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B57 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4565551245696639902
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:33] <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4565551245696639902
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
locals: - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:102] <|@ <|@
      nr  526  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4553666385632288877
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  220  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4546419961690210543
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  310  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4535579446752114705
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  464  <|@ instruction rdi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [r15|QWORD + 668] y: -156427 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:43, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-173083|0xfffffffffffd5be5] <|@ <|@
      nr  740  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B32" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: rdx|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B48 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B48" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-192539|0xfffffffffffd0fe5] <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction r10|DWORD = MOVE input: int[-178971|0xfffffffffffd44e5] <|@ <|@
      nr  418  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B38 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV [r15|QWORD + 668] y: -152083 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-175899|0xfffffffffffd50e5] <|@ <|@
      nr  370  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B32 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction r10|DWORD = MOVE input: int[-197659|0xfffffffffffcfbe5] <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction r10|DWORD = MOVE input: int[-169499|0xfffffffffffd69e5] <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" "B77" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  772  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  776  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD rcx|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r10|DWORD = MOVE input: int[-166939|0xfffffffffffd73e5] <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-202011|0xfffffffffffceae5] <|@ <|@
      nr  700  <|@ instruction r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  718  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 68]
locals: rsi|QWORD[.] - r11|DWORD r8|DWORD - - rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-165139|0xfffffffffffd7aed] <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r10|DWORD = MOVE input: int[-204571|0xfffffffffffce0e5] <|@ <|@
      nr  692  <|@ instruction r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 668] y: -162843 size: DWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD r11|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r10|DWORD = MOVE input: int[-181011|0xfffffffffffd3ced] <|@ <|@
      nr  410  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B37 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction MOV [r15|QWORD + 668] y: -159251 size: DWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  784  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction r10|DWORD = MOVE input: int[-183579|0xfffffffffffd32e5] <|@ <|@
      nr  724  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-199699|0xfffffffffffcf3ed] <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokespecial #35         // getHashIndex:(java.lang.Object)int
     5: istore_2      
     6: aload_0       
     7: iload_2       
     8: invokespecial #36         // getHashArray:(int)int
    11: iconst_1      
    12: isub          
    13: istore_3      
    14: iload_3       
    15: iconst_m1     
    16: if_icmpeq     106
    19: aload_0       
    20: iload_3       
    21: invokespecial #3          // getKey:(int)java.lang.Object
    24: astore        4
    26: aload_0       
    27: aload_1       
    28: aload         4
    30: invokespecial #30         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    33: ifeq          79
    36: aload_0       
    37: iload_3       
    38: invokespecial #37         // getRawValue:(int)java.lang.Object
    41: astore        5
    43: iconst_m1     
    44: istore        6
    46: aload         5
    48: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    51: ifeq          68
    54: aload         5
    56: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    59: astore        7
    61: aload         7
    63: getfield      #39         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    66: istore        6
    68: aload_0       
    69: iload_2       
    70: iload         6
    72: iconst_1      
    73: iadd          
    74: invokespecial #40         // setHashArray:(int, int)void
    77: iload_3       
    78: ireturn       
    79: aload_0       
    80: iload_3       
    81: invokespecial #37         // getRawValue:(int)java.lang.Object
    84: astore        5
    86: aload         5
    88: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    91: ifeq          106
    94: aload_0       
    95: aload_1       
    96: aload         5
    98: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
   101: iload_3       
   102: invokespecial #41         // findAndRemoveWithCollision:(java.lang.Object, org.graalvm.collections.EconomicMapImpl$CollisionLink, int)int
   105: ireturn       
   106: iconst_m1     
   107: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@152347c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B21" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction r8|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B7 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   94  <|@ instruction r9|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr  202  <|@ instruction CMP (x: r9|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction rdx|DWORD = MOVSXB [rdx|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  210  <|@ instruction r11|DWORD = MOVSXB rdx|DWORD size: DWORD <|@ <|@
      nr  212  <|@ instruction TEST r11|DWORD y: 255 size: DWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 3.6476064753699716E-4 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604907115545472838
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rdx|DWORD = MOVZXB rdx|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B18" 
    successors "B29" "B75" 
    xhandlers
    flags 
    probability 4607179133328184754
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  326  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: rdx|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:60|DWORD - - - - - 
>@ <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD state [bci:11] <|@ <|@
      nr  328  <|@ instruction r8|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction rdi|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  332  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4607179133328184754
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rdi|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction CMP (x: rax|QWORD[.], y: stack:40|QWORD[.]) size: QWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B39" 
    xhandlers
    flags 
    probability 4606317516652069538
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rbp|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  378  <|@ instruction TEST (x: rbp|DWORD[.], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rcx|DWORD[.] = MOV [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: rdx|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:60|DWORD - - - - - 
>@ <|@ instruction CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:11] <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4606095003334431125
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
locals: - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:102] <|@ <|@
      nr  404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rdx:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2] <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2] <|@ <|@
      nr   70  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction CMP r10|DWORD y: 512 size: DWORD <|@ <|@
      nr   82  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B1" 
    successors "B22" "B81" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  252  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B79" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = SHR rcx|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD rcx|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 2] <|@ <|@
      nr  272  <|@ instruction r9|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rbx|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdi|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  286  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVSXB [rdi|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = SHL rcx|DWORD y: 8 size: DWORD <|@ <|@
      nr  298  <|@ instruction rdx|DWORD = MOVZXB [rbx|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  300  <|@ instruction rcx|DWORD = OR (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 3.6476064753699716E-4 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4598215655483329752
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction stack:52|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591557354072086653
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591557354072086653
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  362  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B31 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B31" 
    successors "B59" "B52" 
    xhandlers
    flags 
    probability 4593213891506979924
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rcx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  546  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  548  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B59 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B59" 
    xhandlers
    flags 
    probability 4592358944422598425
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.12575621779072377 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B60" "B64" 
    xhandlers
    flags 
    probability 4592246257301292707
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction CMP rcx|DWORD y: 512 size: DWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4590102613928838395
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:33] <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 4590102613928838395
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  626  <|@ instruction rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 2] <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 2] <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction r8|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  150  <|@ instruction r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP rcx|DWORD y: 512 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  160  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r11|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  178  <|@ instruction r10|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction r10|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction r9|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  184  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4584231794898241183
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: byte[0|0x0] <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOVE input: byte[0|0x0] <|@ <|@
      nr  650  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" "B64" 
    successors "B66" "B71" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  656  <|@ instruction CMP rcx|DWORD y: 131072 size: DWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 68]
locals: rsi|QWORD[.] - r11|DWORD stack:64|DWORD - - rdx|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  664  <|@ instruction CMP (x: rcx|DWORD, y: stack:52|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction CMP (x: rcx|DWORD, y: stack:56|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4584995274054782446
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction MOVB (x: [r9|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  682  <|@ instruction MOVB (x: [rcx|DWORD + r8|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  684  <|@ instruction rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr  430  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580722999714720334
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: rdx|DWORD 
locals: stack:32|QWORD[.] r10|QWORD[.] stack:60|DWORD - - - - - 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:11] <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 30] <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" "B42" 
    successors "B45" "B73" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rdi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:33] <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B44 -> B45 falseDestination: B44 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4582777647572853140
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.06941669128251464 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4582283371147997018
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B57" 
    xhandlers
    flags 
    probability 4578894695426551180
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  568  <|@ instruction r10|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  570  <|@ instruction CMP rcx|DWORD y: 512 size: DWORD <|@ <|@
      nr  576  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4576706030330233616
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:33] <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 4576706030330233616
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  586  <|@ instruction rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4574868613586214169
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4574849245533021217
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3 <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 30] <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B65" 
    xhandlers
    flags 
    probability 4570901082911582702
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rax|DWORD = SAR r10|DWORD y: 8 size: DWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B57 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4565551245696639902
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:33] <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4565551245696639902
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102]
locals: - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:102] <|@ <|@
      nr  526  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4553666385632288877
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  220  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4546419961690210543
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  310  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4535579446752114705
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [r15|QWORD + 668] y: -156427 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:43, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-173083|0xfffffffffffd5be5] <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B32" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  740  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11]
stack: rdx|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B48 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B48" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction r10|DWORD = MOVE input: int[-192539|0xfffffffffffd0fe5] <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD stack:64|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction r10|DWORD = MOVE input: int[-178971|0xfffffffffffd44e5] <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B38 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV [r15|QWORD + 668] y: -152083 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-175899|0xfffffffffffd50e5] <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B32 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction r10|DWORD = MOVE input: int[-197659|0xfffffffffffcfbe5] <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction r10|DWORD = MOVE input: int[-169499|0xfffffffffffd69e5] <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" "B77" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  772  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  776  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD rcx|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r10|DWORD = MOVE input: int[-166939|0xfffffffffffd73e5] <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-202011|0xfffffffffffceae5] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  718  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 68]
locals: rsi|QWORD[.] - r11|DWORD r8|DWORD - - rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-165139|0xfffffffffffd7aed] <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r10|DWORD = MOVE input: int[-204571|0xfffffffffffce0e5] <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r15|QWORD + 668] y: -162843 size: DWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD r11|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r10|DWORD = MOVE input: int[-181011|0xfffffffffffd3ced] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B37 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction MOV [r15|QWORD + 668] y: -159251 size: DWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  784  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction r10|DWORD = MOVE input: int[-183579|0xfffffffffffd32e5] <|@ <|@
      nr  724  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-199699|0xfffffffffffcf3ed] <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokespecial #35         // getHashIndex:(java.lang.Object)int
     5: istore_2      
     6: aload_0       
     7: iload_2       
     8: invokespecial #36         // getHashArray:(int)int
    11: iconst_1      
    12: isub          
    13: istore_3      
    14: iload_3       
    15: iconst_m1     
    16: if_icmpeq     106
    19: aload_0       
    20: iload_3       
    21: invokespecial #3          // getKey:(int)java.lang.Object
    24: astore        4
    26: aload_0       
    27: aload_1       
    28: aload         4
    30: invokespecial #30         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    33: ifeq          79
    36: aload_0       
    37: iload_3       
    38: invokespecial #37         // getRawValue:(int)java.lang.Object
    41: astore        5
    43: iconst_m1     
    44: istore        6
    46: aload         5
    48: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    51: ifeq          68
    54: aload         5
    56: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    59: astore        7
    61: aload         7
    63: getfield      #39         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    66: istore        6
    68: aload_0       
    69: iload_2       
    70: iload         6
    72: iconst_1      
    73: iadd          
    74: invokespecial #40         // setHashArray:(int, int)void
    77: iload_3       
    78: ireturn       
    79: aload_0       
    80: iload_3       
    81: invokespecial #37         // getRawValue:(int)java.lang.Object
    84: astore        5
    86: aload         5
    88: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    91: ifeq          106
    94: aload_0       
    95: aload_1       
    96: aload         5
    98: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
   101: iload_3       
   102: invokespecial #41         // findAndRemoveWithCollision:(java.lang.Object, org.graalvm.collections.EconomicMapImpl$CollisionLink, int)int
   105: ireturn       
   106: iconst_m1     
   107: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c244048897424304889542428448b56204585d20f85110100008502488bf248b8ffffffffffffffff90e80000000090488b742430448b5618468b1cd50c00000049c1e203448bc041c1e8104433c04181fb000200000f832a0100008b561c448b1cd50c000000458bcb41ffc94523c8418bc9d1e18bd9ffc348c1e203443b4a0c0f8367050000420fbe540a10440fbeda41f7c3ff0000000f84250400000fb6d2894c241c895c241844894c2414458b5a0c448bc241ffc8418bf8d1e7443bdf0f8654040000418b44ba1048c1e003ffc7483b4424280f842a0100008b6e2085ed0f8597020000443bdf0f867d040000418b4cba10813ccd08000000addeadde0f850005000048c1e103488b542428666690e80000000090488b6c24404883c448850500000000c5f877c34181faaddeadde0f854e0100008502488bf248b8ffffffffffffffff666690e80000000090488b7424308b5618448b14d50c00000048c1e203448bd841c1eb104433d84181fa00020000458bc30f83fd0000004c8bd2e9d6feffff4181fb000002000f837e0400008b561c8b0cd50c000000d1e94181fb000002000f8332040000448b1cd50c000000448bc941ffc94523c8418bd9d1e3443bdb0f86ec0300008bfbffc7443bdf0f86c50300000fbe4cd7100fb6c9c1e1080fb654d3100bca85c90f84e9020000895c241c897c241844894c24148bd1e9a8feffff443bdf0f867e030000418b54ba1048c1e203b8010000004489442410418b4a0c448b461c4885d20f840d000000817a08addeadde0f84b3010000448b5c241481f9000200000f83cb000000463b1cc50c0000000f8336030000478864c3108b442410488b6c24404883c448850500000000c5f877c3458bda4c8bd2e900ffffff4181faaddeadde0f84e202000049c1e203498bf248b8ffffffffffffffff660f1f440000e80000000090488b7424308b56188b0cd50c00000048c1e203448bc041c1e8104433c081f9000200000f835e0100008b4e1c85c90f8419020000448b1ccd0c000000458bd341ffca4523d0458bca41d1e1418bd9ffc348c1e10348894c2420418bc9458bca4c8bd2488b542420e961fdffff41ba00000000b800000000baffffffff81f9000002000f8301030000428b0cc50c0000003b4c241c0f86750200003b4c24180f8692020000448b4c241c8b4c2418478854c110428844c1108b442410488b6c24404883c448850500000000c5f877c381fdaddeadde897c240c44894424100f85af0000004c8b542428418502498bf2488bd048b8ffffffffffffffff0f1f8000000000e800000000908b7c240c488b7424308b56183b3cd50c0000000f835802000048c1e2038b4cba10448bc149c1e00385c00f84980000004c8bd2498bd0e92ffeffff8b520c448bd241ffc281f900020000448b5c24140f8368000000463b1cc50c0000000f8338010000478854c3108b442410488b6c24404883c448850500000000c5f877c3448bd94c8bd2e944fdffff81fdaddeadde0f84a500000048c1e503488bf5488b542428488bc848b8ffffffffffffffff666690e80000000090e943ffffff418bc2c1f808e9acfeffff448b5c2414813ccd08000000addeadde0f85a3000000488b542428498bc8448b4424100f1f8000000000e80000000090488b6c24404883c448850500000000c5f877c3b8ffffffff488b6c24404883c448850500000000c5f877c3b8ffffffff488b6c24404883c448850500000000c5f877c3b800000000e9bbfeffff488b54242841c7879c020000f59cfdff4d89a7a8020000e8000000009041bae55bfdff448b5c24144589979c0200004d89a7a8020000e8000000009041baed2afdff4589979c0200004d89a7a8020000e8000000009041bae50ffdff4589979c0200004d89a7a8020000e8000000009041bae544fdffebab41c7879c020000edadfdff4d89a7a8020000e8000000009041bae550fdffeb8b41bae5fbfcffebbc41bae569fdff4589979c0200004d89a7a8020000e8000000009041bae573fdffebe441bae5eafcff448b4424104589979c0200004d89a7a8020000e8000000009041baed7afdffebbd41bae5e0fcffebd741c7879c020000e583fdff4d89a7a8020000e8000000009041baed3cfdffe90fffffff41c7879c020000ed91fdff4d89a7a8020000e8000000009041bae532fdff448b5c2414e906ffffff41baedf3fcffeb84e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@152347c1 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 62 12 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 65 14 BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 71 block B1 null  <||@
  Comment 71 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 71 18 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 71 [rdx:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 71 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 20 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 76 22 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2]  <||@
  Comment 76 7  <||@
  Comment 87 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 92 [stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 93 24 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 98 26 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 102 28 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2]  <||@
  Comment 102 [rsi:0, r10:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 102 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 30 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 114 32 r8|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 121 34 r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 124 36 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 131 38 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B7 falseDestination: B1 -> B21  <||@
  Comment 137 block B7 null  <||@
  Comment 137 88 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 137 90 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 140 92 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2]  <||@
  Comment 140 [rdx:0, rsi:0, r10:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 140 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 148 94 r9|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 154 96 r9|DWORD = AND (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 157 98 rcx|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 162 100 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 166 102 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 170 104 JUMP ~[] destination: B7 -> B15  <||@
  Comment 170 block B15 null  <||@
  Comment 170 200 [] = LABEL numbPhis: 7 align: false label: ?  <||@
  Comment 170 202 CMP (x: r9|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 174 204 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 180 block B16 null  <||@
  Comment 180 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 208 rdx|DWORD = MOVSXB [rdx|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD  <||@
  Comment 186 210 r11|DWORD = MOVSXB rdx|DWORD size: DWORD  <||@
  Comment 190 212 TEST r11|DWORD y: 255 size: DWORD  <||@
  Comment 197 214 BRANCH trueDestinationProbability: 3.6476064753699716E-4 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 203 block B18 null  <||@
  Comment 203 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 224 rdx|DWORD = MOVZXB rdx|DWORD size: DWORD  <||@
  Comment 206 226 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 210 228 stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 214 230 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 219 232 JUMP ~[] destination: B18 -> B28  <||@
  Comment 219 block B28 null  <||@
  Comment 219 324 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 219 326 r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD state [bci:11]  <||@
  Comment 219 [rsi:0, r10:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11, duringCall: false, rethrow: false]
              |0             |1                  |2               |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |-  |-  |-  |-  |- 
     stack:   |rdx|DWORD     |                   |                |   |   |   |   |    <||@
  Comment 219 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 223 328 r8|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 229 330 rdi|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 234 332 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 237 334 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B75  <||@
  Comment 243 block B29 null  <||@
  Comment 243 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 243 338 rax|DWORD[.] = MOV [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 248 340 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 252 342 rdi|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 254 344 CMP (x: rax|QWORD[.], y: stack:40|QWORD[.]) size: QWORD  <||@
  Comment 259 346 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B33  <||@
  Comment 265 block B33 null  <||@
  Comment 265 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 265 376 rbp|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 268 378 TEST (x: rbp|DWORD[.], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 270 380 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B39  <||@
  Comment 276 block B34 null  <||@
  Comment 276 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 276 384 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 279 386 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B38  <||@
  Comment 285 block B35 null  <||@
  Comment 285 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 285 390 rcx|DWORD[.] = MOV [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 290 392 CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:11]  <||@
  Comment 290 [rcx:0, rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11, duringCall: false, rethrow: false]
              |0             |1                  |2               |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |-  |-  |-  |-  |- 
     stack:   |rdx|DWORD     |                   |                |   |   |   |   |    <||@
  Comment 290 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 290 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 301 394 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 307 block B36 null  <||@
  Comment 307 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 307 398 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 311 400 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 316 402 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:102]  <||@
  Comment 316 9  <||@
  Comment 319 {HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)>}  <||@
  Comment 324 []at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 325 404 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 334 12  <||@
  Comment 344 block B4 null  <||@
  Comment 344 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 50 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 344 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 351 52 BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 357 block B5 null  <||@
  Comment 357 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 58 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 357 [rdx:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 357 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 359 60 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 362 62 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2]  <||@
  Comment 362 7  <||@
  Comment 375 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 380 [stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 381 64 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 386 66 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 389 68 r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2]  <||@
  Comment 389 [rdx:0, rsi:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 389 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 397 70 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 401 72 r11|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 408 74 r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 411 76 CMP r10|DWORD y: 512 size: DWORD  <||@
  Comment 418 82 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 421 78 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8  <||@
  Comment 427 block B6 null  <||@
  Comment 427 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 84 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 430 86 JUMP ~[] destination: B6 -> B7  <||@
  Comment 435 block B21 null  <||@
  Comment 435 250 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 435 252 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 442 254 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B81  <||@
  Comment 448 block B22 null  <||@
  Comment 448 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 448 258 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 451 260 rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 2]  <||@
  Comment 451 [rdx:0, rsi:0, r10:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 451 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 458 262 rcx|DWORD = SHR rcx|DWORD size: DWORD  <||@
  Comment 460 264 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 467 266 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B79  <||@
  Comment 473 block B23 null  <||@
  Comment 473 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 473 270 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 2]  <||@
  Comment 473 [rdx:0, rsi:0, r10:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1          |2 
     locals:  |-         |-          |- 
     stack:   |r8|DWORD  |rcx|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 473 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 481 272 r9|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 487 274 r9|DWORD = AND (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 490 276 rbx|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 495 278 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 498 280 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78  <||@
  Comment 504 block B24 null  <||@
  Comment 504 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 504 284 rdi|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 508 286 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 511 288 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77  <||@
  Comment 517 block B25 null  <||@
  Comment 517 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 517 292 rcx|DWORD = MOVSXB [rdi|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 522 294 rcx|DWORD = MOVZXB rcx|DWORD size: DWORD  <||@
  Comment 525 296 rcx|DWORD = SHL rcx|DWORD y: 8 size: DWORD  <||@
  Comment 528 298 rdx|DWORD = MOVZXB [rbx|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 533 300 rcx|DWORD = OR (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 535 302 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 537 304 BRANCH trueDestinationProbability: 3.6476064753699716E-4 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 543 block B27 null  <||@
  Comment 543 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 543 314 stack:52|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 547 316 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 551 318 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 556 320 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 558 322 JUMP ~[] destination: B27 -> B28  <||@
  Comment 563 block B30 null  <||@
  Comment 563 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 350 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 566 352 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 572 block B31 null  <||@
  Comment 572 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 572 356 rdx|DWORD[.] = MOV [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 577 358 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 581 360 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 586 362 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 591 364 JUMP ~[] destination: B31 -> B50  <||@
  Comment 591 block B50 null  <||@
  Comment 591 542 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 591 544 rcx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 595 546 r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 599 548 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 602 550 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B59 falseDestination: B50 -> B52  <||@
  Comment 608 block B52 null  <||@
  Comment 608 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 608 560 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 608 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 615 562 BRANCH trueDestinationProbability: 0.12575621779072377 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B59  <||@
  Comment 621 block B59 null  <||@
  Comment 621 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 554 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 626 612 CMP rcx|DWORD y: 512 size: DWORD  <||@
  Comment 632 614 BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B64  <||@
  Comment 638 block B60 null  <||@
  Comment 638 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 638 618 CMP (x: r11|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:33]  <||@
  Comment 638 [rsi:0, r8:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33, duringCall: false, rethrow: false]
              |0             |1                  |2          |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |stack:64|DWORD  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |           |                |   |   |   |    <||@
  Comment 638 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 646 620 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B62  <||@
  Comment 652 block B61 null  <||@
  Comment 652 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 652 624 MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 657 626 rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 661 628 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 670 12  <||@
  Comment 680 block B8 null  <||@
  Comment 680 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 110 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 683 112 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 686 114 JUMP ~[] destination: B8 -> B21  <||@
  Comment 691 block B9 null  <||@
  Comment 691 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 691 118 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 691 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 698 120 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 704 block B11 null  <||@
  Comment 704 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 704 132 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 708 134 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 711 138 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 2]  <||@
  Comment 711 7  <||@
  Comment 727 {HotSpotMethod<Equivalence.hashCode(Object)>}  <||@
  Comment 732 [stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 733 140 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 738 142 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 741 144 rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 2]  <||@
  Comment 741 [rdx:0, rsi:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 741 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 748 146 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 752 148 r8|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 759 150 r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 762 152 CMP rcx|DWORD y: 512 size: DWORD  <||@
  Comment 768 154 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20  <||@
  Comment 774 block B12 null  <||@
  Comment 774 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 158 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 777 160 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 779 162 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 785 block B14 null  <||@
  Comment 785 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 176 r11|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 793 178 r10|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 799 180 r10|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 802 182 r9|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 808 184 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 813 186 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 817 188 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 822 190 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 825 192 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 828 194 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 831 196 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 836 198 JUMP ~[] destination: B14 -> B15  <||@
  Comment 841 block B64 null  <||@
  Comment 841 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 841 646 r10|DWORD = MOVE input: byte[0|0x0]  <||@
  Comment 847 648 rax|DWORD = MOVE input: byte[0|0x0]  <||@
  Comment 852 650 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 857 652 JUMP ~[] destination: B64 -> B65  <||@
  Comment 857 block B65 null  <||@
  Comment 857 654 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 857 656 CMP rcx|DWORD y: 131072 size: DWORD  <||@
  Comment 863 658 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B71  <||@
  Comment 869 block B66 null  <||@
  Comment 869 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 662 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:68]  <||@
  Comment 869 [rsi:0, r8:0]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 68, duringCall: false, rethrow: false]
              |0             |1  |2          |3               |4  |5  |6          |7 
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD  |stack:64|DWORD  |-  |-  |rdx|DWORD  |-   <||@
  Comment 869 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 877 664 CMP (x: rcx|DWORD, y: stack:52|DWORD) size: DWORD  <||@
  Comment 881 666 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B70  <||@
  Comment 887 block B67 null  <||@
  Comment 887 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 887 670 CMP (x: rcx|DWORD, y: stack:56|DWORD) size: DWORD  <||@
  Comment 891 672 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 897 block B68 null  <||@
  Comment 897 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 897 676 r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 902 678 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 906 680 MOVB (x: [r9|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 911 682 MOVB (x: [rcx|DWORD + r8|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 916 684 rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 920 686 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 929 12  <||@
  Comment 939 block B39 null  <||@
  Comment 939 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 939 424 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 939 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 945 430 stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 949 432 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 954 426 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 960 block B40 null  <||@
  Comment 960 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 960 434 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 965 436 NULLCHECK [r10|QWORD[.]] state [bci:11]  <||@
  Comment 965 [rax:0, r10:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11, duringCall: false, rethrow: false]
              |0                  |1             |2               |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |stack:60|DWORD  |-  |-  |-  |-  |- 
     stack:   |rdx|DWORD          |              |                |   |   |   |   |    <||@
  Comment 965 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 968 438 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 971 440 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 974 442 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 30]  <||@
  Comment 974 7  <||@
  Comment 991 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 996 [stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |-   <||@
  Comment 997 448 JUMP ~[] destination: B40 -> B44  <||@
  Comment 997 block B44 null  <||@
  Comment 997 488 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 997 444 rdi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1001 446 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1006 490 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 1009 492 CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:33]  <||@
  Comment 1009 [rdx:0, rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33, duringCall: false, rethrow: false]
              |0             |1                  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                |                |   |   |   |    <||@
  Comment 1009 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1016 494 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B44 -> B45 falseDestination: B44 -> B73  <||@
  Comment 1022 block B45 null  <||@
  Comment 1022 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1022 498 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 1026 500 rcx|DWORD[.] = MOV [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1030 502 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 1037 504 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1039 506 BRANCH trueDestinationProbability: 0.06941669128251464 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49  <||@
  Comment 1045 block B49 null  <||@
  Comment 1045 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1045 536 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1048 538 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1051 540 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1056 block B53 null  <||@
  Comment 1056 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1056 566 rdx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1059 568 r10|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 1065 570 CMP rcx|DWORD y: 512 size: DWORD  <||@
  Comment 1071 576 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1076 572 BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B57  <||@
  Comment 1082 block B54 null  <||@
  Comment 1082 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1082 578 CMP (x: r11|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:33]  <||@
  Comment 1082 [rsi:0, r8:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33, duringCall: false, rethrow: false]
              |0             |1                  |2          |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |stack:64|DWORD  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |           |                |   |   |   |    <||@
  Comment 1082 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1090 580 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 1096 block B55 null  <||@
  Comment 1096 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1096 584 MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 1101 586 rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1105 588 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1114 12  <||@
  Comment 1124 block B20 null  <||@
  Comment 1124 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1124 244 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1127 246 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 248 JUMP ~[] destination: B20 -> B21  <||@
  Comment 1135 block B41 null  <||@
  Comment 1135 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1135 456 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 1135 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 1141 458 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 1147 block B43 null  <||@
  Comment 1147 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1147 472 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 1151 474 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1154 476 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1159 478 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1162 480 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 30]  <||@
  Comment 1162 7  <||@
  Comment 1175 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 1180 [stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |-   <||@
  Comment 1181 486 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1186 block B57 null  <||@
  Comment 1186 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1186 600 rax|DWORD = SAR r10|DWORD y: 8 size: DWORD  <||@
  Comment 1192 602 JUMP ~[] destination: B57 -> B65  <||@
  Comment 1197 block B46 null  <||@
  Comment 1197 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1197 510 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1202 512 CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:33]  <||@
  Comment 1202 [rsi:0, r8:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33, duringCall: false, rethrow: false]
              |0             |1                  |2          |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |stack:64|DWORD  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |           |                |   |   |   |    <||@
  Comment 1202 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1202 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1213 514 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 1219 block B47 null  <||@
  Comment 1219 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1219 518 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1224 520 rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1227 522 r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1232 524 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:102]  <||@
  Comment 1232 9  <||@
  Comment 1239 {HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)>}  <||@
  Comment 1244 []at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1245 526 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1254 12  <||@
  Comment 1264 block B17 null  <||@
  Comment 1264 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1264 218 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1269 220 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1278 12  <||@
  Comment 1288 block B26 null  <||@
  Comment 1288 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1288 308 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1293 310 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1302 12  <||@
  Comment 1312 block B42 null  <||@
  Comment 1312 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1312 462 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1317 468 JUMP ~[] destination: B42 -> B44  <||@
  Comment 1322 block B13 null  <||@
  Comment 1322 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1322 166 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1327 168 MOV [r15|QWORD + 668] y: -156427 size: DWORD  <||@
  Comment 1338 170 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1345 172 DEOPT info [bci:43, 2]  <||@
  Comment 1345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1350 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1351 block B75 null  <||@
  Comment 1351 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1351 738 r10|DWORD = MOVE input: int[-173083|0xfffffffffffd5be5]  <||@
  Comment 1357 742 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1357 block B76 null  <||@
  Comment 1357 744 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1357 740 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1362 746 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1369 748 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1376 750 DEOPT info [bci:11]  <||@
  Comment 1376 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1381 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11, duringCall: false, rethrow: false]
              |0             |1                  |2          |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |-  |-  |-  |-  |- 
     stack:   |rdx|DWORD     |                   |           |   |   |   |   |    <||@
  Comment 1382 block B48 null  <||@
  Comment 1382 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1382 530 r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed]  <||@
  Comment 1388 532 JUMP ~[] destination: B48 -> B74  <||@
  Comment 1388 block B74 null  <||@
  Comment 1388 728 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1388 730 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1395 732 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1402 734 DEOPT info [bci:33]  <||@
  Comment 1402 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1407 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33, duringCall: false, rethrow: false]
              |0             |1                  |2          |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |stack:64|DWORD  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |           |                |   |   |   |    <||@
  Comment 1408 block B56 null  <||@
  Comment 1408 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1408 592 r10|DWORD = MOVE input: int[-192539|0xfffffffffffd0fe5]  <||@
  Comment 1414 594 JUMP ~[] destination: B56 -> B63  <||@
  Comment 1414 block B63 null  <||@
  Comment 1414 636 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1414 638 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1421 640 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1428 642 DEOPT info [bci:33]  <||@
  Comment 1428 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1433 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33, duringCall: false, rethrow: false]
              |0             |1                  |2          |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |stack:64|DWORD  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |           |                |   |   |   |    <||@
  Comment 1434 block B38 null  <||@
  Comment 1434 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1434 416 r10|DWORD = MOVE input: int[-178971|0xfffffffffffd44e5]  <||@
  Comment 1440 420 JUMP ~[] destination: B38 -> B76  <||@
  Comment 1442 block B10 null  <||@
  Comment 1442 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1442 124 MOV [r15|QWORD + 668] y: -152083 size: DWORD  <||@
  Comment 1453 126 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1460 128 DEOPT info [bci:0]  <||@
  Comment 1460 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1465 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1466 block B32 null  <||@
  Comment 1466 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1466 368 r10|DWORD = MOVE input: int[-175899|0xfffffffffffd50e5]  <||@
  Comment 1472 372 JUMP ~[] destination: B32 -> B76  <||@
  Comment 1474 block B62 null  <||@
  Comment 1474 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1474 632 r10|DWORD = MOVE input: int[-197659|0xfffffffffffcfbe5]  <||@
  Comment 1480 634 JUMP ~[] destination: B62 -> B63  <||@
  Comment 1482 block B77 null  <||@
  Comment 1482 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1482 754 r10|DWORD = MOVE input: int[-169499|0xfffffffffffd69e5]  <||@
  Comment 1488 756 JUMP ~[] destination: B77 -> B80  <||@
  Comment 1488 block B80 null  <||@
  Comment 1488 770 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1488 772 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1495 774 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1502 776 DEOPT info [bci:64, 2]  <||@
  Comment 1502 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1507 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1          |2 
     locals:  |-         |-          |- 
     stack:   |r8|DWORD  |rcx|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1508 block B78 null  <||@
  Comment 1508 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1508 760 r10|DWORD = MOVE input: int[-166939|0xfffffffffffd73e5]  <||@
  Comment 1514 762 JUMP ~[] destination: B78 -> B80  <||@
  Comment 1516 block B70 null  <||@
  Comment 1516 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1516 698 r10|DWORD = MOVE input: int[-202011|0xfffffffffffceae5]  <||@
  Comment 1522 702 JUMP ~[] destination: B70 -> B72  <||@
  Comment 1522 block B72 null  <||@
  Comment 1522 712 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1522 708 r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1527 714 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1534 716 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1541 718 DEOPT info [bci:68]  <||@
  Comment 1541 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1546 [rsi:0]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 68, duringCall: false, rethrow: false]
              |0             |1  |2          |3         |4  |5  |6          |7 
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD  |r8|DWORD  |-  |-  |rdx|DWORD  |-   <||@
  Comment 1547 block B79 null  <||@
  Comment 1547 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 766 r10|DWORD = MOVE input: int[-165139|0xfffffffffffd7aed]  <||@
  Comment 1553 768 JUMP ~[] destination: B79 -> B80  <||@
  Comment 1555 block B69 null  <||@
  Comment 1555 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1555 690 r10|DWORD = MOVE input: int[-204571|0xfffffffffffce0e5]  <||@
  Comment 1561 694 JUMP ~[] destination: B69 -> B72  <||@
  Comment 1563 block B19 null  <||@
  Comment 1563 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1563 236 MOV [r15|QWORD + 668] y: -162843 size: DWORD  <||@
  Comment 1574 238 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1581 240 DEOPT info [bci:64, 2]  <||@
  Comment 1581 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1586 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1          |2 
     locals:  |-         |-          |- 
     stack:   |r8|DWORD  |r11|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1587 block B37 null  <||@
  Comment 1587 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1587 408 r10|DWORD = MOVE input: int[-181011|0xfffffffffffd3ced]  <||@
  Comment 1593 412 JUMP ~[] destination: B37 -> B76  <||@
  Comment 1598 block B81 null  <||@
  Comment 1598 778 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1598 780 MOV [r15|QWORD + 668] y: -159251 size: DWORD  <||@
  Comment 1609 782 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1616 784 DEOPT info [bci:52, 2]  <||@
  Comment 1616 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1621 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1622 block B73 null  <||@
  Comment 1622 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1622 722 r10|DWORD = MOVE input: int[-183579|0xfffffffffffd32e5]  <||@
  Comment 1628 724 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1633 726 JUMP ~[] destination: B73 -> B74  <||@
  Comment 1638 block B71 null  <||@
  Comment 1638 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1638 706 r10|DWORD = MOVE input: int[-199699|0xfffffffffffcf3ed]  <||@
  Comment 1644 710 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1646 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1646 4  <||@
  Comment 1652 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1652 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9397[org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(Object)]"
  method "HotSpotCompilation-9397[org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(Object)]"
  date 1527005213391
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106c29980 448b560849c1e203493bc20f85cfc4bdff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c244048897424304889542428448b56204585d20f85110100008502488bf248b8ffffffffffffffff90e804c9bdff90488b742430448b5618468b1cd50c00000049c1e203448bc041c1e8104433c04181fb000200000f832a0100008b561c448b1cd50c000000458bcb41ffc94523c8418bc9d1e18bd9ffc348c1e203443b4a0c0f8367050000420fbe540a10440fbeda41f7c3ff0000000f84250400000fb6d2894c241c895c241844894c2414458b5a0c448bc241ffc8418bf8d1e7443bdf0f8654040000418b44ba1048c1e003ffc7483b4424280f842a0100008b6e2085ed0f8597020000443bdf0f867d040000418b4cba10813ccd08000000bc3e01f80f850005000048c1e103488b542428666690e8dcc5bdff90488b6c24404883c44885053255c6fdc5f877c34181fa750300d80f854e0100008502488bf248b8ffffffffffffffff666690e8e4c7bdff90488b7424308b5618448b14d50c00000048c1e203448bd841c1eb104433d84181fa00020000458bc30f83fd0000004c8bd2e9d6feffff4181fb000002000f837e0400008b561c8b0cd50c000000d1e94181fb000002000f8332040000448b1cd50c000000448bc941ffc94523c8418bd9d1e3443bdb0f86ec0300008bfbffc7443bdf0f86c50300000fbe4cd7100fb6c9c1e1080fb654d3100bca85c90f84e9020000895c241c897c241844894c24148bd1e9a8feffff443bdf0f867e030000418b54ba1048c1e203b8010000004489442410418b4a0c448b461c4885d20f840d000000817a08bc3e01f80f84b3010000448b5c241481f9000200000f83cb000000463b1cc50c0000000f8336030000478864c3108b442410488b6c24404883c4488505e253c6fdc5f877c3458bda4c8bd2e900ffffff4181fa770300d80f84e202000049c1e203498bf248b8ffffffffffffffff660f1f440000e884c6bdff90488b7424308b56188b0cd50c00000048c1e203448bc041c1e8104433c081f9000200000f835e0100008b4e1c85c90f8419020000448b1ccd0c000000458bd341ffca4523d0458bca41d1e1418bd9ffc348c1e10348894c2420418bc9458bca4c8bd2488b542420e961fdffff41ba00000000b800000000baffffffff81f9000002000f8301030000428b0cc50c0000003b4c241c0f86750200003b4c24180f8692020000448b4c241c8b4c2418478854c110428844c1108b442410488b6c24404883c4488505df52c6fdc5f877c381fd750300d8897c240c44894424100f85af0000004c8b542428418502498bf2488bd048b8ffffffffffffffff0f1f8000000000e87cc5bdff908b7c240c488b7424308b56183b3cd50c0000000f835802000048c1e2038b4cba10448bc149c1e00385c00f84980000004c8bd2498bd0e92ffeffff8b520c448bd241ffc281f900020000448b5c24140f8368000000463b1cc50c0000000f8338010000478854c3108b442410488b6c24404883c44885052652c6fdc5f877c3448bd94c8bd2e944fdffff81fd770300d80f84a500000048c1e503488bf5488b542428488bc848b8ffffffffffffffff666690e8c4c4bdff90e943ffffff418bc2c1f808e9acfeffff448b5c2414813ccd08000000bc3e01f80f85a3000000488b542428498bc8448b4424100f1f8000000000e844c2bdff90488b6c24404883c44885059a51c6fdc5f877c3b8ffffffff488b6c24404883c44885058251c6fdc5f877c3b8ffffffff488b6c24404883c44885056a51c6fdc5f877c3b800000000e9bbfeffff488b54242841c7879c020000f59cfdff4d89a7a8020000e838d7bdff9041bae55bfdff448b5c24144589979c0200004d89a7a8020000e819d7bdff9041baed2afdff4589979c0200004d89a7a8020000e8ffd6bdff9041bae50ffdff4589979c0200004d89a7a8020000e8e5d6bdff9041bae544fdffebab41c7879c020000edadfdff4d89a7a8020000e8c5d6bdff9041bae550fdffeb8b41bae5fbfcffebbc41bae569fdff4589979c0200004d89a7a8020000e89bd6bdff9041bae573fdffebe441bae5eafcff448b4424104589979c0200004d89a7a8020000e874d6bdff9041baed7afdffebbd41bae5e0fcffebd741c7879c020000e583fdff4d89a7a8020000e84cd6bdff9041baed3cfdffe90fffffff41c7879c020000ed91fdff4d89a7a8020000e829d6bdff9041bae532fdff448b5c2414e906ffffff41baedf3fcffeb84e82d06020090e807d5bdff90f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@152347c1 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 62 12 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 65 14 BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 71 block B1 null  <||@
  Comment 71 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 71 18 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 71 [rdx:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 71 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 20 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 76 22 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2]  <||@
  Comment 76 7  <||@
  Comment 87 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 92 [stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 93 24 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 98 26 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 102 28 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2]  <||@
  Comment 102 [rsi:0, r10:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 102 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 30 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 114 32 r8|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 121 34 r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 124 36 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 131 38 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B7 falseDestination: B1 -> B21  <||@
  Comment 137 block B7 null  <||@
  Comment 137 88 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 137 90 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 140 92 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2]  <||@
  Comment 140 [rdx:0, rsi:0, r10:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 140 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 148 94 r9|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 154 96 r9|DWORD = AND (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 157 98 rcx|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 162 100 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 166 102 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 170 104 JUMP ~[] destination: B7 -> B15  <||@
  Comment 170 block B15 null  <||@
  Comment 170 200 [] = LABEL numbPhis: 7 align: false label: ?  <||@
  Comment 170 202 CMP (x: r9|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 174 204 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 180 block B16 null  <||@
  Comment 180 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 208 rdx|DWORD = MOVSXB [rdx|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD  <||@
  Comment 186 210 r11|DWORD = MOVSXB rdx|DWORD size: DWORD  <||@
  Comment 190 212 TEST r11|DWORD y: 255 size: DWORD  <||@
  Comment 197 214 BRANCH trueDestinationProbability: 3.6476064753699716E-4 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 203 block B18 null  <||@
  Comment 203 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 224 rdx|DWORD = MOVZXB rdx|DWORD size: DWORD  <||@
  Comment 206 226 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 210 228 stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 214 230 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 219 232 JUMP ~[] destination: B18 -> B28  <||@
  Comment 219 block B28 null  <||@
  Comment 219 324 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 219 326 r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD state [bci:11]  <||@
  Comment 219 [rsi:0, r10:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11, duringCall: false, rethrow: false]
              |0             |1                  |2               |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |-  |-  |-  |-  |- 
     stack:   |rdx|DWORD     |                   |                |   |   |   |   |    <||@
  Comment 219 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 223 328 r8|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 229 330 rdi|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 234 332 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 237 334 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B75  <||@
  Comment 243 block B29 null  <||@
  Comment 243 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 243 338 rax|DWORD[.] = MOV [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 248 340 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 252 342 rdi|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 254 344 CMP (x: rax|QWORD[.], y: stack:40|QWORD[.]) size: QWORD  <||@
  Comment 259 346 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B33  <||@
  Comment 265 block B33 null  <||@
  Comment 265 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 265 376 rbp|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 268 378 TEST (x: rbp|DWORD[.], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 270 380 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B39  <||@
  Comment 276 block B34 null  <||@
  Comment 276 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 276 384 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 279 386 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B38  <||@
  Comment 285 block B35 null  <||@
  Comment 285 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 285 390 rcx|DWORD[.] = MOV [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 290 392 CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:11]  <||@
  Comment 290 [rcx:0, rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11, duringCall: false, rethrow: false]
              |0             |1                  |2               |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |-  |-  |-  |-  |- 
     stack:   |rdx|DWORD     |                   |                |   |   |   |   |    <||@
  Comment 290 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 290 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 301 394 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 307 block B36 null  <||@
  Comment 307 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 307 398 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 311 400 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 316 402 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:102]  <||@
  Comment 316 9  <||@
  Comment 319 {HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)>}  <||@
  Comment 324 []at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 325 404 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 334 12  <||@
  Comment 344 block B4 null  <||@
  Comment 344 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 50 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 344 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 351 52 BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 357 block B5 null  <||@
  Comment 357 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 58 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 357 [rdx:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 357 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 359 60 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 362 62 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2]  <||@
  Comment 362 7  <||@
  Comment 375 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 380 [stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 381 64 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 386 66 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 389 68 r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 2]  <||@
  Comment 389 [rdx:0, rsi:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 389 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 397 70 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 401 72 r11|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 408 74 r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 411 76 CMP r10|DWORD y: 512 size: DWORD  <||@
  Comment 418 82 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 421 78 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8  <||@
  Comment 427 block B6 null  <||@
  Comment 427 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 84 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 430 86 JUMP ~[] destination: B6 -> B7  <||@
  Comment 435 block B21 null  <||@
  Comment 435 250 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 435 252 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 442 254 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B81  <||@
  Comment 448 block B22 null  <||@
  Comment 448 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 448 258 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 451 260 rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 2]  <||@
  Comment 451 [rdx:0, rsi:0, r10:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 451 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 458 262 rcx|DWORD = SHR rcx|DWORD size: DWORD  <||@
  Comment 460 264 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 467 266 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B79  <||@
  Comment 473 block B23 null  <||@
  Comment 473 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 473 270 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 2]  <||@
  Comment 473 [rdx:0, rsi:0, r10:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1          |2 
     locals:  |-         |-          |- 
     stack:   |r8|DWORD  |rcx|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 473 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 481 272 r9|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 487 274 r9|DWORD = AND (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 490 276 rbx|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 495 278 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 498 280 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78  <||@
  Comment 504 block B24 null  <||@
  Comment 504 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 504 284 rdi|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 508 286 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 511 288 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77  <||@
  Comment 517 block B25 null  <||@
  Comment 517 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 517 292 rcx|DWORD = MOVSXB [rdi|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 522 294 rcx|DWORD = MOVZXB rcx|DWORD size: DWORD  <||@
  Comment 525 296 rcx|DWORD = SHL rcx|DWORD y: 8 size: DWORD  <||@
  Comment 528 298 rdx|DWORD = MOVZXB [rbx|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 533 300 rcx|DWORD = OR (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 535 302 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 537 304 BRANCH trueDestinationProbability: 3.6476064753699716E-4 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 543 block B27 null  <||@
  Comment 543 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 543 314 stack:52|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 547 316 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 551 318 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 556 320 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 558 322 JUMP ~[] destination: B27 -> B28  <||@
  Comment 563 block B30 null  <||@
  Comment 563 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 350 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 566 352 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 572 block B31 null  <||@
  Comment 572 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 572 356 rdx|DWORD[.] = MOV [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 577 358 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 581 360 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 586 362 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 591 364 JUMP ~[] destination: B31 -> B50  <||@
  Comment 591 block B50 null  <||@
  Comment 591 542 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 591 544 rcx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 595 546 r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 599 548 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 602 550 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B59 falseDestination: B50 -> B52  <||@
  Comment 608 block B52 null  <||@
  Comment 608 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 608 560 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 608 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 615 562 BRANCH trueDestinationProbability: 0.12575621779072377 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B59  <||@
  Comment 621 block B59 null  <||@
  Comment 621 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 554 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 626 612 CMP rcx|DWORD y: 512 size: DWORD  <||@
  Comment 632 614 BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B64  <||@
  Comment 638 block B60 null  <||@
  Comment 638 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 638 618 CMP (x: r11|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:33]  <||@
  Comment 638 [rsi:0, r8:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33, duringCall: false, rethrow: false]
              |0             |1                  |2          |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |stack:64|DWORD  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |           |                |   |   |   |    <||@
  Comment 638 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 646 620 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B62  <||@
  Comment 652 block B61 null  <||@
  Comment 652 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 652 624 MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 657 626 rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 661 628 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 670 12  <||@
  Comment 680 block B8 null  <||@
  Comment 680 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 110 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 683 112 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 686 114 JUMP ~[] destination: B8 -> B21  <||@
  Comment 691 block B9 null  <||@
  Comment 691 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 691 118 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 691 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 698 120 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 704 block B11 null  <||@
  Comment 704 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 704 132 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 708 134 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 711 138 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 2]  <||@
  Comment 711 7  <||@
  Comment 727 {HotSpotMethod<Equivalence.hashCode(Object)>}  <||@
  Comment 732 [stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 733 140 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 738 142 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 741 144 rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 2]  <||@
  Comment 741 [rdx:0, rsi:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 741 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 748 146 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 752 148 r8|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 759 150 r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 762 152 CMP rcx|DWORD y: 512 size: DWORD  <||@
  Comment 768 154 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20  <||@
  Comment 774 block B12 null  <||@
  Comment 774 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 158 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 777 160 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 779 162 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 785 block B14 null  <||@
  Comment 785 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 176 r11|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 793 178 r10|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 799 180 r10|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 802 182 r9|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 808 184 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 813 186 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 817 188 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 822 190 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 825 192 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 828 194 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 831 196 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 836 198 JUMP ~[] destination: B14 -> B15  <||@
  Comment 841 block B64 null  <||@
  Comment 841 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 841 646 r10|DWORD = MOVE input: byte[0|0x0]  <||@
  Comment 847 648 rax|DWORD = MOVE input: byte[0|0x0]  <||@
  Comment 852 650 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 857 652 JUMP ~[] destination: B64 -> B65  <||@
  Comment 857 block B65 null  <||@
  Comment 857 654 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 857 656 CMP rcx|DWORD y: 131072 size: DWORD  <||@
  Comment 863 658 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B71  <||@
  Comment 869 block B66 null  <||@
  Comment 869 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 662 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:68]  <||@
  Comment 869 [rsi:0, r8:0]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 68, duringCall: false, rethrow: false]
              |0             |1  |2          |3               |4  |5  |6          |7 
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD  |stack:64|DWORD  |-  |-  |rdx|DWORD  |-   <||@
  Comment 869 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 877 664 CMP (x: rcx|DWORD, y: stack:52|DWORD) size: DWORD  <||@
  Comment 881 666 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B70  <||@
  Comment 887 block B67 null  <||@
  Comment 887 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 887 670 CMP (x: rcx|DWORD, y: stack:56|DWORD) size: DWORD  <||@
  Comment 891 672 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 897 block B68 null  <||@
  Comment 897 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 897 676 r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 902 678 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 906 680 MOVB (x: [r9|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 911 682 MOVB (x: [rcx|DWORD + r8|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 916 684 rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 920 686 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 929 12  <||@
  Comment 939 block B39 null  <||@
  Comment 939 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 939 424 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 939 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 945 430 stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 949 432 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 954 426 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 960 block B40 null  <||@
  Comment 960 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 960 434 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 965 436 NULLCHECK [r10|QWORD[.]] state [bci:11]  <||@
  Comment 965 [rax:0, r10:0, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11, duringCall: false, rethrow: false]
              |0                  |1             |2               |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |stack:60|DWORD  |-  |-  |-  |-  |- 
     stack:   |rdx|DWORD          |              |                |   |   |   |   |    <||@
  Comment 965 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 968 438 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 971 440 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 974 442 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 30]  <||@
  Comment 974 7  <||@
  Comment 991 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 996 [stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |-   <||@
  Comment 997 448 JUMP ~[] destination: B40 -> B44  <||@
  Comment 997 block B44 null  <||@
  Comment 997 488 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 997 444 rdi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1001 446 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1006 490 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 1009 492 CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:33]  <||@
  Comment 1009 [rdx:0, rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33, duringCall: false, rethrow: false]
              |0             |1                  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                |                |   |   |   |    <||@
  Comment 1009 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1016 494 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B44 -> B45 falseDestination: B44 -> B73  <||@
  Comment 1022 block B45 null  <||@
  Comment 1022 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1022 498 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 1026 500 rcx|DWORD[.] = MOV [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1030 502 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 1037 504 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1039 506 BRANCH trueDestinationProbability: 0.06941669128251464 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49  <||@
  Comment 1045 block B49 null  <||@
  Comment 1045 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1045 536 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1048 538 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1051 540 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1056 block B53 null  <||@
  Comment 1056 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1056 566 rdx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1059 568 r10|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 1065 570 CMP rcx|DWORD y: 512 size: DWORD  <||@
  Comment 1071 576 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1076 572 BRANCH trueDestinationProbability: 0.7172659508813088 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B57  <||@
  Comment 1082 block B54 null  <||@
  Comment 1082 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1082 578 CMP (x: r11|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:33]  <||@
  Comment 1082 [rsi:0, r8:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33, duringCall: false, rethrow: false]
              |0             |1                  |2          |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |stack:64|DWORD  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |           |                |   |   |   |    <||@
  Comment 1082 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1090 580 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 1096 block B55 null  <||@
  Comment 1096 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1096 584 MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 1101 586 rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1105 588 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1114 12  <||@
  Comment 1124 block B20 null  <||@
  Comment 1124 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1124 244 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1127 246 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 248 JUMP ~[] destination: B20 -> B21  <||@
  Comment 1135 block B41 null  <||@
  Comment 1135 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1135 456 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 1135 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 1141 458 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 1147 block B43 null  <||@
  Comment 1147 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1147 472 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1df33e71 encoding: base: 0 shift: 3  <||@
  Comment 1151 474 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1154 476 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1159 478 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1162 480 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 30]  <||@
  Comment 1162 7  <||@
  Comment 1175 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 1180 [stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |-   <||@
  Comment 1181 486 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1186 block B57 null  <||@
  Comment 1186 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1186 600 rax|DWORD = SAR r10|DWORD y: 8 size: DWORD  <||@
  Comment 1192 602 JUMP ~[] destination: B57 -> B65  <||@
  Comment 1197 block B46 null  <||@
  Comment 1197 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1197 510 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1202 512 CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} state [bci:33]  <||@
  Comment 1202 [rsi:0, r8:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33, duringCall: false, rethrow: false]
              |0             |1                  |2          |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |stack:64|DWORD  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |           |                |   |   |   |    <||@
  Comment 1202 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1202 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1213 514 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 1219 block B47 null  <||@
  Comment 1219 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1219 518 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1224 520 rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1227 522 r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1232 524 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:102]  <||@
  Comment 1232 9  <||@
  Comment 1239 {HotSpotMethod<EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)>}  <||@
  Comment 1244 []at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351) [bci: 102, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1245 526 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1254 12  <||@
  Comment 1264 block B17 null  <||@
  Comment 1264 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1264 218 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1269 220 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1278 12  <||@
  Comment 1288 block B26 null  <||@
  Comment 1288 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1288 308 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1293 310 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1302 12  <||@
  Comment 1312 block B42 null  <||@
  Comment 1312 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1312 462 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1317 468 JUMP ~[] destination: B42 -> B44  <||@
  Comment 1322 block B13 null  <||@
  Comment 1322 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1322 166 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1327 168 MOV [r15|QWORD + 668] y: -156427 size: DWORD  <||@
  Comment 1338 170 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1345 172 DEOPT info [bci:43, 2]  <||@
  Comment 1345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1350 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1351 block B75 null  <||@
  Comment 1351 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1351 738 r10|DWORD = MOVE input: int[-173083|0xfffffffffffd5be5]  <||@
  Comment 1357 742 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1357 block B76 null  <||@
  Comment 1357 744 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1357 740 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1362 746 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1369 748 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1376 750 DEOPT info [bci:11]  <||@
  Comment 1376 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1381 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:336) [bci: 11, duringCall: false, rethrow: false]
              |0             |1                  |2          |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |-  |-  |-  |-  |- 
     stack:   |rdx|DWORD     |                   |           |   |   |   |   |    <||@
  Comment 1382 block B48 null  <||@
  Comment 1382 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1382 530 r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed]  <||@
  Comment 1388 532 JUMP ~[] destination: B48 -> B74  <||@
  Comment 1388 block B74 null  <||@
  Comment 1388 728 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1388 730 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1395 732 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1402 734 DEOPT info [bci:33]  <||@
  Comment 1402 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1407 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33, duringCall: false, rethrow: false]
              |0             |1                  |2          |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |stack:64|DWORD  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |           |                |   |   |   |    <||@
  Comment 1408 block B56 null  <||@
  Comment 1408 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1408 592 r10|DWORD = MOVE input: int[-192539|0xfffffffffffd0fe5]  <||@
  Comment 1414 594 JUMP ~[] destination: B56 -> B63  <||@
  Comment 1414 block B63 null  <||@
  Comment 1414 636 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1414 638 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1421 640 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1428 642 DEOPT info [bci:33]  <||@
  Comment 1428 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1433 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:339) [bci: 33, duringCall: false, rethrow: false]
              |0             |1                  |2          |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |stack:64|DWORD  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |           |                |   |   |   |    <||@
  Comment 1434 block B38 null  <||@
  Comment 1434 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1434 416 r10|DWORD = MOVE input: int[-178971|0xfffffffffffd44e5]  <||@
  Comment 1440 420 JUMP ~[] destination: B38 -> B76  <||@
  Comment 1442 block B10 null  <||@
  Comment 1442 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1442 124 MOV [r15|QWORD + 668] y: -152083 size: DWORD  <||@
  Comment 1453 126 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1460 128 DEOPT info [bci:0]  <||@
  Comment 1460 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1465 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1466 block B32 null  <||@
  Comment 1466 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1466 368 r10|DWORD = MOVE input: int[-175899|0xfffffffffffd50e5]  <||@
  Comment 1472 372 JUMP ~[] destination: B32 -> B76  <||@
  Comment 1474 block B62 null  <||@
  Comment 1474 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1474 632 r10|DWORD = MOVE input: int[-197659|0xfffffffffffcfbe5]  <||@
  Comment 1480 634 JUMP ~[] destination: B62 -> B63  <||@
  Comment 1482 block B77 null  <||@
  Comment 1482 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1482 754 r10|DWORD = MOVE input: int[-169499|0xfffffffffffd69e5]  <||@
  Comment 1488 756 JUMP ~[] destination: B77 -> B80  <||@
  Comment 1488 block B80 null  <||@
  Comment 1488 770 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1488 772 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1495 774 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1502 776 DEOPT info [bci:64, 2]  <||@
  Comment 1502 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1507 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1          |2 
     locals:  |-         |-          |- 
     stack:   |r8|DWORD  |rcx|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1508 block B78 null  <||@
  Comment 1508 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1508 760 r10|DWORD = MOVE input: int[-166939|0xfffffffffffd73e5]  <||@
  Comment 1514 762 JUMP ~[] destination: B78 -> B80  <||@
  Comment 1516 block B70 null  <||@
  Comment 1516 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1516 698 r10|DWORD = MOVE input: int[-202011|0xfffffffffffceae5]  <||@
  Comment 1522 702 JUMP ~[] destination: B70 -> B72  <||@
  Comment 1522 block B72 null  <||@
  Comment 1522 712 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1522 708 r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1527 714 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1534 716 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1541 718 DEOPT info [bci:68]  <||@
  Comment 1541 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1546 [rsi:0]at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:346) [bci: 68, duringCall: false, rethrow: false]
              |0             |1  |2          |3         |4  |5  |6          |7 
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD  |r8|DWORD  |-  |-  |rdx|DWORD  |-   <||@
  Comment 1547 block B79 null  <||@
  Comment 1547 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 766 r10|DWORD = MOVE input: int[-165139|0xfffffffffffd7aed]  <||@
  Comment 1553 768 JUMP ~[] destination: B79 -> B80  <||@
  Comment 1555 block B69 null  <||@
  Comment 1555 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1555 690 r10|DWORD = MOVE input: int[-204571|0xfffffffffffce0e5]  <||@
  Comment 1561 694 JUMP ~[] destination: B69 -> B72  <||@
  Comment 1563 block B19 null  <||@
  Comment 1563 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1563 236 MOV [r15|QWORD + 668] y: -162843 size: DWORD  <||@
  Comment 1574 238 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1581 240 DEOPT info [bci:64, 2]  <||@
  Comment 1581 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1586 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1          |2 
     locals:  |-         |-          |- 
     stack:   |r8|DWORD  |r11|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1587 block B37 null  <||@
  Comment 1587 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1587 408 r10|DWORD = MOVE input: int[-181011|0xfffffffffffd3ced]  <||@
  Comment 1593 412 JUMP ~[] destination: B37 -> B76  <||@
  Comment 1598 block B81 null  <||@
  Comment 1598 778 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1598 780 MOV [r15|QWORD + 668] y: -159251 size: DWORD  <||@
  Comment 1609 782 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1616 784 DEOPT info [bci:52, 2]  <||@
  Comment 1616 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1621 [rsi:0, stack:40]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:335) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1622 block B73 null  <||@
  Comment 1622 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1622 722 r10|DWORD = MOVE input: int[-183579|0xfffffffffffd32e5]  <||@
  Comment 1628 724 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1633 726 JUMP ~[] destination: B73 -> B74  <||@
  Comment 1638 block B71 null  <||@
  Comment 1638 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1638 706 r10|DWORD = MOVE input: int[-199699|0xfffffffffffcf3ed]  <||@
  Comment 1644 710 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1646 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1646 4  <||@
  Comment 1652 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1652 5  <||@
  HexCodeFile>>> <|@
end_nmethod
