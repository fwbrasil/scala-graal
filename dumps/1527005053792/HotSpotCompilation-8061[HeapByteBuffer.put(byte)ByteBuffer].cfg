begin_compilation
  name " HotSpotCompilation-8061[java.nio.HeapByteBuffer.put(byte)]"
  method "HotSpotCompilation-8061[java.nio.HeapByteBuffer.put(byte)]"
  date 1527005189175
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i85 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i85  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/nio/HeapByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v90 v92 v12 v91 v93 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i85 v35 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:520) [bci: 1]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v91 
=== Succesors ===
next: i86 
=== Usages ===
v15 i19 i9 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v91 #next: i86  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i86 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:520) [bci: 5]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v92 
=== Succesors ===
next: v65 
=== Usages ===
v15 
=== Predecessor ===
i85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v92 #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:520) [bci: 8]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i86 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i85 y: i86  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32 [-128 - 127]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i54 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HeapByteBuffer.put(byte)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HeapByteBuffer.java
sourceLine: 169
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v80 i88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:520) [bci: 8]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
i86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v62 #falseSuccessor: v64  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:520) [bci: 8]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a87 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a87  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a87 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 1]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v90 
=== Succesors ===
next: i88 
=== Usages ===
v95 v94 
=== Predecessor ===
v62 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v90 #next: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a87 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v94 
=== Succesors ===
next: i89 
=== Usages ===
v45 
=== Predecessor ===
a87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v94 #next: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.HeapByteBuffer.ix(HeapByteBuffer.java:131) [bci: 2]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
=== Succesors ===
next: v73 
=== Usages ===
i9 
=== Predecessor ===
i88 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v93 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.HeapByteBuffer.ix(HeapByteBuffer.java:131) [bci: 5]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 9]
stamp: i32
=== Inputs ===
x: i85 
y: i89 
=== Succesors ===
=== Usages ===
v95 v45 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i85 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i88 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v72 
=== Usages ===
=== Predecessor ===
i89 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v70 #falseSuccessor: v72  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
v55 
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:522) [bci: 25]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:522) [bci: 26]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
stamp: i32
=== Inputs ===
x: i85 
y: i18 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i85 y: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:522) [bci: 27]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v91 
value: i19 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v91 value: i19 stateAfter: - lastLocationAccess: - #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i9 
index: a87 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i9 index: a87  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
resultBits: 8
stamp: i8
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v70 
address: v95 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v70 address: v95 value: i54 stateAfter: - lastLocationAccess: - #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:170) [bci: 15]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -11803
stableDimension: 0
stamp: i32 [-11803] ⇊00000000ffffd1e5 ⇈00000000ffffd1e5
stampKind: i32
value: int[-11803|0xffffffffffffd1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:520) [bci: 8]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8723
stableDimension: 0
stamp: i32 [-8723] ⇊00000000ffffdded ⇈00000000ffffdded
stampKind: i32
value: int[-8723|0xffffffffffffdded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v64 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-11803 - -8723] ⇊00000000ffffd1e5 ⇈00000000ffffdffd
valueDescription: i32
=== Inputs ===
merge: v74 
values: i82 i84 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v74 values: i82 i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v83 
=== Succesors ===
next: v80 
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v83 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid a77 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i78 
speculation: a77 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i78 speculation: a77  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i85 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i85  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/nio/HeapByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v90 v92 v12 v91 v93 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i85 v35 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i85 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:520) [bci: 1]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v91 
=== Succesors ===
next: i86 
=== Usages ===
v15 i19 i9 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v91 #next: i86  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i86 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:520) [bci: 5]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v92 
=== Succesors ===
next: v65 
=== Usages ===
v15 
=== Predecessor ===
i85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v92 #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:520) [bci: 8]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i86 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i85 y: i86  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32 [-128 - 127]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i54 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HeapByteBuffer.put(byte)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HeapByteBuffer.java
sourceLine: 169
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v80 i88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:520) [bci: 8]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
i86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v62 #falseSuccessor: v64  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@9fa6296 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:520) [bci: 8]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a87 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a87  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a87 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 1]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v90 
=== Succesors ===
next: i88 
=== Usages ===
v95 v94 
=== Predecessor ===
v62 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v90 #next: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a87 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i88 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v94 
=== Succesors ===
next: i89 
=== Usages ===
v45 
=== Predecessor ===
a87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v94 #next: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i89 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.HeapByteBuffer.ix(HeapByteBuffer.java:131) [bci: 2]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
=== Succesors ===
next: v73 
=== Usages ===
i9 
=== Predecessor ===
i88 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v93 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.HeapByteBuffer.ix(HeapByteBuffer.java:131) [bci: 5]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 9]
stamp: i32
=== Inputs ===
x: i85 
y: i89 
=== Succesors ===
=== Usages ===
v95 v45 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i85 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i88 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v72 
=== Usages ===
=== Predecessor ===
i89 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v70 #falseSuccessor: v72  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = ADD (x: v2|DWORD, ~y: [v0|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
v55 
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:522) [bci: 25]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:522) [bci: 26]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
stamp: i32
=== Inputs ===
x: i85 
y: i18 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i85 y: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:522) [bci: 27]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v91 
value: i19 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v91 value: i19 stateAfter: - lastLocationAccess: - #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
result [v6|DWORD + v4|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i9 
index: a87 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i9 index: a87  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
resultBits: 8
stamp: i8
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v70 
address: v95 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v70 address: v95 value: i54 stateAfter: - lastLocationAccess: - #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:170) [bci: 15]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|DWORD + v4|DWORD[.] * 8 + 16], y: v1|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
result int[-11803|0xffffffffffffd1e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -11803
stableDimension: 0
stamp: i32 [-11803] ⇊00000000ffffd1e5 ⇈00000000ffffd1e5
stampKind: i32
value: int[-11803|0xffffffffffffd1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-11803|0xffffffffffffd1e5]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:520) [bci: 8]
at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result int[-8723|0xffffffffffffdded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8723
stableDimension: 0
stamp: i32 [-8723] ⇊00000000ffffdded ⇈00000000ffffdded
stampKind: i32
value: int[-8723|0xffffffffffffdded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v64 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-8723|0xffffffffffffdded]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i78 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-11803 - -8723] ⇊00000000ffffd1e5 ⇈00000000ffffdffd
valueDescription: i32
=== Inputs ===
merge: v74 
values: i82 i84 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v74 values: i82 i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v83 
=== Succesors ===
next: v80 
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v83 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid a77 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i78 
speculation: a77 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i78 speculation: a77  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@9fa6296 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = ADD (x: v2|DWORD, ~y: [v0|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|DWORD + v4|DWORD[.] * 8 + 16], y: v1|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-8723|0xffffffffffffdded]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-11803|0xffffffffffffd1e5]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // java.nio.ByteBuffer.hb:byte[]
     4: aload_0       
     5: aload_0       
     6: invokevirtual #17         // java.nio.Buffer.nextPutIndex:()int
     9: invokevirtual #11         // ix:(int)int
    12: iload_1       
    13: bastore       
    14: aload_0       
    15: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@9fa6296 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction r8|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOVB (x: [r8|DWORD + r10|DWORD[.] * 8 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11803|0xffffffffffffd1e5] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // java.nio.ByteBuffer.hb:byte[]
     4: aload_0       
     5: aload_0       
     6: invokevirtual #17         // java.nio.Buffer.nextPutIndex:()int
     9: invokevirtual #11         // ix:(int)int
    12: iload_1       
    13: bastore       
    14: aload_0       
    15: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@9fa6296 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction r8|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOVB (x: [r8|DWORD + r10|DWORD[.] * 8 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11803|0xffffffffffffd1e5] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // java.nio.ByteBuffer.hb:byte[]
     4: aload_0       
     5: aload_0       
     6: invokevirtual #17         // java.nio.Buffer.nextPutIndex:()int
     9: invokevirtual #11         // ix:(int)int
    12: iload_1       
    13: bastore       
    14: aload_0       
    15: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4618448b561c443bd00f8e3c000000448b562c468b1cd50c000000448bc044034624453bd80f863a000000ffc0894618438854d010488bc6488b6c24104883c418850500000000c5f877c341baedddffff4589979c0200004d89a7a8020000e8000000009041bae5d1ffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@9fa6296 slotKind: QWORD  <||@
  Comment 48 10 rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 51 12 r10|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 55 14 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 58 16 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 64 block B1 null  <||@
  Comment 64 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 64 20 r10|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 68 22 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 68 [rsi:0, r10:0]at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 24 r8|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 36]) size: DWORD  <||@
  Comment 83 26 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 86 28 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 92 block B2 null  <||@
  Comment 92 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 92 32 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 94 34 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 97 36 MOVB (x: [r8|DWORD + r10|DWORD[.] * 8 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 102 38 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 105 40 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 114 12  <||@
  Comment 124 block B4 null  <||@
  Comment 124 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 -1 r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded]  <||@
  Comment 130 44 JUMP ~[] destination: B4 -> B5  <||@
  Comment 130 block B5 null  <||@
  Comment 130 50 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 130 52 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 137 54 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 144 56 DEOPT info [bci:0]  <||@
  Comment 144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 149 [rsi:0]at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 150 block B3 null  <||@
  Comment 150 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 150 -1 r10|DWORD = MOVE input: int[-11803|0xffffffffffffd1e5]  <||@
  Comment 156 48 JUMP ~[] destination: B3 -> B5  <||@
  Comment 158 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 158 4  <||@
  Comment 164 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 164 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8061[java.nio.HeapByteBuffer.put(byte)]"
  method "HotSpotCompilation-8061[java.nio.HeapByteBuffer.put(byte)]"
  date 1527005189219
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b2a1e0 448b560849c1e203493bc20f856fbccdfe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4618448b561c443bd00f8e3c000000448b562c468b1cd50c000000448bc044034624453bd80f863a000000ffc0894618438854d010488bc6488b6c24104883c4188505ae4dd6fcc5f877c341baedddffff4589979c0200004d89a7a8020000e889d3cdfe9041bae5d1ffffebe4e89d0312ff90e877d2cdfe90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@9fa6296 slotKind: QWORD  <||@
  Comment 48 10 rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 51 12 r10|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 55 14 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 58 16 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 64 block B1 null  <||@
  Comment 64 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 64 20 r10|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 68 22 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 68 [rsi:0, r10:0]at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 24 r8|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 36]) size: DWORD  <||@
  Comment 83 26 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 86 28 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 92 block B2 null  <||@
  Comment 92 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 92 32 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 94 34 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 97 36 MOVB (x: [r8|DWORD + r10|DWORD[.] * 8 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 102 38 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 105 40 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 114 12  <||@
  Comment 124 block B4 null  <||@
  Comment 124 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 -1 r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded]  <||@
  Comment 130 44 JUMP ~[] destination: B4 -> B5  <||@
  Comment 130 block B5 null  <||@
  Comment 130 50 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 130 52 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 137 54 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 144 56 DEOPT info [bci:0]  <||@
  Comment 144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 149 [rsi:0]at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:169) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 150 block B3 null  <||@
  Comment 150 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 150 -1 r10|DWORD = MOVE input: int[-11803|0xffffffffffffd1e5]  <||@
  Comment 156 48 JUMP ~[] destination: B3 -> B5  <||@
  Comment 158 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 158 4  <||@
  Comment 164 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 164 5  <||@
  HexCodeFile>>> <|@
end_nmethod
