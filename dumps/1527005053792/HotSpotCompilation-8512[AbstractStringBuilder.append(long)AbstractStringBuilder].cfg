begin_compilation
  name " HotSpotCompilation-8512[java.lang.AbstractStringBuilder.append(long)]"
  method "HotSpotCompilation-8512[java.lang.AbstractStringBuilder.append(long)]"
  date 1527005193844
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 139]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a640 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 v663 v653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/AbstractStringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?266 v332 v15 v1072 ?259 ?36 v1055 ?140 v452 ?133 v327 v1056 ?572 v48 j735 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1039 j153 v7 j153 v18 j22 ?36 v61 ?140 j1038 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:693) [bci: 1]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 ?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:693) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2 
y: j4 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j2 y: j4  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:693) [bci: 5]
stamp: void
trueSuccessorProbability: 9.122574224581514E-4
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4561553312872285184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1040 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1040  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1040 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1072 
=== Succesors ===
next: v497 
=== Usages ===
v746 
=== Predecessor ===
v8 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1072 #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1040 
y: v745 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1040 y: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v746 
=== Succesors ===
trueSuccessor: v494 
falseSuccessor: v496 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v746 #trueSuccessor: v494 #falseSuccessor: v496  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4561553312872285184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a285 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a285  <|@  <|@
f <@~|@floating>@ <|@
tid a11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 9]
rawvalue: "-9223372036854775808"
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object[String:"-9223372036854775808"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
returnStamp: a# Ljava/lang/StringBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@28081068
stamp: void
targetMethod: HotSpotMethod<StringBuilder.append(String)>
=== Inputs ===
arguments: a1 a11 
=== Succesors ===
=== Usages ===
a285 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a11  <|@  <|@
tid ?266 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(long)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 694
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - 
=== Succesors ===
=== Usages ===
?571 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - -  <|@  <|@
tid ?571 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?266 
values: - - 
=== Succesors ===
=== Usages ===
a285 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?266 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a285 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
polymorphic: false
stamp: a# Ljava/lang/StringBuilder;
targetMethod: Direct#StringBuilder.append
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v332 
stateDuring: ?571 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v332 stateDuring: ?571 #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:695) [bci: 16]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a285 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(long)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 693
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 j4 - - - 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 j4 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 331
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607174201915641711
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j72 j100 i230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j49 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:478) [bci: 0]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
rawvalue: 10
stableDimension: 0
stamp: i64 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i64
value: long[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
j52 j82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 28]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i289 i53 i67 j73 i83 i673 j101 v126 i231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
rawvalue: 19
stableDimension: 0
stamp: i32 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i32
value: int[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
v56 i35 v85 i229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 j979 v992 j919 j927 v937 j985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 20]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2 
y: j16 
=== Succesors ===
=== Usages ===
v21 v147 v322 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2 y: j16  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 20]
stamp: void
trueSuccessorProbability: 0.12749942115219115
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v19 #falseSuccessor: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4593757480463256817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 24]
stamp: i64
=== Inputs ===
value: j2 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: j2  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B9" 
    successors "B7" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603118360387522802
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j82 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v81 
values: j49 j102 
=== Succesors ===
=== Usages ===
j101 v90 j100 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v81 values: j49 j102  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v81 
values: i26 i289 
=== Succesors ===
=== Usages ===
i289 v85 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v81 values: i26 i289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.308254702047254
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v80 
=== Succesors ===
next: v89 
=== Usages ===
j82 i83 v87 v91 v97 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v80 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i55 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i83 y: i55  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
trueSuccessorProbability: 0.9754513925251492
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v86 #falseSuccessor: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602997013163293592
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:480) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid i289 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 29]
stamp: i32
=== Inputs ===
x: i83 
y: i26 
=== Succesors ===
=== Usages ===
i35 i83 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i83 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:480) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j22 
y: j82 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j22 y: j82  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:480) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
trueSuccessorProbability: 0.2127875849180494
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v94 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v91 #falseSuccessor: v94  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592872563214774035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:481) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v81 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v81 #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4601263171516037995
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid j100 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: i64 [-9223372036854775808 - 9223372036854775792] ⇈fffffffffffffff0
=== Inputs ===
x: j82 
y: i71 
=== Succesors ===
=== Usages ===
j102 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j82 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j82 
y: i26 
=== Succesors ===
=== Usages ===
j102 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j82 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid j102 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j100 
y: j101 
=== Succesors ===
=== Usages ===
j82 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j100 y: j101  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
=== Inputs ===
loopBegin: v81 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v81  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 4578919844131722865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:484) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v81 
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v81 #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid i290 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 20
stableDimension: 0
stamp: i32 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i32
value: int[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
i35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v87 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606026836872461363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B13" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615639110617147468
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j52 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v51 
values: j49 j74 
=== Succesors ===
=== Usages ===
j73 v61 j72 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v51 values: j49 j74  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v51 
values: i26 i67 
=== Succesors ===
=== Usages ===
i67 v56 i35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v51 values: i26 i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.308254702047254
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v50 
=== Succesors ===
next: v60 
=== Usages ===
j52 i53 v58 v62 v68 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v50 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i55 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i55  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9754513925251492
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v57 #falseSuccessor: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615431510609192960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:480) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:480) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2 
y: j52 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2 y: j52  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:480) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
trueSuccessorProbability: 0.2127875849180494
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605196436840643330
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:481) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v51 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v51 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613676206285351232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 29]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: i32
=== Inputs ===
x: i53 
y: i26 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i53 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid j72 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: i64 [-9223372036854775808 - 9223372036854775792] ⇈fffffffffffffff0
=== Inputs ===
x: j52 
y: i71 
=== Succesors ===
=== Usages ===
j74 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j52 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid j73 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j52 
y: i26 
=== Succesors ===
=== Usages ===
j74 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j52 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid j74 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j72 
y: j73 
=== Succesors ===
=== Usages ===
j52 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j72 y: j73  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
=== Inputs ===
loopBegin: v51 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v51  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591307620917709195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:484) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v51 
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v51 #next: v267  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" "B16" "B10" 
    successors "B18" "B21" 
    xhandlers
    flags 
    probability 4607174201915641711
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v33 
values: i289 i53 i55 i290 
=== Succesors ===
=== Usages ===
?36 i38 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: i289 i53 i55 i290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 v267 v329 
=== Succesors ===
next: a1041 
=== Usages ===
i35 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 v267 v329 #next: a1041  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1041 v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1041 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1056 
=== Succesors ===
next: i1042 
=== Usages ===
a339 v1070 v1057 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1056 #next: i1042  <|@  <|@
tid ?36 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(long)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 698
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 j2 - - - i35 
=== Succesors ===
=== Usages ===
i1042 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 j2 - - - i35  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1041 
=== Succesors ===
=== Usages ===
i1042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1041  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1042 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?36 
guard: - 
address: v1057 
=== Succesors ===
next: i1043 
=== Usages ===
i124 i616 v594 
=== Predecessor ===
a1041 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?36 guard: - address: v1057 #next: i1043  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1043 v369 v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1043 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:699) [bci: 39]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
=== Succesors ===
next: v129 
=== Usages ===
i38 
=== Predecessor ===
i1042 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1055 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:699) [bci: 43]
stamp: i32
=== Inputs ===
x: i35 
y: i1043 
=== Succesors ===
=== Usages ===
?140 i159 ?259 v369 v380 v452 i124 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i35 y: i1043  <|@  <|@
tid ?259 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(long)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 701
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i38 
=== Succesors ===
=== Usages ===
?238 ?160 ?220 ?226 ?190 ?197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i38  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i32
=== Inputs ===
x: i38 
y: i1042 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i38 y: i1042  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i26 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i124 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid a339 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1041 
=== Succesors ===
=== Usages ===
?572 ?133 a299 a299 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1041  <|@  <|@
f <@~|@floating>@ <|@
tid i574 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i575 i575 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:436) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i573 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i575 i575 v1026 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 i154 v247 i154 a697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
trueSuccessorProbability: 0.9529560614867585
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
i1043 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v127 #falseSuccessor: v128  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4606750854342328502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:435) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 0.200374012309526
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v320 #falseSuccessor: v321  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596041357700081481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:436) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid j1039 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 24]
stamp: i64
=== Inputs ===
value: j2 
=== Succesors ===
=== Usages ===
j153 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: j2  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B71" 
    xhandlers
    flags 
    probability 4605032519989941988
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: i132 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i132  <|@  <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3d35cde7
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a1 i38 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i38  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(long)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 j2 - - i38 
=== Succesors ===
=== Usages ===
?133 ?572 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 j2 - - i38  <|@  <|@
tid ?572 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?140 
values: - - a1 a339 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - a1 a339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v452 
stateDuring: ?572 
=== Succesors ===
next: v586 
=== Usages ===
?133 v682 j748 i673 a697 v723 v580 v594 i616 
=== Predecessor ===
v128 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v452 stateDuring: ?572 #next: v586  <|@  <|@
tid ?133 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?140 
values: - - a1 a339 i132 
=== Succesors ===
=== Usages ===
a697 v592 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - a1 a339 i132  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i125 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i132 y: i125  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v580 
=== Succesors ===
trueSuccessor: v585 
falseSuccessor: v581 
=== Usages ===
=== Predecessor ===
i132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v580 #trueSuccessor: v585 #falseSuccessor: v581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v592  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 61]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?133 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?133  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: j676 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j676 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j720 
=== Usages ===
v1073 v1074 
=== Predecessor ===
v581 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j720  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j676 
index: - 
=== Succesors ===
=== Usages ===
j720 v722 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j676 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j720 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
=== Succesors ===
next: j721 
=== Usages ===
j680 v1075 v1076 a696 v1081 v1077 v1078 v1079 v1080 
=== Predecessor ===
j676 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1073 #next: j721  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j676 
index: - 
=== Succesors ===
=== Usages ===
j721 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j676 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j721 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1074 
=== Succesors ===
next: v685 
=== Usages ===
v686 
=== Predecessor ===
j720 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1074 #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i681 
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i132 y: i681  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 v759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v682 
=== Succesors ===
trueSuccessor: v684 
falseSuccessor: v683 
=== Usages ===
=== Predecessor ===
j721 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v682 #trueSuccessor: v684 #falseSuccessor: v683  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4586257026091504646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid i673 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i132 
y: i26 
=== Succesors ===
=== Usages ===
i705 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i132 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i704 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i705 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i705 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i673 
y: i704 
=== Succesors ===
=== Usages ===
i675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i673 y: i704  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i675 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i705 
y: i674 
=== Succesors ===
=== Usages ===
j679 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i705 y: i674  <|@  <|@
f <@~|@floating>@ <|@
tid j679 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i675 
=== Succesors ===
=== Usages ===
j680 v1077 v1078 v1079 v1080 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i675  <|@  <|@
f <@~|@floating>@ <|@
tid j680 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i64
=== Inputs ===
x: j679 
y: j720 
=== Succesors ===
=== Usages ===
v686 v722 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j679 y: j720  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j721 
y: j680 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j721 y: j680  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v686 
=== Succesors ===
trueSuccessor: v691 
falseSuccessor: v690 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v686 #trueSuccessor: v691 #falseSuccessor: v690  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4556438766115510041
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v691 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4586196064040947544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
value: j680 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1073 value: j680 stateAfter: - lastLocationAccess: - #next: v709  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: j720 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
address: v1077 
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1077 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: j720 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
address: v1078 
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1078 #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: j720 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
address: v1079 
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1079 #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: j720 
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
address: v1080 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1080 #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1075 
value: i132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1075 value: i132 stateAfter: - lastLocationAccess: - #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1076 
value: j672 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1076 value: j672 stateAfter: - lastLocationAccess: - #next: v727  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1081 
value: v747 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1081 value: v747 stateAfter: - lastLocationAccess: - #next: v695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: a696 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j720 
=== Succesors ===
next: v698 
=== Usages ===
a701 
=== Predecessor ===
v695 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j720 #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
a696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4572068871092092022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v687  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4572556567496548840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v687 v689 
=== Succesors ===
next: a697 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v687 v689 #next: a697  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a697 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?133 
arguments: v671 i132 i125 
=== Succesors ===
next: v700 
=== Usages ===
a701 
=== Predecessor ===
v688 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?133 arguments: v671 i132 i125 #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
a697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v699 
values: a696 a697 
=== Succesors ===
=== Usages ===
v1083 a623 v1071 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v699 values: a696 a697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v698 v700 
=== Succesors ===
next: v889 
=== Usages ===
a701 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v698 v700 #next: v889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v762 
=== Usages ===
j890 j892 
=== Predecessor ===
v699 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1042 
y: i132 
=== Succesors ===
=== Usages ===
i616 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1042 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid i616 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v594 
trueValue: i1042 
falseValue: i132 
=== Succesors ===
=== Usages ===
j749 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v594 trueValue: i1042 falseValue: i132  <|@  <|@
f <@~|@floating>@ <|@
tid j749 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i616 
=== Succesors ===
=== Usages ===
j954 v1083 j753 v759 v886 j936 j942 j946 j950 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i616  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j749 
y: j672 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j749 y: j672  <|@  <|@
f <@~|@floating>@ <|@
tid j953 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j954 j1005 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j895 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j909 j972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j949 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j950 j1002 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j917 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j918 j978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j945 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j946 j999 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j667 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j984 j926 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j941 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j942 j996 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j336 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j990 j934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j935 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j936 j991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v760 
falseSuccessor: v761 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v760 #falseSuccessor: v761  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B48" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
v760 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a701 
index: - 
=== Succesors ===
=== Usages ===
j892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a701 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j892 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v889 
address: v1071 
=== Succesors ===
=== Usages ===
v1084 v1086 v1088 v1090 v1092 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v889 address: v1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1041 
=== Succesors ===
=== Usages ===
j890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1041  <|@  <|@
f <@~|@floating>@ <|@
tid j890 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v889 
address: v1070 
=== Succesors ===
=== Usages ===
v1085 v1087 v1089 v1091 v1093 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v889 address: v1070  <|@  <|@
f <@~|@floating>@ <|@
tid j936 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j749 
y: j935 
=== Succesors ===
=== Usages ===
v937 v939 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j935  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j936 
y: j16 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j936 y: j16  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v937 
=== Succesors ===
trueSuccessor: v763 
falseSuccessor: v764 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v937 #trueSuccessor: v763 #falseSuccessor: v764  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v775  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
v763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B104" 
    successors "B35" "B104" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j927 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v767 
values: j16 j934 
=== Succesors ===
=== Usages ===
v1093 j934 v1092 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v767 values: j16 j934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v766 
=== Succesors ===
next: v1044 
=== Usages ===
v1044 v771 v772 j927 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v766 #next: v1044  <|@  <|@
f <@~|@floating>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j890 
index: j927 
=== Succesors ===
=== Usages ===
v1044 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j890 index: j927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v767 
address: v1093 
=== Succesors ===
next: v1023 
=== Usages ===
v1023 
=== Predecessor ===
v767 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v767 address: v1093 #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j892 
index: j927 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j892 index: j927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1092 
value: v1044 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1092 value: v1044 stateAfter: - lastLocationAccess: - #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid j934 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j927 
y: j336 
=== Succesors ===
=== Usages ===
j919 j927 v939 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j927 y: j336  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j936 
y: j934 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j936 y: j934  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v939 
=== Succesors ===
trueSuccessor: v771 
falseSuccessor: v773 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v939 #trueSuccessor: v771 #falseSuccessor: v773  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v767 
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v767 #next: v777  <|@  <|@
f <@*|@fixed>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
v771 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j919 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v776 
values: j16 j934 
=== Succesors ===
=== Usages ===
v1091 j926 j910 v943 v1090 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v776 values: j16 j934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v775 v777 
=== Succesors ===
next: v799 
=== Usages ===
j919 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v775 v777 #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid j942 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j749 
y: j941 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j941  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j942 
y: j919 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j942 y: j919  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v943 
=== Succesors ===
trueSuccessor: v798 
falseSuccessor: v797 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v943 #trueSuccessor: v798 #falseSuccessor: v797  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v802  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
v1045 
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j890 
index: j919 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j890 index: j919  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v797 
address: v1091 
=== Succesors ===
next: v1021 
=== Usages ===
v1021 
=== Predecessor ===
v797 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v797 address: v1091 #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j892 
index: j919 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j892 index: j919  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1090 
value: v1045 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1090 value: v1045 stateAfter: - lastLocationAccess: - #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid j926 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j919 
y: j667 
=== Succesors ===
=== Usages ===
j910 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j919 y: j667  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
v1021 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j910 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v787 
values: j926 j919 
=== Succesors ===
=== Usages ===
v1089 j918 j902 v947 v1088 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v787 values: j926 j919  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v786 v802 
=== Succesors ===
next: v805 
=== Usages ===
j910 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v786 v802 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid j946 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j749 
y: j945 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j945  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j946 
y: j910 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j946 y: j910  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v947 
=== Succesors ===
trueSuccessor: v804 
falseSuccessor: v803 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v947 #trueSuccessor: v804 #falseSuccessor: v803  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v808  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
v804 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1046 
=== Usages ===
v1046 
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1046  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j890 
index: j910 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j890 index: j910  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v803 
address: v1089 
=== Succesors ===
next: v1019 
=== Usages ===
v1019 
=== Predecessor ===
v803 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v803 address: v1089 #next: v1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j892 
index: j910 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j892 index: j910  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1088 
value: v1046 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1088 value: v1046 stateAfter: - lastLocationAccess: - #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid j918 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j910 
y: j917 
=== Succesors ===
=== Usages ===
j902 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j910 y: j917  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
v1019 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j902 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v791 
values: j918 j910 
=== Succesors ===
=== Usages ===
v1087 j909 j893 v951 v1086 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v791 values: j918 j910  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v790 v808 
=== Succesors ===
next: v811 
=== Usages ===
j902 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v790 v808 #next: v811  <|@  <|@
f <@~|@floating>@ <|@
tid j950 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j749 
y: j949 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j949  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j950 
y: j902 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j950 y: j902  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v951 
=== Succesors ===
trueSuccessor: v810 
falseSuccessor: v809 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v951 #trueSuccessor: v810 #falseSuccessor: v809  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@*|@fixed>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
v810 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1047 
=== Usages ===
v1047 
=== Predecessor ===
v811 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j890 
index: j902 
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j890 index: j902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v809 
address: v1087 
=== Succesors ===
next: v1017 
=== Usages ===
v1017 
=== Predecessor ===
v809 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v809 address: v1087 #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j892 
index: j902 
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j892 index: j902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1086 
value: v1047 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v793 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1086 value: v1047 stateAfter: - lastLocationAccess: - #next: v793  <|@  <|@
f <@~|@floating>@ <|@
tid j909 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j902 
y: j895 
=== Succesors ===
=== Usages ===
j893 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j902 y: j895  <|@  <|@
f <@*|@fixed>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
v1017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j893 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v794 
values: j909 j902 
=== Succesors ===
=== Usages ===
v1085 v955 v1084 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v794 values: j909 j902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v793 v814 
=== Succesors ===
next: v817 
=== Usages ===
j893 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v793 v814 #next: v817  <|@  <|@
f <@~|@floating>@ <|@
tid j954 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j749 
y: j953 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j953  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j954 
y: j893 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j954 y: j893  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v955 
=== Succesors ===
trueSuccessor: v816 
falseSuccessor: v815 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v955 #trueSuccessor: v816 #falseSuccessor: v815  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v820  <|@  <|@
f <@*|@fixed>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
v816 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1048 
=== Usages ===
i1048 
=== Predecessor ===
v817 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1048  <|@  <|@
f <@~|@floating>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j890 
index: j893 
=== Succesors ===
=== Usages ===
i1048 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j890 index: j893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1048 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v815 
address: v1085 
=== Succesors ===
next: v1015 
=== Usages ===
v1015 
=== Predecessor ===
v815 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v815 address: v1085 #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j892 
index: j893 
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j892 index: j893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1084 
value: i1048 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v796 
=== Usages ===
=== Predecessor ===
i1048 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1084 value: i1048 stateAfter: - lastLocationAccess: - #next: v796  <|@  <|@
f <@*|@fixed>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
v1015 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B30" "B47" "B46" 
    successors "B49" "B67" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v779 v796 v820 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v779 v796 v820 #next: v958  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v827 
=== Usages ===
j960 
=== Predecessor ===
v780 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v827  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i132 
=== Succesors ===
=== Usages ===
j753 v886 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j749 
y: j748 
=== Succesors ===
=== Usages ===
v827 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j749 y: j748  <|@  <|@
f <@*|@fixed>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v886 
=== Succesors ===
trueSuccessor: v826 
falseSuccessor: v825 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v886 #trueSuccessor: v826 #falseSuccessor: v825  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v830 
=== Usages ===
=== Predecessor ===
v827 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v830  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a701 
index: j749 
=== Succesors ===
=== Usages ===
j960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a701 index: j749  <|@  <|@
f <@~|@floating>@ <|@
tid j960 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v958 
address: v1083 
=== Succesors ===
=== Usages ===
v1094 v1095 v1096 v1097 v1098 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v958 address: v1083  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j748 
y: j749 
=== Succesors ===
=== Usages ===
j1005 j991 j996 j999 j1002 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j748 y: j749  <|@  <|@
f <@~|@floating>@ <|@
tid j991 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j753 
y: j935 
=== Succesors ===
=== Usages ===
v992 v994 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j753 y: j935  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j991 
y: j16 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j991 y: j16  <|@  <|@
f <@*|@fixed>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v992 
=== Succesors ===
trueSuccessor: v828 
falseSuccessor: v829 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v992 #trueSuccessor: v828 #falseSuccessor: v829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v840 
=== Predecessor ===
v828 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
v829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" 
    successors "B53" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j985 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v832 
values: j16 j990 
=== Succesors ===
=== Usages ===
v1098 j990 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v832 values: j16 j990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v831 
=== Succesors ===
next: v1033 
=== Usages ===
j985 v835 v836 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v831 #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j960 
index: j985 
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j960 index: j985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1098 
value: v1034 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1098 value: v1034 stateAfter: - lastLocationAccess: - #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid j990 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j985 
y: j336 
=== Succesors ===
=== Usages ===
j979 j985 v994 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j985 y: j336  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j991 
y: j990 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j991 y: j990  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v994 
=== Succesors ===
trueSuccessor: v835 
falseSuccessor: v837 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v994 #trueSuccessor: v835 #falseSuccessor: v837  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v832 
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v832 #next: v841  <|@  <|@
f <@*|@fixed>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v840 
=== Predecessor ===
v835 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j979 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v840 
values: j16 j990 
=== Succesors ===
=== Usages ===
v1097 j984 j973 v997 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v840 values: j16 j990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v839 v841 
=== Succesors ===
next: v862 
=== Usages ===
j979 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v839 v841 #next: v862  <|@  <|@
f <@~|@floating>@ <|@
tid j996 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j753 
y: j941 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j753 y: j941  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j996 
y: j979 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j996 y: j979  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v997 
=== Succesors ===
trueSuccessor: v861 
falseSuccessor: v860 
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v997 #trueSuccessor: v861 #falseSuccessor: v860  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v861 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1032 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j960 
index: j979 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j960 index: j979  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1097 
value: v1037 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1097 value: v1037 stateAfter: - lastLocationAccess: - #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid j984 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j979 
y: j667 
=== Succesors ===
=== Usages ===
j973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j979 y: j667  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v1032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j973 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v851 
values: j984 j979 
=== Succesors ===
=== Usages ===
v1096 j978 j967 v1000 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v851 values: j984 j979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v850 v865 
=== Succesors ===
next: v868 
=== Usages ===
j973 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v850 v865 #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid j999 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j753 
y: j945 
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j753 y: j945  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j999 
y: j973 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j999 y: j973  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1000 
=== Succesors ===
trueSuccessor: v867 
falseSuccessor: v866 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1000 #trueSuccessor: v867 #falseSuccessor: v866  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
v867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1030 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1030  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j960 
index: j973 
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j960 index: j973  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1096 
value: v1036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1096 value: v1036 stateAfter: - lastLocationAccess: - #next: v853  <|@  <|@
f <@~|@floating>@ <|@
tid j978 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j973 
y: j917 
=== Succesors ===
=== Usages ===
j967 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j973 y: j917  <|@  <|@
f <@*|@fixed>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
v1030 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j967 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v854 
values: j978 j973 
=== Succesors ===
=== Usages ===
v1095 j972 j961 v1003 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v854 values: j978 j973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v853 v871 
=== Succesors ===
next: v874 
=== Usages ===
j967 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v853 v871 #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid j1002 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j753 
y: j949 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j753 y: j949  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1002 
y: j967 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1002 y: j967  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1003 
=== Succesors ===
trueSuccessor: v873 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1003 #trueSuccessor: v873 #falseSuccessor: v872  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v873 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j960 
index: j967 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j960 index: j967  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1095 
value: v1035 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1095 value: v1035 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid j972 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j967 
y: j895 
=== Succesors ===
=== Usages ===
j961 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j967 y: j895  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v1028 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j961 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v857 
values: j972 j967 
=== Succesors ===
=== Usages ===
v1094 v1006 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v857 values: j972 j967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v856 v877 
=== Succesors ===
next: v880 
=== Usages ===
j961 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v856 v877 #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid j1005 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j753 
y: j953 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j753 y: j953  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1005 
y: j961 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1005 y: j961  <|@  <|@
f <@*|@fixed>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1006 
=== Succesors ===
trueSuccessor: v879 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1006 #trueSuccessor: v879 #falseSuccessor: v878  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v883  <|@  <|@
f <@*|@fixed>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
v879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1026  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j960 
index: j961 
=== Succesors ===
=== Usages ===
v1026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j960 index: j961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1094 
value: i573 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1094 value: i573 stateAfter: - lastLocationAccess: - #next: v859  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
v1026 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v836  <|@  <|@
f <@*|@fixed>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v832 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v832  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B68" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v843 
=== Usages ===
=== Predecessor ===
v827 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v843  <|@  <|@
f <@*|@fixed>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B65" "B64" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v843 v859 v883 
=== Succesors ===
next: a623 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v843 v859 v883 #next: a623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a701 
=== Succesors ===
next: v455 
=== Usages ===
a299 a454 a299 
=== Predecessor ===
v844 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a701 #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid a454 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: Compress
stamp: n! -
=== Inputs ===
value: a623 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1056 
value: a454 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j735 
=== Usages ===
=== Predecessor ===
a623 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1056 value: a454 stateAfter: - lastLocationAccess: - #next: j735  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v741 
=== Usages ===
j737 
=== Predecessor ===
v455 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v741  <|@  <|@
f <@~|@floating>@ <|@
tid i736 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j735 
y: i736 
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j735 y: i736  <|@  <|@
f <@~|@floating>@ <|@
tid j740 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j737 
index: j740 
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j740  <|@  <|@
f <@~|@floating>@ <|@
tid i742 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1082 
value: i742 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
j735 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1082 value: i742 stateAfter: - lastLocationAccess: - #next: v147  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:435) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 0.200374012309526
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v146 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v145 #falseSuccessor: v146  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4576582604300494654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:436) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid j1038 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 24]
stamp: i64
=== Inputs ===
value: j2 
=== Succesors ===
=== Usages ===
j153 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: j2  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v145 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4585577136578945478
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" "B19" "B20" 
    successors "B72" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v151 
values: j2 j1038 j1039 j2 
=== Succesors ===
=== Usages ===
j158 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v151 values: j2 j1038 j1039 j2  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [0 - 45] ⇈000000000000002d
valueDescription: i32
=== Inputs ===
merge: v151 
values: i125 i148 i148 i125 
=== Succesors ===
=== Usages ===
?226 ?160 ?220 ?238 ?190 ?197 v247 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v151 values: i125 i148 i148 i125  <|@  <|@
f <@~|@floating>@ <|@
tid a299 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v151 
values: a623 a623 a339 a339 
=== Succesors ===
=== Usages ===
?226 v1064 v1062 ?160 ?238 v1060 ?197 ?220 ?190 v1066 v1067 v1069 v1059 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v151 values: a623 a623 a339 a339  <|@  <|@
f <@~|@floating>@ <|@
tid i575 <|@
d <@d|@=== Debug Properties ===
stamp: i16 [0 - 45] ⇈000000000000002d
valueDescription: i16
=== Inputs ===
merge: v151 
values: i573 i574 i574 i573 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v151 values: i573 i574 i574 i573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v150 v152 v323 v324 
=== Succesors ===
next: i1049 
=== Usages ===
j153 i154 a299 i575 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v150 v152 v323 v324 #next: i1049  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a299 
index: - 
=== Succesors ===
=== Usages ===
i1049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1049 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 69]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
=== Succesors ===
next: v156 
=== Usages ===
v430 v443 v395 v408 v360 v371 
=== Predecessor ===
v151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1066 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid a187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 76]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: char[100]{0, 0, 0, 0, 0, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 0, 0, 0, 0, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1068 v1063 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a183 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 63]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: char[100]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 v1061 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 37]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
j272 i208 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
j174 i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 47]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j177 i211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i255 i256 i492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i182 i214 i234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j161 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 2147483648
stableDimension: 0
stamp: i64 [2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i64
value: long[2147483648|0x80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
i1049 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B99" 
    successors "B73" "B96" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4609572320479263676
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j158 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v157 
values: j153 j272 
=== Succesors ===
=== Usages ===
?160 v162 i192 j271 j179 j287 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v157 values: j153 j272  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v157 
values: i38 i255 
=== Succesors ===
=== Usages ===
?160 i195 i182 i255 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v157 values: i38 i255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.5320624094826258
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v156 
=== Succesors ===
next: v168 
=== Usages ===
j158 i159 v163 v191 v548 v538 v543 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v156 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j158 
y: j161 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j158 y: j161  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 0.652714924542596
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v163 
falseSuccessor: v167 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v163 #falseSuccessor: v167  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" 
    xhandlers
    flags 
    probability 4607174201915641713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:452) [bci: 86]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v157 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v157 #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at java.lang.Long.getChars(Long.java:452) [bci: 87]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
resultBits: 32
stamp: i32
=== Inputs ===
value: j158 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j158  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:453) [bci: 92]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536] ⇊0000000000010000 ⇈0000000000010000
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:453) [bci: 90]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B91" 
    successors "B75" "B88" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4608459051069517355
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i195 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v194 
values: i159 i256 
=== Succesors ===
=== Usages ===
?197 i224 i214 i256 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v194 values: i159 i256  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v194 
values: i192 i278 
=== Succesors ===
=== Usages ===
?197 v199 i225 i288 i213 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v194 values: i192 i278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.284641231414215
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Long.getChars(Long.java:453) [bci: 90]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v193 
=== Succesors ===
next: v205 
=== Usages ===
i195 i196 v200 v221 v533 v523 v528 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v193 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:453) [bci: 94]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i196 
y: i198 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i196 y: i198  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:453) [bci: 94]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 0.7784274516077427
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v200 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v200 #falseSuccessor: v204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 157]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v194 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v194 #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:469) [bci: 200]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: -524288
stableDimension: 0
stamp: i32 [-524288] ⇊00000000fff80000 ⇈00000000fff80000
stampKind: i32
value: int[-524288|0xfffffffffff80000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a235 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 187]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 159]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 52429
stableDimension: 0
stamp: i32 [52429] ⇊000000000000cccd ⇈000000000000cccd
stampKind: i32
value: int[52429|0xcccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 192]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 157]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B84" 
    successors "B77" "B86" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i224 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v223 
values: i195 i234 
=== Succesors ===
=== Usages ===
?226 i234 i492 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v223 values: i195 i234  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v223 
values: i196 i229 
=== Succesors ===
=== Usages ===
?226 i228 i233 ?238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v223 values: i196 i229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.663450088284811
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 157]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v222 
=== Succesors ===
next: v510 
=== Usages ===
i224 i225 v241 v244 v514 v509 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v222 #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 161]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i225 
y: i227 
=== Succesors ===
=== Usages ===
i229 v240 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i225 y: i227  <|@  <|@
f <@~|@floating>@ <|@
tid i229 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 164]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [0 - 8191] ⇈0000000000001fff
=== Inputs ===
x: i228 
y: i55 
=== Succesors ===
=== Usages ===
i225 i230 i231 ?238 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i228 y: i55  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.getChars(Long.java:466) [bci: 172]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [0 - 65528] ⇈000000000000fff8
=== Inputs ===
x: i229 
y: i71 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i229 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.getChars(Long.java:466) [bci: 176]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [0 - 16382] ⇈0000000000003ffe
=== Inputs ===
x: i229 
y: i26 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i229 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:466) [bci: 177]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [0 - 81910] ⇈000000000001fffe
=== Inputs ===
x: i230 
y: i231 
=== Succesors ===
=== Usages ===
i233 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i230 y: i231  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Long.getChars(Long.java:466) [bci: 178]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i225 
y: i232 
=== Succesors ===
=== Usages ===
v1058 ?238 v346 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i225 y: i232  <|@  <|@
f <@~|@floating>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 192]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i233 
y: i345 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i233 y: i345  <|@  <|@
f <@*|@fixed>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 192]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v346 
=== Succesors ===
trueSuccessor: v506 
falseSuccessor: v509 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v346 #trueSuccessor: v506 #falseSuccessor: v509  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B85" 
    xhandlers
    flags 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 192]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
i1050 
=== Predecessor ===
v510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 182]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i224 
y: i181 
=== Succesors ===
=== Usages ===
i224 v1059 ?238 v360 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i224 y: i181  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 193]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i234 
y: i1049 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i234 y: i1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 193]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v514 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v511 #falseSuccessor: v514  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B84" 
    xhandlers
    flags 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 193]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1050 
=== Usages ===
v368 
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1050  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a235 
index: i233 
=== Succesors ===
=== Usages ===
i1050 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a235 index: i233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1050 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 192]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v506 
address: v1058 
=== Succesors ===
next: v368 
=== Usages ===
v368 
=== Predecessor ===
v511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v506 address: v1058 #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a299 
index: i234 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: i234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 193]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v511 
address: v1059 
value: i1050 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
i1050 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v511 address: v1059 value: i1050 stateAfter: - lastLocationAccess: - #next: v246  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 194
code: ResolvedJavaMethodBytecode<Long.getChars(long, int, char[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 193]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rethrowException: false
sourceFile: Long.java
sourceLine: 468
stackSize: 0
=== Inputs ===
outerFrameState: ?259 
values: - - - a299 - - i233 i234 i154 i229 i225 
=== Succesors ===
=== Usages ===
v490 v517 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?259 values: - - - a299 - - i233 i234 i154 i229 i225  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:469) [bci: 200]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
x: i228 
y: i239 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i228 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:469) [bci: 200]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 0.3754528776035644
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v241 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v241 #falseSuccessor: v245  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:469) [bci: 203]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v223 
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v223 #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Long.getChars(Long.java:471) [bci: 208]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i125 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i154 y: i125  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:471) [bci: 208]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 0.7994949909673181
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v248 
falseSuccessor: v249 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v248 #falseSuccessor: v249  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 4605369860874186673
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:474) [bci: 220]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:702) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
value: i38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1055 value: i38 stateAfter: - lastLocationAccess: - #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:703) [bci: 69]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4596385384456355578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 211]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid i492 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 212]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i224 
y: i254 
=== Succesors ===
=== Usages ===
v1060 v371 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i224 y: i254  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 219]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i492 
y: i1049 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i492 y: i1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 219]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v371 
=== Succesors ===
trueSuccessor: v516 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v371 #trueSuccessor: v516 #falseSuccessor: v518  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 4596385384456355578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 219]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
v379 
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a299 
index: i492 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: i492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 219]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v516 
address: v1060 
value: i575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v516 address: v1060 value: i575 stateAfter: - lastLocationAccess: - #next: v380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:702) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
value: i38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1055 value: i38 stateAfter: - lastLocationAccess: - #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:703) [bci: 69]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 219]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 372
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 219]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4610163498181875718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 157]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?238 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?238 #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 157]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
loopBegin: v223 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v223  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 193]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v223 
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v223 #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid i665 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -92443
stableDimension: 0
stamp: i32 [-92443] ⇊00000000fffe96e5 ⇈00000000fffe96e5
stampKind: i32
value: int[-92443|0xfffffffffffe96e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 192]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v223 
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v223 #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid i660 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88859
stableDimension: 0
stamp: i32 [-88859] ⇊00000000fffea4e5 ⇈00000000fffea4e5
stampKind: i32
value: int[-88859|0xfffffffffffea4e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
v509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i661 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-92443 - -88859] ⇊00000000fffe84e5 ⇈00000000fffeb6e5
valueDescription: i32
=== Inputs ===
merge: v658 
values: i660 i665 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v658 values: i660 i665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v659 v664 
=== Succesors ===
next: v663 
=== Usages ===
i661 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v659 v664 #next: v663  <|@  <|@
tid ?226 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<Long.getChars(long, int, char[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Long.java
sourceLine: 465
stackSize: 0
=== Inputs ===
outerFrameState: ?259 
values: - - - a299 - - - i224 i154 - i225 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?259 values: - - - a299 - - - i224 i154 - i225  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?226 
actionAndReason: i661 
speculation: a640 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?226 actionAndReason: i661 speculation: a640  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B89" "B94" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:454) [bci: 97]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i196 
y: i276 
=== Succesors ===
=== Usages ===
i278 i1102 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i196 y: i276  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i288 
y: i173 
=== Succesors ===
=== Usages ===
?220 i196 i208 ?220 i211 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i288 y: i173  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [-2147483648 - 2147483584] ⇈00000000ffffffc0
=== Inputs ===
x: i278 
y: i171 
=== Succesors ===
=== Usages ===
i210 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i278 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid i1101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 114]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: -32
stableDimension: 0
stamp: i32 [-32] ⇊00000000ffffffe0 ⇈00000000ffffffe0
stampKind: i32
value: int[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1102 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 114]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i288 
y: i1101 
=== Succesors ===
=== Usages ===
i210 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i288 y: i1101  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 115]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i208 
y: i1102 
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i208 y: i1102  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 119]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i278 
y: i176 
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i278 y: i176  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 120]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i210 
y: i211 
=== Succesors ===
=== Usages ===
i213 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i210 y: i211  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 121]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i196 
y: i212 
=== Succesors ===
=== Usages ===
v1063 ?220 v382 v1061 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i196 y: i212  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 139]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i213 
y: i381 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i213 y: i381  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 139]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v523 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v520 #falseSuccessor: v523  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 139]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
i1052 i1051 
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i195 
y: i181 
=== Succesors ===
=== Usages ===
v1062 v395 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i195 y: i181  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 140]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i214 
y: i1049 
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i214 y: i1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 140]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v395 
=== Succesors ===
trueSuccessor: v525 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v395 #trueSuccessor: v525 #falseSuccessor: v528  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 140]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
v403 
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid i256 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 142]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i195 
y: i254 
=== Succesors ===
=== Usages ===
i195 v1064 ?220 v408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i195 y: i254  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 153]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i256 
y: i1049 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i256 y: i1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 153]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v408 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v533 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v408 #trueSuccessor: v530 #falseSuccessor: v533  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B74" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 153]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1051 
=== Usages ===
v416 
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1051  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a183 
index: i213 
=== Succesors ===
=== Usages ===
i1051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a183 index: i213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 139]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v520 
address: v1061 
=== Succesors ===
next: v403 
=== Usages ===
v403 
=== Predecessor ===
v530 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v520 address: v1061 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a299 
index: i214 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: i214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 140]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v525 
address: v1062 
value: i1051 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1052 
=== Usages ===
=== Predecessor ===
i1051 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v1062 value: i1051 stateAfter: - lastLocationAccess: - #next: i1052  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a187 
index: i213 
=== Succesors ===
=== Usages ===
i1052 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a187 index: i213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1052 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 152]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v520 
address: v1063 
=== Succesors ===
next: v416 
=== Usages ===
v416 
=== Predecessor ===
v403 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v520 address: v1063 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a299 
index: i256 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: i256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 153]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v530 
address: v1064 
value: i1052 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
i1052 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v530 address: v1064 value: i1052 stateAfter: - lastLocationAccess: - #next: v489  <|@  <|@
tid ?220 <|@
d <@d|@=== Debug Properties ===
bci: 154
code: ResolvedJavaMethodBytecode<Long.getChars(long, int, char[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 153]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rethrowException: false
sourceFile: Long.java
sourceLine: 459
stackSize: 0
=== Inputs ===
outerFrameState: ?259 
values: - - - a299 - - i213 i256 i154 i278 i278 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?259 values: - - - a299 - - i213 i256 i154 i278 i278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?220 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?220 #next: v221  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:453) [bci: 90]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
loopBegin: v194 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v194  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 153]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v194 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v194 #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid i657 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104731
stableDimension: 0
stamp: i32 [-104731] ⇊00000000fffe66e5 ⇈00000000fffe66e5
stampKind: i32
value: int[-104731|0xfffffffffffe66e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
v533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 140]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v194 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v194 #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -101403
stableDimension: 0
stamp: i32 [-101403] ⇊00000000fffe73e5 ⇈00000000fffe73e5
stampKind: i32
value: int[-101403|0xfffffffffffe73e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
v528 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 139]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v194 
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v194 #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid i650 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -98075
stableDimension: 0
stamp: i32 [-98075] ⇊00000000fffe80e5 ⇈00000000fffe80e5
stampKind: i32
value: int[-98075|0xfffffffffffe80e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
v523 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i651 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-104731 - -98075] ⇊00000000fffe00e5 ⇈00000000fffef7e5
valueDescription: i32
=== Inputs ===
merge: v648 
values: i650 i655 i657 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v648 values: i650 i655 i657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v649 v654 v656 
=== Succesors ===
next: v653 
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v649 v654 v656 #next: v653  <|@  <|@
tid ?197 <|@
d <@d|@=== Debug Properties ===
bci: 90
code: ResolvedJavaMethodBytecode<Long.getChars(long, int, char[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Long.java
sourceLine: 453
stackSize: 0
=== Inputs ===
outerFrameState: ?259 
values: - - - a299 - - - i195 i154 - i196 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?259 values: - - - a299 - - - i195 i154 - i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?197 
actionAndReason: i651 
speculation: a640 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?197 actionAndReason: i651 speculation: a640  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B97" "B102" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:442) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -6640827866535438581
stableDimension: 0
stamp: i64 [-6640827866535438581] ⇊a3d70a3d70a3d70b ⇈a3d70a3d70a3d70b
stampKind: i64
value: long[-6640827866535438581|0xa3d70a3d70a3d70b]
=== Inputs ===
=== Succesors ===
=== Usages ===
j287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j287 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i64
=== Inputs ===
x: j158 
y: j269 
=== Succesors ===
=== Usages ===
j271 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: j158 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j158 
y: j287 
=== Succesors ===
=== Usages ===
j272 j1100 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j158 y: j287  <|@  <|@
f <@~|@floating>@ <|@
tid j272 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i64 [-144115188075855872 - 144115188075855871]
=== Inputs ===
x: j271 
y: i171 
=== Succesors ===
=== Usages ===
?190 j158 ?190 j174 j177 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j271 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 43]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64 [-9223372036854775808 - 9223372036854775776] ⇈ffffffffffffffe0
=== Inputs ===
x: j272 
y: i173 
=== Succesors ===
=== Usages ===
j175 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j272 y: i173  <|@  <|@
f <@~|@floating>@ <|@
tid j1099 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: -64
stableDimension: 0
stamp: i64 [-64] ⇊ffffffffffffffc0 ⇈ffffffffffffffc0
stampKind: i64
value: long[-64|0xffffffffffffffc0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1100 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1100 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64 [-9223372036854775808 - 9223372036854775744] ⇈ffffffffffffffc0
=== Inputs ===
x: j271 
y: j1099 
=== Succesors ===
=== Usages ===
j175 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j271 y: j1099  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 44]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64 [-9223372036854775808 - 9223372036854775776] ⇈ffffffffffffffe0
=== Inputs ===
x: j174 
y: j1100 
=== Succesors ===
=== Usages ===
j178 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j174 y: j1100  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 48]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j272 
y: i176 
=== Succesors ===
=== Usages ===
j178 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j272 y: i176  <|@  <|@
f <@~|@floating>@ <|@
tid j178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 49]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j175 
y: j177 
=== Succesors ===
=== Usages ===
j179 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j175 y: j177  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64
=== Inputs ===
x: j158 
y: j178 
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j158 y: j178  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 51]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
resultBits: 32
stamp: i32
=== Inputs ===
value: j179 
=== Succesors ===
=== Usages ===
v1068 ?190 v417 v1065 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j179  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i180 
y: i381 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i180 y: i381  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v535 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v535 #falseSuccessor: v538  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B101" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
i1054 i1053 
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i159 
y: i181 
=== Succesors ===
=== Usages ===
v1067 v430 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i159 y: i181  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 69]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i1049 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i182 y: i1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 69]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v540 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v540 #falseSuccessor: v543  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 69]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v549 
=== Usages ===
v438 
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid i255 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i159 
y: i254 
=== Succesors ===
=== Usages ===
i159 v1069 ?190 v443 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i159 y: i254  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i1049 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i255 y: i1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v443 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v443 #trueSuccessor: v545 #falseSuccessor: v548  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1053 
=== Usages ===
v451 
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a183 
index: i180 
=== Succesors ===
=== Usages ===
i1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a183 index: i180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1053 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v535 
address: v1065 
=== Succesors ===
next: v438 
=== Usages ===
v438 
=== Predecessor ===
v545 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v535 address: v1065 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a299 
index: i182 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 69]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v540 
address: v1067 
value: i1053 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1054 
=== Usages ===
=== Predecessor ===
i1053 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v540 address: v1067 value: i1053 stateAfter: - lastLocationAccess: - #next: i1054  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a187 
index: i180 
=== Succesors ===
=== Usages ===
i1054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a187 index: i180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1054 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 81]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v535 
address: v1068 
=== Succesors ===
next: v451 
=== Usages ===
v451 
=== Predecessor ===
v438 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v535 address: v1068 #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a299 
index: i255 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: i255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v545 
address: v1069 
value: i1054 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
i1054 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v545 address: v1069 value: i1054 stateAfter: - lastLocationAccess: - #next: v488  <|@  <|@
tid ?190 <|@
d <@d|@=== Debug Properties ===
bci: 83
code: ResolvedJavaMethodBytecode<Long.getChars(long, int, char[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rethrowException: false
sourceFile: Long.java
sourceLine: 447
stackSize: 0
=== Inputs ===
outerFrameState: ?259 
values: j272 - - a299 j272 - i180 i255 i154 - - 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?259 values: j272 - - a299 j272 - i180 i255 i154 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?190 
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?190 #next: v191  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
loopBegin: v157 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v157  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v157 
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v157 #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid i647 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113691
stableDimension: 0
stamp: i32 [-113691] ⇊00000000fffe43e5 ⇈00000000fffe43e5
stampKind: i32
value: int[-113691|0xfffffffffffe43e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 69]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v157 
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v157 #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid i645 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -110363
stableDimension: 0
stamp: i32 [-110363] ⇊00000000fffe50e5 ⇈00000000fffe50e5
stampKind: i32
value: int[-110363|0xfffffffffffe50e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v157 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v157 #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid i639 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107035
stableDimension: 0
stamp: i32 [-107035] ⇊00000000fffe5de5 ⇈00000000fffe5de5
stampKind: i32
value: int[-107035|0xfffffffffffe5de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" "B100" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i641 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-113691 - -107035] ⇊00000000fffe40e5 ⇈00000000fffe5fe5
valueDescription: i32
=== Inputs ===
merge: v637 
values: i639 i645 i647 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v637 values: i639 i645 i647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v638 v644 v646 
=== Succesors ===
next: v643 
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v638 v644 v646 #next: v643  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Long.getChars(long, int, char[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Long.java
sourceLine: 441
stackSize: 0
=== Inputs ===
outerFrameState: ?259 
values: j158 - - a299 - - - i159 i154 - - 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?259 values: j158 - - a299 - - - i159 i154 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?160 
actionAndReason: i641 
speculation: a640 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?160 actionAndReason: i641 speculation: a640  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v767 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v767  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
result int[100|0x64] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 139]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a640 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 v663 v653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/AbstractStringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?266 v332 v15 v1072 ?259 ?36 v1055 ?140 v452 ?133 v327 v1056 ?572 v48 j735 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1039 j153 v7 j153 v18 j22 ?36 v61 ?140 j1038 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:693) [bci: 1]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 ?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:693) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2 
y: j4 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j2 y: j4  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:693) [bci: 5]
stamp: void
trueSuccessorProbability: 9.122574224581514E-4
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5a051018 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.122574224581514E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4561553312872285184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1040 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1040  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1040 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1040 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1072 
=== Succesors ===
next: v497 
=== Usages ===
v746 
=== Predecessor ===
v8 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1072 #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
result meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1040 
y: v745 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1040 y: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v746 
=== Succesors ===
trueSuccessor: v494 
falseSuccessor: v496 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v746 #trueSuccessor: v494 #falseSuccessor: v496  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4561553312872285184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a285 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a285  <|@  <|@
f <@~|@floating>@ <|@
tid a11 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 9]
rawvalue: "-9223372036854775808"
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object[String:"-9223372036854775808"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
returnStamp: a# Ljava/lang/StringBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@28081068
stamp: void
targetMethod: HotSpotMethod<StringBuilder.append(String)>
=== Inputs ===
arguments: a1 a11 
=== Succesors ===
=== Usages ===
a285 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a11  <|@  <|@
tid ?266 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(long)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 694
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - 
=== Succesors ===
=== Usages ===
?571 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - -  <|@  <|@
tid ?571 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?266 
values: - - 
=== Succesors ===
=== Usages ===
a285 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?266 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a285 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
polymorphic: false
stamp: a# Ljava/lang/StringBuilder;
targetMethod: Direct#StringBuilder.append
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v332 
stateDuring: ?571 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v332 stateDuring: ?571 #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:695) [bci: 16]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a285 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"-9223372036854775808"] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuilder.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 11] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(long)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 693
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 j4 - - - 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 j4 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 331
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -84787 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:693) [bci: 0]
locals: v0|QWORD[.] long[-9223372036854775808|0x8000000000000000] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607174201915641711
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j72 j100 i230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j49 <|@
result long[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:478) [bci: 0]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
rawvalue: 10
stableDimension: 0
stamp: i64 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i64
value: long[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
j52 j82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 28]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i289 i53 i67 j73 i83 i673 j101 v126 i231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
result int[19|0x13] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
rawvalue: 19
stableDimension: 0
stamp: i32 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i32
value: int[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
v56 i35 v85 i229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 j979 v992 j919 j927 v937 j985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 20]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2 
y: j16 
=== Succesors ===
=== Usages ===
v21 v147 v322 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2 y: j16  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 20]
stamp: void
trueSuccessorProbability: 0.12749942115219115
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v19 #falseSuccessor: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12749942115219115 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4593757480463256817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 24]
stamp: i64
=== Inputs ===
value: j2 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: j2  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = NEG v1|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[10|0xa], int[1|0x1]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B9" 
    successors "B7" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603118360387522802
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j82 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v81 
values: j49 j102 
=== Succesors ===
=== Usages ===
j101 v90 j100 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v81 values: j49 j102  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v81 
values: i26 i289 
=== Succesors ===
=== Usages ===
i289 v85 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v81 values: i26 i289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.308254702047254
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v80 
=== Succesors ===
next: v89 
=== Usages ===
j82 i83 v87 v91 v97 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v80 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i55 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i83 y: i55  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
trueSuccessorProbability: 0.9754513925251492
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v86 #falseSuccessor: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD, v7|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9754513925251492 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602997013163293592
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:480) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid i289 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 29]
stamp: i32
=== Inputs ===
x: i83 
y: i26 
=== Succesors ===
=== Usages ===
i35 i83 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i83 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:480) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j22 
y: j82 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j22 y: j82  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:480) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
trueSuccessorProbability: 0.2127875849180494
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v94 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v91 #falseSuccessor: v94  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2127875849180494 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592872563214774035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:481) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v81 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v81 #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4601263171516037995
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid j100 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: i64 [-9223372036854775808 - 9223372036854775792] ⇈fffffffffffffff0
=== Inputs ===
x: j82 
y: i71 
=== Succesors ===
=== Usages ===
j102 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j82 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j82 
y: i26 
=== Succesors ===
=== Usages ===
j102 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j82 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid j102 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j100 
y: j101 
=== Succesors ===
=== Usages ===
j82 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j100 y: j101  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
=== Inputs ===
loopBegin: v81 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v81  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SHL v6|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHL v6|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v9|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD, v8|DWORD] destination: B9 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 4578919844131722865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:484) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v81 
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v81 #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid i290 <|@
result int[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 20
stableDimension: 0
stamp: i32 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i32
value: int[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
i35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v87 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[20|0x14]] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606026836872461363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[10|0xa], int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B13" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615639110617147468
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j52 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v51 
values: j49 j74 
=== Succesors ===
=== Usages ===
j73 v61 j72 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v51 values: j49 j74  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v51 
values: i26 i67 
=== Succesors ===
=== Usages ===
i67 v56 i35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v51 values: i26 i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.308254702047254
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v50 
=== Succesors ===
next: v60 
=== Usages ===
j52 i53 v58 v62 v68 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v50 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i55 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i55  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9754513925251492
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v57 #falseSuccessor: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|QWORD, v13|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9754513925251492 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615431510609192960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:480) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:480) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2 
y: j52 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2 y: j52  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:480) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
trueSuccessorProbability: 0.2127875849180494
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2127875849180494 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605196436840643330
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:481) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v51 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v51 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613676206285351232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 29]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: i32
=== Inputs ===
x: i53 
y: i26 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i53 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid j72 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: i64 [-9223372036854775808 - 9223372036854775792] ⇈fffffffffffffff0
=== Inputs ===
x: j52 
y: i71 
=== Succesors ===
=== Usages ===
j74 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j52 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid j73 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j52 
y: i26 
=== Succesors ===
=== Usages ===
j74 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j52 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid j74 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:482) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j72 
y: j73 
=== Succesors ===
=== Usages ===
j52 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j72 y: j73  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:479) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
=== Inputs ===
loopBegin: v51 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v51  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = SHL v12|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SHL v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v15|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD, v14|DWORD] destination: B15 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591307620917709195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.stringSize(Long.java:484) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v51 
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v51 #next: v267  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[19|0x13]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" "B16" "B10" 
    successors "B18" "B21" 
    xhandlers
    flags 
    probability 4607174201915641711
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i35 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v33 
values: i289 i53 i55 i290 
=== Succesors ===
=== Usages ===
?36 i38 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: i289 i53 i55 i290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 v267 v329 
=== Succesors ===
next: a1041 
=== Usages ===
i35 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 v267 v329 #next: a1041  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1041 v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1041 <|@
result v19|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1056 
=== Succesors ===
next: i1042 
=== Usages ===
a339 v1070 v1057 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1056 #next: i1042  <|@  <|@
tid ?36 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(long)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 698
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 j2 - - - i35 
=== Succesors ===
=== Usages ===
i1042 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 j2 - - - i35  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
result [v19|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1041 
=== Succesors ===
=== Usages ===
i1042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1041  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1042 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?36 
guard: - 
address: v1057 
=== Succesors ===
next: i1043 
=== Usages ===
i124 i616 v594 
=== Predecessor ===
a1041 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?36 guard: - address: v1057 #next: i1043  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1043 v369 v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1043 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:699) [bci: 39]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
=== Succesors ===
next: v129 
=== Usages ===
i38 
=== Predecessor ===
i1042 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1055 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:699) [bci: 43]
stamp: i32
=== Inputs ===
x: i35 
y: i1043 
=== Succesors ===
=== Usages ===
?140 i159 ?259 v369 v380 v452 i124 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i35 y: i1043  <|@  <|@
tid ?259 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(long)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 701
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i38 
=== Succesors ===
=== Usages ===
?238 ?160 ?220 ?226 ?190 ?197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i38  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i32
=== Inputs ===
x: i38 
y: i1042 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i38 y: i1042  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i26 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i124 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid a339 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1041 
=== Succesors ===
=== Usages ===
?572 ?133 a299 a299 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1041  <|@  <|@
f <@~|@floating>@ <|@
tid i574 <|@
result short[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i575 i575 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result int[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:436) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i573 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i575 i575 v1026 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 i154 v247 i154 a697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
trueSuccessorProbability: 0.9529560614867585
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
i1043 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v127 #falseSuccessor: v128  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD - - - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[.] * 8 + 12] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v18|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fd61d61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9529560614867585 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4606750854342328502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:435) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 0.200374012309526
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v320 #falseSuccessor: v321  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.200374012309526 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596041357700081481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:436) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid j1039 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 24]
stamp: i64
=== Inputs ===
value: j2 
=== Succesors ===
=== Usages ===
j153 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: j2  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = NEG v1|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD, int[45|0x2d], v23|QWORD[.], short[45|0x2d]] destination: B19 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B71" 
    xhandlers
    flags 
    probability 4605032519989941988
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD, int[0|0x0], v23|QWORD[.], short[0|0x0]] destination: B20 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: i132 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i132  <|@  <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3d35cde7
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a1 i38 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i38  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(long)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 j2 - - i38 
=== Succesors ===
=== Usages ===
?133 ?572 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 j2 - - i38  <|@  <|@
tid ?572 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?140 
values: - - a1 a339 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - a1 a339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i132 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v452 
stateDuring: ?572 
=== Succesors ===
next: v586 
=== Usages ===
?133 v682 j748 i673 a697 v723 v580 v594 i616 
=== Predecessor ===
v128 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v452 stateDuring: ?572 #next: v586  <|@  <|@
tid ?133 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?140 
values: - - a1 a339 i132 
=== Succesors ===
=== Usages ===
a697 v592 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - a1 a339 i132  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i125 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i132 y: i125  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v580 
=== Succesors ===
trueSuccessor: v585 
falseSuccessor: v581 
=== Usages ===
=== Predecessor ===
i132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v580 #trueSuccessor: v585 #falseSuccessor: v581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v0|QWORD[.] v23|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
locals: v0|QWORD[.] v1|QWORD - - v21|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 49] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v592  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 61]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?133 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?133  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -151649 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v0|QWORD[.] v23|QWORD[.] v25|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
locals: v0|QWORD[.] v1|QWORD - - v21|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: j676 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j676 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j720 
=== Usages ===
v1073 v1074 
=== Predecessor ===
v581 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j720  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j676 
index: - 
=== Succesors ===
=== Usages ===
j720 v722 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j676 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j720 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
=== Succesors ===
next: j721 
=== Usages ===
j680 v1075 v1076 a696 v1081 v1077 v1078 v1079 v1080 
=== Predecessor ===
j676 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1073 #next: j721  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j676 
index: - 
=== Succesors ===
=== Usages ===
j721 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j676 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j721 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1074 
=== Succesors ===
next: v685 
=== Usages ===
v686 
=== Predecessor ===
j720 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1074 #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i681 
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i132 y: i681  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 v759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v682 
=== Succesors ===
trueSuccessor: v684 
falseSuccessor: v683 
=== Usages ===
=== Predecessor ===
j721 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v682 #trueSuccessor: v684 #falseSuccessor: v683  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4586257026091504646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid i673 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i132 
y: i26 
=== Succesors ===
=== Usages ===
i705 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i132 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i704 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i705 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i705 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i673 
y: i704 
=== Succesors ===
=== Usages ===
i675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i673 y: i704  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i675 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i705 
y: i674 
=== Succesors ===
=== Usages ===
j679 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i705 y: i674  <|@  <|@
f <@~|@floating>@ <|@
tid j679 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i675 
=== Succesors ===
=== Usages ===
j680 v1077 v1078 v1079 v1080 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i675  <|@  <|@
f <@~|@floating>@ <|@
tid j680 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i64
=== Inputs ===
x: j679 
y: j720 
=== Succesors ===
=== Usages ===
v686 v722 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j679 y: j720  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j721 
y: j680 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j721 y: j680  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v686 
=== Succesors ===
trueSuccessor: v691 
falseSuccessor: v690 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v686 #trueSuccessor: v691 #falseSuccessor: v690  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA [v28|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = AND v29|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVSXD v30|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4556438766115510041
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v691 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4586196064040947544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
value: j680 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1073 value: j680 stateAfter: - lastLocationAccess: - #next: v709  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
result [v31|QWORD + v26|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: j720 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
address: v1077 
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1077 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
result [v31|QWORD + v26|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: j720 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
address: v1078 
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1078 #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
result [v31|QWORD + v26|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: j720 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
address: v1079 
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1079 #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
result [v31|QWORD + v26|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j679 
index: j720 
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j679 index: j720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
address: v1080 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1080 #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
result [v26|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1075 
value: i132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1075 value: i132 stateAfter: - lastLocationAccess: - #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
result [v26|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1076 
value: j672 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1076 value: j672 stateAfter: - lastLocationAccess: - #next: v727  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
result [v26|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1081 
value: v747 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1081 value: v747 stateAfter: - lastLocationAccess: - #next: v695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: a696 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a696 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j720 
=== Succesors ===
next: v698 
=== Usages ===
a701 
=== Predecessor ===
v695 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j720 #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
a696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v26|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v26|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v26|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v26|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + 12], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v26|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v26|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B26 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4572068871092092022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v687  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4572556567496548840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v687 v689 
=== Succesors ===
next: a697 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v687 v689 #next: a697  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a697 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?133 
arguments: v671 i132 i125 
=== Succesors ===
next: v700 
=== Usages ===
a701 
=== Predecessor ===
v688 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?133 arguments: v671 i132 i125 #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
a697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v0|QWORD[.] v23|QWORD[.] v25|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
locals: v0|QWORD[.] v1|QWORD - - v21|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 49] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a701 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v699 
values: a696 a697 
=== Succesors ===
=== Usages ===
v1083 a623 v1071 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v699 values: a696 a697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v698 v700 
=== Succesors ===
next: v889 
=== Usages ===
a701 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v698 v700 #next: v889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v762 
=== Usages ===
j890 j892 
=== Predecessor ===
v699 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1042 
y: i132 
=== Succesors ===
=== Usages ===
i616 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1042 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid i616 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v594 
trueValue: i1042 
falseValue: i132 
=== Succesors ===
=== Usages ===
j749 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v594 trueValue: i1042 falseValue: i132  <|@  <|@
f <@~|@floating>@ <|@
tid j749 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i616 
=== Succesors ===
=== Usages ===
j954 v1083 j753 v759 v886 j936 j942 j946 j950 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i616  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j749 
y: j672 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j749 y: j672  <|@  <|@
f <@~|@floating>@ <|@
tid j953 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j954 j1005 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j895 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j909 j972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j949 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j950 j1002 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j917 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j918 j978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j945 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j946 j999 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j667 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j984 j926 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j941 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j942 j996 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j336 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j990 j934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j935 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j936 j991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v760 
falseSuccessor: v761 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v760 #falseSuccessor: v761  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v25|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v38|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B48" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
v760 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
result [v36|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a701 
index: - 
=== Succesors ===
=== Usages ===
j892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a701 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j892 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v889 
address: v1071 
=== Succesors ===
=== Usages ===
v1084 v1086 v1088 v1090 v1092 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v889 address: v1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
result [v19|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1041 
=== Succesors ===
=== Usages ===
j890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1041  <|@  <|@
f <@~|@floating>@ <|@
tid j890 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v889 
address: v1070 
=== Succesors ===
=== Usages ===
v1085 v1087 v1089 v1091 v1093 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v889 address: v1070  <|@  <|@
f <@~|@floating>@ <|@
tid j936 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j749 
y: j935 
=== Succesors ===
=== Usages ===
v937 v939 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j935  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j936 
y: j16 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j936 y: j16  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v937 
=== Succesors ===
trueSuccessor: v763 
falseSuccessor: v764 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v937 #trueSuccessor: v763 #falseSuccessor: v764  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = LEA [v36|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = LEA [v19|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v38|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v775  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
v763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B104" 
    successors "B35" "B104" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j927 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v767 
values: j16 j934 
=== Succesors ===
=== Usages ===
v1093 j934 v1092 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v767 values: j16 j934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v766 
=== Succesors ===
next: v1044 
=== Usages ===
v1044 v771 v772 j927 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v766 #next: v1044  <|@  <|@
f <@~|@floating>@ <|@
tid v1093 <|@
result [v40|QWORD[*] + v42|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j890 
index: j927 
=== Succesors ===
=== Usages ===
v1044 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j890 index: j927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1044 <|@
result v43|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v767 
address: v1093 
=== Succesors ===
next: v1023 
=== Usages ===
v1023 
=== Predecessor ===
v767 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v767 address: v1093 #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1092 <|@
result [v39|QWORD[.] + v42|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j892 
index: j927 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j892 index: j927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1092 
value: v1044 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1092 value: v1044 stateAfter: - lastLocationAccess: - #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid j934 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j927 
y: j336 
=== Succesors ===
=== Usages ===
j919 j927 v939 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j927 y: j336  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j936 
y: j934 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j936 y: j934  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v939 
=== Succesors ===
trueSuccessor: v771 
falseSuccessor: v773 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v939 #trueSuccessor: v771 #falseSuccessor: v773  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V256_WORD = H [v40|QWORD[*] + v42|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v42|QWORD * 2], input: v43|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v42|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v767 
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v767 #next: v777  <|@  <|@
f <@*|@fixed>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
v771 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j919 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v776 
values: j16 j934 
=== Succesors ===
=== Usages ===
v1091 j926 j910 v943 v1090 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v776 values: j16 j934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v775 v777 
=== Succesors ===
next: v799 
=== Usages ===
j919 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v775 v777 #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid j942 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j749 
y: j941 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j941  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j942 
y: j919 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j942 y: j919  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v943 
=== Succesors ===
trueSuccessor: v798 
falseSuccessor: v797 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v943 #trueSuccessor: v798 #falseSuccessor: v797  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v802  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
v1045 
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid v1091 <|@
result [v40|QWORD[*] + v45|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j890 
index: j919 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j890 index: j919  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1045 <|@
result v47|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v797 
address: v1091 
=== Succesors ===
next: v1021 
=== Usages ===
v1021 
=== Predecessor ===
v797 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v797 address: v1091 #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
result [v39|QWORD[.] + v45|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j892 
index: j919 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j892 index: j919  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1090 
value: v1045 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1090 value: v1045 stateAfter: - lastLocationAccess: - #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid j926 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j919 
y: j667 
=== Succesors ===
=== Usages ===
j910 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j919 y: j667  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
v1021 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V128_WORD = H [v40|QWORD[*] + v45|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v45|QWORD * 2], input: v47|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j910 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v787 
values: j926 j919 
=== Succesors ===
=== Usages ===
v1089 j918 j902 v947 v1088 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v787 values: j926 j919  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v786 v802 
=== Succesors ===
next: v805 
=== Usages ===
j910 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v786 v802 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid j946 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j749 
y: j945 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j945  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j946 
y: j910 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j946 y: j910  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v947 
=== Succesors ===
trueSuccessor: v804 
falseSuccessor: v803 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v947 #trueSuccessor: v804 #falseSuccessor: v803  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v38|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v808  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
v804 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1046 
=== Usages ===
v1046 
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1046  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
result [v40|QWORD[*] + v49|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j890 
index: j910 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j890 index: j910  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1046 <|@
result v51|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v803 
address: v1089 
=== Succesors ===
next: v1019 
=== Usages ===
v1019 
=== Predecessor ===
v803 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v803 address: v1089 #next: v1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
result [v39|QWORD[.] + v49|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j892 
index: j910 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j892 index: j910  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1088 
value: v1046 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1088 value: v1046 stateAfter: - lastLocationAccess: - #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid j918 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j910 
y: j917 
=== Succesors ===
=== Usages ===
j902 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j910 y: j917  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
v1019 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|V64_WORD = H [v40|QWORD[*] + v49|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v49|QWORD * 2], input: v51|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v49|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j902 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v791 
values: j918 j910 
=== Succesors ===
=== Usages ===
v1087 j909 j893 v951 v1086 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v791 values: j918 j910  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v790 v808 
=== Succesors ===
next: v811 
=== Usages ===
j902 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v790 v808 #next: v811  <|@  <|@
f <@~|@floating>@ <|@
tid j950 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j749 
y: j949 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j949  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j950 
y: j902 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j950 y: j902  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v951 
=== Succesors ===
trueSuccessor: v810 
falseSuccessor: v809 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v951 #trueSuccessor: v810 #falseSuccessor: v809  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v38|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@*|@fixed>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
v810 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1047 
=== Usages ===
v1047 
=== Predecessor ===
v811 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
result [v40|QWORD[*] + v53|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j890 
index: j902 
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j890 index: j902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1047 <|@
result v55|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v809 
address: v1087 
=== Succesors ===
next: v1017 
=== Usages ===
v1017 
=== Predecessor ===
v809 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v809 address: v1087 #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
result [v39|QWORD[.] + v53|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j892 
index: j902 
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j892 index: j902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1086 
value: v1047 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v793 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1086 value: v1047 stateAfter: - lastLocationAccess: - #next: v793  <|@  <|@
f <@~|@floating>@ <|@
tid j909 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j902 
y: j895 
=== Succesors ===
=== Usages ===
j893 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j902 y: j895  <|@  <|@
f <@*|@fixed>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
v1017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|V32_WORD = H [v40|QWORD[*] + v53|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v53|QWORD * 2], input: v55|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v53|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j893 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v794 
values: j909 j902 
=== Succesors ===
=== Usages ===
v1085 v955 v1084 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v794 values: j909 j902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v793 v814 
=== Succesors ===
next: v817 
=== Usages ===
j893 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v793 v814 #next: v817  <|@  <|@
f <@~|@floating>@ <|@
tid j954 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j749 
y: j953 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j953  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j954 
y: j893 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j954 y: j893  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v955 
=== Succesors ===
trueSuccessor: v816 
falseSuccessor: v815 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v955 #trueSuccessor: v816 #falseSuccessor: v815  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = DEC v38|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v820  <|@  <|@
f <@*|@fixed>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
v816 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1048 
=== Usages ===
i1048 
=== Predecessor ===
v817 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1048  <|@  <|@
f <@~|@floating>@ <|@
tid v1085 <|@
result [v40|QWORD[*] + v57|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j890 
index: j893 
=== Succesors ===
=== Usages ===
i1048 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j890 index: j893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1048 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v815 
address: v1085 
=== Succesors ===
next: v1015 
=== Usages ===
v1015 
=== Predecessor ===
v815 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v815 address: v1085 #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
result [v39|QWORD[.] + v57|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j892 
index: j893 
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j892 index: j893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1084 
value: i1048 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v796 
=== Usages ===
=== Predecessor ===
i1048 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1084 value: i1048 stateAfter: - lastLocationAccess: - #next: v796  <|@  <|@
f <@*|@fixed>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
v1015 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVSX [v40|QWORD[*] + v57|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + v57|QWORD * 2], y: v59|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B30" "B47" "B46" 
    successors "B49" "B67" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v779 v796 v820 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v779 v796 v820 #next: v958  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v827 
=== Usages ===
j960 
=== Predecessor ===
v780 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v827  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i132 
=== Succesors ===
=== Usages ===
j753 v886 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j749 
y: j748 
=== Succesors ===
=== Usages ===
v827 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j749 y: j748  <|@  <|@
f <@*|@fixed>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v886 
=== Succesors ===
trueSuccessor: v826 
falseSuccessor: v825 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v886 #trueSuccessor: v826 #falseSuccessor: v825  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v830 
=== Usages ===
=== Predecessor ===
v827 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v830  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
result [v36|QWORD[.] + v38|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a701 
index: j749 
=== Succesors ===
=== Usages ===
j960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a701 index: j749  <|@  <|@
f <@~|@floating>@ <|@
tid j960 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v958 
address: v1083 
=== Succesors ===
=== Usages ===
v1094 v1095 v1096 v1097 v1098 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v958 address: v1083  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j748 
y: j749 
=== Succesors ===
=== Usages ===
j1005 j991 j996 j999 j1002 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j748 y: j749  <|@  <|@
f <@~|@floating>@ <|@
tid j991 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j753 
y: j935 
=== Succesors ===
=== Usages ===
v992 v994 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j753 y: j935  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j991 
y: j16 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j991 y: j16  <|@  <|@
f <@*|@fixed>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v992 
=== Succesors ===
trueSuccessor: v828 
falseSuccessor: v829 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v992 #trueSuccessor: v828 #falseSuccessor: v829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = LEA [v36|QWORD[.] + v38|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = SUB (x: v60|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v62|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v840 
=== Predecessor ===
v828 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
result v64|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
v829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" 
    successors "B53" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j985 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v832 
values: j16 j990 
=== Succesors ===
=== Usages ===
v1098 j990 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v832 values: j16 j990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v831 
=== Succesors ===
next: v1033 
=== Usages ===
j985 v835 v836 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v831 #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
result [v61|QWORD[.] + v65|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j960 
index: j985 
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j960 index: j985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1098 
value: v1034 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1098 value: v1034 stateAfter: - lastLocationAccess: - #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid j990 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j985 
y: j336 
=== Succesors ===
=== Usages ===
j979 j985 v994 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j985 y: j336  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j991 
y: j990 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j991 y: j990  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v994 
=== Succesors ===
trueSuccessor: v835 
falseSuccessor: v837 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v994 #trueSuccessor: v835 #falseSuccessor: v837  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v65|QWORD * 2], input: v64|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v832 
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v832 #next: v841  <|@  <|@
f <@*|@fixed>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v840 
=== Predecessor ===
v835 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j979 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v840 
values: j16 j990 
=== Succesors ===
=== Usages ===
v1097 j984 j973 v997 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v840 values: j16 j990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v839 v841 
=== Succesors ===
next: v862 
=== Usages ===
j979 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v839 v841 #next: v862  <|@  <|@
f <@~|@floating>@ <|@
tid j996 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j753 
y: j941 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j753 y: j941  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j996 
y: j979 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j996 y: j979  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v997 
=== Succesors ===
trueSuccessor: v861 
falseSuccessor: v860 
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v997 #trueSuccessor: v861 #falseSuccessor: v860  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v62|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v861 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1032 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
result [v61|QWORD[.] + v67|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j960 
index: j979 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j960 index: j979  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
result v69|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1097 
value: v1037 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1097 value: v1037 stateAfter: - lastLocationAccess: - #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid j984 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j979 
y: j667 
=== Succesors ===
=== Usages ===
j973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j979 y: j667  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v1032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v67|QWORD * 2], input: v69|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j973 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v851 
values: j984 j979 
=== Succesors ===
=== Usages ===
v1096 j978 j967 v1000 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v851 values: j984 j979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v850 v865 
=== Succesors ===
next: v868 
=== Usages ===
j973 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v850 v865 #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid j999 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j753 
y: j945 
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j753 y: j945  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j999 
y: j973 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j999 y: j973  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1000 
=== Succesors ===
trueSuccessor: v867 
falseSuccessor: v866 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1000 #trueSuccessor: v867 #falseSuccessor: v866  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v62|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
v867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1030 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1030  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
result [v61|QWORD[.] + v71|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j960 
index: j973 
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j960 index: j973  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
result v73|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1096 
value: v1036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1096 value: v1036 stateAfter: - lastLocationAccess: - #next: v853  <|@  <|@
f <@~|@floating>@ <|@
tid j978 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j973 
y: j917 
=== Succesors ===
=== Usages ===
j967 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j973 y: j917  <|@  <|@
f <@*|@fixed>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
v1030 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v71|QWORD * 2], input: v73|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j967 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v854 
values: j978 j973 
=== Succesors ===
=== Usages ===
v1095 j972 j961 v1003 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v854 values: j978 j973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v853 v871 
=== Succesors ===
next: v874 
=== Usages ===
j967 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v853 v871 #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid j1002 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j753 
y: j949 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j753 y: j949  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1002 
y: j967 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1002 y: j967  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1003 
=== Succesors ===
trueSuccessor: v873 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1003 #trueSuccessor: v873 #falseSuccessor: v872  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v62|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v873 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
result [v61|QWORD[.] + v75|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j960 
index: j967 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j960 index: j967  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
result v77|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1095 
value: v1035 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1095 value: v1035 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid j972 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j967 
y: j895 
=== Succesors ===
=== Usages ===
j961 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j967 y: j895  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v1028 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v75|QWORD * 2], input: v77|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j961 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v857 
values: j972 j967 
=== Succesors ===
=== Usages ===
v1094 v1006 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v857 values: j972 j967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v856 v877 
=== Succesors ===
next: v880 
=== Usages ===
j961 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v856 v877 #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid j1005 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j753 
y: j953 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j753 y: j953  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1005 
y: j961 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1005 y: j961  <|@  <|@
f <@*|@fixed>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1006 
=== Succesors ===
trueSuccessor: v879 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1006 #trueSuccessor: v879 #falseSuccessor: v878  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v883  <|@  <|@
f <@*|@fixed>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
v879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1026  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
result [v61|QWORD[.] + v79|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j960 
index: j961 
=== Succesors ===
=== Usages ===
v1026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j960 index: j961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1094 
value: i573 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1094 value: i573 stateAfter: - lastLocationAccess: - #next: v859  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
v1026 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v79|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v836  <|@  <|@
f <@*|@fixed>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v832 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v832  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B66 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B68" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v843 
=== Usages ===
=== Predecessor ===
v827 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v843  <|@  <|@
f <@*|@fixed>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B65" "B64" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v843 v859 v883 
=== Succesors ===
next: a623 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v843 v859 v883 #next: a623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a623 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a701 
=== Succesors ===
next: v455 
=== Usages ===
a299 a454 a299 
=== Predecessor ===
v844 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a701 #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid a454 <|@
result v81|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
op: Compress
stamp: n! -
=== Inputs ===
value: a623 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1056 
value: a454 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j735 
=== Usages ===
=== Predecessor ===
a623 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1056 value: a454 stateAfter: - lastLocationAccess: - #next: j735  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j735 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v741 
=== Usages ===
j737 
=== Predecessor ===
v455 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v741  <|@  <|@
f <@~|@floating>@ <|@
tid i736 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
result v82|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j735 
y: i736 
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j735 y: i736  <|@  <|@
f <@~|@floating>@ <|@
tid j740 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
result [v82|QWORD[*] + v83|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j737 
index: j740 
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j740  <|@  <|@
f <@~|@floating>@ <|@
tid i742 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1082 
value: i742 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
j735 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1082 value: i742 stateAfter: - lastLocationAccess: - #next: v147  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:435) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 0.200374012309526
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v146 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v145 #falseSuccessor: v146  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5fd61d61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v81|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v82|QWORD[*] + v83|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.200374012309526 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4576582604300494654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:436) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid j1038 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:697) [bci: 24]
stamp: i64
=== Inputs ===
value: j2 
=== Succesors ===
=== Usages ===
j153 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: j2  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v145 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = NEG v1|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD, int[45|0x2d], v36|QWORD[.], short[45|0x2d]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4585577136578945478
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD, int[0|0x0], v36|QWORD[.], short[0|0x0]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" "B19" "B20" 
    successors "B72" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j153 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v151 
values: j2 j1038 j1039 j2 
=== Succesors ===
=== Usages ===
j158 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v151 values: j2 j1038 j1039 j2  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [0 - 45] ⇈000000000000002d
valueDescription: i32
=== Inputs ===
merge: v151 
values: i125 i148 i148 i125 
=== Succesors ===
=== Usages ===
?226 ?160 ?220 ?238 ?190 ?197 v247 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v151 values: i125 i148 i148 i125  <|@  <|@
f <@~|@floating>@ <|@
tid a299 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v151 
values: a623 a623 a339 a339 
=== Succesors ===
=== Usages ===
?226 v1064 v1062 ?160 ?238 v1060 ?197 ?220 ?190 v1066 v1067 v1069 v1059 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v151 values: a623 a623 a339 a339  <|@  <|@
f <@~|@floating>@ <|@
tid i575 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i16 [0 - 45] ⇈000000000000002d
valueDescription: i16
=== Inputs ===
merge: v151 
values: i573 i574 i574 i573 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v151 values: i573 i574 i574 i573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v150 v152 v323 v324 
=== Succesors ===
next: i1049 
=== Usages ===
j153 i154 a299 i575 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v150 v152 v323 v324 #next: i1049  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
result [v87|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a299 
index: - 
=== Succesors ===
=== Usages ===
i1049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1049 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 69]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
=== Succesors ===
next: v156 
=== Usages ===
v430 v443 v395 v408 v360 v371 
=== Predecessor ===
v151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1066 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid a187 <|@
result v90|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 76]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: char[100]{0, 0, 0, 0, 0, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 0, 0, 0, 0, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1068 v1063 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a183 <|@
result v91|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 63]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: char[100]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 v1061 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 37]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
j272 i208 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
j174 i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 47]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j177 i211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i255 i256 i492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i182 i214 i234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j161 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 2147483648
stableDimension: 0
stamp: i64 [2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i64
value: long[2147483648|0x80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
i1049 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD, v86|DWORD, v87|QWORD[.], v88|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOV [v87|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = MOVE input: long[2147483648|0x80000000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD, v21|DWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B99" 
    successors "B73" "B96" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4609572320479263676
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j158 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v157 
values: j153 j272 
=== Succesors ===
=== Usages ===
?160 v162 i192 j271 j179 j287 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v157 values: j153 j272  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v157 
values: i38 i255 
=== Succesors ===
=== Usages ===
?160 i195 i182 i255 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v157 values: i38 i255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.5320624094826258
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v156 
=== Succesors ===
next: v168 
=== Usages ===
j158 i159 v163 v191 v548 v538 v543 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v156 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j158 
y: j161 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j158 y: j161  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 0.652714924542596
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v163 
falseSuccessor: v167 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v163 #falseSuccessor: v167  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD, v94|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.652714924542596 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" 
    xhandlers
    flags 
    probability 4607174201915641713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:452) [bci: 86]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v157 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v157 #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at java.lang.Long.getChars(Long.java:452) [bci: 87]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
resultBits: 32
stamp: i32
=== Inputs ===
value: j158 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j158  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
result int[65536|0x10000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:453) [bci: 92]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536] ⇊0000000000010000 ⇈0000000000010000
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:453) [bci: 90]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOV v93|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD, v95|DWORD] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B91" 
    successors "B75" "B88" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4608459051069517355
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i195 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v194 
values: i159 i256 
=== Succesors ===
=== Usages ===
?197 i224 i214 i256 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v194 values: i159 i256  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v194 
values: i192 i278 
=== Succesors ===
=== Usages ===
?197 v199 i225 i288 i213 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v194 values: i192 i278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.284641231414215
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Long.getChars(Long.java:453) [bci: 90]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v193 
=== Succesors ===
next: v205 
=== Usages ===
i195 i196 v200 v221 v533 v523 v528 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v193 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:453) [bci: 94]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i196 
y: i198 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i196 y: i198  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:453) [bci: 94]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 0.7784274516077427
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v200 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v200 #falseSuccessor: v204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|DWORD, v97|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v97|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7784274516077427 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 157]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v194 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v194 #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
result int[-524288|0xfffffffffff80000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:469) [bci: 200]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: -524288
stableDimension: 0
stamp: i32 [-524288] ⇊00000000fff80000 ⇈00000000fff80000
stampKind: i32
value: int[-524288|0xfffffffffff80000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a235 <|@
result v98|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 187]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
result int[52429|0xcccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 159]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 52429
stableDimension: 0
stamp: i32 [52429] ⇊000000000000cccd ⇈000000000000cccd
stampKind: i32
value: int[52429|0xcccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
result int[36|0x24] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 192]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 157]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|DWORD, v97|DWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B84" 
    successors "B77" "B86" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i224 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v223 
values: i195 i234 
=== Succesors ===
=== Usages ===
?226 i234 i492 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v223 values: i195 i234  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v223 
values: i196 i229 
=== Succesors ===
=== Usages ===
?226 i228 i233 ?238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v223 values: i196 i229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.663450088284811
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 157]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v222 
=== Succesors ===
next: v510 
=== Usages ===
i224 i225 v241 v244 v514 v509 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v222 #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 161]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i225 
y: i227 
=== Succesors ===
=== Usages ===
i229 v240 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i225 y: i227  <|@  <|@
f <@~|@floating>@ <|@
tid i229 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 164]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [0 - 8191] ⇈0000000000001fff
=== Inputs ===
x: i228 
y: i55 
=== Succesors ===
=== Usages ===
i225 i230 i231 ?238 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i228 y: i55  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.getChars(Long.java:466) [bci: 172]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [0 - 65528] ⇈000000000000fff8
=== Inputs ===
x: i229 
y: i71 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i229 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.getChars(Long.java:466) [bci: 176]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [0 - 16382] ⇈0000000000003ffe
=== Inputs ===
x: i229 
y: i26 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i229 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:466) [bci: 177]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [0 - 81910] ⇈000000000001fffe
=== Inputs ===
x: i230 
y: i231 
=== Succesors ===
=== Usages ===
i233 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i230 y: i231  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Long.getChars(Long.java:466) [bci: 178]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i225 
y: i232 
=== Succesors ===
=== Usages ===
v1058 ?238 v346 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i225 y: i232  <|@  <|@
f <@~|@floating>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 192]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i233 
y: i345 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i233 y: i345  <|@  <|@
f <@*|@fixed>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 192]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v346 
=== Succesors ===
trueSuccessor: v506 
falseSuccessor: v509 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v346 #trueSuccessor: v506 #falseSuccessor: v509  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|DWORD, v100|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = IMUL v100|DWORD y: 52429 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = SHR v101|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = SHL v102|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = SHL v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = ADD (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SUB (x: v100|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v106|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B85" 
    xhandlers
    flags 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 192]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
i1050 
=== Predecessor ===
v510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 182]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i224 
y: i181 
=== Succesors ===
=== Usages ===
i224 v1059 ?238 v360 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i224 y: i181  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 193]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i234 
y: i1049 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i234 y: i1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 193]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v514 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v511 #falseSuccessor: v514  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = DEC v99|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B84" 
    xhandlers
    flags 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 193]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1050 
=== Usages ===
v368 
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1050  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
result [v98|QWORD[.] + v106|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a235 
index: i233 
=== Succesors ===
=== Usages ===
i1050 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a235 index: i233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1050 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 192]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v506 
address: v1058 
=== Succesors ===
next: v368 
=== Usages ===
v368 
=== Predecessor ===
v511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v506 address: v1058 #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
result [v87|QWORD[.] + v107|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a299 
index: i234 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: i234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 193]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v511 
address: v1059 
value: i1050 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
i1050 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v511 address: v1059 value: i1050 stateAfter: - lastLocationAccess: - #next: v246  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 194
code: ResolvedJavaMethodBytecode<Long.getChars(long, int, char[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 193]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rethrowException: false
sourceFile: Long.java
sourceLine: 468
stackSize: 0
=== Inputs ===
outerFrameState: ?259 
values: - - - a299 - - i233 i234 i154 i229 i225 
=== Succesors ===
=== Usages ===
v490 v517 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?259 values: - - - a299 - - i233 i234 i154 i229 i225  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:469) [bci: 200]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
x: i228 
y: i239 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i228 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:469) [bci: 200]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 0.3754528776035644
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v241 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v241 #falseSuccessor: v245  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVSX [v98|QWORD[.] + v106|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + v107|DWORD * 2 + 16], y: v108|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v101|DWORD y: -524288 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3754528776035644 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:469) [bci: 203]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v223 
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v223 #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Long.getChars(Long.java:471) [bci: 208]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i125 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i154 y: i125  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:471) [bci: 208]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 0.7994949909673181
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v248 
falseSuccessor: v249 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v248 #falseSuccessor: v249  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|DWORD, y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7994949909673181 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 4605369860874186673
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:474) [bci: 220]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:702) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
value: i38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1055 value: i38 stateAfter: - lastLocationAccess: - #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:703) [bci: 69]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4596385384456355578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 211]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid i492 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 212]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i224 
y: i254 
=== Succesors ===
=== Usages ===
v1060 v371 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i224 y: i254  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 219]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i492 
y: i1049 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i492 y: i1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 219]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v371 
=== Succesors ===
trueSuccessor: v516 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v371 #trueSuccessor: v516 #falseSuccessor: v518  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = LEA [v99|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 4596385384456355578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 219]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
v379 
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
result [v87|QWORD[.] + v109|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a299 
index: i492 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: i492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 219]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v516 
address: v1060 
value: i575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v516 address: v1060 value: i575 stateAfter: - lastLocationAccess: - #next: v380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:702) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
value: i38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1055 value: i38 stateAfter: - lastLocationAccess: - #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:703) [bci: 69]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + v109|DWORD * 2 + 16], y: v88|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 219]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 372
nodeSourcePosition: at java.lang.Long.getChars(Long.java:472) [bci: 219]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -95259 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:468) [bci: 194]
locals: - - - v87|QWORD[.] - - v106|DWORD v107|DWORD v86|DWORD v102|DWORD v100|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction DEOPT info [bci:194, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4610163498181875718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 157]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?238 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?238 #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:465) [bci: 157]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
loopBegin: v223 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v223  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:468) [bci: 194]
locals: - - - v87|QWORD[.] - - v106|DWORD v107|DWORD v86|DWORD v102|DWORD v100|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:194, 59] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v107|DWORD, v102|DWORD] destination: B84 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 193]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v223 
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v223 #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid i665 <|@
result int[-92443|0xfffffffffffe96e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -92443
stableDimension: 0
stamp: i32 [-92443] ⇊00000000fffe96e5 ⇈00000000fffe96e5
stampKind: i32
value: int[-92443|0xfffffffffffe96e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-92443|0xfffffffffffe96e5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:467) [bci: 192]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v223 
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v223 #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid i660 <|@
result int[-88859|0xfffffffffffea4e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88859
stableDimension: 0
stamp: i32 [-88859] ⇊00000000fffea4e5 ⇈00000000fffea4e5
stampKind: i32
value: int[-88859|0xfffffffffffea4e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
v509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88859|0xfffffffffffea4e5]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i661 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-92443 - -88859] ⇊00000000fffe84e5 ⇈00000000fffeb6e5
valueDescription: i32
=== Inputs ===
merge: v658 
values: i660 i665 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v658 values: i660 i665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v659 v664 
=== Succesors ===
next: v663 
=== Usages ===
i661 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v659 v664 #next: v663  <|@  <|@
tid ?226 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<Long.getChars(long, int, char[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Long.java
sourceLine: 465
stackSize: 0
=== Inputs ===
outerFrameState: ?259 
values: - - - a299 - - - i224 i154 - i225 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?259 values: - - - a299 - - - i224 i154 - i225  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?226 
actionAndReason: i661 
speculation: a640 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?226 actionAndReason: i661 speculation: a640  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:465) [bci: 157]
locals: - - - v87|QWORD[.] - - - v99|DWORD v86|DWORD - v100|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction DEOPT info [bci:157, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B89" "B94" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:454) [bci: 97]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
result int[1374389535|0x51eb851f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i196 
y: i276 
=== Succesors ===
=== Usages ===
i278 i1102 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i196 y: i276  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i288 
y: i173 
=== Succesors ===
=== Usages ===
?220 i196 i208 ?220 i211 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i288 y: i173  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [-2147483648 - 2147483584] ⇈00000000ffffffc0
=== Inputs ===
x: i278 
y: i171 
=== Succesors ===
=== Usages ===
i210 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i278 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid i1101 <|@
result int[-32|0xffffffffffffffe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 114]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: -32
stableDimension: 0
stamp: i32 [-32] ⇊00000000ffffffe0 ⇈00000000ffffffe0
stampKind: i32
value: int[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1102 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 114]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i288 
y: i1101 
=== Succesors ===
=== Usages ===
i210 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i288 y: i1101  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 115]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i208 
y: i1102 
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i208 y: i1102  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 119]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i278 
y: i176 
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i278 y: i176  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 120]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i210 
y: i211 
=== Succesors ===
=== Usages ===
i213 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i210 y: i211  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Long.getChars(Long.java:456) [bci: 121]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i196 
y: i212 
=== Succesors ===
=== Usages ===
v1063 ?220 v382 v1061 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i196 y: i212  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 139]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i213 
y: i381 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i213 y: i381  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 139]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v523 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v520 #falseSuccessor: v523  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = SAR v112|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = SHL v113|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = AND v112|DWORD y: -32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = ADD (x: v114|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SHL v113|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = ADD (x: v116|DWORD, y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = SUB (x: v97|DWORD, ~y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v119|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 139]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
i1052 i1051 
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i195 
y: i181 
=== Succesors ===
=== Usages ===
v1062 v395 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i195 y: i181  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 140]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i214 
y: i1049 
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i214 y: i1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 140]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v395 
=== Succesors ===
trueSuccessor: v525 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v395 #trueSuccessor: v525 #falseSuccessor: v528  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = DEC v96|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 140]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
v403 
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid i256 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 142]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i195 
y: i254 
=== Succesors ===
=== Usages ===
i195 v1064 ?220 v408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i195 y: i254  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 153]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i256 
y: i1049 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i256 y: i1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 153]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v408 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v533 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v408 #trueSuccessor: v530 #falseSuccessor: v533  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = LEA [v96|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B74" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 153]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1051 
=== Usages ===
v416 
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1051  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
result [v91|QWORD[.] + v119|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a183 
index: i213 
=== Succesors ===
=== Usages ===
i1051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a183 index: i213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1051 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 139]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v520 
address: v1061 
=== Succesors ===
next: v403 
=== Usages ===
v403 
=== Predecessor ===
v530 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v520 address: v1061 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v1062 <|@
result [v87|QWORD[.] + v120|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a299 
index: i214 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: i214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 140]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v525 
address: v1062 
value: i1051 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1052 
=== Usages ===
=== Predecessor ===
i1051 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v1062 value: i1051 stateAfter: - lastLocationAccess: - #next: i1052  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
result [v90|QWORD[.] + v119|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a187 
index: i213 
=== Succesors ===
=== Usages ===
i1052 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a187 index: i213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1052 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 152]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v520 
address: v1063 
=== Succesors ===
next: v416 
=== Usages ===
v416 
=== Predecessor ===
v403 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v520 address: v1063 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
result [v87|QWORD[.] + v121|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a299 
index: i256 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: i256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 153]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v530 
address: v1064 
value: i1052 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
i1052 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v530 address: v1064 value: i1052 stateAfter: - lastLocationAccess: - #next: v489  <|@  <|@
tid ?220 <|@
d <@d|@=== Debug Properties ===
bci: 154
code: ResolvedJavaMethodBytecode<Long.getChars(long, int, char[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 153]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rethrowException: false
sourceFile: Long.java
sourceLine: 459
stackSize: 0
=== Inputs ===
outerFrameState: ?259 
values: - - - a299 - - i213 i256 i154 i278 i278 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?259 values: - - - a299 - - i213 i256 i154 i278 i278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?220 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?220 #next: v221  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:453) [bci: 90]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
loopBegin: v194 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v194  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVSX [v91|QWORD[.] + v119|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + v120|DWORD * 2 + 16], y: v122|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVSX [v90|QWORD[.] + v119|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + v121|DWORD * 2 + 16], y: v123|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:459) [bci: 154]
locals: - - - v87|QWORD[.] - - v119|DWORD v121|DWORD v86|DWORD v113|DWORD v113|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:154, 59] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD, v113|DWORD] destination: B91 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:459) [bci: 153]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v194 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v194 #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid i657 <|@
result int[-104731|0xfffffffffffe66e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104731
stableDimension: 0
stamp: i32 [-104731] ⇊00000000fffe66e5 ⇈00000000fffe66e5
stampKind: i32
value: int[-104731|0xfffffffffffe66e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
v533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104731|0xfffffffffffe66e5]] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 140]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v194 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v194 #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
result int[-101403|0xfffffffffffe73e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -101403
stableDimension: 0
stamp: i32 [-101403] ⇊00000000fffe73e5 ⇈00000000fffe73e5
stampKind: i32
value: int[-101403|0xfffffffffffe73e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
v528 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-101403|0xfffffffffffe73e5]] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:458) [bci: 139]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v194 
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v194 #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid i650 <|@
result int[-98075|0xfffffffffffe80e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -98075
stableDimension: 0
stamp: i32 [-98075] ⇊00000000fffe80e5 ⇈00000000fffe80e5
stampKind: i32
value: int[-98075|0xfffffffffffe80e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
v523 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-98075|0xfffffffffffe80e5]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i651 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-104731 - -98075] ⇊00000000fffe00e5 ⇈00000000fffef7e5
valueDescription: i32
=== Inputs ===
merge: v648 
values: i650 i655 i657 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v648 values: i650 i655 i657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v649 v654 v656 
=== Succesors ===
next: v653 
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v649 v654 v656 #next: v653  <|@  <|@
tid ?197 <|@
d <@d|@=== Debug Properties ===
bci: 90
code: ResolvedJavaMethodBytecode<Long.getChars(long, int, char[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Long.java
sourceLine: 453
stackSize: 0
=== Inputs ===
outerFrameState: ?259 
values: - - - a299 - - - i195 i154 - i196 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?259 values: - - - a299 - - - i195 i154 - i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?197 
actionAndReason: i651 
speculation: a640 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?197 actionAndReason: i651 speculation: a640  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v124|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:453) [bci: 90]
locals: - - - v87|QWORD[.] - - - v96|DWORD v86|DWORD - v97|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction DEOPT info [bci:90, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B97" "B102" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:442) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -6640827866535438581
stableDimension: 0
stamp: i64 [-6640827866535438581] ⇊a3d70a3d70a3d70b ⇈a3d70a3d70a3d70b
stampKind: i64
value: long[-6640827866535438581|0xa3d70a3d70a3d70b]
=== Inputs ===
=== Succesors ===
=== Usages ===
j287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j287 <|@
result v126|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i64
=== Inputs ===
x: j158 
y: j269 
=== Succesors ===
=== Usages ===
j271 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: j158 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j158 
y: j287 
=== Succesors ===
=== Usages ===
j272 j1100 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j158 y: j287  <|@  <|@
f <@~|@floating>@ <|@
tid j272 <|@
result v128|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i64 [-144115188075855872 - 144115188075855871]
=== Inputs ===
x: j271 
y: i171 
=== Succesors ===
=== Usages ===
?190 j158 ?190 j174 j177 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: j271 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
result v129|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 43]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64 [-9223372036854775808 - 9223372036854775776] ⇈ffffffffffffffe0
=== Inputs ===
x: j272 
y: i173 
=== Succesors ===
=== Usages ===
j175 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j272 y: i173  <|@  <|@
f <@~|@floating>@ <|@
tid j1099 <|@
result long[-64|0xffffffffffffffc0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rawvalue: -64
stableDimension: 0
stamp: i64 [-64] ⇊ffffffffffffffc0 ⇈ffffffffffffffc0
stampKind: i64
value: long[-64|0xffffffffffffffc0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1100 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1100 <|@
result v130|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64 [-9223372036854775808 - 9223372036854775744] ⇈ffffffffffffffc0
=== Inputs ===
x: j271 
y: j1099 
=== Succesors ===
=== Usages ===
j175 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j271 y: j1099  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
result v131|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 44]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64 [-9223372036854775808 - 9223372036854775776] ⇈ffffffffffffffe0
=== Inputs ===
x: j174 
y: j1100 
=== Succesors ===
=== Usages ===
j178 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j174 y: j1100  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
result v132|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 48]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j272 
y: i176 
=== Succesors ===
=== Usages ===
j178 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j272 y: i176  <|@  <|@
f <@~|@floating>@ <|@
tid j178 <|@
result v133|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 49]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j175 
y: j177 
=== Succesors ===
=== Usages ===
j179 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j175 y: j177  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
result v134|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i64
=== Inputs ===
x: j158 
y: j178 
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j158 y: j178  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at java.lang.Long.getChars(Long.java:444) [bci: 51]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
resultBits: 32
stamp: i32
=== Inputs ===
value: j179 
=== Succesors ===
=== Usages ===
v1068 ?190 v417 v1065 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j179  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i180 
y: i381 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i180 y: i381  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v535 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v535 #falseSuccessor: v538  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOVE input: long[-6640827866535438581|0xa3d70a3d70a3d70b] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = ADD (x: v126|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = SAR v127|QWORD y: 6 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = SHL v128|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = AND v127|QWORD y: -64 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = ADD (x: v129|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = SHL v128|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = ADD (x: v131|QWORD, y: v132|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = SUB (x: v93|QWORD, ~y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOV v134|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v135|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B101" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
i1054 i1053 
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i159 
y: i181 
=== Succesors ===
=== Usages ===
v1067 v430 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i159 y: i181  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 69]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i1049 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i182 y: i1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 69]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v540 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v540 #falseSuccessor: v543  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = DEC v94|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 69]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v549 
=== Usages ===
v438 
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid i255 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: i32
=== Inputs ===
x: i159 
y: i254 
=== Succesors ===
=== Usages ===
i159 v1069 ?190 v443 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i159 y: i254  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i1049 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i255 y: i1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v443 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v443 #trueSuccessor: v545 #falseSuccessor: v548  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = LEA [v94|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v137|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1053 
=== Usages ===
v451 
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
result [v91|QWORD[.] + v135|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a183 
index: i180 
=== Succesors ===
=== Usages ===
i1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a183 index: i180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1053 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v535 
address: v1065 
=== Succesors ===
next: v438 
=== Usages ===
v438 
=== Predecessor ===
v545 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v535 address: v1065 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
result [v87|QWORD[.] + v136|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a299 
index: i182 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 69]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v540 
address: v1067 
value: i1053 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1054 
=== Usages ===
=== Predecessor ===
i1053 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v540 address: v1067 value: i1053 stateAfter: - lastLocationAccess: - #next: i1054  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
result [v90|QWORD[.] + v135|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a187 
index: i180 
=== Succesors ===
=== Usages ===
i1054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a187 index: i180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1054 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 81]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v535 
address: v1068 
=== Succesors ===
next: v451 
=== Usages ===
v451 
=== Predecessor ===
v438 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v535 address: v1068 #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
result [v87|QWORD[.] + v137|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a299 
index: i255 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: i255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v545 
address: v1069 
value: i1054 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
i1054 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v545 address: v1069 value: i1054 stateAfter: - lastLocationAccess: - #next: v488  <|@  <|@
tid ?190 <|@
d <@d|@=== Debug Properties ===
bci: 83
code: ResolvedJavaMethodBytecode<Long.getChars(long, int, char[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
rethrowException: false
sourceFile: Long.java
sourceLine: 447
stackSize: 0
=== Inputs ===
outerFrameState: ?259 
values: j272 - - a299 j272 - i180 i255 i154 - - 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?259 values: j272 - - a299 j272 - i180 i255 i154 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?190 
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?190 #next: v191  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Long.getChars(Long.java:441) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
loopBegin: v157 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v157  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVSX [v91|QWORD[.] + v135|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + v136|DWORD * 2 + 16], y: v138|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVSX [v90|QWORD[.] + v135|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + v137|DWORD * 2 + 16], y: v139|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:447) [bci: 83]
locals: v128|QWORD - - v87|QWORD[.] v128|QWORD - v135|DWORD v137|DWORD v86|DWORD - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:83, 59] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|QWORD, v137|DWORD] destination: B99 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:447) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v157 
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v157 #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid i647 <|@
result int[-113691|0xfffffffffffe43e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113691
stableDimension: 0
stamp: i32 [-113691] ⇊00000000fffe43e5 ⇈00000000fffe43e5
stampKind: i32
value: int[-113691|0xfffffffffffe43e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-113691|0xfffffffffffe43e5]] destination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 69]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v157 
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v157 #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid i645 <|@
result int[-110363|0xfffffffffffe50e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -110363
stableDimension: 0
stamp: i32 [-110363] ⇊00000000fffe50e5 ⇈00000000fffe50e5
stampKind: i32
value: int[-110363|0xfffffffffffe50e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110363|0xfffffffffffe50e5]] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.getChars(Long.java:446) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v157 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v157 #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid i639 <|@
result int[-107035|0xfffffffffffe5de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107035
stableDimension: 0
stamp: i32 [-107035] ⇊00000000fffe5de5 ⇈00000000fffe5de5
stampKind: i32
value: int[-107035|0xfffffffffffe5de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107035|0xfffffffffffe5de5]] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" "B100" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i641 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-113691 - -107035] ⇊00000000fffe40e5 ⇈00000000fffe5fe5
valueDescription: i32
=== Inputs ===
merge: v637 
values: i639 i645 i647 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v637 values: i639 i645 i647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v638 v644 v646 
=== Succesors ===
next: v643 
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v638 v644 v646 #next: v643  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Long.getChars(long, int, char[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Long.java
sourceLine: 441
stackSize: 0
=== Inputs ===
outerFrameState: ?259 
values: j158 - - a299 - - - i159 i154 - - 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?259 values: j158 - - a299 - - - i159 i154 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?160 
actionAndReason: i641 
speculation: a640 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?160 actionAndReason: i641 speculation: a640  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v140|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:441) [bci: 19]
locals: v93|QWORD - - v87|QWORD[.] - - - v94|DWORD v86|DWORD - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction DEOPT info [bci:19, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580737392288182448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v767 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v767  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B104 -> B34 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5a051018 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.122574224581514E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607174201915641711
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12749942115219115 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606026836872461363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[10|0xa], int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615431510609192960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2127875849180494 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613676206285351232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = SHL v12|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SHL v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v15|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD, v14|DWORD] destination: B15 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B13" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615639110617147468
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|QWORD, v13|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9754513925251492 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605196436840643330
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" "B16" "B10" 
    successors "B18" "B21" 
    xhandlers
    flags 
    probability 4607174201915641711
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD - - - 
>@ <|@ instruction v20|DWORD = MOV [v19|DWORD[.] * 8 + 12] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v18|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fd61d61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9529560614867585 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4606750854342328502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.200374012309526 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B71" 
    xhandlers
    flags 
    probability 4605032519989941988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD, int[0|0x0], v23|QWORD[.], short[0|0x0]] destination: B20 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" "B19" "B20" 
    successors "B72" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD, v86|DWORD, v87|QWORD[.], v88|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOV [v87|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = MOVE input: long[2147483648|0x80000000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD, v21|DWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B97" "B102" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOVE input: long[-6640827866535438581|0xa3d70a3d70a3d70b] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = ADD (x: v126|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = SAR v127|QWORD y: 6 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = SHL v128|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = AND v127|QWORD y: -64 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = ADD (x: v129|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = SHL v128|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = ADD (x: v131|QWORD, y: v132|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = SUB (x: v93|QWORD, ~y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOV v134|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v135|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B101" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = DEC v94|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = LEA [v94|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v137|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVSX [v143|QWORD[.] + v135|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + v136|DWORD * 2 + 16], y: v138|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVSX [v141|QWORD[.] + v135|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + v137|DWORD * 2 + 16], y: v139|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:447) [bci: 83]
locals: v128|QWORD - - v87|QWORD[.] v128|QWORD - v135|DWORD v137|DWORD v86|DWORD - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:83, 59] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|QWORD, v137|DWORD] destination: B99 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B99" 
    successors "B73" "B96" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4609572320479263676
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD, v94|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.652714924542596 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" 
    xhandlers
    flags 
    probability 4607174201915641713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOV v93|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD, v95|DWORD] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B89" "B94" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = SAR v112|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = SHL v113|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = AND v112|DWORD y: -32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = ADD (x: v114|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SHL v113|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = ADD (x: v116|DWORD, y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = SUB (x: v97|DWORD, ~y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v119|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = DEC v96|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = LEA [v96|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B74" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVSX [v144|QWORD[.] + v119|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + v120|DWORD * 2 + 16], y: v122|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVSX [v142|QWORD[.] + v119|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + v121|DWORD * 2 + 16], y: v123|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:459) [bci: 154]
locals: - - - v87|QWORD[.] - - v119|DWORD v121|DWORD v86|DWORD v113|DWORD v113|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:154, 59] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD, v113|DWORD] destination: B91 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B91" 
    successors "B75" "B88" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4608459051069517355
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|DWORD, v97|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v97|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7784274516077427 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|DWORD, v97|DWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B85" 
    xhandlers
    flags 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = DEC v99|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B84" 
    xhandlers
    flags 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVSX [v98|QWORD[.] + v106|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + v107|DWORD * 2 + 16], y: v108|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v101|DWORD y: -524288 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3754528776035644 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4610163498181875718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:468) [bci: 194]
locals: - - - v87|QWORD[.] - - v106|DWORD v107|DWORD v86|DWORD v102|DWORD v100|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:194, 59] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v107|DWORD, v102|DWORD] destination: B84 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B84" 
    successors "B77" "B86" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|DWORD, v100|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = IMUL v100|DWORD y: 52429 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = SHR v101|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = SHL v102|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = SHL v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = ADD (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SUB (x: v100|DWORD, ~y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v106|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|DWORD, y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7994949909673181 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 4605369860874186673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4596385384456355578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = LEA [v99|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 4596385384456355578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + v109|DWORD * 2 + 16], y: v88|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596041357700081481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = NEG v1|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD, int[45|0x2d], v23|QWORD[.], short[45|0x2d]] destination: B19 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4593757480463256817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = NEG v1|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[10|0xa], int[1|0x1]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602997013163293592
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2127875849180494 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4601263171516037995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SHL v6|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHL v6|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v9|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD, v8|DWORD] destination: B9 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B9" 
    successors "B7" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603118360387522802
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD, v7|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9754513925251492 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592872563214774035
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591307620917709195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[19|0x13]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v0|QWORD[.] v23|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
locals: v0|QWORD[.] v1|QWORD - - v21|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 49] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4586257026091504646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA [v28|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = AND v29|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVSXD v30|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = ADD (x: v31|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4586196064040947544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v26|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v26|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v26|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + v26|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + 12], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v26|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v26|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B26 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v25|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v38|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = LEA [v36|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = LEA [v19|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v38|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v38|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V128_WORD = H [v40|QWORD[*] + v45|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v45|QWORD * 2], input: v47|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v38|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|V64_WORD = H [v40|QWORD[*] + v49|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v49|QWORD * 2], input: v51|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v49|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v38|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|V32_WORD = H [v40|QWORD[*] + v53|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v53|QWORD * 2], input: v55|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v53|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = DEC v38|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVSX [v40|QWORD[*] + v57|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + v57|QWORD * 2], y: v59|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B30" "B47" "B46" 
    successors "B49" "B67" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B68" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B65" "B64" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5fd61d61 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v81|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v82|QWORD[*] + v83|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.200374012309526 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4585577136578945478
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD, int[0|0x0], v36|QWORD[.], short[0|0x0]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B48" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = LEA [v36|QWORD[.] + v38|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = SUB (x: v60|QWORD, ~y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v62|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v62|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v67|QWORD * 2], input: v69|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v62|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v71|QWORD * 2], input: v73|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v62|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v75|QWORD * 2], input: v77|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v79|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 4578919844131722865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[20|0x14]] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4576582604300494654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = NEG v1|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD, int[45|0x2d], v36|QWORD[.], short[45|0x2d]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580737392288182448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B104 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B104" 
    successors "B35" "B104" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V256_WORD = H [v40|QWORD[*] + v42|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v42|QWORD * 2], input: v43|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v42|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580737392288182448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B66 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" 
    successors "B53" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[.] + v65|QWORD * 2], input: v64|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4572068871092092022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4572556567496548840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v0|QWORD[.] v23|QWORD[.] v25|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
locals: v0|QWORD[.] v1|QWORD - - v21|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 49] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4561553312872285184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4561553312872285184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"-9223372036854775808"] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuilder.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 11] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4556438766115510041
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88859|0xfffffffffffea4e5]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:465) [bci: 157]
locals: - - - v87|QWORD[.] - - - v99|DWORD v86|DWORD - v100|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction DEOPT info [bci:157, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -151649 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v0|QWORD[.] v23|QWORD[.] v25|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
locals: v0|QWORD[.] v1|QWORD - - v21|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -84787 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:693) [bci: 0]
locals: v0|QWORD[.] long[-9223372036854775808|0x8000000000000000] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-92443|0xfffffffffffe96e5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-98075|0xfffffffffffe80e5]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v124|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:453) [bci: 90]
locals: - - - v87|QWORD[.] - - - v96|DWORD v86|DWORD - v97|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction DEOPT info [bci:90, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-101403|0xfffffffffffe73e5]] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107035|0xfffffffffffe5de5]] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" "B100" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v140|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:441) [bci: 19]
locals: v93|QWORD - - v87|QWORD[.] - - - v94|DWORD v86|DWORD - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction DEOPT info [bci:19, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110363|0xfffffffffffe50e5]] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-113691|0xfffffffffffe43e5]] destination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -95259 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Long.getChars(Long.java:468) [bci: 194]
locals: - - - v87|QWORD[.] - - v106|DWORD v107|DWORD v86|DWORD v102|DWORD v100|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: v0|QWORD[.] - - - v21|DWORD 
>@ <|@ instruction DEOPT info [bci:194, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104731|0xfffffffffffe66e5]] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_1       
     1: ldc2_w        #55         // -9223372036854775808
     4: lcmp          
     5: ifne          17
     8: aload_0       
     9: ldc           #57         // "-9223372036854775808"
    11: invokevirtual #18         // append:(java.lang.String)java.lang.AbstractStringBuilder
    14: pop           
    15: aload_0       
    16: areturn       
    17: lload_1       
    18: lconst_0      
    19: lcmp          
    20: ifge          33
    23: lload_1       
    24: lneg          
    25: invokestatic  #37         // java.lang.Long.stringSize:(long)int
    28: iconst_1      
    29: iadd          
    30: goto          37
    33: lload_1       
    34: invokestatic  #37         // java.lang.Long.stringSize:(long)int
    37: istore_3      
    38: aload_0       
    39: getfield      #2          // count:int
    42: iload_3       
    43: iadd          
    44: istore        4
    46: aload_0       
    47: iload         4
    49: invokespecial #3          // ensureCapacityInternal:(int)void
    52: lload_1       
    53: iload         4
    55: aload_0       
    56: getfield      #1          // value:char[]
    59: invokestatic  #38         // java.lang.Long.getChars:(long, int, char[])void
    62: aload_0       
    63: iload         4
    65: putfield      #2          // count:int
    68: aload_0       
    69: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5a051018 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   10  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 9.122574224581514E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607174201915641711
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.12749942115219115 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606026836872461363
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction r10|QWORD = MOVE input: long[10|0xa] <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615431510609192960
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  112  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.2127875849180494 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613676206285351232
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction r8|QWORD = SHL r10|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction r10|QWORD = SHL r10|QWORD size: QWORD <|@ <|@
      nr  128  <|@ instruction r8|QWORD = ADD (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction r10|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B13" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615639110617147468
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  106  <|@ instruction CMP r11|DWORD y: 19 size: DWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.9754513925251492 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605196436840643330
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" "B16" "B10" 
    successors "B18" "B21" 
    xhandlers
    flags 
    probability 4607174201915641711
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37]
stack: r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD - - - 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:37] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  148  <|@ instruction r9|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fd61d61 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.9529560614867585 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4606750854342328502
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.200374012309526 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B71" 
    xhandlers
    flags 
    probability 4605032519989941988
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: short[0|0x0] <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B20 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" "B19" "B20" 
    successors "B72" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  648  <|@ instruction r9|QWORD = MOVE input: long[2147483648|0x80000000] <|@ <|@
      nr  650  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction rbx|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B97" "B102" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  896  <|@ instruction rdx|QWORD = MOVE input: long[-6640827866535438581|0xa3d70a3d70a3d70b] <|@ <|@
      nr  898  <|@ instruction rax|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  904  <|@ instruction rax|QWORD = SAR rdx|QWORD y: 6 size: QWORD <|@ <|@
      nr  906  <|@ instruction rbp|QWORD = SHL rax|QWORD y: 5 size: QWORD <|@ <|@
      nr  908  <|@ instruction rdx|QWORD = AND rdx|QWORD y: -64 size: QWORD <|@ <|@
      nr  910  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  912  <|@ instruction rdx|QWORD = SHL rax|QWORD y: 2 size: QWORD <|@ <|@
      nr  914  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = SUB (x: rbx|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|DWORD = MOV rdx|QWORD size: DWORD <|@ <|@
      nr  920  <|@ instruction CMP rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B101" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction rbp|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  928  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction r13|DWORD = LEA [rdi|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr  944  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  946  <|@ instruction rdi|DWORD = MOVSX [rdi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV (x: [rcx|QWORD[.] + rbp|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  950  <|@ instruction rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV (x: [rcx|QWORD[.] + r13|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  954  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:32]
live-base-pointers: []
java.lang.Long.getChars(Long.java:447) [bci: 83]
locals: rax|QWORD - - rcx|QWORD[.] rax|QWORD - rdx|DWORD r13|DWORD r10|DWORD - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: rsi|QWORD[.] - - - stack:36|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:83, 59] <|@ <|@
      nr  956  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B99 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B99" 
    successors "B73" "B96" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4609572320479263676
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  658  <|@ instruction CMP (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.652714924542596 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" 
    xhandlers
    flags 
    probability 4607174201915641713
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rax|DWORD = MOV rbx|QWORD size: DWORD <|@ <|@
      nr  666  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B89" "B94" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  800  <|@ instruction rax|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr  804  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr  808  <|@ instruction rdi|DWORD = SHL rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  810  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD <|@ <|@
      nr  812  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rdx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMP rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr  822  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction rdi|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  828  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction rbp|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr  836  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B74" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr  844  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [rcx|QWORD[.] + rdi|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  850  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rcx|QWORD[.] + rbp|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr  854  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:32]
live-base-pointers: []
java.lang.Long.getChars(Long.java:459) [bci: 154]
locals: - - - rcx|QWORD[.] - - rdx|DWORD rbp|DWORD r10|DWORD rax|DWORD rax|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: rsi|QWORD[.] - - - stack:36|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:154, 59] <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction r9|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B91 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B91" 
    successors "B75" "B88" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4608459051069517355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  674  <|@ instruction CMP rbx|DWORD y: 65536 size: DWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.7784274516077427 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B85" 
    xhandlers
    flags 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B84" 
    xhandlers
    flags 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction r14|DWORD = MOVSX [rax|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [rcx|QWORD[.] + rbp|DWORD * 2 + 16], y: r14|DWORD) size: WORD <|@ <|@
      nr  716  <|@ instruction TEST rdx|DWORD y: -524288 size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.3754528776035644 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4610163498181875718
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, stack:32]
live-base-pointers: []
java.lang.Long.getChars(Long.java:468) [bci: 194]
locals: - - - rcx|QWORD[.] - - r13|DWORD rbp|DWORD r10|DWORD rdi|DWORD rbx|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: rsi|QWORD[.] - - - stack:36|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:194, 59] <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r9|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B84 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B84" 
    successors "B77" "B86" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = IMUL rbx|DWORD y: 52429 size: DWORD <|@ <|@
      nr  688  <|@ instruction rdi|DWORD = SHR rdx|DWORD y: 19 size: DWORD <|@ <|@
      nr  690  <|@ instruction rbp|DWORD = SHL rdi|DWORD y: 3 size: DWORD <|@ <|@
      nr  692  <|@ instruction r13|DWORD = SHL rdi|DWORD size: DWORD <|@ <|@
      nr  694  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction r13|DWORD = SUB (x: rbx|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction CMP r13|DWORD y: 36 size: DWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 0.7994949909673181 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 4605369860874186673
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4596385384456355578
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rdx|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr  742  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 4596385384456355578
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr  750  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596041357700081481
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rdx|QWORD = NEG rdx|QWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[45|0x2d] <|@ <|@
      nr  168  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction r11|DWORD = MOVE input: short[45|0x2d] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4593757480463256817
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r10|QWORD = NEG rdx|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ instruction r11|QWORD = MOVE input: long[10|0xa] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602997013163293592
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   66  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.2127875849180494 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4601263171516037995
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r9|QWORD = SHL r11|QWORD y: 3 size: QWORD <|@ <|@
      nr   82  <|@ instruction r11|QWORD = SHL r11|QWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction r11|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B9 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B9" 
    successors "B7" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603118360387522802
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP r8|DWORD y: 19 size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.9754513925251492 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592872563214774035
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591307620917709195
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: int[19|0x13] <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction stack:64|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:32|QWORD[.] stack:48|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
locals: stack:32|QWORD[.] stack:64|QWORD - - stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 49] <|@ <|@
      nr  204  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  230  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4586257026091504646
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  240  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  242  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  244  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4586196064040947544
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  260  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  262  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B26 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  306  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  324  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  360  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  372  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  374  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  396  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  398  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  420  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  422  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  424  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction r11|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[*] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B30" "B47" "B46" 
    successors "B49" "B67" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B68" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B65" "B64" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5fd61d61 encoding: base: 0 shift: 3 <|@ <|@
      nr  610  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  612  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  616  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  618  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.200374012309526 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4585577136578945478
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction r11|DWORD = MOVE input: short[0|0x0] <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B48" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B30 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  464  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  500  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  512  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  514  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  524  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  536  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  538  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  540  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  546  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  560  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 4578919844131722865
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r11|DWORD = MOVE input: int[20|0x14] <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4576582604300494654
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction rdx|QWORD = NEG rdx|QWORD size: QWORD <|@ <|@
      nr  626  <|@ instruction r11|DWORD = MOVE input: short[45|0x2d] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[45|0x2d] <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580737392288182448
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  996  <|@ instruction JUMP ~[] destination: B104 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B104" 
    successors "B35" "B104" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582430782581435285
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  342  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  344  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  346  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580737392288182448
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B66 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" 
    successors "B53" "B66" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582430782581435285
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  484  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  486  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4572068871092092022
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4572556567496548840
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  288  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  292  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:32|QWORD[.] stack:48|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
locals: stack:32|QWORD[.] stack:64|QWORD - - stack:36|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 49] <|@ <|@
      nr  294  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4561553312872285184
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4561553312872285184
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"-9223372036854775808"] <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
locals: stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuilder.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 11] <|@ <|@
      nr   30  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4556438766115510041
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction r11|DWORD = MOVE input: int[-88859|0xfffffffffffea4e5] <|@ <|@
      nr  786  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@reference-map: [rcx:0, stack:32]
live-base-pointers: []
java.lang.Long.getChars(Long.java:465) [bci: 157]
locals: - - - rcx|QWORD[.] - - - r9|DWORD r10|DWORD - rbx|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: stack:32|QWORD[.] - - - rax|DWORD 
>@ <|@ instruction DEOPT info [bci:157, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 668] y: -151649 size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rcx:0, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:32|QWORD[.] rcx|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
locals: stack:32|QWORD[.] rdx|QWORD - - rax|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction MOV [r15|QWORD + 668] y: -84787 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:693) [bci: 0]
locals: stack:32|QWORD[.] long[-9223372036854775808|0x8000000000000000] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction r11|DWORD = MOVE input: int[-92443|0xfffffffffffe96e5] <|@ <|@
      nr  778  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-98075|0xfffffffffffe80e5] <|@ <|@
      nr  882  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  892  <|@ st <@st|@reference-map: [rcx:0, stack:32]
live-base-pointers: []
java.lang.Long.getChars(Long.java:453) [bci: 90]
locals: - - - rcx|QWORD[.] - - - r9|DWORD r10|DWORD - rbx|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: stack:32|QWORD[.] - - - rax|DWORD 
>@ <|@ instruction DEOPT info [bci:90, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: int[-101403|0xfffffffffffe73e5] <|@ <|@
      nr  874  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  980  <|@ instruction r11|DWORD = MOVE input: int[-107035|0xfffffffffffe5de5] <|@ <|@
      nr  982  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" "B100" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.Long.getChars(Long.java:441) [bci: 19]
locals: rbx|QWORD - - rcx|QWORD[.] - - - rdi|DWORD r10|DWORD - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: rsi|QWORD[.] - - - rax|DWORD 
>@ <|@ instruction DEOPT info [bci:19, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction r11|DWORD = MOVE input: int[-110363|0xfffffffffffe50e5] <|@ <|@
      nr  974  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction r11|DWORD = MOVE input: int[-113691|0xfffffffffffe43e5] <|@ <|@
      nr  966  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction MOV [r15|QWORD + 668] y: -95259 size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [rcx:0, stack:32]
live-base-pointers: []
java.lang.Long.getChars(Long.java:468) [bci: 194]
locals: - - - rcx|QWORD[.] - - r13|DWORD rbp|DWORD r10|DWORD rdi|DWORD rbx|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: stack:32|QWORD[.] - - - rax|DWORD 
>@ <|@ instruction DEOPT info [bci:194, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-104731|0xfffffffffffe66e5] <|@ <|@
      nr  866  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_1       
     1: ldc2_w        #55         // -9223372036854775808
     4: lcmp          
     5: ifne          17
     8: aload_0       
     9: ldc           #57         // "-9223372036854775808"
    11: invokevirtual #18         // append:(java.lang.String)java.lang.AbstractStringBuilder
    14: pop           
    15: aload_0       
    16: areturn       
    17: lload_1       
    18: lconst_0      
    19: lcmp          
    20: ifge          33
    23: lload_1       
    24: lneg          
    25: invokestatic  #37         // java.lang.Long.stringSize:(long)int
    28: iconst_1      
    29: iadd          
    30: goto          37
    33: lload_1       
    34: invokestatic  #37         // java.lang.Long.stringSize:(long)int
    37: istore_3      
    38: aload_0       
    39: getfield      #2          // count:int
    42: iload_3       
    43: iadd          
    44: istore        4
    46: aload_0       
    47: iload         4
    49: invokespecial #3          // ensureCapacityInternal:(int)void
    52: lload_1       
    53: iload         4
    55: aload_0       
    56: getfield      #1          // value:char[]
    59: invokestatic  #38         // java.lang.Long.getChars:(long, int, char[])void
    62: aload_0       
    63: iload         4
    65: putfield      #2          // count:int
    68: aload_0       
    69: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5a051018 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   10  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 9.122574224581514E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607174201915641711
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.12749942115219115 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606026836872461363
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction r10|QWORD = MOVE input: long[10|0xa] <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615431510609192960
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  112  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.2127875849180494 condition: > trueDestination: B13 -> B17 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613676206285351232
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction r8|QWORD = SHL r10|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction r10|QWORD = SHL r10|QWORD size: QWORD <|@ <|@
      nr  128  <|@ instruction r8|QWORD = ADD (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction r10|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B13" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615639110617147468
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  106  <|@ instruction CMP r11|DWORD y: 19 size: DWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.9754513925251492 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" "B16" "B10" 
    successors "B18" "B21" 
    xhandlers
    flags 
    probability 4607174201915641711
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37]
stack: r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD - - - 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:37] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  148  <|@ instruction r9|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fd61d61 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.9529560614867585 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4606750854342328502
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.200374012309526 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B71" 
    xhandlers
    flags 
    probability 4605032519989941988
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: short[0|0x0] <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B20 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" "B19" "B20" 
    successors "B72" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  648  <|@ instruction r9|QWORD = MOVE input: long[2147483648|0x80000000] <|@ <|@
      nr  650  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction rbx|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B97" "B102" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  896  <|@ instruction rdx|QWORD = MOVE input: long[-6640827866535438581|0xa3d70a3d70a3d70b] <|@ <|@
      nr  898  <|@ instruction rax|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  904  <|@ instruction rax|QWORD = SAR rdx|QWORD y: 6 size: QWORD <|@ <|@
      nr  906  <|@ instruction rbp|QWORD = SHL rax|QWORD y: 5 size: QWORD <|@ <|@
      nr  908  <|@ instruction rdx|QWORD = AND rdx|QWORD y: -64 size: QWORD <|@ <|@
      nr  910  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  912  <|@ instruction rdx|QWORD = SHL rax|QWORD y: 2 size: QWORD <|@ <|@
      nr  914  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = SUB (x: rbx|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|DWORD = MOV rdx|QWORD size: DWORD <|@ <|@
      nr  920  <|@ instruction CMP rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B101" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction rbp|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  928  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction r13|DWORD = LEA [rdi|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4602963239788144647
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr  944  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  946  <|@ instruction rdi|DWORD = MOVSX [rdi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV (x: [rcx|QWORD[.] + rbp|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  950  <|@ instruction rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV (x: [rcx|QWORD[.] + r13|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  954  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:32]
live-base-pointers: []
java.lang.Long.getChars(Long.java:447) [bci: 83]
locals: rax|QWORD - - rcx|QWORD[.] rax|QWORD - rdx|DWORD r13|DWORD r10|DWORD - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: rsi|QWORD[.] - - - stack:36|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:83, 59] <|@ <|@
      nr  956  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B99 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B99" 
    successors "B73" "B96" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4609572320479263676
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  658  <|@ instruction CMP (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.652714924542596 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" 
    xhandlers
    flags 
    probability 4607174201915641713
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rax|DWORD = MOV rbx|QWORD size: DWORD <|@ <|@
      nr  666  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B89" "B94" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  800  <|@ instruction rax|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr  804  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr  808  <|@ instruction rdi|DWORD = SHL rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  810  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD <|@ <|@
      nr  812  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rdx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMP rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr  822  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction rdi|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  828  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction rbp|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr  836  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B74" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4598794582764657101
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr  844  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  846  <|@ instruction rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [rcx|QWORD[.] + rdi|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  850  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [rcx|QWORD[.] + rbp|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr  854  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:32]
live-base-pointers: []
java.lang.Long.getChars(Long.java:459) [bci: 154]
locals: - - - rcx|QWORD[.] - - rdx|DWORD rbp|DWORD r10|DWORD rax|DWORD rax|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: rsi|QWORD[.] - - - stack:36|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:154, 59] <|@ <|@
      nr  856  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction r9|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B91 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B91" 
    successors "B75" "B88" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4608459051069517355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  674  <|@ instruction CMP rbx|DWORD y: 65536 size: DWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.7784274516077427 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B85" 
    xhandlers
    flags 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B84" 
    xhandlers
    flags 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction r14|DWORD = MOVSX [rax|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [rcx|QWORD[.] + rbp|DWORD * 2 + 16], y: r14|DWORD) size: WORD <|@ <|@
      nr  716  <|@ instruction TEST rdx|DWORD y: -524288 size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.3754528776035644 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4610163498181875718
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, stack:32]
live-base-pointers: []
java.lang.Long.getChars(Long.java:468) [bci: 194]
locals: - - - rcx|QWORD[.] - - r13|DWORD rbp|DWORD r10|DWORD rdi|DWORD rbx|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: rsi|QWORD[.] - - - stack:36|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:194, 59] <|@ <|@
      nr  768  <|@ instruction rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r9|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B84 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B84" 
    successors "B77" "B86" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4613174503897223135
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = IMUL rbx|DWORD y: 52429 size: DWORD <|@ <|@
      nr  688  <|@ instruction rdi|DWORD = SHR rdx|DWORD y: 19 size: DWORD <|@ <|@
      nr  690  <|@ instruction rbp|DWORD = SHL rdi|DWORD y: 3 size: DWORD <|@ <|@
      nr  692  <|@ instruction r13|DWORD = SHL rdi|DWORD size: DWORD <|@ <|@
      nr  694  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction r13|DWORD = SUB (x: rbx|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction CMP r13|DWORD y: 36 size: DWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4607174201915641712
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  728  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 0.7994949909673181 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors 
    xhandlers
    flags 
    probability 4605369860874186673
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4596385384456355578
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rdx|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr  742  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 4596385384456355578
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr  750  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  752  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596041357700081481
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rdx|QWORD = NEG rdx|QWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[45|0x2d] <|@ <|@
      nr  168  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction r11|DWORD = MOVE input: short[45|0x2d] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4593757480463256817
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r10|QWORD = NEG rdx|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ instruction r11|QWORD = MOVE input: long[10|0xa] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602997013163293592
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   66  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.2127875849180494 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4601263171516037995
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r9|QWORD = SHL r11|QWORD y: 3 size: QWORD <|@ <|@
      nr   82  <|@ instruction r11|QWORD = SHL r11|QWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction r11|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B9 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B9" 
    successors "B7" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603118360387522802
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP r8|DWORD y: 19 size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.9754513925251492 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592872563214774035
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591307620917709195
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction r11|DWORD = MOVE input: int[19|0x13] <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction stack:64|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:32|QWORD[.] stack:48|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
locals: stack:32|QWORD[.] stack:64|QWORD - - stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 49] <|@ <|@
      nr  204  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B28" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  230  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" "B26" 
    xhandlers
    flags 
    probability 4586257026091504646
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  240  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  242  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  244  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B24 -> B28 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4586196064040947544
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  260  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  262  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B26 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B48" "B31" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  306  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B29 -> B48 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B34" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  324  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B31 -> B36 falseDestination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B39" "B38" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  360  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B39 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  372  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  374  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B36" 
    successors "B42" "B41" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B42 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  396  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  398  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B39" 
    successors "B45" "B44" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  420  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  422  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  424  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B42" 
    successors "B48" "B47" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction r11|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B48 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[*] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B29" "B47" "B45" 
    successors "B49" "B68" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B48" "B65" "B63" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4586934382208805781
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5fd61d61 encoding: base: 0 shift: 3 <|@ <|@
      nr  610  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  612  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  616  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  618  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.200374012309526 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4585577136578945478
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction r11|DWORD = MOVE input: short[0|0x0] <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  464  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B57" "B56" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  500  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B57 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  512  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  514  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B54" 
    successors "B60" "B59" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  524  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B60 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  536  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  538  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  540  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B57" 
    successors "B63" "B62" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  546  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B63 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  560  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4582430782581435285
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B68 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580737392288182448
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 4578919844131722865
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r11|DWORD = MOVE input: int[20|0x14] <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4576582604300494654
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction rdx|QWORD = NEG rdx|QWORD size: QWORD <|@ <|@
      nr  626  <|@ instruction r11|DWORD = MOVE input: short[45|0x2d] <|@ <|@
      nr  628  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction r10|DWORD = MOVE input: int[45|0x2d] <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B34" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  342  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  344  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  346  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B36 falseDestination: B34 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573423583326694293
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B52" 
    successors "B54" "B52" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582430782581435285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  484  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  486  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B54 falseDestination: B52 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B23" "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4572556567496548840
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  288  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  292  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:32|QWORD[.] stack:48|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
locals: stack:32|QWORD[.] stack:64|QWORD - - stack:36|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 49] <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4561553312872285184
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4561553312872285184
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"-9223372036854775808"] <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11]
locals: stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuilder.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 11] <|@ <|@
      nr   30  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction r11|DWORD = MOVE input: int[-88859|0xfffffffffffea4e5] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@reference-map: [rcx:0, stack:32]
live-base-pointers: []
java.lang.Long.getChars(Long.java:465) [bci: 157]
locals: - - - rcx|QWORD[.] - - - r9|DWORD r10|DWORD - rbx|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: stack:32|QWORD[.] - - - rax|DWORD 
>@ <|@ instruction DEOPT info [bci:157, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 668] y: -151649 size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rcx:0, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:32|QWORD[.] rcx|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49]
locals: stack:32|QWORD[.] rdx|QWORD - - rax|DWORD 
>@ <|@ instruction DEOPT info [bci:20, 49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction MOV [r15|QWORD + 668] y: -84787 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:693) [bci: 0]
locals: stack:32|QWORD[.] long[-9223372036854775808|0x8000000000000000] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction r11|DWORD = MOVE input: int[-92443|0xfffffffffffe96e5] <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-98075|0xfffffffffffe80e5] <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  882  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  892  <|@ st <@st|@reference-map: [rcx:0, stack:32]
live-base-pointers: []
java.lang.Long.getChars(Long.java:453) [bci: 90]
locals: - - - rcx|QWORD[.] - - - r9|DWORD r10|DWORD - rbx|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: stack:32|QWORD[.] - - - rax|DWORD 
>@ <|@ instruction DEOPT info [bci:90, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: int[-101403|0xfffffffffffe73e5] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  980  <|@ instruction r11|DWORD = MOVE input: int[-107035|0xfffffffffffe5de5] <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" "B100" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  982  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.Long.getChars(Long.java:441) [bci: 19]
locals: rbx|QWORD - - rcx|QWORD[.] - - - rdi|DWORD r10|DWORD - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: rsi|QWORD[.] - - - rax|DWORD 
>@ <|@ instruction DEOPT info [bci:19, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction r11|DWORD = MOVE input: int[-110363|0xfffffffffffe50e5] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction r11|DWORD = MOVE input: int[-113691|0xfffffffffffe43e5] <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction MOV [r15|QWORD + 668] y: -95259 size: DWORD <|@ <|@
      nr  760  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [rcx:0, stack:32]
live-base-pointers: []
java.lang.Long.getChars(Long.java:468) [bci: 194]
locals: - - - rcx|QWORD[.] - - r13|DWORD rbp|DWORD r10|DWORD rdi|DWORD rbx|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59]
locals: stack:32|QWORD[.] - - - rax|DWORD 
>@ <|@ instruction DEOPT info [bci:194, 59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-104731|0xfffffffffffe66e5] <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_1       
     1: ldc2_w        #55         // -9223372036854775808
     4: lcmp          
     5: ifne          17
     8: aload_0       
     9: ldc           #57         // "-9223372036854775808"
    11: invokevirtual #18         // append:(java.lang.String)java.lang.AbstractStringBuilder
    14: pop           
    15: aload_0       
    16: areturn       
    17: lload_1       
    18: lconst_0      
    19: lcmp          
    20: ifge          33
    23: lload_1       
    24: lneg          
    25: invokestatic  #37         // java.lang.Long.stringSize:(long)int
    28: iconst_1      
    29: iadd          
    30: goto          37
    33: lload_1       
    34: invokestatic  #37         // java.lang.Long.stringSize:(long)int
    37: istore_3      
    38: aload_0       
    39: getfield      #2          // count:int
    42: iload_3       
    43: iadd          
    44: istore        4
    46: aload_0       
    47: iload         4
    49: invokespecial #3          // ensureCapacityInternal:(int)void
    52: lload_1       
    53: iload         4
    55: aload_0       
    56: getfield      #1          // value:char[]
    59: invokestatic  #38         // java.lang.Long.getChars:(long, int, char[])void
    62: aload_0       
    63: iload         4
    65: putfield      #2          // count:int
    68: aload_0       
    69: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488974242049ba00000000000000804c3bd20f84d90500004885d20f8cb502000041bb0100000049c7c20a000000e9290000000f1f8000000000660f1f4400004c3bd20f8f1e00000041ffc34d8bc249c1e00349d1e24d03c24d8bd04183fb137cdee9b8020000448b5610468b04d50c00000044035e0c458bcb452bc8418bca48c1e1034183f9010f8d9c0200004885d20f8c2602000041ba0000000044895c241c41bb00000000448b410c41b9000000808b7c241c488bdae994000000669048ba0bd7a3703d0ad7a3488bc348f7ea4803d3488bc248c1f806488be848c1e5054883e2c04803ea488bd048c1e2024803ea488bd3482bd58bd283fa640f83b30500008befffcd443bc50f86c4050000448d6ffe453bc50f86bf05000048bbaddeaddeaddeadde48bfaddeaddeaddeadde0fbf7c571066897c69100fbf5c53106642895c6910850500000000418bfd488bd84c3bcb0f8e65ffffff8bc38bd8448bcfe985000000660f1f8400000000008bc3ba1f85eb51f7ea8bc2c1f8058bf8c1e70683e2e003fa8bd0c1e20203fa8bd32bd783fa640f83f4040000418bf9ffcf443bc70f8604050000418d69fe443bc50f864505000049b9addeaddeaddeadde48bbaddeaddeaddeadde0fbf5c531066895c7910450fbf4c51106644894c69108505000000008bd8448bcd81fb000001000f8d78ffffff48b8addeaddeaddeaddee93a000000660f1f840000000000418be9ffcd443bc50f866a040000460fbf746810664489746910f7c20000f8ff0f84350000008505000000008bdf448bcd69d3cdcc00008bfac1ef138befc1e503448bef41d1e54103ed448beb442bed4183fd2472aae9c20300004585d28b44241c0f851900000089460c488bc6488b6c24304883c438850500000000c5f877c3418d51fe443bc20f86460400006644895c511089460c488bc6488b6c24304883c438850500000000c5f877c348f7da41ba2d00000044895c241c41bb2d000000e9d2fdffff4c8bd249f7da41b80100000049c7c30a000000e91e000000669041ffc04d3bda0f8f1b0000004d8bcb49c1e10349d1e34d03cb4d8bd94183f8137cdee94d020000458bd8e948fdffff41bb13000000e93dfdffff48894c2410448944240c4489542408488914244c8bce418bd344895c241c0f1f8000000000e80000000090448be84585ed0f8cea020000498b7760498b57704181fdffffff000f835e020000418bcdd1e18d491783e1f84863c94c8bd14c03d64c3bd20f87410200004d8957600f188431c00000000f188431000100000f188431400100000f1884318001000044896e0c48c70601000000c74608addeadde488bc6448b44240c453be8418bd5410f4fd04863d24883fa010f8c9e000000448b542408488d70104e8d14d5100000004c8d5af04d85db49c7c0000000000f8d830100004c8d5af84d3bc30f8f13000000c4817a6f0442c4a17a7f04464d8d58084d8bc34c8d5afc4d3bc30f8f13000000c481f96e0442c4a1f97e04464d8d58044d8bc34c8d5afe4d3bc30f8f13000000c481796e0442c4a1797e04464d8d58024d8bc34c8bda49ffcb4d3bc30f8f0a000000470fbf144266468914464963f5483bf20f8f46000000488b1424488b7424204c8bd049c1ea03448956104c8bd649c1ea0949bb00e01b17010000004788241a4885d20f8cab00000041bb00000000488bc841ba00000000e9d0fbffff4c8d545010482bf2488d56f04885d20f8dbd00000049c7c300000000488d56f84c3bda0f8f11000000c5f9efc0c4817a7f045a498d53084c8bda488d56fc4c3bda0f8f11000000c5f9efc0c481f97e045a498d53044c8bda488d56fe4c3bda0f8f11000000c5f9efc0c481797e045a498d53024c8bda48ffce4c3bde0f8f38ffffff664789245ae92effffff41bb14000000e9f8faffff48f7da41bb2d000000488bc841ba2d000000e922fbffff66660f1f840000000000c4817e6f0442c4a17e7f04464d8d40104d3bc37eebe963feffffc5f9efc049c7c3000000006666660f1f840000000000c4817e7f045a4d8d5b104c3bda7ef1e920ffffff48beaddeaddeaddeadde418bd5b900000000e80000000090e9dbfdffff817e08addeadde0f857200000048baaddeaddeaddeadde4c8bd60f1f4000e80000000090488b442420488b6c24304883c438850500000000c5f877c341bbe5a4feff8b44241c45899f9c0200004d89a7a8020000e80000000090488b4c24108b44241c488b142441c7879c0200009faffdff4d89a7a8020000e8000000009041c7879c020000cdb4feff4d89a7a8020000e8000000009041bbe596feffeba341bbe580feff8b44241c45899f9c0200004d89a7a8020000e8000000009041bbe573feffebe041bbe55dfeff8b44241c45899f9c0200004d89a7a8020000e8000000009041bbe550feffebe041bbe543feffebd841c7879c020000e58bfeff4d89a7a8020000e8000000009041bbe566feffeb92e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5a051018 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 63 10 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 66 12 BRANCH trueDestinationProbability: 9.122574224581514E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 72 block B4 null  <||@
  Comment 72 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 44 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 75 46 BRANCH trueDestinationProbability: 0.12749942115219115 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B11  <||@
  Comment 81 block B11 null  <||@
  Comment 81 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 98 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 87 100 r10|QWORD = MOVE input: long[10|0xa]  <||@
  Comment 94 102 JUMP ~[] destination: B11 -> B12  <||@
  Comment 99 block B13 loop 1 depth 1 header:51|LoopBegin  <||@
  Comment 99 110 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 112 112 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 115 114 BRANCH trueDestinationProbability: 0.2127875849180494 condition: > trueDestination: B13 -> B17 falseDestination: B13 -> B15  <||@
  Comment 121 block B15 loop 1 depth 1 header:51|LoopBegin  <||@
  Comment 121 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 122 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 124 124 r8|QWORD = SHL r10|QWORD y: 3 size: QWORD  <||@
  Comment 131 126 r10|QWORD = SHL r10|QWORD size: QWORD  <||@
  Comment 134 128 r8|QWORD = ADD (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 137 130 r10|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 140 132 JUMP ~[] destination: B15 -> B12  <||@
  Comment 140 block B12 loop 1 depth 1 header:51|LoopBegin  <||@
  Comment 140 104 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 140 106 CMP r11|DWORD y: 19 size: DWORD  <||@
  Comment 144 108 BRANCH trueDestinationProbability: 0.9754513925251492 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B16  <||@
  Comment 151 block B17 null  <||@
  Comment 151 140 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 151 142 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 155 144 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:37]  <||@
  Comment 155 [rsi:0, r10:0, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD  |-  |-  |- 
     stack:   |r11|DWORD     |           |   |   |    <||@
  Comment 155 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 163 146 r11|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 167 148 r9|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 173 150 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fd61d61 encoding: base: 0 shift: 3  <||@
  Comment 180 152 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 184 154 BRANCH trueDestinationProbability: 0.9529560614867585 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B21  <||@
  Comment 190 block B18 null  <||@
  Comment 190 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 158 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 193 160 BRANCH trueDestinationProbability: 0.200374012309526 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 199 block B20 null  <||@
  Comment 199 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 199 176 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 205 178 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 210 180 r11|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 216 182 JUMP ~[] destination: B20 -> B71  <||@
  Comment 216 block B71 null  <||@
  Comment 216 644 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 216 646 r8|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 220 648 r9|QWORD = MOVE input: long[2147483648|0x80000000]  <||@
  Comment 226 650 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 230 652 rbx|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 233 654 JUMP ~[] destination: B71 -> B72  <||@
  Comment 238 block B96 loop 4 depth 1 header:157|LoopBegin  <||@
  Comment 238 894 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 896 rdx|QWORD = MOVE input: long[-6640827866535438581|0xa3d70a3d70a3d70b]  <||@
  Comment 250 898 rax|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 253 900 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 256 902 rdx|QWORD = ADD (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 259 904 rax|QWORD = SAR rdx|QWORD y: 6 size: QWORD  <||@
  Comment 266 906 rbp|QWORD = SHL rax|QWORD y: 5 size: QWORD  <||@
  Comment 273 908 rdx|QWORD = AND rdx|QWORD y: -64 size: QWORD  <||@
  Comment 277 910 rbp|QWORD = ADD (x: rbp|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 280 912 rdx|QWORD = SHL rax|QWORD y: 2 size: QWORD  <||@
  Comment 287 914 rbp|QWORD = ADD (x: rbp|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 290 916 rdx|QWORD = SUB (x: rbx|QWORD, ~y: rbp|QWORD) size: QWORD  <||@
  Comment 296 918 rdx|DWORD = MOV rdx|QWORD size: DWORD  <||@
  Comment 298 920 CMP rdx|DWORD y: 100 size: DWORD  <||@
  Comment 301 922 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B102  <||@
  Comment 307 block B97 loop 4 depth 1 header:157|LoopBegin  <||@
  Comment 307 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 307 926 rbp|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 311 928 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 314 930 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B101  <||@
  Comment 320 block B98 loop 4 depth 1 header:157|LoopBegin  <||@
  Comment 320 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 320 934 r13|DWORD = LEA [rdi|DWORD - 2] size: DWORD  <||@
  Comment 324 936 CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 327 938 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 333 block B99 loop 4 depth 1 header:157|LoopBegin  <||@
  Comment 333 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 942 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}]  <||@
  Comment 333 {Object[char[100]{0, 0, 0, 0, 0, ...}]}  <||@
  Comment 343 944 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 343 {Object[char[100]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 353 946 rdi|DWORD = MOVSX [rdi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 358 948 MOV (x: [rcx|QWORD[.] + rbp|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 363 950 rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 368 952 MOV (x: [rcx|QWORD[.] + r13|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 374 954 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:83, 59]  <||@
  Comment 374 [rcx:0, rsi:0, stack:32]at java.lang.Long.getChars(Long.java:447) [bci: 83, duringCall: false, rethrow: false]
              |0          |1  |2  |3             |4          |5  |6          |7          |8          |9  |10 
     locals:  |rax|QWORD  |-  |-  |rcx|QWORD[.]  |rax|QWORD  |-  |rdx|DWORD  |r13|DWORD  |r10|DWORD  |-  |-  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4              
     locals:  |rsi|QWORD[.]  |-  |-  |-  |stack:36|DWORD   <||@
  Comment 374 {infopoint: SAFEPOINT}  <||@
  Comment 374 11  <||@
  Comment 380 956 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 383 958 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 386 960 JUMP ~[] destination: B99 -> B72  <||@
  Comment 386 block B72 loop 4 depth 1 header:157|LoopBegin  <||@
  Comment 386 656 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 386 658 CMP (x: r9|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 389 660 BRANCH trueDestinationProbability: 0.652714924542596 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B96  <||@
  Comment 395 block B73 null  <||@
  Comment 395 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 664 rax|DWORD = MOV rbx|QWORD size: DWORD  <||@
  Comment 397 666 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 399 668 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 402 670 JUMP ~[] destination: B73 -> B74  <||@
  Comment 407 block B88 loop 5 depth 1 header:194|LoopBegin  <||@
  Comment 407 798 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 416 800 rax|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 418 802 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 423 804 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 425 806 rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 430 808 rdi|DWORD = SHL rax|DWORD y: 6 size: DWORD  <||@
  Comment 435 810 rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD  <||@
  Comment 438 812 rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 440 814 rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD  <||@
  Comment 445 816 rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 447 818 rdx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 451 820 CMP rdx|DWORD y: 100 size: DWORD  <||@
  Comment 454 822 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B94  <||@
  Comment 460 block B89 loop 5 depth 1 header:194|LoopBegin  <||@
  Comment 460 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 826 rdi|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 465 828 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 468 830 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B93  <||@
  Comment 474 block B90 loop 5 depth 1 header:194|LoopBegin  <||@
  Comment 474 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 474 834 rbp|DWORD = LEA [r9|DWORD - 2] size: DWORD  <||@
  Comment 478 836 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 481 838 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 487 block B91 loop 5 depth 1 header:194|LoopBegin  <||@
  Comment 487 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 487 842 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}]  <||@
  Comment 487 {Object[char[100]{0, 0, 0, 0, 0, ...}]}  <||@
  Comment 497 844 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 497 {Object[char[100]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 507 846 rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 512 848 MOV (x: [rcx|QWORD[.] + rdi|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 517 850 r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 523 852 MOV (x: [rcx|QWORD[.] + rbp|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 529 854 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:154, 59]  <||@
  Comment 529 [rcx:0, rsi:0, stack:32]at java.lang.Long.getChars(Long.java:459) [bci: 154, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4  |5  |6          |7          |8          |9          |10        
     locals:  |-  |-  |-  |rcx|QWORD[.]  |-  |-  |rdx|DWORD  |rbp|DWORD  |r10|DWORD  |rax|DWORD  |rax|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4              
     locals:  |rsi|QWORD[.]  |-  |-  |-  |stack:36|DWORD   <||@
  Comment 529 {infopoint: SAFEPOINT}  <||@
  Comment 529 11  <||@
  Comment 535 856 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 537 858 r9|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 540 860 JUMP ~[] destination: B91 -> B74  <||@
  Comment 540 block B74 loop 5 depth 1 header:194|LoopBegin  <||@
  Comment 540 672 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 540 674 CMP rbx|DWORD y: 65536 size: DWORD  <||@
  Comment 546 676 BRANCH trueDestinationProbability: 0.7784274516077427 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B88  <||@
  Comment 552 block B75 null  <||@
  Comment 552 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 552 680 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 552 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 562 682 JUMP ~[] destination: B75 -> B76  <||@
  Comment 567 block B77 loop 6 depth 1 header:223|LoopBegin  <||@
  Comment 567 702 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 576 704 rbp|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 581 706 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 584 708 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B85  <||@
  Comment 590 block B78 loop 6 depth 1 header:223|LoopBegin  <||@
  Comment 590 710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 712 r14|DWORD = MOVSX [rax|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD  <||@
  Comment 596 714 MOV (x: [rcx|QWORD[.] + rbp|DWORD * 2 + 16], y: r14|DWORD) size: WORD  <||@
  Comment 602 716 TEST rdx|DWORD y: -524288 size: DWORD  <||@
  Comment 608 718 BRANCH trueDestinationProbability: 0.3754528776035644 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B84  <||@
  Comment 614 block B84 loop 6 depth 1 header:223|LoopBegin  <||@
  Comment 614 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 614 766 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:194, 59]  <||@
  Comment 614 [rax:0, rcx:0, rsi:0, stack:32]at java.lang.Long.getChars(Long.java:468) [bci: 194, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4  |5  |6          |7          |8          |9          |10        
     locals:  |-  |-  |-  |rcx|QWORD[.]  |-  |-  |r13|DWORD  |rbp|DWORD  |r10|DWORD  |rdi|DWORD  |rbx|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4              
     locals:  |rsi|QWORD[.]  |-  |-  |-  |stack:36|DWORD   <||@
  Comment 614 {infopoint: SAFEPOINT}  <||@
  Comment 614 11  <||@
  Comment 620 768 rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 622 770 r9|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 625 772 JUMP ~[] destination: B84 -> B76  <||@
  Comment 625 block B76 loop 6 depth 1 header:223|LoopBegin  <||@
  Comment 625 684 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 625 686 rdx|DWORD = IMUL rbx|DWORD y: 52429 size: DWORD  <||@
  Comment 631 688 rdi|DWORD = SHR rdx|DWORD y: 19 size: DWORD  <||@
  Comment 636 690 rbp|DWORD = SHL rdi|DWORD y: 3 size: DWORD  <||@
  Comment 641 692 r13|DWORD = SHL rdi|DWORD size: DWORD  <||@
  Comment 647 694 rbp|DWORD = ADD (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 650 696 r13|DWORD = SUB (x: rbx|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 656 698 CMP r13|DWORD y: 36 size: DWORD  <||@
  Comment 660 700 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B86  <||@
  Comment 667 block B79 null  <||@
  Comment 667 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 667 722 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 670 728 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 674 724 BRANCH trueDestinationProbability: 0.7994949909673181 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81  <||@
  Comment 680 block B80 null  <||@
  Comment 680 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 730 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 683 732 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 686 734 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 695 12  <||@
  Comment 705 block B81 null  <||@
  Comment 705 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 705 740 rdx|DWORD = LEA [r9|DWORD - 2] size: DWORD  <||@
  Comment 709 742 CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 712 744 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 718 block B82 null  <||@
  Comment 718 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 718 748 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 724 750 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 727 752 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 730 754 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 739 12  <||@
  Comment 749 block B19 null  <||@
  Comment 749 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 164 rdx|QWORD = NEG rdx|QWORD size: QWORD  <||@
  Comment 752 166 r10|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 758 168 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 763 170 r11|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 769 172 JUMP ~[] destination: B19 -> B71  <||@
  Comment 774 block B5 null  <||@
  Comment 774 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 50 r10|QWORD = NEG rdx|QWORD size: QWORD  <||@
  Comment 780 52 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 786 54 r11|QWORD = MOVE input: long[10|0xa]  <||@
  Comment 793 56 JUMP ~[] destination: B5 -> B6  <||@
  Comment 798 block B7 loop 0 depth 1 header:81|LoopBegin  <||@
  Comment 798 64 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 800 66 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 803 68 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 806 70 BRANCH trueDestinationProbability: 0.2127875849180494 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 812 block B9 loop 0 depth 1 header:81|LoopBegin  <||@
  Comment 812 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 812 80 r9|QWORD = SHL r11|QWORD y: 3 size: QWORD  <||@
  Comment 819 82 r11|QWORD = SHL r11|QWORD size: QWORD  <||@
  Comment 822 84 r9|QWORD = ADD (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 825 86 r11|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 828 88 JUMP ~[] destination: B9 -> B6  <||@
  Comment 828 block B6 loop 0 depth 1 header:81|LoopBegin  <||@
  Comment 828 58 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 828 60 CMP r8|DWORD y: 19 size: DWORD  <||@
  Comment 832 62 BRANCH trueDestinationProbability: 0.9754513925251492 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B10  <||@
  Comment 839 block B8 null  <||@
  Comment 839 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 74 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 842 76 JUMP ~[] destination: B8 -> B17  <||@
  Comment 847 block B16 null  <||@
  Comment 847 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 847 136 r11|DWORD = MOVE input: int[19|0x13]  <||@
  Comment 853 138 JUMP ~[] destination: B16 -> B17  <||@
  Comment 858 block B21 null  <||@
  Comment 858 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 858 186 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 863 188 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 868 190 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 873 192 stack:64|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 877 194 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 880 198 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 883 200 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 888 202 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 49]  <||@
  Comment 888 9  <||@
  Comment 895 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 900 [stack:8, stack:16, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4              
     locals:  |stack:32|QWORD[.]  |stack:64|QWORD  |-  |-  |stack:36|DWORD   <||@
  Comment 901 204 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 904 206 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 907 208 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 913 block B23 null  <||@
  Comment 913 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 913 226 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 917 228 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 921 230 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 928 232 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B28  <||@
  Comment 934 block B24 null  <||@
  Comment 934 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 934 236 rcx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 939 238 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 942 240 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 945 242 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 948 244 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 954 246 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 957 248 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B24 -> B28 falseDestination: B24 -> B26  <||@
  Comment 963 block B26 null  <||@
  Comment 963 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 963 256 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 967 258 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 975 260 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 983 262 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 991 264 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 999 266 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 1003 268 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1010 270 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1010 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1017 272 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1017 274 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 278 JUMP ~[] destination: B26 -> B29  <||@
  Comment 1020 block B29 null  <||@
  Comment 1020 298 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1020 276 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1025 300 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1028 302 rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r8|DWORD) condition: >  <||@
  Comment 1035 304 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1038 306 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 1042 308 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B29 -> B48 falseDestination: B29 -> B31  <||@
  Comment 1048 block B31 null  <||@
  Comment 1048 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1048 316 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1053 318 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1057 320 r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1065 322 r11|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1069 324 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1072 330 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1079 326 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B31 -> B36 falseDestination: B31 -> B34  <||@
  Comment 1085 block B36 null  <||@
  Comment 1085 356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1085 358 r11|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1089 360 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1092 362 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B39 falseDestination: B36 -> B38  <||@
  Comment 1098 block B38 null  <||@
  Comment 1098 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1098 370 xmm0|V128_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1104 372 J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1110 374 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 1114 376 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1117 378 JUMP ~[] destination: B38 -> B39  <||@
  Comment 1117 block B39 null  <||@
  Comment 1117 380 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1117 382 r11|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1121 384 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1124 386 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B42 falseDestination: B39 -> B41  <||@
  Comment 1130 block B41 null  <||@
  Comment 1130 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1130 394 xmm0|V64_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1136 396 J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1142 398 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 1146 400 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1149 402 JUMP ~[] destination: B41 -> B42  <||@
  Comment 1149 block B42 null  <||@
  Comment 1149 404 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1149 406 r11|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1153 408 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1156 410 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44  <||@
  Comment 1162 block B44 null  <||@
  Comment 1162 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1162 418 xmm0|V32_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1168 420 J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1174 422 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 1178 424 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1181 426 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1181 block B45 null  <||@
  Comment 1181 428 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1181 430 r11|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1187 432 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1190 434 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B48 falseDestination: B45 -> B47  <||@
  Comment 1196 block B47 null  <||@
  Comment 1196 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1196 442 r10|DWORD = MOVSX [r10|QWORD[*] + r8|QWORD * 2] size: DWORD  <||@
  Comment 1201 444 MOV (x: [rsi|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 1206 446 JUMP ~[] destination: B47 -> B48  <||@
  Comment 1206 block B48 null  <||@
  Comment 1206 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 450 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1209 452 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1212 454 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B68  <||@
  Comment 1218 block B68 null  <||@
  Comment 1218 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1218 600 rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1222 602 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1227 608 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5fd61d61 encoding: base: 0 shift: 3  <||@
  Comment 1234 610 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1238 612 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1245 614 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1255 616 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1259 618 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1262 620 BRANCH trueDestinationProbability: 0.200374012309526 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 1268 block B70 null  <||@
  Comment 1268 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1268 636 r11|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 1274 638 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1277 640 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1283 642 JUMP ~[] destination: B70 -> B71  <||@
  Comment 1288 block B49 null  <||@
  Comment 1288 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1288 458 r10|QWORD[.] = LEA [rax|QWORD[.] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1293 460 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 1296 462 rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1300 464 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1303 466 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 1309 block B50 null  <||@
  Comment 1309 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1309 470 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1316 472 JUMP ~[] destination: B50 -> B54  <||@
  Comment 1316 block B54 null  <||@
  Comment 1316 496 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1316 498 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1320 500 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1323 502 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B57 falseDestination: B54 -> B56  <||@
  Comment 1329 block B56 null  <||@
  Comment 1329 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1329 510 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1333 512 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1339 514 rdx|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1343 516 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1346 518 JUMP ~[] destination: B56 -> B57  <||@
  Comment 1346 block B57 null  <||@
  Comment 1346 520 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1346 522 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1350 524 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1353 526 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B60 falseDestination: B57 -> B59  <||@
  Comment 1359 block B59 null  <||@
  Comment 1359 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1359 534 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1363 536 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1369 538 rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1373 540 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1376 542 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1376 block B60 null  <||@
  Comment 1376 544 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1376 546 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1380 548 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1383 550 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B63 falseDestination: B60 -> B62  <||@
  Comment 1389 block B62 null  <||@
  Comment 1389 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1389 558 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1393 560 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1399 562 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1403 564 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1406 566 JUMP ~[] destination: B62 -> B63  <||@
  Comment 1406 block B63 null  <||@
  Comment 1406 568 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1406 570 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1409 572 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1412 574 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B68 falseDestination: B63 -> B65  <||@
  Comment 1418 block B65 null  <||@
  Comment 1418 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1418 586 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1423 592 JUMP ~[] destination: B65 -> B68  <||@
  Comment 1428 block B10 null  <||@
  Comment 1428 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1428 92 r11|DWORD = MOVE input: int[20|0x14]  <||@
  Comment 1434 94 JUMP ~[] destination: B10 -> B17  <||@
  Comment 1439 block B69 null  <||@
  Comment 1439 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1439 624 rdx|QWORD = NEG rdx|QWORD size: QWORD  <||@
  Comment 1442 626 r11|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 1448 628 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1451 630 r10|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 1457 632 JUMP ~[] destination: B69 -> B71  <||@
  Comment 1462 block B34 loop 2 depth 1 header:767|LoopBegin  <||@
  Comment 1462 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1472 342 xmm0|V256_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1478 344 J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1484 346 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1488 348 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1491 350 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B36 falseDestination: B34 -> B34  <||@
  Comment 1498 block B51 null  <||@
  Comment 1498 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1498 476 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1502 478 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1509 480 JUMP ~[] destination: B51 -> B52  <||@
  Comment 1509 block B52 loop 3 depth 1 header:832|LoopBegin  <||@
  Comment 1509 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1520 484 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1526 486 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1530 488 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1533 490 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B54 falseDestination: B52 -> B52  <||@
  Comment 1540 block B28 null  <||@
  Comment 1540 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1540 286 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1540 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1550 288 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1553 290 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1558 292 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 49]  <||@
  Comment 1558 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1563 [stack:8, stack:16, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:32|QWORD[.]  |stack:48|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4              
     locals:  |stack:32|QWORD[.]  |stack:64|QWORD  |-  |-  |stack:36|DWORD   <||@
  Comment 1564 296 JUMP ~[] destination: B28 -> B29  <||@
  Comment 1569 block B1 null  <||@
  Comment 1569 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1569 16 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 1569 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 1576 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 1582 block B2 null  <||@
  Comment 1582 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1582 22 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"-9223372036854775808"]  <||@
  Comment 1582 {Object[String:"-9223372036854775808"]}  <||@
  Comment 1592 24 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1595 28 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuilder.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 11]  <||@
  Comment 1595 9  <||@
  Comment 1599 {HotSpotMethod<StringBuilder.append(String)>}  <||@
  Comment 1604 [stack:32]at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1605 30 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 32 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1619 12  <||@
  Comment 1629 block B86 null  <||@
  Comment 1629 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 784 r11|DWORD = MOVE input: int[-88859|0xfffffffffffea4e5]  <||@
  Comment 1635 788 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1635 block B87 null  <||@
  Comment 1635 790 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1635 786 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1639 792 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1646 794 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1653 796 DEOPT info [bci:157, 59]  <||@
  Comment 1653 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1658 [rcx:0, stack:32]at java.lang.Long.getChars(Long.java:465) [bci: 157, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4  |5  |6  |7         |8          |9  |10        
     locals:  |-  |-  |-  |rcx|QWORD[.]  |-  |-  |-  |r9|DWORD  |r10|DWORD  |-  |rbx|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4         
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rax|DWORD   <||@
  Comment 1659 block B22 null  <||@
  Comment 1659 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1659 212 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1664 214 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1668 216 rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1672 218 MOV [r15|QWORD + 668] y: -151649 size: DWORD  <||@
  Comment 1683 220 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1690 222 DEOPT info [bci:20, 49]  <||@
  Comment 1690 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1695 [rcx:0, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1             |2         
     locals:  |-                  |-             |          
     stack:   |stack:32|QWORD[.]  |rcx|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49, duringCall: true, rethrow: false]
              |0                  |1          |2  |3  |4         
     locals:  |stack:32|QWORD[.]  |rdx|QWORD  |-  |-  |rax|DWORD   <||@
  Comment 1696 block B3 null  <||@
  Comment 1696 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1696 36 MOV [r15|QWORD + 668] y: -84787 size: DWORD  <||@
  Comment 1707 38 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1714 40 DEOPT info [bci:0]  <||@
  Comment 1714 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1719 [stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                                              |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |long[-9223372036854775808|0x8000000000000000]  |-  |-  |-   <||@
  Comment 1720 block B85 null  <||@
  Comment 1720 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1720 776 r11|DWORD = MOVE input: int[-92443|0xfffffffffffe96e5]  <||@
  Comment 1726 780 JUMP ~[] destination: B85 -> B87  <||@
  Comment 1728 block B94 null  <||@
  Comment 1728 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1728 880 r11|DWORD = MOVE input: int[-98075|0xfffffffffffe80e5]  <||@
  Comment 1734 884 JUMP ~[] destination: B94 -> B95  <||@
  Comment 1734 block B95 null  <||@
  Comment 1734 886 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1734 882 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1738 888 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1745 890 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1752 892 DEOPT info [bci:90, 59]  <||@
  Comment 1752 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1757 [rcx:0, stack:32]at java.lang.Long.getChars(Long.java:453) [bci: 90, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4  |5  |6  |7         |8          |9  |10        
     locals:  |-  |-  |-  |rcx|QWORD[.]  |-  |-  |-  |r9|DWORD  |r10|DWORD  |-  |rbx|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4         
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rax|DWORD   <||@
  Comment 1758 block B93 null  <||@
  Comment 1758 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 872 r11|DWORD = MOVE input: int[-101403|0xfffffffffffe73e5]  <||@
  Comment 1764 876 JUMP ~[] destination: B93 -> B95  <||@
  Comment 1766 block B102 null  <||@
  Comment 1766 978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1766 980 r11|DWORD = MOVE input: int[-107035|0xfffffffffffe5de5]  <||@
  Comment 1772 984 JUMP ~[] destination: B102 -> B103  <||@
  Comment 1772 block B103 null  <||@
  Comment 1772 986 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1772 982 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1776 988 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1783 990 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1790 992 DEOPT info [bci:19, 59]  <||@
  Comment 1790 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1795 [rcx:0, rsi:0]at java.lang.Long.getChars(Long.java:441) [bci: 19, duringCall: false, rethrow: false]
              |0          |1  |2  |3             |4  |5  |6  |7          |8          |9  |10 
     locals:  |rbx|QWORD  |-  |-  |rcx|QWORD[.]  |-  |-  |-  |rdi|DWORD  |r10|DWORD  |-  |-  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4         
     locals:  |rsi|QWORD[.]  |-  |-  |-  |rax|DWORD   <||@
  Comment 1796 block B101 null  <||@
  Comment 1796 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 972 r11|DWORD = MOVE input: int[-110363|0xfffffffffffe50e5]  <||@
  Comment 1802 976 JUMP ~[] destination: B101 -> B103  <||@
  Comment 1804 block B100 null  <||@
  Comment 1804 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1804 964 r11|DWORD = MOVE input: int[-113691|0xfffffffffffe43e5]  <||@
  Comment 1810 968 JUMP ~[] destination: B100 -> B103  <||@
  Comment 1812 block B83 null  <||@
  Comment 1812 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1812 758 MOV [r15|QWORD + 668] y: -95259 size: DWORD  <||@
  Comment 1823 760 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1830 762 DEOPT info [bci:194, 59]  <||@
  Comment 1830 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1835 [rcx:0, stack:32]at java.lang.Long.getChars(Long.java:468) [bci: 194, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4  |5  |6          |7          |8          |9          |10        
     locals:  |-  |-  |-  |rcx|QWORD[.]  |-  |-  |r13|DWORD  |rbp|DWORD  |r10|DWORD  |rdi|DWORD  |rbx|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4         
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rax|DWORD   <||@
  Comment 1836 block B92 null  <||@
  Comment 1836 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1836 864 r11|DWORD = MOVE input: int[-104731|0xfffffffffffe66e5]  <||@
  Comment 1842 868 JUMP ~[] destination: B92 -> B95  <||@
  Comment 1844 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1844 4  <||@
  Comment 1850 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1850 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8512[java.lang.AbstractStringBuilder.append(long)]"
  method "HotSpotCompilation-8512[java.lang.AbstractStringBuilder.append(long)]"
  date 1527005194417
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b358a0 448b560849c1e203493bc20f85af05cdfe900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488974242049ba00000000000000804c3bd20f84d90500004885d20f8cb502000041bb0100000049c7c20a000000e9290000000f1f8000000000660f1f4400004c3bd20f8f1e00000041ffc34d8bc249c1e00349d1e24d03c24d8bd04183fb137cdee9b8020000448b5610468b04d50c00000044035e0c458bcb452bc8418bca48c1e1034183f9010f8d9c0200004885d20f8c2602000041ba0000000044895c241c41bb00000000448b410c41b9000000808b7c241c488bdae994000000669048ba0bd7a3703d0ad7a3488bc348f7ea4803d3488bc248c1f806488be848c1e5054883e2c04803ea488bd048c1e2024803ea488bd3482bd58bd283fa640f83b30500008befffcd443bc50f86c4050000448d6ffe453bc50f86bf05000048bb08330ac00600000048bf30320ac0060000000fbf7c571066897c69100fbf5c53106642895c69108505ea95d5fc418bfd488bd84c3bcb0f8e65ffffff8bc38bd8448bcfe985000000660f1f8400000000008bc3ba1f85eb51f7ea8bc2c1f8058bf8c1e70683e2e003fa8bd0c1e20203fa8bd32bd783fa640f83f4040000418bf9ffcf443bc70f8604050000418d69fe443bc50f864505000049b908330ac00600000048bb30320ac0060000000fbf5c531066895c7910450fbf4c51106644894c691085054f95d5fc8bd8448bcd81fb000001000f8d78ffffff48b8e0330ac006000000e93a000000660f1f840000000000418be9ffcd443bc50f866a040000460fbf746810664489746910f7c20000f8ff0f84350000008505fa94d5fc8bdf448bcd69d3cdcc00008bfac1ef138befc1e503448bef41d1e54103ed448beb442bed4183fd2472aae9c20300004585d28b44241c0f851900000089460c488bc6488b6c24304883c4388505a994d5fcc5f877c3418d51fe443bc20f86460400006644895c511089460c488bc6488b6c24304883c43885057d94d5fcc5f877c348f7da41ba2d00000044895c241c41bb2d000000e9d2fdffff4c8bd249f7da41b80100000049c7c30a000000e91e000000669041ffc04d3bda0f8f1b0000004d8bcb49c1e10349d1e34d03cb4d8bd94183f8137cdee94d020000458bd8e948fdffff41bb13000000e93dfdffff48894c2410448944240c4489542408488914244c8bce418bd344895c241c0f1f8000000000e87c04cdfe90448be84585ed0f8cea020000498b7760498b57704181fdffffff000f835e020000418bcdd1e18d491783e1f84863c94c8bd14c03d64c3bd20f87410200004d8957600f188431c00000000f188431000100000f188431400100000f1884318001000044896e0c48c70601000000c74608410000f8488bc6448b44240c453be8418bd5410f4fd04863d24883fa010f8c9e000000448b542408488d70104e8d14d5100000004c8d5af04d85db49c7c0000000000f8d830100004c8d5af84d3bc30f8f13000000c4817a6f0442c4a17a7f04464d8d58084d8bc34c8d5afc4d3bc30f8f13000000c481f96e0442c4a1f97e04464d8d58044d8bc34c8d5afe4d3bc30f8f13000000c481796e0442c4a1797e04464d8d58024d8bc34c8bda49ffcb4d3bc30f8f0a000000470fbf144266468914464963f5483bf20f8f46000000488b1424488b7424204c8bd049c1ea03448956104c8bd649c1ea0949bb00e01b17010000004788241a4885d20f8cab00000041bb00000000488bc841ba00000000e9d0fbffff4c8d545010482bf2488d56f04885d20f8dbd00000049c7c300000000488d56f84c3bda0f8f11000000c5f9efc0c4817a7f045a498d53084c8bda488d56fc4c3bda0f8f11000000c5f9efc0c481f97e045a498d53044c8bda488d56fe4c3bda0f8f11000000c5f9efc0c481797e045a498d53024c8bda48ffce4c3bde0f8f38ffffff664789245ae92effffff41bb14000000e9f8faffff48f7da41bb2d000000488bc841ba2d000000e922fbffff66660f1f840000000000c4817e6f0442c4a17e7f04464d8d40104d3bc37eebe963feffffc5f9efc049c7c3000000006666660f1f840000000000c4817e7f045a4d8d5b104c3bda7ef1e920ffffff48be080200c007000000418bd5b900000000e8250f46ff90e9dbfdffff817e084b1b00f80f857200000048ba50731ac0060000004c8bd60f1f4000e8bc01cdfe90488b442420488b6c24304883c43885050d91d5fcc5f877c341bbe5a4feff8b44241c45899f9c0200004d89a7a8020000e8e416cdfe90488b4c24108b44241c488b142441c7879c0200009faffdff4d89a7a8020000e8bf16cdfe9041c7879c020000cdb4feff4d89a7a8020000e8a716cdfe9041bbe596feffeba341bbe580feff8b44241c45899f9c0200004d89a7a8020000e88116cdfe9041bbe573feffebe041bbe55dfeff8b44241c45899f9c0200004d89a7a8020000e85b16cdfe9041bbe550feffebe041bbe543feffebd841c7879c020000e58bfeff4d89a7a8020000e83316cdfe9041bbe566feffeb92e8474611ff90e82115cdfe9048bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5a051018 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 63 10 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 66 12 BRANCH trueDestinationProbability: 9.122574224581514E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 72 block B4 null  <||@
  Comment 72 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 44 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 75 46 BRANCH trueDestinationProbability: 0.12749942115219115 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B11  <||@
  Comment 81 block B11 null  <||@
  Comment 81 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 98 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 87 100 r10|QWORD = MOVE input: long[10|0xa]  <||@
  Comment 94 102 JUMP ~[] destination: B11 -> B12  <||@
  Comment 99 block B13 loop 1 depth 1 header:51|LoopBegin  <||@
  Comment 99 110 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 112 112 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 115 114 BRANCH trueDestinationProbability: 0.2127875849180494 condition: > trueDestination: B13 -> B17 falseDestination: B13 -> B15  <||@
  Comment 121 block B15 loop 1 depth 1 header:51|LoopBegin  <||@
  Comment 121 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 122 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 124 124 r8|QWORD = SHL r10|QWORD y: 3 size: QWORD  <||@
  Comment 131 126 r10|QWORD = SHL r10|QWORD size: QWORD  <||@
  Comment 134 128 r8|QWORD = ADD (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 137 130 r10|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 140 132 JUMP ~[] destination: B15 -> B12  <||@
  Comment 140 block B12 loop 1 depth 1 header:51|LoopBegin  <||@
  Comment 140 104 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 140 106 CMP r11|DWORD y: 19 size: DWORD  <||@
  Comment 144 108 BRANCH trueDestinationProbability: 0.9754513925251492 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B16  <||@
  Comment 151 block B17 null  <||@
  Comment 151 140 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 151 142 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 155 144 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:37]  <||@
  Comment 155 [rsi:0, r10:0, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698) [bci: 37, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD  |-  |-  |- 
     stack:   |r11|DWORD     |           |   |   |    <||@
  Comment 155 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 163 146 r11|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 167 148 r9|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 173 150 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fd61d61 encoding: base: 0 shift: 3  <||@
  Comment 180 152 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 184 154 BRANCH trueDestinationProbability: 0.9529560614867585 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B21  <||@
  Comment 190 block B18 null  <||@
  Comment 190 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 158 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 193 160 BRANCH trueDestinationProbability: 0.200374012309526 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 199 block B20 null  <||@
  Comment 199 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 199 176 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 205 178 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 210 180 r11|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 216 182 JUMP ~[] destination: B20 -> B71  <||@
  Comment 216 block B71 null  <||@
  Comment 216 644 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 216 646 r8|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 220 648 r9|QWORD = MOVE input: long[2147483648|0x80000000]  <||@
  Comment 226 650 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 230 652 rbx|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 233 654 JUMP ~[] destination: B71 -> B72  <||@
  Comment 238 block B96 loop 4 depth 1 header:157|LoopBegin  <||@
  Comment 238 894 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 896 rdx|QWORD = MOVE input: long[-6640827866535438581|0xa3d70a3d70a3d70b]  <||@
  Comment 250 898 rax|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 253 900 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 256 902 rdx|QWORD = ADD (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 259 904 rax|QWORD = SAR rdx|QWORD y: 6 size: QWORD  <||@
  Comment 266 906 rbp|QWORD = SHL rax|QWORD y: 5 size: QWORD  <||@
  Comment 273 908 rdx|QWORD = AND rdx|QWORD y: -64 size: QWORD  <||@
  Comment 277 910 rbp|QWORD = ADD (x: rbp|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 280 912 rdx|QWORD = SHL rax|QWORD y: 2 size: QWORD  <||@
  Comment 287 914 rbp|QWORD = ADD (x: rbp|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 290 916 rdx|QWORD = SUB (x: rbx|QWORD, ~y: rbp|QWORD) size: QWORD  <||@
  Comment 296 918 rdx|DWORD = MOV rdx|QWORD size: DWORD  <||@
  Comment 298 920 CMP rdx|DWORD y: 100 size: DWORD  <||@
  Comment 301 922 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B102  <||@
  Comment 307 block B97 loop 4 depth 1 header:157|LoopBegin  <||@
  Comment 307 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 307 926 rbp|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 311 928 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 314 930 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B101  <||@
  Comment 320 block B98 loop 4 depth 1 header:157|LoopBegin  <||@
  Comment 320 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 320 934 r13|DWORD = LEA [rdi|DWORD - 2] size: DWORD  <||@
  Comment 324 936 CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 327 938 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 333 block B99 loop 4 depth 1 header:157|LoopBegin  <||@
  Comment 333 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 942 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}]  <||@
  Comment 333 {Object[char[100]{0, 0, 0, 0, 0, ...}]}  <||@
  Comment 343 944 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 343 {Object[char[100]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 353 946 rdi|DWORD = MOVSX [rdi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 358 948 MOV (x: [rcx|QWORD[.] + rbp|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 363 950 rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 368 952 MOV (x: [rcx|QWORD[.] + r13|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 374 954 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:83, 59]  <||@
  Comment 374 [rcx:0, rsi:0, stack:32]at java.lang.Long.getChars(Long.java:447) [bci: 83, duringCall: false, rethrow: false]
              |0          |1  |2  |3             |4          |5  |6          |7          |8          |9  |10 
     locals:  |rax|QWORD  |-  |-  |rcx|QWORD[.]  |rax|QWORD  |-  |rdx|DWORD  |r13|DWORD  |r10|DWORD  |-  |-  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4              
     locals:  |rsi|QWORD[.]  |-  |-  |-  |stack:36|DWORD   <||@
  Comment 374 {infopoint: SAFEPOINT}  <||@
  Comment 374 11  <||@
  Comment 380 956 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 383 958 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 386 960 JUMP ~[] destination: B99 -> B72  <||@
  Comment 386 block B72 loop 4 depth 1 header:157|LoopBegin  <||@
  Comment 386 656 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 386 658 CMP (x: r9|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 389 660 BRANCH trueDestinationProbability: 0.652714924542596 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B96  <||@
  Comment 395 block B73 null  <||@
  Comment 395 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 664 rax|DWORD = MOV rbx|QWORD size: DWORD  <||@
  Comment 397 666 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 399 668 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 402 670 JUMP ~[] destination: B73 -> B74  <||@
  Comment 407 block B88 loop 5 depth 1 header:194|LoopBegin  <||@
  Comment 407 798 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 416 800 rax|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 418 802 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 423 804 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 425 806 rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 430 808 rdi|DWORD = SHL rax|DWORD y: 6 size: DWORD  <||@
  Comment 435 810 rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD  <||@
  Comment 438 812 rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 440 814 rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD  <||@
  Comment 445 816 rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 447 818 rdx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 451 820 CMP rdx|DWORD y: 100 size: DWORD  <||@
  Comment 454 822 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B88 -> B89 falseDestination: B88 -> B94  <||@
  Comment 460 block B89 loop 5 depth 1 header:194|LoopBegin  <||@
  Comment 460 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 826 rdi|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 465 828 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 468 830 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B93  <||@
  Comment 474 block B90 loop 5 depth 1 header:194|LoopBegin  <||@
  Comment 474 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 474 834 rbp|DWORD = LEA [r9|DWORD - 2] size: DWORD  <||@
  Comment 478 836 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 481 838 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 487 block B91 loop 5 depth 1 header:194|LoopBegin  <||@
  Comment 487 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 487 842 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}]  <||@
  Comment 487 {Object[char[100]{0, 0, 0, 0, 0, ...}]}  <||@
  Comment 497 844 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 497 {Object[char[100]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 507 846 rbx|DWORD = MOVSX [rbx|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 512 848 MOV (x: [rcx|QWORD[.] + rdi|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 517 850 r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 523 852 MOV (x: [rcx|QWORD[.] + rbp|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 529 854 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:154, 59]  <||@
  Comment 529 [rcx:0, rsi:0, stack:32]at java.lang.Long.getChars(Long.java:459) [bci: 154, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4  |5  |6          |7          |8          |9          |10        
     locals:  |-  |-  |-  |rcx|QWORD[.]  |-  |-  |rdx|DWORD  |rbp|DWORD  |r10|DWORD  |rax|DWORD  |rax|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4              
     locals:  |rsi|QWORD[.]  |-  |-  |-  |stack:36|DWORD   <||@
  Comment 529 {infopoint: SAFEPOINT}  <||@
  Comment 529 11  <||@
  Comment 535 856 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 537 858 r9|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 540 860 JUMP ~[] destination: B91 -> B74  <||@
  Comment 540 block B74 loop 5 depth 1 header:194|LoopBegin  <||@
  Comment 540 672 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 540 674 CMP rbx|DWORD y: 65536 size: DWORD  <||@
  Comment 546 676 BRANCH trueDestinationProbability: 0.7784274516077427 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B88  <||@
  Comment 552 block B75 null  <||@
  Comment 552 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 552 680 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 552 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 562 682 JUMP ~[] destination: B75 -> B76  <||@
  Comment 567 block B77 loop 6 depth 1 header:223|LoopBegin  <||@
  Comment 567 702 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 576 704 rbp|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 581 706 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 584 708 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B85  <||@
  Comment 590 block B78 loop 6 depth 1 header:223|LoopBegin  <||@
  Comment 590 710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 712 r14|DWORD = MOVSX [rax|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD  <||@
  Comment 596 714 MOV (x: [rcx|QWORD[.] + rbp|DWORD * 2 + 16], y: r14|DWORD) size: WORD  <||@
  Comment 602 716 TEST rdx|DWORD y: -524288 size: DWORD  <||@
  Comment 608 718 BRANCH trueDestinationProbability: 0.3754528776035644 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B84  <||@
  Comment 614 block B84 loop 6 depth 1 header:223|LoopBegin  <||@
  Comment 614 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 614 766 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:194, 59]  <||@
  Comment 614 [rax:0, rcx:0, rsi:0, stack:32]at java.lang.Long.getChars(Long.java:468) [bci: 194, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4  |5  |6          |7          |8          |9          |10        
     locals:  |-  |-  |-  |rcx|QWORD[.]  |-  |-  |r13|DWORD  |rbp|DWORD  |r10|DWORD  |rdi|DWORD  |rbx|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4              
     locals:  |rsi|QWORD[.]  |-  |-  |-  |stack:36|DWORD   <||@
  Comment 614 {infopoint: SAFEPOINT}  <||@
  Comment 614 11  <||@
  Comment 620 768 rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 622 770 r9|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 625 772 JUMP ~[] destination: B84 -> B76  <||@
  Comment 625 block B76 loop 6 depth 1 header:223|LoopBegin  <||@
  Comment 625 684 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 625 686 rdx|DWORD = IMUL rbx|DWORD y: 52429 size: DWORD  <||@
  Comment 631 688 rdi|DWORD = SHR rdx|DWORD y: 19 size: DWORD  <||@
  Comment 636 690 rbp|DWORD = SHL rdi|DWORD y: 3 size: DWORD  <||@
  Comment 641 692 r13|DWORD = SHL rdi|DWORD size: DWORD  <||@
  Comment 647 694 rbp|DWORD = ADD (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 650 696 r13|DWORD = SUB (x: rbx|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 656 698 CMP r13|DWORD y: 36 size: DWORD  <||@
  Comment 660 700 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B86  <||@
  Comment 667 block B79 null  <||@
  Comment 667 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 667 722 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 670 728 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 674 724 BRANCH trueDestinationProbability: 0.7994949909673181 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81  <||@
  Comment 680 block B80 null  <||@
  Comment 680 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 730 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 683 732 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 686 734 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 695 12  <||@
  Comment 705 block B81 null  <||@
  Comment 705 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 705 740 rdx|DWORD = LEA [r9|DWORD - 2] size: DWORD  <||@
  Comment 709 742 CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 712 744 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 718 block B82 null  <||@
  Comment 718 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 718 748 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 724 750 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 727 752 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 730 754 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 739 12  <||@
  Comment 749 block B19 null  <||@
  Comment 749 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 164 rdx|QWORD = NEG rdx|QWORD size: QWORD  <||@
  Comment 752 166 r10|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 758 168 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 763 170 r11|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 769 172 JUMP ~[] destination: B19 -> B71  <||@
  Comment 774 block B5 null  <||@
  Comment 774 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 50 r10|QWORD = NEG rdx|QWORD size: QWORD  <||@
  Comment 780 52 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 786 54 r11|QWORD = MOVE input: long[10|0xa]  <||@
  Comment 793 56 JUMP ~[] destination: B5 -> B6  <||@
  Comment 798 block B7 loop 0 depth 1 header:81|LoopBegin  <||@
  Comment 798 64 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 800 66 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 803 68 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 806 70 BRANCH trueDestinationProbability: 0.2127875849180494 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 812 block B9 loop 0 depth 1 header:81|LoopBegin  <||@
  Comment 812 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 812 80 r9|QWORD = SHL r11|QWORD y: 3 size: QWORD  <||@
  Comment 819 82 r11|QWORD = SHL r11|QWORD size: QWORD  <||@
  Comment 822 84 r9|QWORD = ADD (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 825 86 r11|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 828 88 JUMP ~[] destination: B9 -> B6  <||@
  Comment 828 block B6 loop 0 depth 1 header:81|LoopBegin  <||@
  Comment 828 58 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 828 60 CMP r8|DWORD y: 19 size: DWORD  <||@
  Comment 832 62 BRANCH trueDestinationProbability: 0.9754513925251492 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B10  <||@
  Comment 839 block B8 null  <||@
  Comment 839 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 74 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 842 76 JUMP ~[] destination: B8 -> B17  <||@
  Comment 847 block B16 null  <||@
  Comment 847 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 847 136 r11|DWORD = MOVE input: int[19|0x13]  <||@
  Comment 853 138 JUMP ~[] destination: B16 -> B17  <||@
  Comment 858 block B21 null  <||@
  Comment 858 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 858 186 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 863 188 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 868 190 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 873 192 stack:64|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 877 194 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 880 198 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 883 200 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 888 202 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 49]  <||@
  Comment 888 9  <||@
  Comment 895 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 900 [stack:8, stack:16, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4              
     locals:  |stack:32|QWORD[.]  |stack:64|QWORD  |-  |-  |stack:36|DWORD   <||@
  Comment 901 204 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 904 206 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 907 208 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 913 block B23 null  <||@
  Comment 913 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 913 226 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 917 228 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 921 230 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 928 232 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B28  <||@
  Comment 934 block B24 null  <||@
  Comment 934 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 934 236 rcx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 939 238 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 942 240 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 945 242 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 948 244 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 954 246 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 957 248 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B24 -> B28 falseDestination: B24 -> B26  <||@
  Comment 963 block B26 null  <||@
  Comment 963 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 963 256 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 967 258 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 975 260 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 983 262 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 991 264 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 999 266 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 1003 268 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1010 270 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1010 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1017 272 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1017 274 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 278 JUMP ~[] destination: B26 -> B29  <||@
  Comment 1020 block B29 null  <||@
  Comment 1020 298 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1020 276 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1025 300 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1028 302 rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r8|DWORD) condition: >  <||@
  Comment 1035 304 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1038 306 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 1042 308 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B29 -> B48 falseDestination: B29 -> B31  <||@
  Comment 1048 block B31 null  <||@
  Comment 1048 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1048 316 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1053 318 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1057 320 r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1065 322 r11|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1069 324 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1072 330 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1079 326 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B31 -> B36 falseDestination: B31 -> B34  <||@
  Comment 1085 block B36 null  <||@
  Comment 1085 356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1085 358 r11|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1089 360 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1092 362 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B39 falseDestination: B36 -> B38  <||@
  Comment 1098 block B38 null  <||@
  Comment 1098 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1098 370 xmm0|V128_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1104 372 J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1110 374 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 1114 376 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1117 378 JUMP ~[] destination: B38 -> B39  <||@
  Comment 1117 block B39 null  <||@
  Comment 1117 380 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1117 382 r11|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1121 384 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1124 386 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B42 falseDestination: B39 -> B41  <||@
  Comment 1130 block B41 null  <||@
  Comment 1130 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1130 394 xmm0|V64_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1136 396 J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1142 398 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 1146 400 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1149 402 JUMP ~[] destination: B41 -> B42  <||@
  Comment 1149 block B42 null  <||@
  Comment 1149 404 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1149 406 r11|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1153 408 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1156 410 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44  <||@
  Comment 1162 block B44 null  <||@
  Comment 1162 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1162 418 xmm0|V32_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1168 420 J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1174 422 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 1178 424 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1181 426 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1181 block B45 null  <||@
  Comment 1181 428 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1181 430 r11|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1187 432 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1190 434 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B48 falseDestination: B45 -> B47  <||@
  Comment 1196 block B47 null  <||@
  Comment 1196 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1196 442 r10|DWORD = MOVSX [r10|QWORD[*] + r8|QWORD * 2] size: DWORD  <||@
  Comment 1201 444 MOV (x: [rsi|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 1206 446 JUMP ~[] destination: B47 -> B48  <||@
  Comment 1206 block B48 null  <||@
  Comment 1206 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 450 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1209 452 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1212 454 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B68  <||@
  Comment 1218 block B68 null  <||@
  Comment 1218 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1218 600 rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1222 602 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1227 608 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5fd61d61 encoding: base: 0 shift: 3  <||@
  Comment 1234 610 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1238 612 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1245 614 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1255 616 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1259 618 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1262 620 BRANCH trueDestinationProbability: 0.200374012309526 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 1268 block B70 null  <||@
  Comment 1268 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1268 636 r11|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 1274 638 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1277 640 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1283 642 JUMP ~[] destination: B70 -> B71  <||@
  Comment 1288 block B49 null  <||@
  Comment 1288 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1288 458 r10|QWORD[.] = LEA [rax|QWORD[.] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1293 460 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 1296 462 rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1300 464 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1303 466 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 1309 block B50 null  <||@
  Comment 1309 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1309 470 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1316 472 JUMP ~[] destination: B50 -> B54  <||@
  Comment 1316 block B54 null  <||@
  Comment 1316 496 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1316 498 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1320 500 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1323 502 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B57 falseDestination: B54 -> B56  <||@
  Comment 1329 block B56 null  <||@
  Comment 1329 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1329 510 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1333 512 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1339 514 rdx|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1343 516 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1346 518 JUMP ~[] destination: B56 -> B57  <||@
  Comment 1346 block B57 null  <||@
  Comment 1346 520 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1346 522 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1350 524 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1353 526 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B60 falseDestination: B57 -> B59  <||@
  Comment 1359 block B59 null  <||@
  Comment 1359 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1359 534 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1363 536 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1369 538 rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1373 540 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1376 542 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1376 block B60 null  <||@
  Comment 1376 544 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1376 546 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1380 548 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1383 550 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B63 falseDestination: B60 -> B62  <||@
  Comment 1389 block B62 null  <||@
  Comment 1389 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1389 558 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1393 560 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1399 562 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1403 564 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1406 566 JUMP ~[] destination: B62 -> B63  <||@
  Comment 1406 block B63 null  <||@
  Comment 1406 568 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1406 570 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1409 572 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1412 574 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B68 falseDestination: B63 -> B65  <||@
  Comment 1418 block B65 null  <||@
  Comment 1418 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1418 586 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1423 592 JUMP ~[] destination: B65 -> B68  <||@
  Comment 1428 block B10 null  <||@
  Comment 1428 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1428 92 r11|DWORD = MOVE input: int[20|0x14]  <||@
  Comment 1434 94 JUMP ~[] destination: B10 -> B17  <||@
  Comment 1439 block B69 null  <||@
  Comment 1439 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1439 624 rdx|QWORD = NEG rdx|QWORD size: QWORD  <||@
  Comment 1442 626 r11|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 1448 628 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1451 630 r10|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 1457 632 JUMP ~[] destination: B69 -> B71  <||@
  Comment 1462 block B34 loop 2 depth 1 header:767|LoopBegin  <||@
  Comment 1462 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1472 342 xmm0|V256_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1478 344 J (address: [rsi|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1484 346 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1488 348 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1491 350 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B36 falseDestination: B34 -> B34  <||@
  Comment 1498 block B51 null  <||@
  Comment 1498 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1498 476 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1502 478 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1509 480 JUMP ~[] destination: B51 -> B52  <||@
  Comment 1509 block B52 loop 3 depth 1 header:832|LoopBegin  <||@
  Comment 1509 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1520 484 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1526 486 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1530 488 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1533 490 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B54 falseDestination: B52 -> B52  <||@
  Comment 1540 block B28 null  <||@
  Comment 1540 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1540 286 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1540 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1550 288 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1553 290 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1558 292 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 49]  <||@
  Comment 1558 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1563 [stack:8, stack:16, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:32|QWORD[.]  |stack:48|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4              
     locals:  |stack:32|QWORD[.]  |stack:64|QWORD  |-  |-  |stack:36|DWORD   <||@
  Comment 1564 296 JUMP ~[] destination: B28 -> B29  <||@
  Comment 1569 block B1 null  <||@
  Comment 1569 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1569 16 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 1569 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 1576 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 1582 block B2 null  <||@
  Comment 1582 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1582 22 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"-9223372036854775808"]  <||@
  Comment 1582 {Object[String:"-9223372036854775808"]}  <||@
  Comment 1592 24 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1595 28 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuilder.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 11]  <||@
  Comment 1595 9  <||@
  Comment 1599 {HotSpotMethod<StringBuilder.append(String)>}  <||@
  Comment 1604 [stack:32]at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:694) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1605 30 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 32 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1619 12  <||@
  Comment 1629 block B86 null  <||@
  Comment 1629 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 784 r11|DWORD = MOVE input: int[-88859|0xfffffffffffea4e5]  <||@
  Comment 1635 788 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1635 block B87 null  <||@
  Comment 1635 790 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1635 786 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1639 792 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1646 794 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1653 796 DEOPT info [bci:157, 59]  <||@
  Comment 1653 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1658 [rcx:0, stack:32]at java.lang.Long.getChars(Long.java:465) [bci: 157, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4  |5  |6  |7         |8          |9  |10        
     locals:  |-  |-  |-  |rcx|QWORD[.]  |-  |-  |-  |r9|DWORD  |r10|DWORD  |-  |rbx|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4         
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rax|DWORD   <||@
  Comment 1659 block B22 null  <||@
  Comment 1659 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1659 212 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1664 214 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1668 216 rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1672 218 MOV [r15|QWORD + 668] y: -151649 size: DWORD  <||@
  Comment 1683 220 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1690 222 DEOPT info [bci:20, 49]  <||@
  Comment 1690 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1695 [rcx:0, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1             |2         
     locals:  |-                  |-             |          
     stack:   |stack:32|QWORD[.]  |rcx|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:700) [bci: 49, duringCall: true, rethrow: false]
              |0                  |1          |2  |3  |4         
     locals:  |stack:32|QWORD[.]  |rdx|QWORD  |-  |-  |rax|DWORD   <||@
  Comment 1696 block B3 null  <||@
  Comment 1696 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1696 36 MOV [r15|QWORD + 668] y: -84787 size: DWORD  <||@
  Comment 1707 38 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1714 40 DEOPT info [bci:0]  <||@
  Comment 1714 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1719 [stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:693) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                                              |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |long[-9223372036854775808|0x8000000000000000]  |-  |-  |-   <||@
  Comment 1720 block B85 null  <||@
  Comment 1720 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1720 776 r11|DWORD = MOVE input: int[-92443|0xfffffffffffe96e5]  <||@
  Comment 1726 780 JUMP ~[] destination: B85 -> B87  <||@
  Comment 1728 block B94 null  <||@
  Comment 1728 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1728 880 r11|DWORD = MOVE input: int[-98075|0xfffffffffffe80e5]  <||@
  Comment 1734 884 JUMP ~[] destination: B94 -> B95  <||@
  Comment 1734 block B95 null  <||@
  Comment 1734 886 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1734 882 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1738 888 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1745 890 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1752 892 DEOPT info [bci:90, 59]  <||@
  Comment 1752 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1757 [rcx:0, stack:32]at java.lang.Long.getChars(Long.java:453) [bci: 90, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4  |5  |6  |7         |8          |9  |10        
     locals:  |-  |-  |-  |rcx|QWORD[.]  |-  |-  |-  |r9|DWORD  |r10|DWORD  |-  |rbx|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4         
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rax|DWORD   <||@
  Comment 1758 block B93 null  <||@
  Comment 1758 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 872 r11|DWORD = MOVE input: int[-101403|0xfffffffffffe73e5]  <||@
  Comment 1764 876 JUMP ~[] destination: B93 -> B95  <||@
  Comment 1766 block B102 null  <||@
  Comment 1766 978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1766 980 r11|DWORD = MOVE input: int[-107035|0xfffffffffffe5de5]  <||@
  Comment 1772 984 JUMP ~[] destination: B102 -> B103  <||@
  Comment 1772 block B103 null  <||@
  Comment 1772 986 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1772 982 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1776 988 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1783 990 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1790 992 DEOPT info [bci:19, 59]  <||@
  Comment 1790 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1795 [rcx:0, rsi:0]at java.lang.Long.getChars(Long.java:441) [bci: 19, duringCall: false, rethrow: false]
              |0          |1  |2  |3             |4  |5  |6  |7          |8          |9  |10 
     locals:  |rbx|QWORD  |-  |-  |rcx|QWORD[.]  |-  |-  |-  |rdi|DWORD  |r10|DWORD  |-  |-  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4         
     locals:  |rsi|QWORD[.]  |-  |-  |-  |rax|DWORD   <||@
  Comment 1796 block B101 null  <||@
  Comment 1796 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 972 r11|DWORD = MOVE input: int[-110363|0xfffffffffffe50e5]  <||@
  Comment 1802 976 JUMP ~[] destination: B101 -> B103  <||@
  Comment 1804 block B100 null  <||@
  Comment 1804 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1804 964 r11|DWORD = MOVE input: int[-113691|0xfffffffffffe43e5]  <||@
  Comment 1810 968 JUMP ~[] destination: B100 -> B103  <||@
  Comment 1812 block B83 null  <||@
  Comment 1812 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1812 758 MOV [r15|QWORD + 668] y: -95259 size: DWORD  <||@
  Comment 1823 760 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1830 762 DEOPT info [bci:194, 59]  <||@
  Comment 1830 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1835 [rcx:0, stack:32]at java.lang.Long.getChars(Long.java:468) [bci: 194, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4  |5  |6          |7          |8          |9          |10        
     locals:  |-  |-  |-  |rcx|QWORD[.]  |-  |-  |r13|DWORD  |rbp|DWORD  |r10|DWORD  |rdi|DWORD  |rbx|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:701) [bci: 59, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4         
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rax|DWORD   <||@
  Comment 1836 block B92 null  <||@
  Comment 1836 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1836 864 r11|DWORD = MOVE input: int[-104731|0xfffffffffffe66e5]  <||@
  Comment 1842 868 JUMP ~[] destination: B92 -> B95  <||@
  Comment 1844 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1844 4  <||@
  Comment 1850 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1850 5  <||@
  HexCodeFile>>> <|@
end_nmethod
