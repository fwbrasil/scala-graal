begin_compilation
  name " HotSpotCompilation-9648[java.util.Collections.nCopies(int, Object)]"
  method "HotSpotCompilation-9648[java.util.Collections.nCopies(int, Object)]"
  date 1527005210239
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 v97 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 a37 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Collections.nCopies(int, Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Collections.java
sourceLine: 4983
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 a2 
=== Succesors ===
=== Usages ===
v28 a59 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4983) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 v94 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4983) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i4 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4983) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v29 #falseSuccessor: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4983) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 26
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4983) [bci: 1]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4983) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j46 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j46 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j66 
=== Usages ===
v111 v112 
=== Predecessor ===
v27 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j66  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j46 
index: - 
=== Succesors ===
=== Usages ===
j66 v68 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j46 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j66 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
=== Succesors ===
next: j67 
=== Usages ===
j102 j72 v116 
=== Predecessor ===
j46 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v111 #next: j67  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j46 
index: - 
=== Succesors ===
=== Usages ===
j67 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j46 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j67 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v112 
=== Succesors ===
next: v54 
=== Usages ===
v51 
=== Predecessor ===
j66 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v112 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j102 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j66 
y: j101 
=== Succesors ===
=== Usages ===
v51 v68 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j66 y: j101  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j67 
y: j102 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j67 y: j102  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
j67 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a59 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a59  <|@  <|@
f <@~|@floating>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a59 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v43 i57 i45 
=== Succesors ===
next: j60 
=== Usages ===
j60 
=== Predecessor ===
v52 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v43 i57 i45 #next: j60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j60 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a59 
=== Succesors ===
next: v73 
=== Usages ===
j72 
=== Predecessor ===
a59 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a59 #next: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
j60 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
value: j102 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v111 value: j102 stateAfter: - lastLocationAccess: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j66 
index: - 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j66 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v116 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v116 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v64 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j72 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v70 
values: j66 j60 
=== Succesors ===
=== Usages ===
v115 v114 a34 v117 v118 v119 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v70 values: j66 j60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v71 v73 
=== Succesors ===
next: a34 
=== Usages ===
j72 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v71 v73 #next: a34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a34 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j72 
=== Succesors ===
next: j84 
=== Usages ===
a40 
=== Predecessor ===
v70 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j72 #next: j84  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j79 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v78 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v78  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j79 
index: - 
=== Succesors ===
=== Usages ===
j84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j79 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j84 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v113 
=== Succesors ===
next: v85 
=== Usages ===
v85 
=== Predecessor ===
a34 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v113 #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j72 
index: - 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v114 
value: j84 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
j84 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v114 value: j84 stateAfter: - lastLocationAccess: - #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j72 
index: - 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j72 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v115 
value: v106 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v115 value: v106 stateAfter: - lastLocationAccess: - #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j72 
index: - 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v117 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v117 value: i4 stateAfter: - lastLocationAccess: - #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j72 
index: - 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v118 
value: i1 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v118 value: i1 stateAfter: - lastLocationAccess: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j72 
index: - 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j72 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v119 
value: a37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a40 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v119 value: a37 stateAfter: - lastLocationAccess: - #next: a40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a40 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a34 
=== Succesors ===
next: v41 
=== Usages ===
v11 
=== Predecessor ===
v100 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a34 #next: v41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
a40 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4985) [bci: 40]
stamp: void
=== Inputs ===
result: a40 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a40 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 v97 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 a37 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Collections.nCopies(int, Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Collections.java
sourceLine: 4983
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 a2 
=== Succesors ===
=== Usages ===
v28 a59 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4983) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 v94 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4983) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i4 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4983) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v29 #falseSuccessor: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@567fbe0f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4983) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 26
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4983) [bci: 1]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -6675 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections.nCopies(Collections.java:4983) [bci: 0]
locals: v0|DWORD v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4983) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j46 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j46 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j66 
=== Usages ===
v111 v112 
=== Predecessor ===
v27 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j66  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j46 
index: - 
=== Succesors ===
=== Usages ===
j66 v68 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j46 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j66 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
=== Succesors ===
next: j67 
=== Usages ===
j102 j72 v116 
=== Predecessor ===
j46 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v111 #next: j67  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j46 
index: - 
=== Succesors ===
=== Usages ===
j67 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j46 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j67 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v112 
=== Succesors ===
next: v54 
=== Usages ===
v51 
=== Predecessor ===
j66 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v112 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j102 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j66 
y: j101 
=== Succesors ===
=== Usages ===
v51 v68 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j66 y: j101  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j67 
y: j102 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j67 y: j102  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
j67 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a59 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a59  <|@  <|@
f <@~|@floating>@ <|@
tid v43 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a59 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v43 i57 i45 
=== Succesors ===
next: j60 
=== Usages ===
j60 
=== Predecessor ===
v52 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v43 i57 i45 #next: j60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j60 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a59 
=== Succesors ===
next: v73 
=== Usages ===
j72 
=== Predecessor ===
a59 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a59 #next: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
j60 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections.nCopies(Collections.java:4983) [bci: 0]
locals: v0|DWORD v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
value: j102 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v111 value: j102 stateAfter: - lastLocationAccess: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
result [v2|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j66 
index: - 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j66 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v116 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v116 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v64 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|QWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j72 <|@
result v6|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v70 
values: j66 j60 
=== Succesors ===
=== Usages ===
v115 v114 a34 v117 v118 v119 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v70 values: j66 j60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v71 v73 
=== Succesors ===
next: a34 
=== Usages ===
j72 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v71 v73 #next: a34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a34 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j72 
=== Succesors ===
next: j84 
=== Usages ===
a40 
=== Predecessor ===
v70 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j72 #next: j84  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j79 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v78 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v78  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
result [v8|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j79 
index: - 
=== Succesors ===
=== Usages ===
j84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j79 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j84 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v113 
=== Succesors ===
next: v85 
=== Usages ===
v85 
=== Predecessor ===
a34 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v113 #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
result [v6|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j72 
index: - 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v114 
value: j84 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
j84 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v114 value: j84 stateAfter: - lastLocationAccess: - #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
result [v6|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j72 
index: - 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j72 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
result meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v115 
value: v106 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v115 value: v106 stateAfter: - lastLocationAccess: - #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
result [v6|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j72 
index: - 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v117 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v117 value: i4 stateAfter: - lastLocationAccess: - #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
result [v6|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j72 
index: - 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v118 
value: i1 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v118 value: i1 stateAfter: - lastLocationAccess: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
result [v6|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j72 
index: - 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j72 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v119 
value: a37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a40 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v119 value: a37 stateAfter: - lastLocationAccess: - #next: a40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a40 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a34 
=== Succesors ===
next: v41 
=== Usages ===
v11 
=== Predecessor ===
v100 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a34 #next: v41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
a40 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections.nCopies(Collections.java:4985) [bci: 40]
stamp: void
=== Inputs ===
result: a40 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a40 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [v8|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*]], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e31c4ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*] + 20], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@567fbe0f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|QWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [v8|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*]], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*] + 16], y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e31c4ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*] + 20], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections.nCopies(Collections.java:4983) [bci: 0]
locals: v0|DWORD v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -6675 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections.nCopies(Collections.java:4983) [bci: 0]
locals: v0|DWORD v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: ifge          31
     4: new           #125        // java.lang.IllegalArgumentException
     7: dup           
     8: new           #126        // java.lang.StringBuilder
    11: dup           
    12: invokespecial #84         // java.lang.StringBuilder.<init>:()void
    15: ldc           #128        // "List length = "
    17: invokevirtual #85         // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_0       
    21: invokevirtual #86         // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #87         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #88         // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    30: athrow        
    31: new           #133        // java.util.Collections$CopiesList
    34: dup           
    35: iload_0       
    36: aload_1       
    37: invokespecial #89         // java.util.Collections$CopiesList.<init>:(int, java.lang.Object)void
    40: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@567fbe0f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>} <|@ <|@
      nr   38  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed} <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e31c4ec encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.util.Collections.nCopies(Collections.java:4983) [bci: 0]
locals: r13|DWORD r14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 668] y: -6675 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.util.Collections.nCopies(Collections.java:4983) [bci: 0]
locals: r13|DWORD r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: ifge          31
     4: new           #125        // java.lang.IllegalArgumentException
     7: dup           
     8: new           #126        // java.lang.StringBuilder
    11: dup           
    12: invokespecial #84         // java.lang.StringBuilder.<init>:()void
    15: ldc           #128        // "List length = "
    17: invokevirtual #85         // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_0       
    21: invokevirtual #86         // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #87         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #88         // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    30: athrow        
    31: new           #133        // java.util.Collections$CopiesList
    34: dup           
    35: iload_0       
    36: aload_1       
    37: invokespecial #89         // java.util.Collections$CopiesList.<init>:(int, java.lang.Object)void
    40: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@567fbe0f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   18  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>} <|@ <|@
      nr   38  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed} <|@ <|@
      nr   44  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e31c4ec encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.util.Collections.nCopies(Collections.java:4983) [bci: 0]
locals: r13|DWORD r14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r15|QWORD + 668] y: -6675 size: DWORD <|@ <|@
      nr   76  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.util.Collections.nCopies(Collections.java:4983) [bci: 0]
locals: r13|DWORD r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: ifge          31
     4: new           #125        // java.lang.IllegalArgumentException
     7: dup           
     8: new           #126        // java.lang.StringBuilder
    11: dup           
    12: invokespecial #84         // java.lang.StringBuilder.<init>:()void
    15: ldc           #128        // "List length = "
    17: invokevirtual #85         // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_0       
    21: invokevirtual #86         // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #87         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #88         // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    30: athrow        
    31: new           #133        // java.util.Collections$CopiesList
    34: dup           
    35: iload_0       
    36: aload_1       
    37: invokespecial #89         // java.util.Collections$CopiesList.<init>:(int, java.lang.Object)void
    40: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c2410448bee4c8bf24585ed0f8c7d000000498b4760488d7018493b77700f874f000000498977600f1880d8000000488bf048baaddeaddeaddeadde488b92a8000000488910c74008addeadde4489600c4489681049c1ee0344897014488bc6488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba02000000b901000000e80000000090eba041c7879c020000ede5ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@567fbe0f slotKind: QWORD  <||@
  Comment 16 6 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 22 10 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 25 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 31 block B2 null  <||@
  Comment 31 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 31 16 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 35 18 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 39 20 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 43 22 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 49 block B4 null  <||@
  Comment 49 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 49 26 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 53 28 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 60 -1 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 60 30 JUMP ~[] destination: B4 -> B5  <||@
  Comment 60 block B5 null  <||@
  Comment 60 32 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 60 34 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 63 36 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>}  <||@
  Comment 63 {meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>}}  <||@
  Comment 73 38 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 80 40 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 83 42 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}  <||@
  Comment 83 {meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}}  <||@
  Comment 90 44 MOV (x: [rax|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 94 46 MOV (x: [rax|QWORD[*] + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 98 48 r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e31c4ec encoding: base: 0 shift: 3  <||@
  Comment 102 50 MOV (x: [rax|QWORD[*] + 20], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 106 52 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 109 54 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 118 12  <||@
  Comment 128 block B3 null  <||@
  Comment 128 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 128 58 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 128 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 138 62 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 143 64 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 148 66 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 148 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 153 [r14:0]at java.util.Collections.nCopies(Collections.java:4983) [bci: 0, duringCall: false, rethrow: false]
              |0          |1            
     locals:  |r13|DWORD  |r14|QWORD[.]   <||@
  Comment 154 -1 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 154 70 JUMP ~[] destination: B3 -> B5  <||@
  Comment 156 block B1 null  <||@
  Comment 156 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 74 MOV [r15|QWORD + 668] y: -6675 size: DWORD  <||@
  Comment 167 76 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 174 78 DEOPT info [bci:0]  <||@
  Comment 174 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 179 [r14:0]at java.util.Collections.nCopies(Collections.java:4983) [bci: 0, duringCall: false, rethrow: false]
              |0          |1            
     locals:  |r13|DWORD  |r14|QWORD[.]   <||@
  Comment 180 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 180 4  <||@
  Comment 186 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 186 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9648[java.util.Collections.nCopies(int, Object)]"
  method "HotSpotCompilation-9648[java.util.Collections.nCopies(int, Object)]"
  date 1527005210283
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107bd18e0 89842400c0feff4883ec1848896c2410448bee4c8bf24585ed0f8c7d000000498b4760488d7018493b77700f874f000000498977600f1880d8000000488bf048baa0012dc007000000488b92a8000000488910c7400834a005f84489600c4489681049c1ee0344897014488bc6488b6c24104883c4188505aad6cbfcc5f877c348be680b00c007000000ba02000000b901000000e867543cff90eba041c7879c020000ede5ffff4d89a7a8020000e86b5cc3fe90e8878c07ff90e8615bc3fe90  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@567fbe0f slotKind: QWORD  <||@
  Comment 16 6 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 22 10 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 25 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 31 block B2 null  <||@
  Comment 31 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 31 16 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 35 18 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 39 20 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 43 22 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 49 block B4 null  <||@
  Comment 49 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 49 26 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 53 28 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 60 -1 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 60 30 JUMP ~[] destination: B4 -> B5  <||@
  Comment 60 block B5 null  <||@
  Comment 60 32 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 60 34 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 63 36 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>}  <||@
  Comment 63 {meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>}}  <||@
  Comment 73 38 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 80 40 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 83 42 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}  <||@
  Comment 83 {meta{HotSpotType<Ljava/util/Collections$CopiesList;, resolved>;compressed}}  <||@
  Comment 90 44 MOV (x: [rax|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 94 46 MOV (x: [rax|QWORD[*] + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 98 48 r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e31c4ec encoding: base: 0 shift: 3  <||@
  Comment 102 50 MOV (x: [rax|QWORD[*] + 20], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 106 52 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 109 54 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 118 12  <||@
  Comment 128 block B3 null  <||@
  Comment 128 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 128 58 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 128 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 138 62 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 143 64 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 148 66 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 148 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 153 [r14:0]at java.util.Collections.nCopies(Collections.java:4983) [bci: 0, duringCall: false, rethrow: false]
              |0          |1            
     locals:  |r13|DWORD  |r14|QWORD[.]   <||@
  Comment 154 -1 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 154 70 JUMP ~[] destination: B3 -> B5  <||@
  Comment 156 block B1 null  <||@
  Comment 156 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 74 MOV [r15|QWORD + 668] y: -6675 size: DWORD  <||@
  Comment 167 76 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 174 78 DEOPT info [bci:0]  <||@
  Comment 174 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 179 [r14:0]at java.util.Collections.nCopies(Collections.java:4983) [bci: 0, duringCall: false, rethrow: false]
              |0          |1            
     locals:  |r13|DWORD  |r14|QWORD[.]   <||@
  Comment 180 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 180 4  <||@
  Comment 186 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 186 5  <||@
  HexCodeFile>>> <|@
end_nmethod
