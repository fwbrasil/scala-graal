begin_compilation
  name " HotSpotCompilation-6380[java.lang.Character.getType(int)]"
  method "HotSpotCompilation-6380[java.lang.Character.getType(int)]"
  date 1527005149710
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 i22 v11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256] ⇊00000000ffffff00 ⇈00000000ffffff00
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
stamp: void
=== Inputs ===
x: i1 
y: i10 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v42 #falseSuccessor: v44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i59 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i59  <|@  <|@
f <@~|@floating>@ <|@
tid a24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 3]
at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:103) [bci: 2]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
rawvalue: int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:71) [bci: 1]
at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:103) [bci: 2]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i1 
=== Succesors ===
=== Usages ===
j38 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1  <|@  <|@
f <@~|@floating>@ <|@
tid j38 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:103) [bci: 2]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i22 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a24 
index: j38 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a24 index: j38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:103) [bci: 2]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v60 
=== Succesors ===
next: v9 
=== Usages ===
i19 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v60 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:104) [bci: 7]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:104) [bci: 9]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
stamp: i32 [0 - 31] ⇈000000000000001f
=== Inputs ===
x: i59 
y: i18 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i59 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.getType(Character.java:6924) [bci: 8]
stamp: void
=== Inputs ===
result: i19 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i19 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v61  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Character.getType(int)>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Character.java
sourceLine: 6924
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 27
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 i22 v11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[-256|0xffffffffffffff00] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256] ⇊00000000ffffff00 ⇈00000000ffffff00
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
stamp: void
=== Inputs ===
x: i1 
y: i10 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v42 #falseSuccessor: v44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1a7ff877 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v0|DWORD y: -256 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i59 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i59  <|@  <|@
f <@~|@floating>@ <|@
tid a24 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 3]
at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:103) [bci: 2]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
rawvalue: int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:71) [bci: 1]
at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:103) [bci: 2]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i1 
=== Succesors ===
=== Usages ===
j38 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1  <|@  <|@
f <@~|@floating>@ <|@
tid j38 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:103) [bci: 2]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i22 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
result [v1|QWORD[.] + v2|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a24 
index: j38 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a24 index: j38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i59 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:103) [bci: 2]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v60 
=== Succesors ===
next: v9 
=== Usages ===
i19 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v60 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result int[31|0x1f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:104) [bci: 7]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:104) [bci: 9]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
stamp: i32 [0 - 31] ⇈000000000000001f
=== Inputs ===
x: i59 
y: i18 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i59 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.getType(Character.java:6924) [bci: 8]
stamp: void
=== Inputs ===
result: i19 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i19 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVZX v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[31|0x1f] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = AND (x: v3|DWORD, ~y: [v1|QWORD[.] + v2|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v61  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Character.getType(int)>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Character.java
sourceLine: 6924
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 27
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -6931 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.getType(Character.java:6924) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1a7ff877 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v0|DWORD y: -256 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVZX v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[31|0x1f] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = AND (x: v3|DWORD, ~y: [v1|QWORD[.] + v2|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -6931 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.getType(Character.java:6924) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: invokestatic  #26         // java.lang.CharacterData.of:(int)java.lang.CharacterData
     4: iload_0       
     5: invokevirtual #63         // java.lang.CharacterData.getType:(int)int
     8: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1a7ff877 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction TEST rsi|DWORD y: -256 size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   16  <|@ instruction r10|QWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction r11|DWORD = MOVE input: int[31|0x1f] <|@ <|@
      nr   20  <|@ instruction r11|DWORD = AND (x: r11|DWORD, ~y: [rax|QWORD[.] + r10|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction MOV [r15|QWORD + 668] y: -6931 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Character.getType(Character.java:6924) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: invokestatic  #26         // java.lang.CharacterData.of:(int)java.lang.CharacterData
     4: iload_0       
     5: invokevirtual #63         // java.lang.CharacterData.getType:(int)int
     8: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1a7ff877 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction TEST rsi|DWORD y: -256 size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   16  <|@ instruction r10|QWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction r11|DWORD = MOVE input: int[31|0x1f] <|@ <|@
      nr   20  <|@ instruction r11|DWORD = AND (x: r11|DWORD, ~y: [rax|QWORD[.] + r10|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction MOV [r15|QWORD + 668] y: -6931 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Character.getType(Character.java:6924) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: invokestatic  #26         // java.lang.CharacterData.of:(int)java.lang.CharacterData
     4: iload_0       
     5: invokevirtual #63         // java.lang.CharacterData.getType:(int)int
     8: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c2410f7c600ffffff0f852f00000048b8addeaddeaddeadde440fb7d641bb1f00000046235c9010418bc3488b6c24104883c418850500000000c5f877c341c7879c020000ede4ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1a7ff877 slotKind: QWORD  <||@
  Comment 16 8 TEST rsi|DWORD y: -256 size: DWORD  <||@
  Comment 22 10 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 28 block B1 null  <||@
  Comment 28 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 28 14 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 28 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 38 16 r10|QWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 42 18 r11|DWORD = MOVE input: int[31|0x1f]  <||@
  Comment 48 20 r11|DWORD = AND (x: r11|DWORD, ~y: [rax|QWORD[.] + r10|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 53 22 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 56 24 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 65 12  <||@
  Comment 75 block B2 null  <||@
  Comment 75 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 28 MOV [r15|QWORD + 668] y: -6931 size: DWORD  <||@
  Comment 86 30 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 93 32 DEOPT info [bci:0]  <||@
  Comment 93 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 98 []at java.lang.Character.getType(Character.java:6924) [bci: 0, duringCall: false, rethrow: false]
              |0         
     locals:  |rsi|DWORD   <||@
  Comment 99 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 99 4  <||@
  Comment 105 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 105 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6380[java.lang.Character.getType(int)]"
  method "HotSpotCompilation-6380[java.lang.Character.getType(int)]"
  date 1527005149728
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1078d9ca0 89842400c0feff4883ec1848896c2410f7c600ffffff0f852f00000048b8600400c006000000440fb7d641bb1f00000046235c9010418bc3488b6c24104883c41885051f53fbfcc5f877c341c7879c020000ede4ffff4d89a7a8020000e8fcd8f2fe90e8180937ff90e8f2d7f2fe90f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1a7ff877 slotKind: QWORD  <||@
  Comment 16 8 TEST rsi|DWORD y: -256 size: DWORD  <||@
  Comment 22 10 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 28 block B1 null  <||@
  Comment 28 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 28 14 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 28 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 38 16 r10|QWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 42 18 r11|DWORD = MOVE input: int[31|0x1f]  <||@
  Comment 48 20 r11|DWORD = AND (x: r11|DWORD, ~y: [rax|QWORD[.] + r10|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 53 22 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 56 24 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 65 12  <||@
  Comment 75 block B2 null  <||@
  Comment 75 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 28 MOV [r15|QWORD + 668] y: -6931 size: DWORD  <||@
  Comment 86 30 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 93 32 DEOPT info [bci:0]  <||@
  Comment 93 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 98 []at java.lang.Character.getType(Character.java:6924) [bci: 0, duringCall: false, rethrow: false]
              |0         
     locals:  |rsi|DWORD   <||@
  Comment 99 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 99 4  <||@
  Comment 105 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 105 5  <||@
  HexCodeFile>>> <|@
end_nmethod
