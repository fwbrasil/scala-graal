begin_compilation
  name " HotSpotCompilation-9536[java.nio.HeapByteBuffer.putInt(int)]"
  method "HotSpotCompilation-9536[java.nio.HeapByteBuffer.putInt(int)]"
  date 1527005205894
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i201 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i201  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/nio/HeapByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v211 v14 v208 v207 v209 v210 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
=== Succesors ===
next: i202 
=== Usages ===
i17 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v207 #next: i202  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i202 v96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 5]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
=== Succesors ===
next: v169 
=== Usages ===
i17 i25 i9 
=== Predecessor ===
i201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v208 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 8]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
stamp: i32
=== Inputs ===
x: i201 
y: i202 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i201 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 3]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 v18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i17 
y: i4 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i17 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i47 i62 i38 i56 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HeapByteBuffer.putInt(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HeapByteBuffer.java
sourceLine: 372
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v192 i205 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v166 
=== Usages ===
=== Predecessor ===
i202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v168 #falseSuccessor: v166  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24339
stableDimension: 0
stamp: i32 [-24339] ⇊00000000ffffa0ed ⇈00000000ffffa0ed
stampKind: i32
value: int[-24339|0xffffffffffffa0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i203 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i203  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
displacement: 41
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.bigEndian
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 12]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
=== Succesors ===
next: v173 
=== Usages ===
i103 
=== Predecessor ===
v166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 12]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i203 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i203  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i103 
y: i27 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i103 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v170 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
i203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v170 #falseSuccessor: v172  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a204 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a204  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
=== Succesors ===
next: i205 
=== Usages ===
v216 v215 v212 v213 v214 
=== Predecessor ===
v170 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 #next: i205  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a204 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v212 
=== Succesors ===
next: i206 
=== Usages ===
v115 v146 
=== Predecessor ===
a204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v212 #next: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.HeapByteBuffer.ix(HeapByteBuffer.java:131) [bci: 2]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
=== Succesors ===
next: v181 
=== Usages ===
i9 
=== Predecessor ===
i205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v209 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.HeapByteBuffer.ix(HeapByteBuffer.java:131) [bci: 5]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 7]
stamp: i32
=== Inputs ===
x: i202 
y: i206 
=== Succesors ===
=== Usages ===
i54 i36 v146 i45 v216 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i202 y: i206  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:260) [bci: 2]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:260) [bci: 3]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: i32
=== Inputs ===
x: i9 
y: i35 
=== Succesors ===
=== Usages ===
v115 v213 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i36 
y: i205 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i36 y: i205  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
i206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v178 #falseSuccessor: v180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v185 
=== Usages ===
v165 
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i205 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i205  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v182 
falseSuccessor: v184 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v182 #falseSuccessor: v184  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
v165 
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:529) [bci: 32]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
stamp: i32
=== Inputs ===
x: i202 
y: i4 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i202 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:529) [bci: 33]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
value: i25 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v208 value: i25 stateAfter: - lastLocationAccess: - #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v178 v182 
=== Succesors ===
=== Usages ===
v144 v124 v134 v154 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v178 v182  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i36 
index: a204 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i36 index: a204  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 24
stableDimension: 0
stamp: i32 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i32
value: int[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: i32 [-128 - 127]
=== Inputs ===
x: i2 
y: i37 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
resultBits: 8
stamp: i8
=== Inputs ===
value: i38 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v165 
address: v213 
value: i39 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v165 address: v213 value: i39 stateAfter: - lastLocationAccess: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:261) [bci: 13]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:261) [bci: 14]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: i32
=== Inputs ===
x: i9 
y: i44 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i45 
index: a204 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i45 index: a204  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: i32 [-32768 - 32767]
=== Inputs ===
x: i2 
y: i46 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
resultBits: 8
stamp: i8
=== Inputs ===
value: i47 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 19]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v165 
address: v214 
value: i48 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v165 address: v214 value: i48 stateAfter: - lastLocationAccess: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:262) [bci: 24]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:262) [bci: 25]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: i32
=== Inputs ===
x: i9 
y: i53 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i54 
index: a204 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i54 index: a204  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i2 
y: i55 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2 y: i55  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
resultBits: 8
stamp: i8
=== Inputs ===
value: i56 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i56  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 30]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v165 
address: v215 
value: i57 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v165 address: v215 value: i57 stateAfter: - lastLocationAccess: - #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i9 
index: a204 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i9 index: a204  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int0(Bits.java:257) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 36]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
resultBits: 8
stamp: i8
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v165 
address: v216 
value: i62 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v165 address: v216 value: i62 stateAfter: - lastLocationAccess: - #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:373) [bci: 19]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -37659
stableDimension: 0
stamp: i32 [-37659] ⇊00000000ffff6ce5 ⇈00000000ffff6ce5
stampKind: i32
value: int[-37659|0xffffffffffff6ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -29723
stableDimension: 0
stamp: i32 [-29723] ⇊00000000ffff8be5 ⇈00000000ffff8be5
stampKind: i32
value: int[-29723|0xffffffffffff8be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -26643
stableDimension: 0
stamp: i32 [-26643] ⇊00000000ffff97ed ⇈00000000ffff97ed
stampKind: i32
value: int[-26643|0xffffffffffff97ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-37659 - -24339] ⇊00000000ffff00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v186 
values: i188 i196 i198 i200 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v186 values: i188 i196 i198 i200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v187 v195 v197 v199 
=== Succesors ===
next: v192 
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v187 v195 v197 v199 #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid a189 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i190 
speculation: a189 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i190 speculation: a189  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i201 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i201  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/nio/HeapByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v211 v14 v208 v207 v209 v210 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
=== Succesors ===
next: i202 
=== Usages ===
i17 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v207 #next: i202  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i202 v96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i202 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 5]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
=== Succesors ===
next: v169 
=== Usages ===
i17 i25 i9 
=== Predecessor ===
i201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v208 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 8]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
stamp: i32
=== Inputs ===
x: i201 
y: i202 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i201 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 3]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 v18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i17 
y: i4 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i17 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i47 i62 i38 i56 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HeapByteBuffer.putInt(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HeapByteBuffer.java
sourceLine: 372
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v192 i205 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v166 
=== Usages ===
=== Predecessor ===
i202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v168 #falseSuccessor: v166  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7480ee7c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v2|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result int[-24339|0xffffffffffffa0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24339
stableDimension: 0
stamp: i32 [-24339] ⇊00000000ffffa0ed ⇈00000000ffffa0ed
stampKind: i32
value: int[-24339|0xffffffffffffa0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24339|0xffffffffffffa0ed]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i203 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i203  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
result [v0|QWORD[.] + 41] <|@
d <@d|@=== Debug Properties ===
displacement: 41
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i203 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.bigEndian
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 12]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
=== Succesors ===
next: v173 
=== Usages ===
i103 
=== Predecessor ===
v166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 12]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i203 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i203  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i103 
y: i27 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i103 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v170 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
i203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v170 #falseSuccessor: v172  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZXB [v0|QWORD[.] + 41] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a204 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a204  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a204 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
=== Succesors ===
next: i205 
=== Usages ===
v216 v215 v212 v213 v214 
=== Predecessor ===
v170 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 #next: i205  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a204 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i205 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v212 
=== Succesors ===
next: i206 
=== Usages ===
v115 v146 
=== Predecessor ===
a204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v212 #next: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i206 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.HeapByteBuffer.ix(HeapByteBuffer.java:131) [bci: 2]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
=== Succesors ===
next: v181 
=== Usages ===
i9 
=== Predecessor ===
i205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v209 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.HeapByteBuffer.ix(HeapByteBuffer.java:131) [bci: 5]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 7]
stamp: i32
=== Inputs ===
x: i202 
y: i206 
=== Succesors ===
=== Usages ===
i54 i36 v146 i45 v216 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i202 y: i206  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:260) [bci: 2]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:260) [bci: 3]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: i32
=== Inputs ===
x: i9 
y: i35 
=== Succesors ===
=== Usages ===
v115 v213 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i36 
y: i205 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i36 y: i205  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
i206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v178 #falseSuccessor: v180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v185 
=== Usages ===
v165 
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i205 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i205  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v182 
falseSuccessor: v184 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v182 #falseSuccessor: v184  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
v165 
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:529) [bci: 32]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
stamp: i32
=== Inputs ===
x: i202 
y: i4 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i202 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:529) [bci: 33]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
value: i25 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v208 value: i25 stateAfter: - lastLocationAccess: - #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v178 v182 
=== Succesors ===
=== Usages ===
v144 v124 v134 v154 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v178 v182  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
result [v9|DWORD + v6|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i36 
index: a204 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i36 index: a204  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result int[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 24
stableDimension: 0
stamp: i32 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i32
value: int[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: i32 [-128 - 127]
=== Inputs ===
x: i2 
y: i37 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
resultBits: 8
stamp: i8
=== Inputs ===
value: i38 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v165 
address: v213 
value: i39 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v165 address: v213 value: i39 stateAfter: - lastLocationAccess: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:261) [bci: 13]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:261) [bci: 14]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: i32
=== Inputs ===
x: i9 
y: i44 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
result [v12|DWORD + v6|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i45 
index: a204 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i45 index: a204  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: i32 [-32768 - 32767]
=== Inputs ===
x: i2 
y: i46 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
resultBits: 8
stamp: i8
=== Inputs ===
value: i47 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 19]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v165 
address: v214 
value: i48 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v165 address: v214 value: i48 stateAfter: - lastLocationAccess: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:262) [bci: 24]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:262) [bci: 25]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: i32
=== Inputs ===
x: i9 
y: i53 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
result [v14|DWORD + v6|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i54 
index: a204 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i54 index: a204  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i2 
y: i55 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2 y: i55  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
resultBits: 8
stamp: i8
=== Inputs ===
value: i56 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i56  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 30]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v165 
address: v215 
value: i57 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v165 address: v215 value: i57 stateAfter: - lastLocationAccess: - #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
result [v8|DWORD + v6|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i9 
index: a204 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i9 index: a204  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int0(Bits.java:257) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 36]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
resultBits: 8
stamp: i8
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v165 
address: v216 
value: i62 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v165 address: v216 value: i62 stateAfter: - lastLocationAccess: - #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:373) [bci: 19]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v3|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SAR v1|DWORD y: 24 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v9|DWORD + v6|DWORD[.] * 8 + 16], y: v11|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SAR v1|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v12|DWORD + v6|DWORD[.] * 8 + 16], y: v13|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SAR v1|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v14|DWORD + v6|DWORD[.] * 8 + 16], y: v15|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v8|DWORD + v6|DWORD[.] * 8 + 16], y: v1|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
result int[-37659|0xffffffffffff6ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -37659
stableDimension: 0
stamp: i32 [-37659] ⇊00000000ffff6ce5 ⇈00000000ffff6ce5
stampKind: i32
value: int[-37659|0xffffffffffff6ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-37659|0xffffffffffff6ce5]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
result int[-29723|0xffffffffffff8be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -29723
stableDimension: 0
stamp: i32 [-29723] ⇊00000000ffff8be5 ⇈00000000ffff8be5
stampKind: i32
value: int[-29723|0xffffffffffff8be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-29723|0xffffffffffff8be5]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result int[-26643|0xffffffffffff97ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -26643
stableDimension: 0
stamp: i32 [-26643] ⇊00000000ffff97ed ⇈00000000ffff97ed
stampKind: i32
value: int[-26643|0xffffffffffff97ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26643|0xffffffffffff97ed]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i190 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-37659 - -24339] ⇊00000000ffff00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v186 
values: i188 i196 i198 i200 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v186 values: i188 i196 i198 i200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v187 v195 v197 v199 
=== Succesors ===
next: v192 
=== Usages ===
i190 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v187 v195 v197 v199 #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid a189 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i190 
speculation: a189 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i190 speculation: a189  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7480ee7c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v2|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZXB [v0|QWORD[.] + 41] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v3|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SAR v1|DWORD y: 24 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v9|DWORD + v6|DWORD[.] * 8 + 16], y: v11|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SAR v1|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v12|DWORD + v6|DWORD[.] * 8 + 16], y: v13|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SAR v1|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v14|DWORD + v6|DWORD[.] * 8 + 16], y: v15|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v8|DWORD + v6|DWORD[.] * 8 + 16], y: v1|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24339|0xffffffffffffa0ed]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-29723|0xffffffffffff8be5]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26643|0xffffffffffff97ed]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-37659|0xffffffffffff6ce5]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: aload_0       
     3: iconst_4      
     4: invokevirtual #30         // java.nio.Buffer.nextPutIndex:(int)int
     7: invokevirtual #11         // ix:(int)int
    10: iload_1       
    11: aload_0       
    12: getfield      #27         // java.nio.ByteBuffer.bigEndian:boolean
    15: invokestatic  #39         // java.nio.Bits.putInt:(java.nio.ByteBuffer, int, int, boolean)void
    18: aload_0       
    19: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7480ee7c slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP rax|DWORD y: 4 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + 41] size: DWORD <|@ <|@
      nr   24  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction r10|DWORD = SAR rdx|DWORD y: 24 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOVB (x: [r9|DWORD + rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr   58  <|@ instruction r10|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr   60  <|@ instruction r11|DWORD = SAR rdx|DWORD y: 16 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr   64  <|@ instruction r10|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction r11|DWORD = SAR rdx|DWORD y: 8 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr   70  <|@ instruction MOVB (x: [r8|DWORD + rax|DWORD[.] * 8 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr   72  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-29723|0xffffffffffff8be5] // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26643|0xffffffffffff97ed] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-37659|0xffffffffffff6ce5] // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: aload_0       
     3: iconst_4      
     4: invokevirtual #30         // java.nio.Buffer.nextPutIndex:(int)int
     7: invokevirtual #11         // ix:(int)int
    10: iload_1       
    11: aload_0       
    12: getfield      #27         // java.nio.ByteBuffer.bigEndian:boolean
    15: invokestatic  #39         // java.nio.Bits.putInt:(java.nio.ByteBuffer, int, int, boolean)void
    18: aload_0       
    19: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7480ee7c slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP rax|DWORD y: 4 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + 41] size: DWORD <|@ <|@
      nr   24  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction r10|DWORD = SAR rdx|DWORD y: 24 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOVB (x: [r9|DWORD + rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr   58  <|@ instruction r10|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr   60  <|@ instruction r11|DWORD = SAR rdx|DWORD y: 16 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr   64  <|@ instruction r10|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction r11|DWORD = SAR rdx|DWORD y: 8 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr   70  <|@ instruction MOVB (x: [r8|DWORD + rax|DWORD[.] * 8 + 16], y: rdx|DWORD) size: BYTE <|@ <|@
      nr   72  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-29723|0xffffffffffff8be5] // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26643|0xffffffffffff97ed] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-37659|0xffffffffffff6ce5] // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: aload_0       
     3: iconst_4      
     4: invokevirtual #30         // java.nio.Buffer.nextPutIndex:(int)int
     7: invokevirtual #11         // ix:(int)int
    10: iload_1       
    11: aload_0       
    12: getfield      #27         // java.nio.ByteBuffer.bigEndian:boolean
    15: invokestatic  #39         // java.nio.Bits.putInt:(java.nio.ByteBuffer, int, int, boolean)void
    18: aload_0       
    19: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b461c448b5618412bc283f8040f8c850000000fb6462985c00f859b0000008b462c448b1cc50c000000458bc244034624458d4803453bd90f8674000000453bd80f867b000000458d520444895618448bd241c1fa18458854c110458d5002448bda41c1fb1045885cc210458bd041ffc2448bda41c1fb0845885cc210418854c010488bc6488b6c24104883c418850500000000c5f877c341baeda0ffff4589979c0200004d89a7a8020000e8000000009041bae58bffffebe441baed97ffffebdc41bae56cffffebd4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7480ee7c slotKind: QWORD  <||@
  Comment 48 10 rax|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 51 12 r10|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 55 14 rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 58 16 CMP rax|DWORD y: 4 size: DWORD  <||@
  Comment 61 18 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B2 null  <||@
  Comment 67 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 22 rax|DWORD = MOVZXB [rsi|QWORD[.] + 41] size: DWORD  <||@
  Comment 71 24 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 73 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8  <||@
  Comment 79 block B3 null  <||@
  Comment 79 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 30 rax|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 82 32 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 82 [rax:0, rsi:0]at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 90 34 r8|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD[.] + 36]) size: DWORD  <||@
  Comment 97 36 r9|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 101 38 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 104 40 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 110 block B4 null  <||@
  Comment 110 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 44 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 113 46 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 119 block B5 null  <||@
  Comment 119 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 119 50 r10|DWORD = LEA [r10|DWORD + 4] size: DWORD  <||@
  Comment 123 52 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD  <||@
  Comment 127 54 r10|DWORD = SAR rdx|DWORD y: 24 size: DWORD  <||@
  Comment 134 56 MOVB (x: [r9|DWORD + rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 139 58 r10|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 143 60 r11|DWORD = SAR rdx|DWORD y: 16 size: DWORD  <||@
  Comment 150 62 MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 155 64 r10|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 161 66 r11|DWORD = SAR rdx|DWORD y: 8 size: DWORD  <||@
  Comment 168 68 MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 173 70 MOVB (x: [r8|DWORD + rax|DWORD[.] * 8 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 178 72 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 181 74 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 190 12  <||@
  Comment 200 block B1 null  <||@
  Comment 200 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 -1 r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed]  <||@
  Comment 206 78 JUMP ~[] destination: B1 -> B9  <||@
  Comment 206 block B9 null  <||@
  Comment 206 92 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 206 94 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 213 96 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 220 98 DEOPT info [bci:0]  <||@
  Comment 220 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 225 [rsi:0]at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 226 block B7 null  <||@
  Comment 226 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 226 -1 r10|DWORD = MOVE input: int[-29723|0xffffffffffff8be5]  <||@
  Comment 232 82 JUMP ~[] destination: B7 -> B9  <||@
  Comment 234 block B8 null  <||@
  Comment 234 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 234 -1 r10|DWORD = MOVE input: int[-26643|0xffffffffffff97ed]  <||@
  Comment 240 86 JUMP ~[] destination: B8 -> B9  <||@
  Comment 242 block B6 null  <||@
  Comment 242 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 -1 r10|DWORD = MOVE input: int[-37659|0xffffffffffff6ce5]  <||@
  Comment 248 90 JUMP ~[] destination: B6 -> B9  <||@
  Comment 250 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 250 4  <||@
  Comment 256 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 256 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9536[java.nio.HeapByteBuffer.putInt(int)]"
  method "HotSpotCompilation-9536[java.nio.HeapByteBuffer.putInt(int)]"
  date 1527005205960
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107ba8120 448b560849c1e203493bc20f852fddc5fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b461c448b5618412bc283f8040f8c850000000fb6462985c00f859b0000008b462c448b1cc50c000000458bc244034624458d4803453bd90f8674000000453bd80f867b000000458d520444895618448bd241c1fa18458854c110458d5002448bda41c1fb1045885cc210458bd041ffc2448bda41c1fb0845885cc210418854c010488bc6488b6c24104883c4188505226ecefcc5f877c341baeda0ffff4589979c0200004d89a7a8020000e8fdf3c5fe9041bae58bffffebe441baed97ffffebdc41bae56cffffebd4e801240aff90e8dbf2c5fe90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7480ee7c slotKind: QWORD  <||@
  Comment 48 10 rax|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 51 12 r10|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 55 14 rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 58 16 CMP rax|DWORD y: 4 size: DWORD  <||@
  Comment 61 18 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B2 null  <||@
  Comment 67 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 22 rax|DWORD = MOVZXB [rsi|QWORD[.] + 41] size: DWORD  <||@
  Comment 71 24 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 73 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8  <||@
  Comment 79 block B3 null  <||@
  Comment 79 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 30 rax|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 82 32 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 82 [rax:0, rsi:0]at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 90 34 r8|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD[.] + 36]) size: DWORD  <||@
  Comment 97 36 r9|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 101 38 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 104 40 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 110 block B4 null  <||@
  Comment 110 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 44 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 113 46 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 119 block B5 null  <||@
  Comment 119 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 119 50 r10|DWORD = LEA [r10|DWORD + 4] size: DWORD  <||@
  Comment 123 52 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD  <||@
  Comment 127 54 r10|DWORD = SAR rdx|DWORD y: 24 size: DWORD  <||@
  Comment 134 56 MOVB (x: [r9|DWORD + rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 139 58 r10|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 143 60 r11|DWORD = SAR rdx|DWORD y: 16 size: DWORD  <||@
  Comment 150 62 MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 155 64 r10|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 161 66 r11|DWORD = SAR rdx|DWORD y: 8 size: DWORD  <||@
  Comment 168 68 MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 173 70 MOVB (x: [r8|DWORD + rax|DWORD[.] * 8 + 16], y: rdx|DWORD) size: BYTE  <||@
  Comment 178 72 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 181 74 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 190 12  <||@
  Comment 200 block B1 null  <||@
  Comment 200 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 -1 r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed]  <||@
  Comment 206 78 JUMP ~[] destination: B1 -> B9  <||@
  Comment 206 block B9 null  <||@
  Comment 206 92 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 206 94 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 213 96 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 220 98 DEOPT info [bci:0]  <||@
  Comment 220 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 225 [rsi:0]at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:372) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 226 block B7 null  <||@
  Comment 226 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 226 -1 r10|DWORD = MOVE input: int[-29723|0xffffffffffff8be5]  <||@
  Comment 232 82 JUMP ~[] destination: B7 -> B9  <||@
  Comment 234 block B8 null  <||@
  Comment 234 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 234 -1 r10|DWORD = MOVE input: int[-26643|0xffffffffffff97ed]  <||@
  Comment 240 86 JUMP ~[] destination: B8 -> B9  <||@
  Comment 242 block B6 null  <||@
  Comment 242 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 -1 r10|DWORD = MOVE input: int[-37659|0xffffffffffff6ce5]  <||@
  Comment 248 90 JUMP ~[] destination: B6 -> B9  <||@
  Comment 250 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 250 4  <||@
  Comment 256 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 256 5  <||@
  HexCodeFile>>> <|@
end_nmethod
