begin_compilation
  name " HotSpotCompilation-9374[java.util.AbstractList.listIterator(int)]"
  method "HotSpotCompilation-9374[java.util.AbstractList.listIterator(int)]"
  date 1527005207942
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v462 v465 v464 a181 v497 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v18 v413 v314 v13 v99 v103 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractList.listIterator(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 325
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v250 a385 a337 a281 i460 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 v365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i12 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v135 #falseSuccessor: v133  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -27667
stableDimension: 0
stamp: i32 [-27667] ⇊00000000ffff93ed ⇈00000000ffff93ed
stampKind: i32
value: int[-27667|0xffffffffffff93ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i457 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i457  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:348) [bci: 24]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList$ListItr.<init>(AbstractList.java:391) [bci: 8]
at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
=== Succesors ===
next: v458 
=== Usages ===
v319 v369 v417 
=== Predecessor ===
v133 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v464 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
=== Succesors ===
next: v63 
=== Usages ===
v427 v423 v425 
=== Predecessor ===
i457 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v465 #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v458 
y: v422 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v458 y: v422  <|@  <|@
f <@~|@floating>@ <|@
tid a181 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v325 v322 v371 v373 v419 v421 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:341) [bci: 15]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList$ListItr.<init>(AbstractList.java:391) [bci: 8]
at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 11]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 v367 v415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v310 v361 v409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j401 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v300 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
j405 j357 j306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 a281 a337 a385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a281 a337 a385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a281 a337 a385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j428 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j429 j448 j440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5048028951405126
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v59 #falseSuccessor: v62  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a459 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a459  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v462 
=== Succesors ===
next: i460 
=== Usages ===
v463 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v462 #next: i460  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a459 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i460 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v463 
=== Succesors ===
next: v144 
=== Usages ===
v18 
=== Predecessor ===
a459 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v463 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i460 
y: i2 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i460 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
i460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v143 #falseSuccessor: v141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30483
stableDimension: 0
stamp: i32 [-30483] ⇊00000000ffff88ed ⇈00000000ffff88ed
stampKind: i32
value: int[-30483|0xffffffffffff88ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v143 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j268 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j268 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j288 
=== Usages ===
v466 v467 
=== Predecessor ===
v141 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j288  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j268 
index: - 
=== Succesors ===
=== Usages ===
j288 v290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
=== Succesors ===
next: j289 
=== Usages ===
j429 j294 v479 
=== Predecessor ===
j268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v466 #next: j289  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j268 
index: - 
=== Succesors ===
=== Usages ===
j289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j289 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v467 
=== Succesors ===
next: v276 
=== Usages ===
v273 
=== Predecessor ===
j288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v467 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid j429 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j288 
y: j428 
=== Succesors ===
=== Usages ===
v273 v290 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j288 y: j428  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j289 
y: j429 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j289 y: j429  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v273 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v275 
=== Usages ===
=== Predecessor ===
j289 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v273 #trueSuccessor: v274 #falseSuccessor: v275  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4572470003287635871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a281 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a281 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v266 i431 i98 
=== Succesors ===
next: j282 
=== Usages ===
j282 
=== Predecessor ===
v274 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v266 i431 i98 #next: j282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a281 
=== Succesors ===
next: v295 
=== Usages ===
j294 
=== Predecessor ===
a281 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a281 #next: v295  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
j282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602674403234489346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
value: j429 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v466 value: j429 stateAfter: - lastLocationAccess: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j288 
index: - 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v479 
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v479 #next: v293  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
v286 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j294 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v292 
values: j288 j282 
=== Succesors ===
=== Usages ===
v469 v468 a178 v480 v481 v482 v483 v484 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v292 values: j288 j282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v293 v295 
=== Succesors ===
next: a178 
=== Usages ===
j294 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v293 v295 #next: a178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a178 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j294 
=== Succesors ===
next: j306 
=== Usages ===
a184 
=== Predecessor ===
v292 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j294 #next: j306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j306 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
=== Succesors ===
next: v307 
=== Usages ===
v307 
=== Predecessor ===
a178 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v476 #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v468 
value: j306 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
j306 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v468 value: j306 stateAfter: - lastLocationAccess: - #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v469 
value: v434 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v469 value: v434 stateAfter: - lastLocationAccess: - #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v480 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v480 value: i2 stateAfter: - lastLocationAccess: - #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v481 
value: i37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v481 value: i37 stateAfter: - lastLocationAccess: - #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v482 
value: i457 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v482 value: i457 stateAfter: - lastLocationAccess: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v483 
value: a181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v483 value: a181 stateAfter: - lastLocationAccess: - #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v484 
value: a181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a184 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v484 value: a181 stateAfter: - lastLocationAccess: - #next: a184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a184 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a178 
=== Succesors ===
next: v185 
=== Usages ===
v11 
=== Predecessor ===
v325 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a178 #next: v185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
a184 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 14]
stamp: void
=== Inputs ===
result: a184 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a184 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B16" 
    xhandlers
    flags 
    probability 4602592297905586464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v458 
y: v424 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v458 y: v424  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5248864695798622
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v68 #falseSuccessor: v71  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i98 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v145 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j326 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j326 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j341 
=== Usages ===
v470 v471 
=== Predecessor ===
v145 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j341  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j326 
index: - 
=== Succesors ===
=== Usages ===
j341 v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j326 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v470 
=== Succesors ===
next: j342 
=== Usages ===
j440 j347 v485 
=== Predecessor ===
j326 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v470 #next: j342  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j326 
index: - 
=== Succesors ===
=== Usages ===
j342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j326 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v471 
=== Succesors ===
next: v334 
=== Usages ===
v331 
=== Predecessor ===
j341 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v471 #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j341 
y: j428 
=== Succesors ===
=== Usages ===
v331 v343 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j341 y: j428  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j342 
y: j440 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j342 y: j440  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v331 
=== Succesors ===
trueSuccessor: v332 
falseSuccessor: v333 
=== Usages ===
=== Predecessor ===
j342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v331 #trueSuccessor: v332 #falseSuccessor: v333  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4568139821790584364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a337 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a337 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v266 i431 i98 
=== Succesors ===
next: j338 
=== Usages ===
j338 
=== Predecessor ===
v332 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v266 i431 i98 #next: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j338 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a337 
=== Succesors ===
next: v348 
=== Usages ===
j347 
=== Predecessor ===
a337 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a337 #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
j338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4598307139661366226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v470 
value: j440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v470 value: j440 stateAfter: - lastLocationAccess: - #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j341 
index: - 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j341 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v485 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v485 #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
v340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j347 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v345 
values: j341 j338 
=== Succesors ===
=== Usages ===
v473 v472 a206 v486 v487 v488 v489 v490 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: j341 j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v346 v348 
=== Succesors ===
next: a206 
=== Usages ===
j347 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v346 v348 #next: a206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a206 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j347 
=== Succesors ===
next: j357 
=== Usages ===
a211 
=== Predecessor ===
v345 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j347 #next: j357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
=== Succesors ===
next: v358 
=== Usages ===
v358 
=== Predecessor ===
a206 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v476 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v472 
value: j357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
j357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v472 value: j357 stateAfter: - lastLocationAccess: - #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
value: v434 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v473 value: v434 stateAfter: - lastLocationAccess: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v486 value: i12 stateAfter: - lastLocationAccess: - #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v487 
value: i37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v487 value: i37 stateAfter: - lastLocationAccess: - #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v488 
value: i457 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v488 value: i457 stateAfter: - lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v489 
value: a181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v489 value: a181 stateAfter: - lastLocationAccess: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v490 
value: a181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a211 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v490 value: a181 stateAfter: - lastLocationAccess: - #next: a211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a211 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a206 
=== Succesors ===
next: v212 
=== Usages ===
v92 
=== Predecessor ===
v373 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a206 #next: v212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
a211 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 14]
stamp: void
=== Inputs ===
result: a211 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a211 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -31251
stableDimension: 0
stamp: i32 [-31251] ⇊00000000ffff85ed ⇈00000000ffff85ed
stampKind: i32
value: int[-31251|0xffffffffffff85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v147 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B17" "B23" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v458 
y: v426 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v458 y: v426  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v427 
=== Succesors ===
trueSuccessor: v149 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v427 #trueSuccessor: v149 #falseSuccessor: v151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i461 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i461  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v497 
=== Succesors ===
next: v156 
=== Usages ===
v103 
=== Predecessor ===
v149 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v497 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i461 
y: i2 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i461 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v153 
=== Usages ===
=== Predecessor ===
i461 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v155 #falseSuccessor: v153  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i256 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32531
stableDimension: 0
stamp: i32 [-32531] ⇊00000000ffff80ed ⇈00000000ffff80ed
stampKind: i32
value: int[-32531|0xffffffffffff80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j374 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j374 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j389 
=== Usages ===
v474 v475 
=== Predecessor ===
v153 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j389  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j389 v391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
=== Succesors ===
next: j390 
=== Usages ===
j448 j395 v491 
=== Predecessor ===
j374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v474 #next: j390  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
=== Succesors ===
next: v382 
=== Usages ===
v379 
=== Predecessor ===
j389 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v475 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid j448 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j389 
y: j428 
=== Succesors ===
=== Usages ===
v379 v391 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j389 y: j428  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j390 
y: j448 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j390 y: j448  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
j390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v380 #falseSuccessor: v381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567571491086271639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a385 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a385 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v266 i431 i98 
=== Succesors ===
next: j386 
=== Usages ===
j386 
=== Predecessor ===
v380 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v266 i431 i98 #next: j386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j386 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a385 
=== Succesors ===
next: v396 
=== Usages ===
j395 
=== Predecessor ===
a385 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a385 #next: v396  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
j386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597559923219222290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
value: j448 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v474 value: j448 stateAfter: - lastLocationAccess: - #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j389 
index: - 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j389 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v491 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v491 #next: v394  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j395 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v393 
values: j389 j386 
=== Succesors ===
=== Usages ===
v478 v477 a233 v492 v493 v494 v495 v496 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v393 values: j389 j386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v394 v396 
=== Succesors ===
next: a233 
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v394 v396 #next: a233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a233 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j395 
=== Succesors ===
next: j405 
=== Usages ===
a238 
=== Predecessor ===
v393 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j395 #next: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
=== Succesors ===
next: v406 
=== Usages ===
v406 
=== Predecessor ===
a233 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v476 #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
value: j405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
j405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v477 value: j405 stateAfter: - lastLocationAccess: - #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v478 
value: v434 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v478 value: v434 stateAfter: - lastLocationAccess: - #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v492 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v492 value: i2 stateAfter: - lastLocationAccess: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v493 
value: i37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v493 value: i37 stateAfter: - lastLocationAccess: - #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v494 
value: i457 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v494 value: i457 stateAfter: - lastLocationAccess: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v495 
value: a181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v495 value: a181 stateAfter: - lastLocationAccess: - #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v496 
value: a181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a238 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v496 value: a181 stateAfter: - lastLocationAccess: - #next: a238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a238 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a233 
=== Succesors ===
next: v239 
=== Usages ===
v102 
=== Predecessor ===
v421 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a233 #next: v239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
a238 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 14]
stamp: void
=== Inputs ===
result: a238 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a238 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -31795
stableDimension: 0
stamp: i32 [-31795] ⇊00000000ffff83cd ⇈00000000ffff83cd
stampKind: i32
value: int[-31795|0xffffffffffff83cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B18" "B15" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i248 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-32531 - -27667] ⇊00000000ffff80c5 ⇈00000000ffff9ffd
valueDescription: i32
=== Inputs ===
merge: v244 
values: i246 i254 i256 i258 i260 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: i246 i254 i256 i258 i260  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v245 v253 v255 v257 v259 
=== Succesors ===
next: v250 
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v245 v253 v255 v257 v259 #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid a247 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i248 
speculation: a247 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i248 speculation: a247  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v462 v465 v464 a181 v497 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v18 v413 v314 v13 v99 v103 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractList.listIterator(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 325
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v250 a385 a337 a281 i460 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 v365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i12 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v135 #falseSuccessor: v133  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4bd03899 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result int[-27667|0xffffffffffff93ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -27667
stableDimension: 0
stamp: i32 [-27667] ⇊00000000ffff93ed ⇈00000000ffff93ed
stampKind: i32
value: int[-27667|0xffffffffffff93ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27667|0xffffffffffff93ed]] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i457 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i457  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i457 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:348) [bci: 24]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList$ListItr.<init>(AbstractList.java:391) [bci: 8]
at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
=== Succesors ===
next: v458 
=== Usages ===
v319 v369 v417 
=== Predecessor ===
v133 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v464 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
=== Succesors ===
next: v63 
=== Usages ===
v427 v423 v425 
=== Predecessor ===
i457 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v465 #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
result meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v458 
y: v422 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v458 y: v422  <|@  <|@
f <@~|@floating>@ <|@
tid a181 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v325 v322 v371 v373 v419 v421 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:341) [bci: 15]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList$ListItr.<init>(AbstractList.java:391) [bci: 8]
at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 11]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 v367 v415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
result meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v310 v361 v409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j401 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v300 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
result [v5|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
j405 j357 j306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 a281 a337 a385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a281 a337 a385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a281 a337 a385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j428 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j429 j448 j440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5048028951405126
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v59 #falseSuccessor: v62  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@481980e8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5048028951405126 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a459 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a459  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a459 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v462 
=== Succesors ===
next: i460 
=== Usages ===
v463 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v462 #next: i460  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
result [v7|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a459 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i460 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v463 
=== Succesors ===
next: v144 
=== Usages ===
v18 
=== Predecessor ===
a459 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v463 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i460 
y: i2 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i460 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
i460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v143 #falseSuccessor: v141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMP (x: v1|DWORD, y: [v7|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
result int[-30483|0xffffffffffff88ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30483
stableDimension: 0
stamp: i32 [-30483] ⇊00000000ffff88ed ⇈00000000ffff88ed
stampKind: i32
value: int[-30483|0xffffffffffff88ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v143 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30483|0xffffffffffff88ed]] destination: B4 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j268 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j268 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j288 
=== Usages ===
v466 v467 
=== Predecessor ===
v141 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j288  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j268 
index: - 
=== Succesors ===
=== Usages ===
j288 v290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j288 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
=== Succesors ===
next: j289 
=== Usages ===
j429 j294 v479 
=== Predecessor ===
j268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v466 #next: j289  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j268 
index: - 
=== Succesors ===
=== Usages ===
j289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j289 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v467 
=== Succesors ===
next: v276 
=== Usages ===
v273 
=== Predecessor ===
j288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v467 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid j429 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j288 
y: j428 
=== Succesors ===
=== Usages ===
v273 v290 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j288 y: j428  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j289 
y: j429 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j289 y: j429  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v273 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v275 
=== Usages ===
=== Predecessor ===
j289 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v273 #trueSuccessor: v274 #falseSuccessor: v275  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA [v8|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4572470003287635871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a281 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a281 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v266 i431 i98 
=== Succesors ===
next: j282 
=== Usages ===
j282 
=== Predecessor ===
v274 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v266 i431 i98 #next: j282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j282 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a281 
=== Succesors ===
next: v295 
=== Usages ===
j294 
=== Predecessor ===
a281 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a281 #next: v295  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
j282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602674403234489346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
value: j429 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v466 value: j429 stateAfter: - lastLocationAccess: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
result [v8|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j288 
index: - 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v479 
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v479 #next: v293  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
v286 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v8|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j294 <|@
result v11|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v292 
values: j288 j282 
=== Succesors ===
=== Usages ===
v469 v468 a178 v480 v481 v482 v483 v484 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v292 values: j288 j282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v293 v295 
=== Succesors ===
next: a178 
=== Usages ===
j294 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v293 v295 #next: a178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a178 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j294 
=== Succesors ===
next: j306 
=== Usages ===
a184 
=== Predecessor ===
v292 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j294 #next: j306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j306 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
=== Succesors ===
next: v307 
=== Usages ===
v307 
=== Predecessor ===
a178 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v476 #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
result [v11|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v468 
value: j306 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
j306 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v468 value: j306 stateAfter: - lastLocationAccess: - #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
result [v11|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v469 
value: v434 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v469 value: v434 stateAfter: - lastLocationAccess: - #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
result [v11|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v480 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v480 value: i2 stateAfter: - lastLocationAccess: - #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
result [v11|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v481 
value: i37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v481 value: i37 stateAfter: - lastLocationAccess: - #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
result [v11|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v482 
value: i457 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v482 value: i457 stateAfter: - lastLocationAccess: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
result [v11|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v483 
value: a181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v483 value: a181 stateAfter: - lastLocationAccess: - #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
result [v11|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v484 
value: a181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a184 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v484 value: a181 stateAfter: - lastLocationAccess: - #next: a184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a184 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a178 
=== Succesors ===
next: v185 
=== Usages ===
v11 
=== Predecessor ===
v325 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a178 #next: v185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
a184 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 14]
stamp: void
=== Inputs ===
result: a184 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a184 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v11|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v5|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*]], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 20], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 24], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 28], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B16" 
    xhandlers
    flags 
    probability 4602592297905586464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
result meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v458 
y: v424 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v458 y: v424  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5248864695798622
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v68 #falseSuccessor: v71  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5248864695798622 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i98 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v145 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j326 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j326 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j341 
=== Usages ===
v470 v471 
=== Predecessor ===
v145 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j341  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j326 
index: - 
=== Succesors ===
=== Usages ===
j341 v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j326 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j341 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v470 
=== Succesors ===
next: j342 
=== Usages ===
j440 j347 v485 
=== Predecessor ===
j326 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v470 #next: j342  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j326 
index: - 
=== Succesors ===
=== Usages ===
j342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j326 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j342 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v471 
=== Succesors ===
next: v334 
=== Usages ===
v331 
=== Predecessor ===
j341 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v471 #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j341 
y: j428 
=== Succesors ===
=== Usages ===
v331 v343 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j341 y: j428  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j342 
y: j440 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j342 y: j440  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v331 
=== Succesors ===
trueSuccessor: v332 
falseSuccessor: v333 
=== Usages ===
=== Predecessor ===
j342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v331 #trueSuccessor: v332 #falseSuccessor: v333  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4568139821790584364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a337 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a337 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v266 i431 i98 
=== Succesors ===
next: j338 
=== Usages ===
j338 
=== Predecessor ===
v332 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v266 i431 i98 #next: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j338 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a337 
=== Succesors ===
next: v348 
=== Usages ===
j347 
=== Predecessor ===
a337 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a337 #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
j338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4598307139661366226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v470 
value: j440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v470 value: j440 stateAfter: - lastLocationAccess: - #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
result [v14|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j341 
index: - 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j341 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v485 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v485 #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
v340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j347 <|@
result v17|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v345 
values: j341 j338 
=== Succesors ===
=== Usages ===
v473 v472 a206 v486 v487 v488 v489 v490 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: j341 j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v346 v348 
=== Succesors ===
next: a206 
=== Usages ===
j347 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v346 v348 #next: a206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a206 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j347 
=== Succesors ===
next: j357 
=== Usages ===
a211 
=== Predecessor ===
v345 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j347 #next: j357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j357 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
=== Succesors ===
next: v358 
=== Usages ===
v358 
=== Predecessor ===
a206 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v476 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
result [v17|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v472 
value: j357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
j357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v472 value: j357 stateAfter: - lastLocationAccess: - #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
result [v17|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
value: v434 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v473 value: v434 stateAfter: - lastLocationAccess: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
result [v17|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v486 value: i12 stateAfter: - lastLocationAccess: - #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
result [v17|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v487 
value: i37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v487 value: i37 stateAfter: - lastLocationAccess: - #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
result [v17|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v488 
value: i457 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v488 value: i457 stateAfter: - lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
result [v17|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v489 
value: a181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v489 value: a181 stateAfter: - lastLocationAccess: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
result [v17|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v490 
value: a181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a211 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v490 value: a181 stateAfter: - lastLocationAccess: - #next: a211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a211 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a206 
=== Succesors ===
next: v212 
=== Usages ===
v92 
=== Predecessor ===
v373 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a206 #next: v212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
a211 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 14]
stamp: void
=== Inputs ===
result: a211 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a211 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v5|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*]], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 20], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 24], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 28], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
result int[-31251|0xffffffffffff85ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -31251
stableDimension: 0
stamp: i32 [-31251] ⇊00000000ffff85ed ⇈00000000ffff85ed
stampKind: i32
value: int[-31251|0xffffffffffff85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v147 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-31251|0xffffffffffff85ed]] destination: B15 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B17" "B23" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v458 
y: v426 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v458 y: v426  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v427 
=== Succesors ===
trueSuccessor: v149 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v427 #trueSuccessor: v149 #falseSuccessor: v151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i461 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i461  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i461 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v497 
=== Succesors ===
next: v156 
=== Usages ===
v103 
=== Predecessor ===
v149 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v497 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i461 
y: i2 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i461 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v153 
=== Usages ===
=== Predecessor ===
i461 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v155 #falseSuccessor: v153  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i256 <|@
result int[-32531|0xffffffffffff80ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32531
stableDimension: 0
stamp: i32 [-32531] ⇊00000000ffff80ed ⇈00000000ffff80ed
stampKind: i32
value: int[-32531|0xffffffffffff80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-32531|0xffffffffffff80ed]] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j374 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j374 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j389 
=== Usages ===
v474 v475 
=== Predecessor ===
v153 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j389  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j389 v391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j389 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
=== Succesors ===
next: j390 
=== Usages ===
j448 j395 v491 
=== Predecessor ===
j374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v474 #next: j390  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j390 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
=== Succesors ===
next: v382 
=== Usages ===
v379 
=== Predecessor ===
j389 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v475 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid j448 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j389 
y: j428 
=== Succesors ===
=== Usages ===
v379 v391 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j389 y: j428  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j390 
y: j448 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j390 y: j448  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
j390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v380 #falseSuccessor: v381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567571491086271639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a385 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a385 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v266 i431 i98 
=== Succesors ===
next: j386 
=== Usages ===
j386 
=== Predecessor ===
v380 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v266 i431 i98 #next: j386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j386 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a385 
=== Succesors ===
next: v396 
=== Usages ===
j395 
=== Predecessor ===
a385 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a385 #next: v396  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
j386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597559923219222290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
value: j448 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v474 value: j448 stateAfter: - lastLocationAccess: - #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
result [v20|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j389 
index: - 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j389 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v491 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v491 #next: v394  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j395 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v393 
values: j389 j386 
=== Succesors ===
=== Usages ===
v478 v477 a233 v492 v493 v494 v495 v496 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v393 values: j389 j386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v394 v396 
=== Succesors ===
next: a233 
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v394 v396 #next: a233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a233 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j395 
=== Succesors ===
next: j405 
=== Usages ===
a238 
=== Predecessor ===
v393 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j395 #next: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j405 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
=== Succesors ===
next: v406 
=== Usages ===
v406 
=== Predecessor ===
a233 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v476 #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
result [v23|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
value: j405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
j405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v477 value: j405 stateAfter: - lastLocationAccess: - #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
result [v23|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v478 
value: v434 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v478 value: v434 stateAfter: - lastLocationAccess: - #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
result [v23|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v492 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v492 value: i2 stateAfter: - lastLocationAccess: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
result [v23|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v493 
value: i37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v493 value: i37 stateAfter: - lastLocationAccess: - #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
result [v23|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v494 
value: i457 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v494 value: i457 stateAfter: - lastLocationAccess: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
result [v23|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v495 
value: a181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v495 value: a181 stateAfter: - lastLocationAccess: - #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
result [v23|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v496 
value: a181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a238 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v496 value: a181 stateAfter: - lastLocationAccess: - #next: a238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a238 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a233 
=== Succesors ===
next: v239 
=== Usages ===
v102 
=== Predecessor ===
v421 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a233 #next: v239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
a238 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 14]
stamp: void
=== Inputs ===
result: a238 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a238 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v5|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*]], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 20], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 24], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 28], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
result int[-31795|0xffffffffffff83cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -31795
stableDimension: 0
stamp: i32 [-31795] ⇊00000000ffff83cd ⇈00000000ffff83cd
stampKind: i32
value: int[-31795|0xffffffffffff83cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-31795|0xffffffffffff83cd]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B18" "B15" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i248 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-32531 - -27667] ⇊00000000ffff80c5 ⇈00000000ffff9ffd
valueDescription: i32
=== Inputs ===
merge: v244 
values: i246 i254 i256 i258 i260 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: i246 i254 i256 i258 i260  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v245 v253 v255 v257 v259 
=== Succesors ===
next: v250 
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v245 v253 v255 v257 v259 #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid a247 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i248 
speculation: a247 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i248 speculation: a247  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4bd03899 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@481980e8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5048028951405126 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction CMP (x: v1|DWORD, y: [v7|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA [v8|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602674403234489346
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v8|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v11|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v5|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*]], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 20], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 24], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 28], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B16" 
    xhandlers
    flags 
    probability 4602592297905586464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5248864695798622 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4598307139661366226
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v5|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*]], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 20], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 24], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 28], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B17" "B23" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597559923219222290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v5|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*]], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 20], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 24], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[*] + 28], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4572470003287635871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4568139821790584364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567571491086271639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-32531|0xffffffffffff80ed]] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B18" "B15" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-31795|0xffffffffffff83cd]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27667|0xffffffffffff93ed]] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30483|0xffffffffffff88ed]] destination: B4 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-31251|0xffffffffffff85ed]] destination: B15 -> B24 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #15         // rangeCheckForAdd:(int)void
     5: new           #23         // java.util.AbstractList$ListItr
     8: dup           
     9: aload_0       
    10: iload_1       
    11: invokespecial #20         // java.util.AbstractList$ListItr.<init>:(java.util.AbstractList, int)void
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4bd03899 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   26  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@481980e8 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   30  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.5048028951405126 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [r11:0, r13:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction CMP (x: r14|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr   54  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602674403234489346
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr   88  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  102  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rax|QWORD[*] + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B16" 
    xhandlers
    flags 
    probability 4602592297905586464
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.5248864695798622 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4598307139661366226
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr  168  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [rax|QWORD[*] + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B17" "B23" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction CMP (x: r14|DWORD, y: [r13|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  226  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597559923219222290
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr  260  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV [rax|QWORD[*] + 16] y: -1 size: DWORD <|@ <|@
      nr  278  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  284  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4572470003287635871
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   66  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [r13:0, stack:4]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   76  <|@ instruction r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4568139821790584364
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  146  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  148  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [r13:0, stack:4]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  152  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr  156  <|@ instruction r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567571491086271639
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  238  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ st <@st|@reference-map: [r13:0, stack:4]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  244  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr  248  <|@ instruction r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B18" "B15" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction r10|DWORD = MOVE input: int[-31795|0xffffffffffff83cd] <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[-27667|0xffffffffffff93ed] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r10|DWORD = MOVE input: int[-30483|0xffffffffffff88ed] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-31251|0xffffffffffff85ed] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B24 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #15         // rangeCheckForAdd:(int)void
     5: new           #23         // java.util.AbstractList$ListItr
     8: dup           
     9: aload_0       
    10: iload_1       
    11: invokespecial #20         // java.util.AbstractList$ListItr.<init>:(java.util.AbstractList, int)void
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4bd03899 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   26  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@481980e8 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   30  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.5048028951405126 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [r11:0, r13:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction CMP (x: r14|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr   54  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602674403234489346
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr   88  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4602722079806177136
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  102  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rax|QWORD[*] + 16] y: -1 size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B16" 
    xhandlers
    flags 
    probability 4602592297905586464
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.5248864695798622 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4598307139661366226
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr  168  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors 
    xhandlers
    flags 
    probability 4598353963093118350
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  182  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [rax|QWORD[*] + 16] y: -1 size: DWORD <|@ <|@
      nr  186  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B17" "B23" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction CMP (x: r14|DWORD, y: [r13|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  226  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4597559923219222290
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr  260  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4597644689915471652
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV [rax|QWORD[*] + 16] y: -1 size: DWORD <|@ <|@
      nr  278  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  284  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4572470003287635871
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   66  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [r13:0, stack:4]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   76  <|@ instruction r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4568139821790584364
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  146  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  148  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [r13:0, stack:4]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  152  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr  156  <|@ instruction r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567571491086271639
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  238  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ st <@st|@reference-map: [r13:0, stack:4]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  244  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr  248  <|@ instruction r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed] <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B18" "B15" "B23" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction r10|DWORD = MOVE input: int[-31795|0xffffffffffff83cd] <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[-27667|0xffffffffffff93ed] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r10|DWORD = MOVE input: int[-30483|0xffffffffffff88ed] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-31251|0xffffffffffff85ed] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B24 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #15         // rangeCheckForAdd:(int)void
     5: new           #23         // java.util.AbstractList$ListItr
     8: dup           
     9: aload_0       
    10: iload_1       
    11: invokespecial #20         // java.util.AbstractList$ListItr.<init>:(java.util.AbstractList, int)void
    14: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee448bf24585f60f8c50020000458b550c418b75084d8bdd49c1eb0349b8addeaddeaddeadde81feaddeadde0f8570000000418b4510443b34c50c0000000f8f21020000498b4760488d7020493b77700f8734010000498977600f1880e0000000488bf0498b90a8000000488910c74008addeadde4489700cc74010ffffffff44895014448958184489581c488bc6488b6c24104883c418850500000000c5f877c381feaddeadde0f85680000004183fe010f8db5010000498b4760488d7020493b77700f87fb000000498977600f1880e0000000488bf0498b90a8000000488910c74008addeadde4489600cc74010ffffffff44895014448958184489581c488bc6488b6c24104883c418850500000000c5f877c381feaddeadde0f8533010000453b75100f8f0f010000498b4760488d7020493b77700f87c2000000498977600f1880e0000000488bf0498b90a8000000488910c74008addeadde4489700cc74010ffffffff44895014448958184489581c488bc6488b6c24104883c418850500000000c5f877c344895c24044489142448beaddeaddeaddeaddeba04000000b901000000e8000000009049b8addeaddeaddeadde448b5c2404448b1424e99cfeffff44895c24044489142448beaddeaddeaddeaddeba04000000b901000000e8000000009049b8addeaddeaddeadde448b5c2404448b1424e9d5feffff44895c24044489142448beaddeaddeaddeaddeba04000000b901000000e8000000009049b8addeaddeaddeadde448b5c2404448b1424e90effffff41baed80ffff4589979c0200004d89a7a8020000e8000000009041bacd83ffffebe441baed93ffffebdc41baed88ffffebd441baed85ffffebcce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4bd03899 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 22 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 67 24 rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 71 26 r11|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@481980e8 encoding: base: 0 shift: 3  <||@
  Comment 78 28 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 78 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 88 30 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 88 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 94 32 BRANCH trueDestinationProbability: 0.5048028951405126 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9  <||@
  Comment 100 block B3 null  <||@
  Comment 100 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 36 rax|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 104 38 CMP (x: r14|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 104 [r11:0, r13:0]at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 104 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 112 40 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 118 block B5 null  <||@
  Comment 118 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 50 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 122 52 rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 126 54 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 130 56 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 136 block B7 null  <||@
  Comment 136 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 84 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 140 86 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 147 88 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 147 90 JUMP ~[] destination: B7 -> B8  <||@
  Comment 147 block B8 null  <||@
  Comment 147 92 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 147 94 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 150 96 rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 157 98 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 160 100 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 160 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 167 102 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 171 104 MOV [rax|QWORD[*] + 16] y: -1 size: DWORD  <||@
  Comment 178 106 MOV (x: [rax|QWORD[*] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 182 108 MOV (x: [rax|QWORD[*] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 186 110 MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 190 112 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 193 114 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 202 12  <||@
  Comment 212 block B9 null  <||@
  Comment 212 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 212 118 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 212 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 218 120 BRANCH trueDestinationProbability: 0.5248864695798622 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B16  <||@
  Comment 224 block B10 null  <||@
  Comment 224 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 124 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 228 126 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B15  <||@
  Comment 234 block B11 null  <||@
  Comment 234 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 234 130 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 238 132 rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 242 134 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 246 136 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 252 block B13 null  <||@
  Comment 252 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 252 164 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 256 166 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 263 168 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 263 170 JUMP ~[] destination: B13 -> B14  <||@
  Comment 263 block B14 null  <||@
  Comment 263 172 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 263 174 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 266 176 rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 273 178 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 276 180 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 276 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 283 182 MOV (x: [rax|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 287 184 MOV [rax|QWORD[*] + 16] y: -1 size: DWORD  <||@
  Comment 294 186 MOV (x: [rax|QWORD[*] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 298 188 MOV (x: [rax|QWORD[*] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 302 190 MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 306 192 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 309 194 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 318 12  <||@
  Comment 328 block B16 null  <||@
  Comment 328 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 328 204 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 328 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 334 206 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B23  <||@
  Comment 340 block B17 null  <||@
  Comment 340 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 340 210 CMP (x: r14|DWORD, y: [r13|QWORD[.] + 16]) size: DWORD  <||@
  Comment 344 212 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 350 block B19 null  <||@
  Comment 350 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 222 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 354 224 rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 358 226 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 362 228 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 368 block B21 null  <||@
  Comment 368 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 256 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 372 258 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 379 260 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 379 262 JUMP ~[] destination: B21 -> B22  <||@
  Comment 379 block B22 null  <||@
  Comment 379 264 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 379 266 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 382 268 rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 389 270 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 392 272 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 392 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 399 274 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 403 276 MOV [rax|QWORD[*] + 16] y: -1 size: DWORD  <||@
  Comment 410 278 MOV (x: [rax|QWORD[*] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 414 280 MOV (x: [rax|QWORD[*] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 418 282 MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 422 284 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 425 286 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 434 12  <||@
  Comment 444 block B6 null  <||@
  Comment 444 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 444 60 stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 449 62 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 453 64 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 453 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 463 66 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 468 68 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 473 70 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 473 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 478 [r13:0, stack:4]at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 479 72 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 479 74 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 479 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 489 76 r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 494 78 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 498 80 JUMP ~[] destination: B6 -> B8  <||@
  Comment 503 block B12 null  <||@
  Comment 503 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 503 140 stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 508 142 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 512 144 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 512 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 522 146 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 527 148 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 532 150 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 532 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 537 [r13:0, stack:4]at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 538 152 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 538 154 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 538 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 548 156 r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 553 158 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 557 160 JUMP ~[] destination: B12 -> B14  <||@
  Comment 562 block B20 null  <||@
  Comment 562 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 562 232 stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 567 234 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 571 236 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 571 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 581 238 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 586 240 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 591 242 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 591 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 596 [r13:0, stack:4]at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 597 244 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 597 246 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 597 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 607 248 r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 612 250 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 616 252 JUMP ~[] destination: B20 -> B22  <||@
  Comment 621 block B18 null  <||@
  Comment 621 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 216 r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed]  <||@
  Comment 627 218 JUMP ~[] destination: B18 -> B24  <||@
  Comment 627 block B24 null  <||@
  Comment 627 294 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 627 296 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 634 298 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 641 300 DEOPT info [bci:0]  <||@
  Comment 641 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 646 [r13:0]at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 647 block B23 null  <||@
  Comment 647 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 647 290 r10|DWORD = MOVE input: int[-31795|0xffffffffffff83cd]  <||@
  Comment 653 292 JUMP ~[] destination: B23 -> B24  <||@
  Comment 655 block B1 null  <||@
  Comment 655 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 655 16 r10|DWORD = MOVE input: int[-27667|0xffffffffffff93ed]  <||@
  Comment 661 18 JUMP ~[] destination: B1 -> B24  <||@
  Comment 663 block B4 null  <||@
  Comment 663 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 663 44 r10|DWORD = MOVE input: int[-30483|0xffffffffffff88ed]  <||@
  Comment 669 46 JUMP ~[] destination: B4 -> B24  <||@
  Comment 671 block B15 null  <||@
  Comment 671 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 671 198 r10|DWORD = MOVE input: int[-31251|0xffffffffffff85ed]  <||@
  Comment 677 200 JUMP ~[] destination: B15 -> B24  <||@
  Comment 679 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 679 4  <||@
  Comment 685 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 685 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9374[java.util.AbstractList.listIterator(int)]"
  method "HotSpotCompilation-9374[java.util.AbstractList.listIterator(int)]"
  date 1527005208084
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107bc0520 448b560849c1e203493bc20f852f59c4fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee448bf24585f60f8c50020000458b550c418b75084d8bdd49c1eb0349b8987b0fc00700000081fe8faf00f80f8570000000418b4510443b34c50c0000000f8f21020000498b4760488d7020493b77700f8734010000498977600f1880e0000000488bf0498b90a8000000488910c7400873ef01f84489700cc74010ffffffff44895014448958184489581c488bc6488b6c24104883c418850516eaccfcc5f877c381fe3b3100f80f85680000004183fe010f8db5010000498b4760488d7020493b77700f87fb000000498977600f1880e0000000488bf0498b90a8000000488910c7400873ef01f84489600cc74010ffffffff44895014448958184489581c488bc6488b6c24104883c4188505a2e9ccfcc5f877c381fec8b101f80f8533010000453b75100f8f0f010000498b4760488d7020493b77700f87c2000000498977600f1880e0000000488bf0498b90a8000000488910c7400873ef01f84489700cc74010ffffffff44895014448958184489581c488bc6488b6c24104883c41885052ee9ccfcc5f877c344895c24044489142448be680b00c007000000ba04000000b901000000e8e2663dff9049b8987b0fc007000000448b5c2404448b1424e99cfeffff44895c24044489142448be680b00c007000000ba04000000b901000000e8a7663dff9049b8987b0fc007000000448b5c2404448b1424e9d5feffff44895c24044489142448be680b00c007000000ba04000000b901000000e86c663dff9049b8987b0fc007000000448b5c2404448b1424e90effffff41baed80ffff4589979c0200004d89a7a8020000e8586ec4fe9041bacd83ffffebe441baed93ffffebdc41baed88ffffebd441baed85ffffebcce8549e08ff90e82e6dc4fe90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4bd03899 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 22 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 67 24 rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 71 26 r11|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@481980e8 encoding: base: 0 shift: 3  <||@
  Comment 78 28 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 78 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 88 30 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 88 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 94 32 BRANCH trueDestinationProbability: 0.5048028951405126 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9  <||@
  Comment 100 block B3 null  <||@
  Comment 100 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 36 rax|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 104 38 CMP (x: r14|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 104 [r11:0, r13:0]at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 104 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 112 40 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 118 block B5 null  <||@
  Comment 118 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 50 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 122 52 rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 126 54 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 130 56 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 136 block B7 null  <||@
  Comment 136 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 84 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 140 86 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 147 88 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 147 90 JUMP ~[] destination: B7 -> B8  <||@
  Comment 147 block B8 null  <||@
  Comment 147 92 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 147 94 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 150 96 rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 157 98 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 160 100 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 160 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 167 102 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 171 104 MOV [rax|QWORD[*] + 16] y: -1 size: DWORD  <||@
  Comment 178 106 MOV (x: [rax|QWORD[*] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 182 108 MOV (x: [rax|QWORD[*] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 186 110 MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 190 112 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 193 114 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 202 12  <||@
  Comment 212 block B9 null  <||@
  Comment 212 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 212 118 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 212 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 218 120 BRANCH trueDestinationProbability: 0.5248864695798622 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B16  <||@
  Comment 224 block B10 null  <||@
  Comment 224 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 124 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 228 126 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B15  <||@
  Comment 234 block B11 null  <||@
  Comment 234 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 234 130 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 238 132 rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 242 134 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 246 136 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 252 block B13 null  <||@
  Comment 252 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 252 164 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 256 166 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 263 168 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 263 170 JUMP ~[] destination: B13 -> B14  <||@
  Comment 263 block B14 null  <||@
  Comment 263 172 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 263 174 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 266 176 rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 273 178 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 276 180 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 276 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 283 182 MOV (x: [rax|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 287 184 MOV [rax|QWORD[*] + 16] y: -1 size: DWORD  <||@
  Comment 294 186 MOV (x: [rax|QWORD[*] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 298 188 MOV (x: [rax|QWORD[*] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 302 190 MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 306 192 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 309 194 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 318 12  <||@
  Comment 328 block B16 null  <||@
  Comment 328 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 328 204 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 328 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 334 206 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B23  <||@
  Comment 340 block B17 null  <||@
  Comment 340 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 340 210 CMP (x: r14|DWORD, y: [r13|QWORD[.] + 16]) size: DWORD  <||@
  Comment 344 212 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 350 block B19 null  <||@
  Comment 350 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 222 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 354 224 rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 358 226 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 362 228 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 368 block B21 null  <||@
  Comment 368 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 256 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 372 258 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 379 260 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 379 262 JUMP ~[] destination: B21 -> B22  <||@
  Comment 379 block B22 null  <||@
  Comment 379 264 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 379 266 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 382 268 rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 389 270 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 392 272 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 392 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 399 274 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 403 276 MOV [rax|QWORD[*] + 16] y: -1 size: DWORD  <||@
  Comment 410 278 MOV (x: [rax|QWORD[*] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 414 280 MOV (x: [rax|QWORD[*] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 418 282 MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 422 284 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 425 286 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 434 12  <||@
  Comment 444 block B6 null  <||@
  Comment 444 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 444 60 stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 449 62 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 453 64 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 453 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 463 66 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 468 68 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 473 70 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 473 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 478 [r13:0, stack:4]at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 479 72 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 479 74 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 479 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 489 76 r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 494 78 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 498 80 JUMP ~[] destination: B6 -> B8  <||@
  Comment 503 block B12 null  <||@
  Comment 503 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 503 140 stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 508 142 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 512 144 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 512 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 522 146 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 527 148 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 532 150 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 532 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 537 [r13:0, stack:4]at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 538 152 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 538 154 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 538 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 548 156 r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 553 158 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 557 160 JUMP ~[] destination: B12 -> B14  <||@
  Comment 562 block B20 null  <||@
  Comment 562 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 562 232 stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 567 234 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 571 236 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 571 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 581 238 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 586 240 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 591 242 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 591 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 596 [r13:0, stack:4]at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 597 244 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 597 246 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 597 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 607 248 r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 612 250 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 616 252 JUMP ~[] destination: B20 -> B22  <||@
  Comment 621 block B18 null  <||@
  Comment 621 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 216 r10|DWORD = MOVE input: int[-32531|0xffffffffffff80ed]  <||@
  Comment 627 218 JUMP ~[] destination: B18 -> B24  <||@
  Comment 627 block B24 null  <||@
  Comment 627 294 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 627 296 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 634 298 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 641 300 DEOPT info [bci:0]  <||@
  Comment 641 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 646 [r13:0]at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 647 block B23 null  <||@
  Comment 647 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 647 290 r10|DWORD = MOVE input: int[-31795|0xffffffffffff83cd]  <||@
  Comment 653 292 JUMP ~[] destination: B23 -> B24  <||@
  Comment 655 block B1 null  <||@
  Comment 655 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 655 16 r10|DWORD = MOVE input: int[-27667|0xffffffffffff93ed]  <||@
  Comment 661 18 JUMP ~[] destination: B1 -> B24  <||@
  Comment 663 block B4 null  <||@
  Comment 663 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 663 44 r10|DWORD = MOVE input: int[-30483|0xffffffffffff88ed]  <||@
  Comment 669 46 JUMP ~[] destination: B4 -> B24  <||@
  Comment 671 block B15 null  <||@
  Comment 671 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 671 198 r10|DWORD = MOVE input: int[-31251|0xffffffffffff85ed]  <||@
  Comment 677 200 JUMP ~[] destination: B15 -> B24  <||@
  Comment 679 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 679 4  <||@
  Comment 685 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 685 5  <||@
  HexCodeFile>>> <|@
end_nmethod
