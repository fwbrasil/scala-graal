begin_compilation
  name " HotSpotCompilation-8839[java.nio.Bits.copyFromArray(Object, long, long, long, long)]"
  method "HotSpotCompilation-8839[java.nio.Bits.copyFromArray(Object, long, long, long, long)]"
  date 1527005173294
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid j4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j7 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j7 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j7 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:801) [bci: 2]
stamp: i64
=== Inputs ===
x: j2 
y: j3 
=== Succesors ===
=== Usages ===
j13 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2 y: j3  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v0 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B4" 
    successors "B2" "B3" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j11 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v10 
values: j4 j41 
=== Succesors ===
=== Usages ===
?14 j41 ?39 j55 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: j4 j41  <|@  <|@
f <@~|@floating>@ <|@
tid j12 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v10 
values: j5 j15 
=== Succesors ===
=== Usages ===
?14 j41 v19 j40 v28 v37 ?39 ?39 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: j5 j15  <|@  <|@
f <@~|@floating>@ <|@
tid j13 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v10 
values: j7 j40 
=== Succesors ===
=== Usages ===
?14 j40 ?39 j53 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: j7 j40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 5]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v9 
=== Succesors ===
next: v24 
=== Usages ===
j11 j12 j13 v21 v42 v50 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v9 #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j12 
y: j18 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j12 y: j18  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 9]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v21 #falseSuccessor: v23  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:809) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:809) [bci: 69]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid j27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 18]
rawvalue: 1048577
stableDimension: 0
stamp: i64 [1048577] ⇊0000000000100001 ⇈0000000000100001
stampKind: i64
value: long[1048577|0x100001]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j12 
y: j27 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j12 y: j27  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?39 ?14 j52 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v47 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: j52 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.ComputeObjectAddressNode.get(Object, long) [bci: -1]
at org.graalvm.compiler.hotspot.meta.HotSpotUnsafeSubstitutions.copyMemory(HotSpotUnsafeSubstitutions.java:42) [bci: 2]
at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 42]
stamp: i64
=== Inputs ===
object: a1 
=== Succesors ===
next: j54 
=== Usages ===
j53 
=== Predecessor ===
v47 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1 #next: j54  <|@  <|@
f <@~|@floating>@ <|@
tid a32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 37]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j54 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.ComputeObjectAddressNode.get(Object, long) [bci: -1]
at org.graalvm.compiler.hotspot.meta.HotSpotUnsafeSubstitutions.copyMemory(HotSpotUnsafeSubstitutions.java:43) [bci: 17]
at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 42]
stamp: i64
=== Inputs ===
object: a32 
=== Succesors ===
next: v37 
=== Usages ===
j55 
=== Predecessor ===
j52 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a32 #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid j53 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.ComputeObjectAddressNode.get(Object, long) [bci: -1]
at org.graalvm.compiler.hotspot.meta.HotSpotUnsafeSubstitutions.copyMemory(HotSpotUnsafeSubstitutions.java:42) [bci: 2]
at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 42]
stamp: i64
=== Inputs ===
x: j13 
y: j52 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j13 y: j52  <|@  <|@
f <@~|@floating>@ <|@
tid j55 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.ComputeObjectAddressNode.get(Object, long) [bci: -1]
at org.graalvm.compiler.hotspot.meta.HotSpotUnsafeSubstitutions.copyMemory(HotSpotUnsafeSubstitutions.java:43) [bci: 17]
at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 42]
stamp: i64
=== Inputs ===
x: j11 
y: j54 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j11 y: j54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
bci: 42
descriptor: unsafe_arraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotBackend.unsafeArraycopyStub(ForeignCallDescriptor, Word, Word, Word) [bci: -1]
at org.graalvm.compiler.hotspot.HotSpotBackend.unsafeArraycopy(HotSpotBackend.java:266) [bci: 6]
at org.graalvm.compiler.hotspot.meta.HotSpotUnsafeSubstitutions.copyMemory(HotSpotUnsafeSubstitutions.java:45) [bci: 44]
at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j53 j55 j12 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
j54 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j53 j55 j12 #next: v46  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 45
code: ResolvedJavaMethodBytecode<Bits.copyFromArray(Object, long, long, long, long)>
duringCall: false
localsSize: 13
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotBackend.unsafeArraycopy(HotSpotBackend.java:267) [bci: 9]
at org.graalvm.compiler.hotspot.meta.HotSpotUnsafeSubstitutions.copyMemory(HotSpotUnsafeSubstitutions.java:45) [bci: 44]
at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 42]
rethrowException: false
sourceFile: Bits.java
sourceLine: 805
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - j11 - j12 - j13 - j12 - 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - j11 - j12 - j13 - j12 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?39 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?39 #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid j40 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:806) [bci: 56]
stamp: i64
=== Inputs ===
x: j12 
y: j13 
=== Succesors ===
=== Usages ===
j13 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j12 y: j13  <|@  <|@
f <@~|@floating>@ <|@
tid j41 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:807) [bci: 63]
stamp: i64
=== Inputs ===
x: j11 
y: j12 
=== Succesors ===
=== Usages ===
j11 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j11 y: j12  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 5]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v48  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Bits.copyFromArray(Object, long, long, long, long)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: Bits.java
sourceLine: 802
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - j11 - j12 - j13 - - - 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - j11 - j12 - j13 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 44
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 18]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?14  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid j4 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j7 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j7 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j7 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:801) [bci: 2]
stamp: i64
=== Inputs ===
x: j2 
y: j3 
=== Succesors ===
=== Usages ===
j13 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2 y: j3  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j18 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v0 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|QWORD, r8|QWORD, r9|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@262d9c1f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = ADD (x: v1|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|QWORD, v4|QWORD, v5|QWORD] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B4" 
    successors "B2" "B3" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j11 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v10 
values: j4 j41 
=== Succesors ===
=== Usages ===
?14 j41 ?39 j55 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: j4 j41  <|@  <|@
f <@~|@floating>@ <|@
tid j12 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v10 
values: j5 j15 
=== Succesors ===
=== Usages ===
?14 j41 v19 j40 v28 v37 ?39 ?39 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: j5 j15  <|@  <|@
f <@~|@floating>@ <|@
tid j13 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v10 
values: j7 j40 
=== Succesors ===
=== Usages ===
?14 j40 ?39 j53 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: j7 j40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 5]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v9 
=== Succesors ===
next: v24 
=== Usages ===
j11 j12 j13 v21 v42 v50 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v9 #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j12 
y: j18 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j12 y: j18  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 9]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v21 #falseSuccessor: v23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD, v7|QWORD, v8|QWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:809) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:809) [bci: 69]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid j27 <|@
result long[1048577|0x100001] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 18]
rawvalue: 1048577
stableDimension: 0
stamp: i64 [1048577] ⇊0000000000100001 ⇈0000000000100001
stampKind: i64
value: long[1048577|0x100001]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j12 
y: j27 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j12 y: j27  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?39 ?14 j52 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v47 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|QWORD y: 1048577 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: j52 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j52 <|@
result v9|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.ComputeObjectAddressNode.get(Object, long) [bci: -1]
at org.graalvm.compiler.hotspot.meta.HotSpotUnsafeSubstitutions.copyMemory(HotSpotUnsafeSubstitutions.java:42) [bci: 2]
at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 42]
stamp: i64
=== Inputs ===
object: a1 
=== Succesors ===
next: j54 
=== Usages ===
j53 
=== Predecessor ===
v47 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1 #next: j54  <|@  <|@
f <@~|@floating>@ <|@
tid a32 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 37]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j54 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j54 <|@
result v10|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.ComputeObjectAddressNode.get(Object, long) [bci: -1]
at org.graalvm.compiler.hotspot.meta.HotSpotUnsafeSubstitutions.copyMemory(HotSpotUnsafeSubstitutions.java:43) [bci: 17]
at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 42]
stamp: i64
=== Inputs ===
object: a32 
=== Succesors ===
next: v37 
=== Usages ===
j55 
=== Predecessor ===
j52 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a32 #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid j53 <|@
result v11|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.ComputeObjectAddressNode.get(Object, long) [bci: -1]
at org.graalvm.compiler.hotspot.meta.HotSpotUnsafeSubstitutions.copyMemory(HotSpotUnsafeSubstitutions.java:42) [bci: 2]
at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 42]
stamp: i64
=== Inputs ===
x: j13 
y: j52 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j13 y: j52  <|@  <|@
f <@~|@floating>@ <|@
tid j55 <|@
result v12|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.ComputeObjectAddressNode.get(Object, long) [bci: -1]
at org.graalvm.compiler.hotspot.meta.HotSpotUnsafeSubstitutions.copyMemory(HotSpotUnsafeSubstitutions.java:43) [bci: 17]
at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 42]
stamp: i64
=== Inputs ===
x: j11 
y: j54 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j11 y: j54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
bci: 42
descriptor: unsafe_arraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotBackend.unsafeArraycopyStub(ForeignCallDescriptor, Word, Word, Word) [bci: -1]
at org.graalvm.compiler.hotspot.HotSpotBackend.unsafeArraycopy(HotSpotBackend.java:266) [bci: 6]
at org.graalvm.compiler.hotspot.meta.HotSpotUnsafeSubstitutions.copyMemory(HotSpotUnsafeSubstitutions.java:45) [bci: 44]
at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j53 j55 j12 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
j54 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j53 j55 j12 #next: v46  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 45
code: ResolvedJavaMethodBytecode<Bits.copyFromArray(Object, long, long, long, long)>
duringCall: false
localsSize: 13
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotBackend.unsafeArraycopy(HotSpotBackend.java:267) [bci: 9]
at org.graalvm.compiler.hotspot.meta.HotSpotUnsafeSubstitutions.copyMemory(HotSpotUnsafeSubstitutions.java:45) [bci: 44]
at java.nio.Bits.copyFromArray(Bits.java:804) [bci: 42]
rethrowException: false
sourceFile: Bits.java
sourceLine: 805
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - j11 - j12 - j13 - j12 - 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - j11 - j12 - j13 - j12 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?39 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?39 #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid j40 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:806) [bci: 56]
stamp: i64
=== Inputs ===
x: j12 
y: j13 
=== Succesors ===
=== Usages ===
j13 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j12 y: j13  <|@  <|@
f <@~|@floating>@ <|@
tid j41 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:807) [bci: 63]
stamp: i64
=== Inputs ===
x: j11 
y: j12 
=== Succesors ===
=== Usages ===
j11 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j11 y: j12  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 5]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[*] = ADD (x: v8|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = ADD (x: v6|QWORD, y: v10|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v11|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: unsafe_arraycopy(Word,Word,Word)void@0x106813560:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Bits.copyFromArray(Bits.java:805) [bci: 45]
locals: v0|QWORD[.] - - - - v6|QWORD - v7|QWORD - v8|QWORD - v7|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v7|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = ADD (x: v6|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD, long[0|0x0], v13|QWORD] destination: B4 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v48  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Bits.copyFromArray(Object, long, long, long, long)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: Bits.java
sourceLine: 802
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - j11 - j12 - j13 - - - 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - j11 - j12 - j13 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 44
nodeSourcePosition: at java.nio.Bits.copyFromArray(Bits.java:803) [bci: 18]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -11283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Bits.copyFromArray(Bits.java:802) [bci: 5]
locals: v0|QWORD[.] - - - - v6|QWORD - v7|QWORD - v8|QWORD - - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|QWORD, r8|QWORD, r9|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@262d9c1f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = ADD (x: v1|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|QWORD, v4|QWORD, v5|QWORD] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|QWORD y: 1048577 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[*] = ADD (x: v8|QWORD, y: v9|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = ADD (x: v6|QWORD, y: v10|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v11|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v12|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: unsafe_arraycopy(Word,Word,Word)void@0x106813560:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Bits.copyFromArray(Bits.java:805) [bci: 45]
locals: v0|QWORD[.] - - - - v6|QWORD - v7|QWORD - v8|QWORD - v7|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v7|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = ADD (x: v6|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD, long[0|0x0], v13|QWORD] destination: B4 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B4" 
    successors "B2" "B3" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD, v7|QWORD, v8|QWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -11283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Bits.copyFromArray(Bits.java:802) [bci: 5]
locals: v0|QWORD[.] - - - - v6|QWORD - v7|QWORD - v8|QWORD - - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_1       
     1: lload_3       
     2: ladd          
     3: lstore        9
     5: lload         7
     7: lconst_0      
     8: lcmp          
     9: ifle          69
    12: lload         7
    14: ldc2_w        #148        // 1048576
    17: lcmp          
    18: ifle          27
    21: ldc2_w        #148        // 1048576
    24: goto          29
    27: lload         7
    29: lstore        11
    31: getstatic     #84         // unsafe:sun.misc.Unsafe
    34: aload_0       
    35: lload         9
    37: aconst_null   
    38: lload         5
    40: lload         11
    42: invokevirtual #117        // sun.misc.Unsafe.copyMemory:(java.lang.Object, long, java.lang.Object, long, long)void
    45: lload         7
    47: lload         11
    49: lsub          
    50: lstore        7
    52: lload         9
    54: lload         11
    56: ladd          
    57: lstore        9
    59: lload         5
    61: lload         11
    63: ladd          
    64: lstore        5
    66: goto          5
    69: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|QWORD, r8|QWORD, r9|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@262d9c1f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction r10|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   28  <|@ instruction CMP r9|QWORD y: 1048577 size: QWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction rdx|QWORD[*] = MOVE input: Object[null] <|@ <|@
      nr   38  <|@ instruction rdi|QWORD[*] = ADD (x: r11|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr   40  <|@ instruction rdx|QWORD[*] = ADD (x: r10|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction stack:48|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: unsafe_arraycopy(Word,Word,Word)void@0x106813560:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.nio.Bits.copyFromArray(Bits.java:805) [bci: 45]
locals: stack:32|QWORD[.] - - - - stack:40|QWORD - stack:48|QWORD - stack:56|QWORD - stack:48|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:45] <|@ <|@
      nr   58  <|@ instruction r9|QWORD = ADD (x: stack:48|QWORD, y: stack:56|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = ADD (x: stack:40|QWORD, y: stack:48|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B4" 
    successors "B2" "B3" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   18  <|@ instruction CMP r9|QWORD y: 1 size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV [r15|QWORD + 668] y: -11283 size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.Bits.copyFromArray(Bits.java:802) [bci: 5]
locals: rsi|QWORD[.] - - - - r10|QWORD - r9|QWORD - r11|QWORD - - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_1       
     1: lload_3       
     2: ladd          
     3: lstore        9
     5: lload         7
     7: lconst_0      
     8: lcmp          
     9: ifle          69
    12: lload         7
    14: ldc2_w        #148        // 1048576
    17: lcmp          
    18: ifle          27
    21: ldc2_w        #148        // 1048576
    24: goto          29
    27: lload         7
    29: lstore        11
    31: getstatic     #84         // unsafe:sun.misc.Unsafe
    34: aload_0       
    35: lload         9
    37: aconst_null   
    38: lload         5
    40: lload         11
    42: invokevirtual #117        // sun.misc.Unsafe.copyMemory:(java.lang.Object, long, java.lang.Object, long, long)void
    45: lload         7
    47: lload         11
    49: lsub          
    50: lstore        7
    52: lload         9
    54: lload         11
    56: ladd          
    57: lstore        9
    59: lload         5
    61: lload         11
    63: ladd          
    64: lstore        5
    66: goto          5
    69: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|QWORD, r8|QWORD, r9|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@262d9c1f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction r10|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   28  <|@ instruction CMP r9|QWORD y: 1048577 size: QWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rdi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction rdx|QWORD[*] = MOVE input: Object[null] <|@ <|@
      nr   38  <|@ instruction rdi|QWORD[*] = ADD (x: r11|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr   40  <|@ instruction rdx|QWORD[*] = ADD (x: r10|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction stack:48|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: unsafe_arraycopy(Word,Word,Word)void@0x106813560:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.nio.Bits.copyFromArray(Bits.java:805) [bci: 45]
locals: stack:32|QWORD[.] - - - - stack:40|QWORD - stack:48|QWORD - stack:56|QWORD - stack:48|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:45] <|@ <|@
      nr   58  <|@ instruction r9|QWORD = ADD (x: stack:48|QWORD, y: stack:56|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = ADD (x: stack:40|QWORD, y: stack:48|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B4" 
    successors "B2" "B3" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   18  <|@ instruction CMP r9|QWORD y: 1 size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV [r15|QWORD + 668] y: -11283 size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.Bits.copyFromArray(Bits.java:802) [bci: 5]
locals: rsi|QWORD[.] - - - - r10|QWORD - r9|QWORD - r11|QWORD - - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_1       
     1: lload_3       
     2: ladd          
     3: lstore        9
     5: lload         7
     7: lconst_0      
     8: lcmp          
     9: ifle          69
    12: lload         7
    14: ldc2_w        #148        // 1048576
    17: lcmp          
    18: ifle          27
    21: ldc2_w        #148        // 1048576
    24: goto          29
    27: lload         7
    29: lstore        11
    31: getstatic     #84         // unsafe:sun.misc.Unsafe
    34: aload_0       
    35: lload         9
    37: aconst_null   
    38: lload         5
    40: lload         11
    42: invokevirtual #117        // sun.misc.Unsafe.copyMemory:(java.lang.Object, long, java.lang.Object, long, long)void
    45: lload         7
    47: lload         11
    49: lsub          
    50: lstore        7
    52: lload         9
    54: lload         11
    56: ladd          
    57: lstore        9
    59: lload         5
    61: lload         11
    63: ladd          
    64: lstore        5
    66: goto          5
    69: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec3848896c243048897424204803d14c8bda4d8bd0e9710000000f1f8000000000660f1f4400004981f9010010000f8d70000000488bfe48ba00000000000000004903fb4903d2488bf2498bd14c895424184c894c24104c895c2408e800000000908505000000004c8b4c24104c034c24084c8b5424184c035424104d8bd949c7c100000000488b7424204983f9017d96488b6c24304883c438850500000000c5f877c341c7879c020000edd3ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|QWORD, rcx|QWORD, r8|QWORD, r9|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@262d9c1f slotKind: QWORD  <||@
  Comment 16 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 21 8 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 24 10 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 27 12 r10|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 30 14 JUMP ~[] destination: B0 -> B1  <||@
  Comment 35 block B3 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 35 26 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 48 28 CMP r9|QWORD y: 1048577 size: QWORD  <||@
  Comment 55 30 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 61 block B4 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 61 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 61 34 rdi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 64 36 rdx|QWORD[*] = MOVE input: Object[null]  <||@
  Comment 74 38 rdi|QWORD[*] = ADD (x: r11|QWORD, y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 77 40 rdx|QWORD[*] = ADD (x: r10|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 80 42 rdi|QWORD = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 80 44 rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 83 46 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 86 48 stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 91 50 stack:48|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 96 52 stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 101 54 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: unsafe_arraycopy(Word,Word,Word)void@0x106813560:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 101 {Field[name=StubRoutines::_unsafe_arraycopy, type=address, offset=0, address=0x105aa7b88, value=0x106813560]:0x106813560}  <||@
  Comment 107 56 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:45]  <||@
  Comment 107 [stack:32]at java.nio.Bits.copyFromArray(Bits.java:805) [bci: 45, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7               |8  |9               |10  |11              |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-  |stack:40|QWORD  |-  |stack:48|QWORD  |-  |stack:56|QWORD  |-   |stack:48|QWORD  |-    <||@
  Comment 107 {infopoint: SAFEPOINT}  <||@
  Comment 107 11  <||@
  Comment 113 58 r9|QWORD = ADD (x: stack:48|QWORD, y: stack:56|QWORD) size: QWORD  <||@
  Comment 123 60 r10|QWORD = ADD (x: stack:40|QWORD, y: stack:48|QWORD) size: QWORD  <||@
  Comment 133 62 r11|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 136 64 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 143 66 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 148 68 JUMP ~[] destination: B4 -> B1  <||@
  Comment 148 block B1 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 148 16 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 148 18 CMP r9|QWORD y: 1 size: QWORD  <||@
  Comment 152 20 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 154 block B2 null  <||@
  Comment 154 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 24 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 163 12  <||@
  Comment 173 block B5 null  <||@
  Comment 173 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 72 MOV [r15|QWORD + 668] y: -11283 size: DWORD  <||@
  Comment 184 74 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 191 76 DEOPT info [bci:5]  <||@
  Comment 191 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 196 [rsi:0]at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 5, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7         |8  |9          |10  |11  |12 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |r10|QWORD  |-  |r9|QWORD  |-  |r11|QWORD  |-   |-   |-    <||@
  Comment 197 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 197 4  <||@
  Comment 203 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 203 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8839[java.nio.Bits.copyFromArray(Object, long, long, long, long)]"
  method "HotSpotCompilation-8839[java.nio.Bits.copyFromArray(Object, long, long, long, long)]"
  date 1527005173345
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107a11de0 89842400c0feff4883ec3848896c243048897424204803d14c8bda4d8bd0e9710000000f1f8000000000660f1f4400004981f9010010000f8d70000000488bfe48ba00000000000000004903fb4903d2488bf2498bd14c895424184c894c24104c895c2408e81617e0fe908505b5d1e7fc4c8b4c24104c034c24084c8b5424184c035424104d8bd949c7c100000000488b7424204983f9017d96488b6c24304883c43885057dd1e7fcc5f877c341c7879c020000edd3ffff4d89a7a8020000e85a57dffe90e8768723ff90e85056dffe90f4f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|QWORD, rcx|QWORD, r8|QWORD, r9|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@262d9c1f slotKind: QWORD  <||@
  Comment 16 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 21 8 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 24 10 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 27 12 r10|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 30 14 JUMP ~[] destination: B0 -> B1  <||@
  Comment 35 block B3 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 35 26 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 48 28 CMP r9|QWORD y: 1048577 size: QWORD  <||@
  Comment 55 30 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 61 block B4 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 61 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 61 34 rdi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 64 36 rdx|QWORD[*] = MOVE input: Object[null]  <||@
  Comment 74 38 rdi|QWORD[*] = ADD (x: r11|QWORD, y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 77 40 rdx|QWORD[*] = ADD (x: r10|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 80 42 rdi|QWORD = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 80 44 rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 83 46 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 86 48 stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 91 50 stack:48|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 96 52 stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 101 54 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: unsafe_arraycopy(Word,Word,Word)void@0x106813560:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 101 {Field[name=StubRoutines::_unsafe_arraycopy, type=address, offset=0, address=0x105aa7b88, value=0x106813560]:0x106813560}  <||@
  Comment 107 56 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:45]  <||@
  Comment 107 [stack:32]at java.nio.Bits.copyFromArray(Bits.java:805) [bci: 45, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7               |8  |9               |10  |11              |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-  |stack:40|QWORD  |-  |stack:48|QWORD  |-  |stack:56|QWORD  |-   |stack:48|QWORD  |-    <||@
  Comment 107 {infopoint: SAFEPOINT}  <||@
  Comment 107 11  <||@
  Comment 113 58 r9|QWORD = ADD (x: stack:48|QWORD, y: stack:56|QWORD) size: QWORD  <||@
  Comment 123 60 r10|QWORD = ADD (x: stack:40|QWORD, y: stack:48|QWORD) size: QWORD  <||@
  Comment 133 62 r11|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 136 64 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 143 66 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 148 68 JUMP ~[] destination: B4 -> B1  <||@
  Comment 148 block B1 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 148 16 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 148 18 CMP r9|QWORD y: 1 size: QWORD  <||@
  Comment 152 20 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 154 block B2 null  <||@
  Comment 154 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 24 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 163 12  <||@
  Comment 173 block B5 null  <||@
  Comment 173 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 72 MOV [r15|QWORD + 668] y: -11283 size: DWORD  <||@
  Comment 184 74 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 191 76 DEOPT info [bci:5]  <||@
  Comment 191 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 196 [rsi:0]at java.nio.Bits.copyFromArray(Bits.java:802) [bci: 5, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7         |8  |9          |10  |11  |12 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |r10|QWORD  |-  |r9|QWORD  |-  |r11|QWORD  |-   |-   |-    <||@
  Comment 197 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 197 4  <||@
  Comment 203 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 203 5  <||@
  HexCodeFile>>> <|@
end_nmethod
