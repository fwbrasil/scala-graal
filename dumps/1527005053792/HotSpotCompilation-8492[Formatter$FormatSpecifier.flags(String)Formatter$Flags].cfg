begin_compilation
  name " HotSpotCompilation-8492[java.util.Formatter$FormatSpecifier.flags(String)]"
  method "HotSpotCompilation-8492[java.util.Formatter$FormatSpecifier.flags(String)]"
  date 1527005223374
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a612 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a612  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?52 ?52 v623 j447 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v618 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.flags(String)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2640
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v310 a355 a612 i613 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v618 
=== Succesors ===
next: i613 
=== Usages ===
a144 v619 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v618 #next: i613  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a612 
=== Succesors ===
=== Usages ===
i613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i613 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v619 
=== Succesors ===
next: v611 
=== Usages ===
j236 a355 v31 v340 v250 v382 i331 
=== Predecessor ===
a612 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v619 #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a355 i119 v250 i28 a418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i613 
y: i14 
=== Succesors ===
=== Usages ===
v609 v470 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i613 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid j236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i613 
=== Succesors ===
=== Usages ===
j240 v242 v401 j583 j569 j575 j579 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i613  <|@  <|@
f <@~|@floating>@ <|@
tid j239 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j236 
y: j239 
=== Succesors ===
=== Usages ===
v242 v586 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j236 y: j239  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j240 
y: j236 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j240 y: j236  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v607 
falseSuccessor: v610 
=== Usages ===
=== Predecessor ===
i613 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v607 #falseSuccessor: v610  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
v607 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v250 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v250 #trueSuccessor: v608 #falseSuccessor: v267  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v606  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v605 v606 
=== Succesors ===
next: j334 
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v605 v606 #next: j334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j379 
=== Usages ===
v627 v628 
=== Predecessor ===
v604 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j379 v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
=== Succesors ===
next: j380 
=== Usages ===
j338 v629 v630 a354 v635 v631 v632 v633 v634 
=== Predecessor ===
j334 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v627 #next: j380  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v628 
=== Succesors ===
next: v343 
=== Usages ===
v344 
=== Predecessor ===
j379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v628 #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i613 
y: i339 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i613 y: i339  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 59]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i49 a418 i331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
j380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v342 #falseSuccessor: v341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i613 
y: i48 
=== Succesors ===
=== Usages ===
i363 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i613 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i363 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i331 
y: i362 
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i331 y: i362  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i363 
y: i332 
=== Succesors ===
=== Usages ===
j337 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i363 y: i332  <|@  <|@
f <@~|@floating>@ <|@
tid j337 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i333 
=== Succesors ===
=== Usages ===
j338 v631 v632 v633 v634 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i333  <|@  <|@
f <@~|@floating>@ <|@
tid j338 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i64
=== Inputs ===
x: j337 
y: j379 
=== Succesors ===
=== Usages ===
v344 v381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j337 y: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j380 
y: j338 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j380 y: j338  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v349 
falseSuccessor: v348 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v349 #falseSuccessor: v348  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
value: j338 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v627 value: j338 stateAfter: - lastLocationAccess: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j337 
index: j379 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j337 index: j379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
address: v631 
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v631 #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j337 
index: j379 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j337 index: j379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
address: v632 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v632 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j337 
index: j379 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j337 index: j379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
address: v633 
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v633 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j337 
index: j379 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j337 index: j379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
address: v634 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v634 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
value: i613 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v629 value: i613 stateAfter: - lastLocationAccess: - #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j330 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
value: j330 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v630 value: j330 stateAfter: - lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v635 
value: v457 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v635 value: v457 stateAfter: - lastLocationAccess: - #next: v353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a354 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j379 
=== Succesors ===
next: v356 
=== Usages ===
a359 
=== Predecessor ===
v353 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j379 #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
a354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v345 v347 
=== Succesors ===
next: a355 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v345 v347 #next: a355  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a355 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v329 i613 i14 
=== Succesors ===
next: v358 
=== Usages ===
a359 
=== Predecessor ===
v346 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v329 i613 i14 #next: v358  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
a355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v357 
values: a354 a355 
=== Succesors ===
=== Usages ===
v626 a301 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v357 values: a354 a355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v356 v358 
=== Succesors ===
next: v533 
=== Usages ===
a359 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v356 v358 #next: v533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v470 
=== Usages ===
j535 
=== Predecessor ===
v357 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j567 j458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v250 
=== Succesors ===
trueSuccessor: v468 
falseSuccessor: v469 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v250 #trueSuccessor: v468 #falseSuccessor: v469  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a359 
index: - 
=== Succesors ===
=== Usages ===
j535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a359 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j535 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v533 
address: v626 
=== Succesors ===
=== Usages ===
v645 v646 v647 v648 v649 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v533 address: v626  <|@  <|@
f <@~|@floating>@ <|@
tid j568 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j569 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-16 - 2147483631]
=== Inputs ===
x: j236 
y: j568 
=== Succesors ===
=== Usages ===
v570 v572 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j236 y: j568  <|@  <|@
f <@~|@floating>@ <|@
tid j366 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j562 j556 v570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j569 
y: j366 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j569 y: j366  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v570 
=== Succesors ===
trueSuccessor: v471 
falseSuccessor: v472 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v570 #trueSuccessor: v471 #falseSuccessor: v472  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v471 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v472 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B46" 
    successors "B16" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j562 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v475 
values: j366 j567 
=== Succesors ===
=== Usages ===
v649 j567 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v475 values: j366 j567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v474 
=== Succesors ===
next: v598 
=== Usages ===
j562 v479 v480 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v474 #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j535 
index: j562 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: j562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
value: v599 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v649 value: v599 stateAfter: - lastLocationAccess: - #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid j567 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j562 
y: j200 
=== Succesors ===
=== Usages ===
j556 j562 v572 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j562 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j569 
y: j567 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j569 y: j567  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v572 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v481 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v572 #trueSuccessor: v479 #falseSuccessor: v481  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v475 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v475 #next: v485  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v479 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j556 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v484 
values: j366 j567 
=== Succesors ===
=== Usages ===
v648 j561 j549 v576 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v484 values: j366 j567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v483 v485 
=== Succesors ===
next: v508 
=== Usages ===
j556 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v483 v485 #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid j574 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j575 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j575 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j236 
y: j574 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j236 y: j574  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j575 
y: j556 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j575 y: j556  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v576 
=== Succesors ===
trueSuccessor: v507 
falseSuccessor: v506 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v576 #trueSuccessor: v507 #falseSuccessor: v506  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v511  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j535 
index: j556 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: j556  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v648 
value: v603 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v648 value: v603 stateAfter: - lastLocationAccess: - #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid j385 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j556 
y: j385 
=== Succesors ===
=== Usages ===
j549 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j556 y: j385  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
v597 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j549 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v495 
values: j561 j556 
=== Succesors ===
=== Usages ===
v647 j555 j543 v580 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v495 values: j561 j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v494 v511 
=== Succesors ===
next: v514 
=== Usages ===
j549 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v494 v511 #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid j578 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j579 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j579 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j236 
y: j578 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j236 y: j578  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j579 
y: j549 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j579 y: j549  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v580 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v512 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v580 #trueSuccessor: v513 #falseSuccessor: v512  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v513 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j535 
index: j549 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: j549  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v647 
value: v602 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v647 value: v602 stateAfter: - lastLocationAccess: - #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j555 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j555 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j549 
y: j554 
=== Succesors ===
=== Usages ===
j543 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j549 y: j554  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j543 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v499 
values: j555 j549 
=== Succesors ===
=== Usages ===
v646 j548 j536 v584 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v499 values: j555 j549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v498 v517 
=== Succesors ===
next: v520 
=== Usages ===
j543 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v498 v517 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid j582 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j583 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j583 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j236 
y: j582 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j236 y: j582  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j583 
y: j543 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j583 y: j543  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v584 
=== Succesors ===
trueSuccessor: v519 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v584 #trueSuccessor: v519 #falseSuccessor: v518  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j535 
index: j543 
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: j543  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v646 
value: v601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v646 value: v601 stateAfter: - lastLocationAccess: - #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid j538 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j548 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j548 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j543 
y: j538 
=== Succesors ===
=== Usages ===
j536 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j543 y: j538  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
v593 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j536 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v503 
values: j548 j543 
=== Succesors ===
=== Usages ===
v645 v586 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v503 values: j548 j543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v502 v523 
=== Succesors ===
next: v526 
=== Usages ===
j536 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v502 v523 #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j240 
y: j536 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j240 y: j536  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v586 
=== Succesors ===
trueSuccessor: v525 
falseSuccessor: v524 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v586 #trueSuccessor: v525 #falseSuccessor: v524  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j535 
index: j536 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: j536  <|@  <|@
f <@~|@floating>@ <|@
tid i600 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
value: i600 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v645 value: i600 stateAfter: - lastLocationAccess: - #next: v505  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v591 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B11" "B28" "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v487 v505 v529 
=== Succesors ===
next: a301 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v487 v505 v529 #next: a301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a359 
=== Succesors ===
next: j395 
=== Usages ===
j399 v620 ?29 
=== Predecessor ===
v488 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a359 #next: j395  <|@  <|@
f <@~|@floating>@ <|@
tid a144 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a612 
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i64
=== Inputs ===
object: a144 
=== Succesors ===
next: j399 
=== Usages ===
v636 
=== Predecessor ===
a301 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a144 #next: j399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i64
=== Inputs ===
object: a301 
=== Succesors ===
next: v401 
=== Usages ===
v637 
=== Predecessor ===
j395 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a301 #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j399 
index: - 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j399 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v636 v637 j236 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
j399 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v636 v637 j236 #next: v26  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.flags(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2640
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - a1 
=== Succesors ===
=== Usages ===
?29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a1  <|@  <|@
tid a77 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@77145dbc
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/Formatter$Flags;
type: HotSpotType<Ljava/util/Formatter$Flags;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?120 ?29 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B37" "B34" 
    successors "B31" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607627103757944727
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v27 
values: i14 i49 i49 
=== Succesors ===
=== Usages ===
?29 v31 v620 i49 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v27 values: i14 i49 i49  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v27 
values: i14 i112 i135 
=== Succesors ===
=== Usages ===
?120 i100 i112 v290 i133 i135 i58 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v27 values: i14 i112 i135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0987398957990757
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v26 
=== Succesors ===
next: v35 
=== Usages ===
i28 v33 v50 i119 v127 v272 v277 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v26 #next: v35  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a77 
values: i119 
=== Succesors ===
=== Usages ===
?29 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a77 values: i119  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Formatter$Flags.parse(String)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 4440
stackSize: 0
=== Inputs ===
outerFrameState: ?52 
values: - a301 a77 i28 - 
virtualObjectMappings: ?120 
=== Succesors ===
=== Usages ===
v321 a418 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?52 values: - a301 a77 i28 - virtualObjectMappings: ?120  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 19]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i28 
y: i613 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i28 y: i613  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 19]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 0.08986648812571385
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v32 
falseSuccessor: v33 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v32 #falseSuccessor: v33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B35" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591779379990002032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 22]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i614 
=== Usages ===
v248 
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i614  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v604 v32 
=== Succesors ===
=== Usages ===
i614 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v604 v32  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a301 
index: i28 
=== Succesors ===
=== Usages ===
i614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a301 index: i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i614 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v248 
address: v620 
=== Succesors ===
next: v90 
=== Usages ===
i204 
=== Predecessor ===
v32 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v248 address: v620 #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i614 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i614  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 59]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32
=== Inputs ===
x: i28 
y: i48 
=== Succesors ===
=== Usages ===
i28 i28 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i28 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@18a50b03
keySuccessors: [I@67e16411
keys: [I@6264be8d
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4451) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
value: i204 
=== Succesors ===
successors: v84 v85 v83 
=== Usages ===
=== Predecessor ===
i614 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i204 #successors: v84 v85 v83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591733178955412181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4452) [bci: 132]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i615 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i615  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4452) [bci: 132]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: Formatter.Flags@122446495
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@122446495]
=== Inputs ===
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a88 
index: - 
=== Succesors ===
=== Usages ===
i615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a88 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i615 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
=== Succesors ===
next: v273 
=== Usages ===
i133 v134 i135 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v621 #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32
=== Inputs ===
x: i119 
y: i615 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i119 y: i615  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i133 
y: i615 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i133 y: i615  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v272 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
i615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v272 #falseSuccessor: v269  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -53011
stableDimension: 0
stamp: i32 [-53011] ⇊00000000ffff30ed ⇈00000000ffff30ed
stampKind: i32
value: int[-53011|0xffffffffffff30ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591733178955412181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.Formatter$Flags.add(Formatter.java:4428) [bci: 9]
at java.util.Formatter$Flags.parse(Formatter.java:4444) [bci: 55]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32
=== Inputs ===
x: i119 
y: i615 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i119 y: i615  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4559052955699072426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4456) [bci: 148]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i616 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i616  <|@  <|@
f <@~|@floating>@ <|@
tid a86 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4456) [bci: 148]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: Formatter.Flags@271681927
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@271681927]
=== Inputs ===
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a86 
index: - 
=== Succesors ===
=== Usages ===
i616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a86 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i616 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
=== Succesors ===
next: v278 
=== Usages ===
i100 v104 i112 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32
=== Inputs ===
x: i119 
y: i616 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i119 y: i616  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i100 
y: i616 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i100 y: i616  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v277 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
i616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v277 #falseSuccessor: v274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -53779
stableDimension: 0
stamp: i32 [-53779] ⇊00000000ffff2ded ⇈00000000ffff2ded
stampKind: i32
value: int[-53779|0xffffffffffff2ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v277 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4559052955699072426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.Formatter$Flags.add(Formatter.java:4428) [bci: 9]
at java.util.Formatter$Flags.parse(Formatter.java:4444) [bci: 55]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32
=== Inputs ===
x: i119 
y: i616 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i119 y: i616  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4451) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21011
stableDimension: 0
stamp: i32 [-21011] ⇊00000000ffffaded ⇈00000000ffffaded
stampKind: i32
value: int[-21011|0xffffffffffffaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4446) [bci: 65]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: i617 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: i617  <|@  <|@
f <@~|@floating>@ <|@
tid a10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 12]
rawvalue: Formatter.Flags@368877813
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@368877813]
=== Inputs ===
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a10 
index: - 
=== Succesors ===
=== Usages ===
i617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a10 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i617 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 15]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
=== Succesors ===
next: v282 
=== Usages ===
i58 v60 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v624 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 15]
stamp: i32
=== Inputs ===
x: i119 
y: i617 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i119 y: i617  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i617 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i58 y: i617  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
i617 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v281 #falseSuccessor: v279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -55571
stableDimension: 0
stamp: i32 [-55571] ⇊00000000ffff26ed ⇈00000000ffff26ed
stampKind: i32
value: int[-55571|0xffffffffffff26ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B33" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i319 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-55571 - -21011] ⇊00000000ffff20ed ⇈00000000ffffbfed
valueDescription: i32
=== Inputs ===
merge: v316 
values: i318 i323 i325 i327 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v316 values: i318 i323 i325 i327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v317 v322 v324 v326 
=== Succesors ===
next: v321 
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v317 v322 v324 v326 #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid a307 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i319 
speculation: a307 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i319 speculation: a307  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: j405 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j405 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j422 
=== Usages ===
v638 v639 
=== Predecessor ===
v279 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j422  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
j422 v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
=== Succesors ===
next: j423 
=== Usages ===
j458 j428 v644 
=== Predecessor ===
j405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v638 #next: j423  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
j423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
=== Succesors ===
next: v413 
=== Usages ===
v410 
=== Predecessor ===
j422 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v639 #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j422 
y: j200 
=== Succesors ===
=== Usages ===
v410 v424 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j422 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j423 
y: j458 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j423 y: j458  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v410 
=== Succesors ===
trueSuccessor: v411 
falseSuccessor: v412 
=== Usages ===
=== Predecessor ===
j423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v410 #trueSuccessor: v411 #falseSuccessor: v412  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a418 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a418  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a418 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?29 
arguments: v403 i14 i48 
=== Succesors ===
next: j419 
=== Usages ===
j419 
=== Predecessor ===
v411 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?29 arguments: v403 i14 i48 #next: j419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j419 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a418 
=== Succesors ===
next: v429 
=== Usages ===
j428 
=== Predecessor ===
a418 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a418 #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
j419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
value: j458 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v638 value: j458 stateAfter: - lastLocationAccess: - #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j422 
index: - 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v644 
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v644 #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j428 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v426 
values: j422 j419 
=== Succesors ===
=== Usages ===
v642 v625 a286 v641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v426 values: j422 j419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v427 v429 
=== Succesors ===
next: a286 
=== Usages ===
j428 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v427 v429 #next: a286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a286 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j428 
=== Succesors ===
next: j440 
=== Usages ===
a291 
=== Predecessor ===
v426 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j428 #next: j440  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j435 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j435 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v434 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j435 
index: - 
=== Succesors ===
=== Usages ===
j440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v640 
=== Succesors ===
next: v441 
=== Usages ===
v441 
=== Predecessor ===
a286 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v640 #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j428 
index: - 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j428 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v641 
value: j440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
j440 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v641 value: j440 stateAfter: - lastLocationAccess: - #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j428 
index: - 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j428 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
value: v461 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v642 value: v461 stateAfter: - lastLocationAccess: - #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j428 
index: - 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j428 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v625 
value: i119 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a291 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v625 value: i119 stateAfter: - lastLocationAccess: - #next: a291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a291 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a286 
=== Succesors ===
next: v292 
=== Usages ===
a211 v18 
=== Predecessor ===
v290 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a286 #next: v292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
a291 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a211 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
op: Compress
stamp: n -
=== Inputs ===
value: a291 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Formatter$FormatSpecifier.f
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
value: a211 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j447 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v623 value: a211 stateAfter: - lastLocationAccess: - #next: j447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v453 
=== Usages ===
j449 
=== Predecessor ===
v214 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i448 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j449 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j447 
y: i448 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j447 y: i448  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j449 
index: j452 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j449 index: j452  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
value: i454 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
j447 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v643 value: i454 stateAfter: - lastLocationAccess: - #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2643) [bci: 30]
stamp: void
=== Inputs ===
result: a291 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a291 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v475 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v475  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid a315 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1559431197
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1559431197]
=== Inputs ===
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50203
stableDimension: 0
stamp: i32 [-50203] ⇊00000000ffff3be5 ⇈00000000ffff3be5
stampKind: i32
value: int[-50203|0xffffffffffff3be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i314 
speculation: a315 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i314 speculation: a315  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a612 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a612  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?52 ?52 v623 j447 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v618 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.flags(String)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2640
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v310 a355 a612 i613 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a612 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v618 
=== Succesors ===
next: i613 
=== Usages ===
a144 v619 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v618 #next: i613  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a612 
=== Succesors ===
=== Usages ===
i613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i613 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v619 
=== Succesors ===
next: v611 
=== Usages ===
j236 a355 v31 v340 v250 v382 i331 
=== Predecessor ===
a612 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v619 #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a355 i119 v250 i28 a418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i613 
y: i14 
=== Succesors ===
=== Usages ===
v609 v470 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i613 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid j236 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i613 
=== Succesors ===
=== Usages ===
j240 v242 v401 j583 j569 j575 j579 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i613  <|@  <|@
f <@~|@floating>@ <|@
tid j239 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j236 
y: j239 
=== Succesors ===
=== Usages ===
v242 v586 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j236 y: j239  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j240 
y: j236 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j240 y: j236  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v607 
falseSuccessor: v610 
=== Usages ===
=== Predecessor ===
i613 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v607 #falseSuccessor: v610  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2613e13c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = DEC v4|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
v607 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v250 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v250 #trueSuccessor: v608 #falseSuccessor: v267  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v606  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v605 v606 
=== Succesors ===
next: j334 
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v605 v606 #next: j334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j334 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j379 
=== Usages ===
v627 v628 
=== Predecessor ===
v604 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j379 v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
=== Succesors ===
next: j380 
=== Usages ===
j338 v629 v630 a354 v635 v631 v632 v633 v634 
=== Predecessor ===
j334 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v627 #next: j380  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j380 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v628 
=== Succesors ===
next: v343 
=== Usages ===
v344 
=== Predecessor ===
j379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v628 #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i613 
y: i339 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i613 y: i339  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 59]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i49 a418 i331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
j380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v342 #falseSuccessor: v341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i613 
y: i48 
=== Succesors ===
=== Usages ===
i363 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i613 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i363 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i331 
y: i362 
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i331 y: i362  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i363 
y: i332 
=== Succesors ===
=== Usages ===
j337 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i363 y: i332  <|@  <|@
f <@~|@floating>@ <|@
tid j337 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i333 
=== Succesors ===
=== Usages ===
j338 v631 v632 v633 v634 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i333  <|@  <|@
f <@~|@floating>@ <|@
tid j338 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i64
=== Inputs ===
x: j337 
y: j379 
=== Succesors ===
=== Usages ===
v344 v381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j337 y: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j380 
y: j338 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j380 y: j338  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v349 
falseSuccessor: v348 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v349 #falseSuccessor: v348  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA [v8|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND v9|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
value: j338 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v627 value: j338 stateAfter: - lastLocationAccess: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
result [v11|QWORD + v6|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j337 
index: j379 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j337 index: j379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
address: v631 
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v631 #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
result [v11|QWORD + v6|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j337 
index: j379 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j337 index: j379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
address: v632 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v632 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v633 <|@
result [v11|QWORD + v6|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j337 
index: j379 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j337 index: j379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
address: v633 
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v633 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
result [v11|QWORD + v6|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j337 
index: j379 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j337 index: j379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
address: v634 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v634 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
result [v6|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
value: i613 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v629 value: i613 stateAfter: - lastLocationAccess: - #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
result [v6|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j330 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
value: j330 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v630 value: j330 stateAfter: - lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
result [v6|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: - 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v635 
value: v457 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v635 value: v457 stateAfter: - lastLocationAccess: - #next: v353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a354 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a354 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j379 
=== Succesors ===
next: v356 
=== Usages ===
a359 
=== Predecessor ===
v353 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j379 #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
a354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v345 v347 
=== Succesors ===
next: a355 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v345 v347 #next: a355  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a355 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v329 i613 i14 
=== Succesors ===
next: v358 
=== Usages ===
a359 
=== Predecessor ===
v346 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v329 i613 i14 #next: v358  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
a355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a359 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v357 
values: a354 a355 
=== Succesors ===
=== Usages ===
v626 a301 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v357 values: a354 a355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v356 v358 
=== Succesors ===
next: v533 
=== Usages ===
a359 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v356 v358 #next: v533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v470 
=== Usages ===
j535 
=== Predecessor ===
v357 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j567 j458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v250 
=== Succesors ===
trueSuccessor: v468 
falseSuccessor: v469 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v250 #trueSuccessor: v468 #falseSuccessor: v469  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
result [v16|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a359 
index: - 
=== Succesors ===
=== Usages ===
j535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a359 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j535 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v533 
address: v626 
=== Succesors ===
=== Usages ===
v645 v646 v647 v648 v649 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v533 address: v626  <|@  <|@
f <@~|@floating>@ <|@
tid j568 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j569 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-16 - 2147483631]
=== Inputs ===
x: j236 
y: j568 
=== Succesors ===
=== Usages ===
v570 v572 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j236 y: j568  <|@  <|@
f <@~|@floating>@ <|@
tid j366 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j562 j556 v570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j569 
y: j366 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j569 y: j366  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v570 
=== Succesors ===
trueSuccessor: v471 
falseSuccessor: v472 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v570 #trueSuccessor: v471 #falseSuccessor: v472  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = LEA [v16|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v4|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v471 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
result v19|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v472 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B46" 
    successors "B16" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j562 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v475 
values: j366 j567 
=== Succesors ===
=== Usages ===
v649 j567 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v475 values: j366 j567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v474 
=== Succesors ===
next: v598 
=== Usages ===
j562 v479 v480 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v474 #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
result [v17|QWORD[.] + v20|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j535 
index: j562 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: j562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
value: v599 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v649 value: v599 stateAfter: - lastLocationAccess: - #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid j567 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j562 
y: j200 
=== Succesors ===
=== Usages ===
j556 j562 v572 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j562 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j569 
y: j567 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j569 y: j567  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v572 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v481 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v572 #trueSuccessor: v479 #falseSuccessor: v481  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v17|QWORD[.] + v20|QWORD * 2], input: v19|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v475 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v475 #next: v485  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v479 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j556 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v484 
values: j366 j567 
=== Succesors ===
=== Usages ===
v648 j561 j549 v576 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v484 values: j366 j567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v483 v485 
=== Succesors ===
next: v508 
=== Usages ===
j556 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v483 v485 #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid j574 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j575 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j575 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j236 
y: j574 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j236 y: j574  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j575 
y: j556 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j575 y: j556  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v576 
=== Succesors ===
trueSuccessor: v507 
falseSuccessor: v506 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v576 #trueSuccessor: v507 #falseSuccessor: v506  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v4|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v511  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
result [v17|QWORD[.] + v22|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j535 
index: j556 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: j556  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
result v24|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v648 
value: v603 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v648 value: v603 stateAfter: - lastLocationAccess: - #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid j385 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j556 
y: j385 
=== Succesors ===
=== Usages ===
j549 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j556 y: j385  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
v597 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v17|QWORD[.] + v22|QWORD * 2], input: v24|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v22|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j549 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v495 
values: j561 j556 
=== Succesors ===
=== Usages ===
v647 j555 j543 v580 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v495 values: j561 j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v494 v511 
=== Succesors ===
next: v514 
=== Usages ===
j549 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v494 v511 #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid j578 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j579 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j579 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j236 
y: j578 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j236 y: j578  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j579 
y: j549 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j579 y: j549  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v580 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v512 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v580 #trueSuccessor: v513 #falseSuccessor: v512  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v4|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v513 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
result [v17|QWORD[.] + v26|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j535 
index: j549 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: j549  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
result v28|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v647 
value: v602 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v647 value: v602 stateAfter: - lastLocationAccess: - #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j555 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j555 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j549 
y: j554 
=== Succesors ===
=== Usages ===
j543 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j549 y: j554  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v17|QWORD[.] + v26|QWORD * 2], input: v28|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j543 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v499 
values: j555 j549 
=== Succesors ===
=== Usages ===
v646 j548 j536 v584 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v499 values: j555 j549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v498 v517 
=== Succesors ===
next: v520 
=== Usages ===
j543 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v498 v517 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid j582 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j583 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j583 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j236 
y: j582 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j236 y: j582  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j583 
y: j543 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j583 y: j543  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v584 
=== Succesors ===
trueSuccessor: v519 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v584 #trueSuccessor: v519 #falseSuccessor: v518  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v4|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
result [v17|QWORD[.] + v30|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j535 
index: j543 
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: j543  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
result v32|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v646 
value: v601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v646 value: v601 stateAfter: - lastLocationAccess: - #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid j538 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j548 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j548 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j543 
y: j538 
=== Succesors ===
=== Usages ===
j536 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j543 y: j538  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
v593 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v17|QWORD[.] + v30|QWORD * 2], input: v32|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v30|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j536 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v503 
values: j548 j543 
=== Succesors ===
=== Usages ===
v645 v586 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v503 values: j548 j543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v502 v523 
=== Succesors ===
next: v526 
=== Usages ===
j536 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v502 v523 #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j240 
y: j536 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j240 y: j536  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v586 
=== Succesors ===
trueSuccessor: v525 
falseSuccessor: v524 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v586 #trueSuccessor: v525 #falseSuccessor: v524  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
result [v17|QWORD[.] + v34|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j535 
index: j536 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: j536  <|@  <|@
f <@~|@floating>@ <|@
tid i600 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
value: i600 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v645 value: i600 stateAfter: - lastLocationAccess: - #next: v505  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v591 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v34|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B11" "B28" "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v487 v505 v529 
=== Succesors ===
next: a301 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v487 v505 v529 #next: a301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a301 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a359 
=== Succesors ===
next: j395 
=== Usages ===
j399 v620 ?29 
=== Predecessor ===
v488 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a359 #next: j395  <|@  <|@
f <@~|@floating>@ <|@
tid a144 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a612 
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j395 <|@
result v36|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i64
=== Inputs ===
object: a144 
=== Succesors ===
next: j399 
=== Usages ===
v636 
=== Predecessor ===
a301 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a144 #next: j399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j399 <|@
result v37|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i64
=== Inputs ===
object: a301 
=== Succesors ===
next: v401 
=== Usages ===
v637 
=== Predecessor ===
j395 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a301 #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
result [v36|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: - 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
result [v37|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j399 
index: - 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j399 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v636 v637 j236 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
j399 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v636 v637 j236 #next: v26  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.flags(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2640
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - a1 
=== Succesors ===
=== Usages ===
?29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a1  <|@  <|@
tid a77 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@77145dbc
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/Formatter$Flags;
type: HotSpotType<Ljava/util/Formatter$Flags;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?120 ?29 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@165e1bee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v36|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B37" "B34" 
    successors "B31" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607627103757944727
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i28 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v27 
values: i14 i49 i49 
=== Succesors ===
=== Usages ===
?29 v31 v620 i49 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v27 values: i14 i49 i49  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v27 
values: i14 i112 i135 
=== Succesors ===
=== Usages ===
?120 i100 i112 v290 i133 i135 i58 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v27 values: i14 i112 i135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0987398957990757
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v26 
=== Succesors ===
next: v35 
=== Usages ===
i28 v33 v50 i119 v127 v272 v277 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v26 #next: v35  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a77 
values: i119 
=== Succesors ===
=== Usages ===
?29 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a77 values: i119  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Formatter$Flags.parse(String)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 4440
stackSize: 0
=== Inputs ===
outerFrameState: ?52 
values: - a301 a77 i28 - 
virtualObjectMappings: ?120 
=== Succesors ===
=== Usages ===
v321 a418 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?52 values: - a301 a77 i28 - virtualObjectMappings: ?120  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 19]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i28 
y: i613 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i28 y: i613  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 19]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 0.08986648812571385
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v32 
falseSuccessor: v33 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v32 #falseSuccessor: v33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08986648812571385 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B35" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591779379990002032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 22]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i614 
=== Usages ===
v248 
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i614  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v604 v32 
=== Succesors ===
=== Usages ===
i614 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v604 v32  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
result [v16|QWORD[.] + v38|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a301 
index: i28 
=== Succesors ===
=== Usages ===
i614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a301 index: i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i614 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v248 
address: v620 
=== Succesors ===
next: v90 
=== Usages ===
i204 
=== Predecessor ===
v32 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v248 address: v620 #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i614 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i614  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 59]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32
=== Inputs ===
x: i28 
y: i48 
=== Succesors ===
=== Usages ===
i28 i28 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i28 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@18a50b03
keySuccessors: [I@67e16411
keys: [I@6264be8d
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4451) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
value: i204 
=== Succesors ===
successors: v84 v85 v83 
=== Usages ===
=== Predecessor ===
i614 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i204 #successors: v84 v85 v83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVZX [v16|QWORD[.] + v38|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v40|DWORD - keyConstants: [int[45|0x2d], int[48|0x30]] keyTargets: [B31 -> B32, B31 -> B35] defaultTarget: B31 -> B38 strategy: SequentialStrategy[avgEffort=1.0064935064935066] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591733178955412181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4452) [bci: 132]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i615 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i615  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4452) [bci: 132]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: Formatter.Flags@122446495
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@122446495]
=== Inputs ===
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
result [v42|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a88 
index: - 
=== Succesors ===
=== Usages ===
i615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a88 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i615 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
=== Succesors ===
next: v273 
=== Usages ===
i133 v134 i135 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v621 #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32
=== Inputs ===
x: i119 
y: i615 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i119 y: i615  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i133 
y: i615 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i133 y: i615  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v272 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
i615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v272 #falseSuccessor: v269  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v42|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = AND (x: v39|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
result int[-53011|0xffffffffffff30ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -53011
stableDimension: 0
stamp: i32 [-53011] ⇊00000000ffff30ed ⇈00000000ffff30ed
stampKind: i32
value: int[-53011|0xffffffffffff30ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53011|0xffffffffffff30ed]] destination: B33 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591733178955412181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.Formatter$Flags.add(Formatter.java:4428) [bci: 9]
at java.util.Formatter$Flags.parse(Formatter.java:4444) [bci: 55]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32
=== Inputs ===
x: i119 
y: i615 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i119 y: i615  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = OR (x: v39|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD, v45|DWORD] destination: B34 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4559052955699072426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4456) [bci: 148]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i616 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i616  <|@  <|@
f <@~|@floating>@ <|@
tid a86 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4456) [bci: 148]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
rawvalue: Formatter.Flags@271681927
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@271681927]
=== Inputs ===
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
result [v46|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a86 
index: - 
=== Succesors ===
=== Usages ===
i616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a86 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i616 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
=== Succesors ===
next: v278 
=== Usages ===
i100 v104 i112 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32
=== Inputs ===
x: i119 
y: i616 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i119 y: i616  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i100 
y: i616 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i100 y: i616  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v277 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
i616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v277 #falseSuccessor: v274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND (x: v39|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
result int[-53779|0xffffffffffff2ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -53779
stableDimension: 0
stamp: i32 [-53779] ⇊00000000ffff2ded ⇈00000000ffff2ded
stampKind: i32
value: int[-53779|0xffffffffffff2ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v277 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53779|0xffffffffffff2ded]] destination: B36 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4559052955699072426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.Formatter$Flags.add(Formatter.java:4428) [bci: 9]
at java.util.Formatter$Flags.parse(Formatter.java:4444) [bci: 55]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: i32
=== Inputs ===
x: i119 
y: i616 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i119 y: i616  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = OR (x: v39|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD, v49|DWORD] destination: B37 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4451) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result int[-21011|0xffffffffffffaded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21011
stableDimension: 0
stamp: i32 [-21011] ⇊00000000ffffaded ⇈00000000ffffaded
stampKind: i32
value: int[-21011|0xffffffffffffaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21011|0xffffffffffffaded]] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4446) [bci: 65]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: i617 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: i617  <|@  <|@
f <@~|@floating>@ <|@
tid a10 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 12]
rawvalue: Formatter.Flags@368877813
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@368877813]
=== Inputs ===
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
result [v50|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a10 
index: - 
=== Succesors ===
=== Usages ===
i617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a10 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i617 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 15]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
=== Succesors ===
next: v282 
=== Usages ===
i58 v60 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v624 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 15]
stamp: i32
=== Inputs ===
x: i119 
y: i617 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i119 y: i617  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i617 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i58 y: i617  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
i617 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v281 #falseSuccessor: v279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@368877813] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v50|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = AND (x: v39|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
result int[-55571|0xffffffffffff26ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -55571
stableDimension: 0
stamp: i32 [-55571] ⇊00000000ffff26ed ⇈00000000ffff26ed
stampKind: i32
value: int[-55571|0xffffffffffff26ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55571|0xffffffffffff26ed]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B33" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i319 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-55571 - -21011] ⇊00000000ffff20ed ⇈00000000ffffbfed
valueDescription: i32
=== Inputs ===
merge: v316 
values: i318 i323 i325 i327 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v316 values: i318 i323 i325 i327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v317 v322 v324 v326 
=== Succesors ===
next: v321 
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v317 v322 v324 v326 #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid a307 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i319 
speculation: a307 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i319 speculation: a307  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - v16|QWORD[.] vobject:Formatter$Flags:0{flags=v39|DWORD} v38|DWORD - 
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
vobject:Formatter$Flags:0{flags=v39|DWORD} Ljava/util/Formatter$Flags; v39|DWORD 
>@ <|@ instruction DEOPT info [bci:16, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2641) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: j405 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j405 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j422 
=== Usages ===
v638 v639 
=== Predecessor ===
v279 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j422  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
j422 v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j422 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
=== Succesors ===
next: j423 
=== Usages ===
j458 j428 v644 
=== Predecessor ===
j405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v638 #next: j423  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
j423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j423 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
=== Succesors ===
next: v413 
=== Usages ===
v410 
=== Predecessor ===
j422 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v639 #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j422 
y: j200 
=== Succesors ===
=== Usages ===
v410 v424 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j422 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j423 
y: j458 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j423 y: j458  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v410 
=== Succesors ===
trueSuccessor: v411 
falseSuccessor: v412 
=== Usages ===
=== Predecessor ===
j423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v410 #trueSuccessor: v411 #falseSuccessor: v412  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v54|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a418 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a418  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a418 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?29 
arguments: v403 i14 i48 
=== Succesors ===
next: j419 
=== Usages ===
j419 
=== Predecessor ===
v411 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?29 arguments: v403 i14 i48 #next: j419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j419 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a418 
=== Succesors ===
next: v429 
=== Usages ===
j428 
=== Predecessor ===
a418 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a418 #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
j419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - v16|QWORD[.] vobject:Formatter$Flags:0{flags=v39|DWORD} v38|DWORD - 
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
vobject:Formatter$Flags:0{flags=v39|DWORD} Ljava/util/Formatter$Flags; v39|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:16, 2] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
value: j458 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v638 value: j458 stateAfter: - lastLocationAccess: - #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
result [v54|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j422 
index: - 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v644 
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v644 #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j428 <|@
result v58|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v426 
values: j422 j419 
=== Succesors ===
=== Usages ===
v642 v625 a286 v641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v426 values: j422 j419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v427 v429 
=== Succesors ===
next: a286 
=== Usages ===
j428 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v427 v429 #next: a286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a286 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j428 
=== Succesors ===
next: j440 
=== Usages ===
a291 
=== Predecessor ===
v426 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j428 #next: j440  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j435 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j435 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v434 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
result [v60|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j435 
index: - 
=== Succesors ===
=== Usages ===
j440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j440 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v640 
=== Succesors ===
next: v441 
=== Usages ===
v441 
=== Predecessor ===
a286 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v640 #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
result [v58|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j428 
index: - 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j428 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v641 
value: j440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
j440 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v641 value: j440 stateAfter: - lastLocationAccess: - #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
result [v58|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j428 
index: - 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j428 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
result meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
value: v461 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v642 value: v461 stateAfter: - lastLocationAccess: - #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
result [v58|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j428 
index: - 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j428 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v625 
value: i119 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a291 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v625 value: i119 stateAfter: - lastLocationAccess: - #next: a291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a291 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a286 
=== Succesors ===
next: v292 
=== Usages ===
a211 v18 
=== Predecessor ===
v290 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a286 #next: v292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
a291 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a211 <|@
result v62|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
op: Compress
stamp: n -
=== Inputs ===
value: a291 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Formatter$FormatSpecifier.f
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
value: a211 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j447 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v623 value: a211 stateAfter: - lastLocationAccess: - #next: j447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j447 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v453 
=== Usages ===
j449 
=== Predecessor ===
v214 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i448 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j449 <|@
result v63|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j447 
y: i448 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j447 y: i448  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
result [v63|QWORD[*] + v64|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j449 
index: j452 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j449 index: j452  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
value: i454 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
j447 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v643 value: i454 stateAfter: - lastLocationAccess: - #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2643) [bci: 30]
stamp: void
=== Inputs ===
result: a291 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a291 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v60|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[*]], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v58|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[*] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@165e1bee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v62|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v63|QWORD[*] + v64|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v475 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v475  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD] destination: B46 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid a315 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1559431197
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1559431197]
=== Inputs ===
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
result int[-50203|0xffffffffffff3be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50203
stableDimension: 0
stamp: i32 [-50203] ⇊00000000ffff3be5 ⇈00000000ffff3be5
stampKind: i32
value: int[-50203|0xffffffffffff3be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i314 
speculation: a315 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i314 speculation: a315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1559431197] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -50203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v65|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2613e13c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = DEC v4|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA [v8|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND v9|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = LEA [v16|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v4|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v4|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v17|QWORD[.] + v22|QWORD * 2], input: v24|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v22|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v4|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v17|QWORD[.] + v26|QWORD * 2], input: v28|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v4|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v17|QWORD[.] + v30|QWORD * 2], input: v32|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v30|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v34|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B11" "B28" "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@165e1bee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v36|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B37" "B34" 
    successors "B31" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607627103757944727
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08986648812571385 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B35" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591779379990002032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVZX [v16|QWORD[.] + v38|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v40|DWORD - keyConstants: [int[45|0x2d], int[48|0x30]] keyTargets: [B31 -> B32, B31 -> B35] defaultTarget: B31 -> B38 strategy: SequentialStrategy[avgEffort=1.0064935064935066] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591733178955412181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v42|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = AND (x: v39|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591733178955412181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = OR (x: v39|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD, v45|DWORD] destination: B34 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4559052955699072426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND (x: v39|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4559052955699072426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = OR (x: v39|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD, v49|DWORD] destination: B37 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@368877813] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v50|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = AND (x: v39|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v54|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v60|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[*]], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v58|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[*] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@165e1bee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v62|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v63|QWORD[*] + v64|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD] destination: B46 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B46" 
    successors "B16" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v17|QWORD[.] + v20|QWORD * 2], input: v19|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - v16|QWORD[.] vobject:Formatter$Flags:0{flags=v39|DWORD} v38|DWORD - 
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
vobject:Formatter$Flags:0{flags=v39|DWORD} Ljava/util/Formatter$Flags; v39|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:16, 2] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53779|0xffffffffffff2ded]] destination: B36 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B33" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - v16|QWORD[.] vobject:Formatter$Flags:0{flags=v39|DWORD} v38|DWORD - 
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
vobject:Formatter$Flags:0{flags=v39|DWORD} Ljava/util/Formatter$Flags; v39|DWORD 
>@ <|@ instruction DEOPT info [bci:16, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55571|0xffffffffffff26ed]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1559431197] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -50203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v65|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53011|0xffffffffffff30ed]] destination: B33 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21011|0xffffffffffffaded]] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokestatic  #6          // java.util.Formatter$Flags.parse:(java.lang.String)java.util.Formatter$Flags
     5: putfield      #7          // f:java.util.Formatter$Flags
     8: aload_0       
     9: getfield      #7          // f:java.util.Formatter$Flags
    12: getstatic     #8          // java.util.Formatter$Flags.PREVIOUS:java.util.Formatter$Flags
    15: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    18: ifeq          26
    21: aload_0       
    22: iconst_m1     
    23: putfield      #3          // index:int
    26: aload_0       
    27: getfield      #7          // f:java.util.Formatter$Flags
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2613e13c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   18  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r9|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   58  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   82  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   84  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   90  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction stack:40|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction stack:44|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  134  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  152  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  200  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 4] size: QWORD <|@ <|@
      nr  212  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  224  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  226  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 2] size: QWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  248  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction CMP (x: rdx|QWORD, y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction MOV (x: [rdi|QWORD[.] + rdx|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  274  <|@ instruction stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B11" "B28" "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@165e1bee encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  302  <|@ instruction r14|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B37" "B34" 
    successors "B31" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607627103757944727
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  310  <|@ instruction CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.08986648812571385 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B35" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591779379990002032
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rax|DWORD = MOVZX [r14|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rax|DWORD - keyConstants: [int[45|0x2d], int[48|0x30]] keyTargets: [B31 -> B32, B31 -> B35] defaultTarget: B31 -> B38 strategy: SequentialStrategy[avgEffort=1.0064935064935066] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591733178955412181
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr  326  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591733178955412181
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B34 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4559052955699072426
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr  354  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4559052955699072426
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B37 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@368877813] <|@ <|@
      nr  390  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  450  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 208] instr: 0 <|@ <|@
      nr  452  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>} <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed} <|@ <|@
      nr  470  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@165e1bee encoding: base: 0 shift: 3 <|@ <|@
      nr  474  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  478  <|@ instruction rax|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  480  <|@ instruction MOVB (x: [rsi|QWORD[*] + rax|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  482  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B11 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  166  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B46 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B46" 
    successors "B16" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  172  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  174  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  176  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction stack:40|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction stack:44|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  434  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  436  <|@ st <@st|@reference-map: [r14:0, stack:32]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - r14|QWORD[.] vobject:Formatter$Flags:0{flags=stack:60|DWORD} r13|DWORD - 
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
vobject:Formatter$Flags:0{flags=stack:60|DWORD} Ljava/util/Formatter$Flags; stack:60|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:16, 2] <|@ <|@
      nr  438  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:40|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction stack:44|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction r10|DWORD = MOVE input: int[-53779|0xffffffffffff2ded] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B36 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B33" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  412  <|@ st <@st|@reference-map: [r14:0, stack:32]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - r14|QWORD[.] vobject:Formatter$Flags:0{flags=r11|DWORD} r13|DWORD - 
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
vobject:Formatter$Flags:0{flags=r11|DWORD} Ljava/util/Formatter$Flags; r11|DWORD 
>@ <|@ instruction DEOPT info [bci:16, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-55571|0xffffffffffff26ed] <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1559431197] <|@ <|@
      nr  494  <|@ instruction MOV [r15|QWORD + 668] y: -50203 size: DWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  498  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r10|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B33 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction r10|DWORD = MOVE input: int[-21011|0xffffffffffffaded] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokestatic  #6          // java.util.Formatter$Flags.parse:(java.lang.String)java.util.Formatter$Flags
     5: putfield      #7          // f:java.util.Formatter$Flags
     8: aload_0       
     9: getfield      #7          // f:java.util.Formatter$Flags
    12: getstatic     #8          // java.util.Formatter$Flags.PREVIOUS:java.util.Formatter$Flags
    15: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    18: ifeq          26
    21: aload_0       
    22: iconst_m1     
    23: putfield      #3          // index:int
    26: aload_0       
    27: getfield      #7          // f:java.util.Formatter$Flags
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B4" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2613e13c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   18  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B4 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r9|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   58  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B9 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   82  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   84  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   90  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction stack:40|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction stack:44|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B29" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  134  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B29 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  152  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B20" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  200  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B17" 
    successors "B23" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 4] size: QWORD <|@ <|@
      nr  212  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  224  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  226  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 2] size: QWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  248  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B29" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction CMP (x: rdx|QWORD, y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction MOV (x: [rdi|QWORD[.] + rdx|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B10" "B28" "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@165e1bee encoding: base: 0 shift: 3 <|@ <|@
      nr  284  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  302  <|@ instruction r14|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B37" "B34" 
    successors "B31" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607627103757944727
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  310  <|@ instruction CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.08986648812571385 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B35" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591779379990002032
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rax|DWORD = MOVZX [r14|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rax|DWORD - keyConstants: [int[45|0x2d], int[48|0x30]] keyTargets: [B31 -> B32, B31 -> B35] defaultTarget: B31 -> B38 strategy: SequentialStrategy[avgEffort=1.0064935064935066] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591733178955412181
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr  326  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591733178955412181
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B34 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4559052955699072426
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr  354  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4559052955699072426
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B37 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@368877813] <|@ <|@
      nr  390  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  450  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 208] instr: 0 <|@ <|@
      nr  452  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>} <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed} <|@ <|@
      nr  470  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@165e1bee encoding: base: 0 shift: 3 <|@ <|@
      nr  474  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  478  <|@ instruction rax|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  480  <|@ instruction MOVB (x: [rsi|QWORD[*] + rax|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  482  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  166  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  172  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  174  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  176  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B17 falseDestination: B15 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction stack:40|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction stack:44|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  434  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  436  <|@ st <@st|@reference-map: [r14:0, stack:32]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - r14|QWORD[.] vobject:Formatter$Flags:0{flags=stack:60|DWORD} r13|DWORD - 
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
vobject:Formatter$Flags:0{flags=stack:60|DWORD} Ljava/util/Formatter$Flags; stack:60|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:16, 2] <|@ <|@
      nr  438  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction r10|DWORD = MOVE input: int[-53779|0xffffffffffff2ded] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B36 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B33" "B36" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  412  <|@ st <@st|@reference-map: [r14:0, stack:32]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - r14|QWORD[.] vobject:Formatter$Flags:0{flags=r11|DWORD} r13|DWORD - 
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
vobject:Formatter$Flags:0{flags=r11|DWORD} Ljava/util/Formatter$Flags; r11|DWORD 
>@ <|@ instruction DEOPT info [bci:16, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-55571|0xffffffffffff26ed] <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1559431197] <|@ <|@
      nr  494  <|@ instruction MOV [r15|QWORD + 668] y: -50203 size: DWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  498  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r10|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B33 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction r10|DWORD = MOVE input: int[-21011|0xffffffffffffaded] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokestatic  #6          // java.util.Formatter$Flags.parse:(java.lang.String)java.util.Formatter$Flags
     5: putfield      #7          // f:java.util.Formatter$Flags
     8: aload_0       
     9: getfield      #7          // f:java.util.Formatter$Flags
    12: getstatic     #8          // java.util.Formatter$Flags.PREVIOUS:java.util.Formatter$Flags
    15: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    18: ifeq          26
    21: aload_0       
    22: iconst_m1     
    23: putfield      #3          // index:int
    26: aload_0       
    27: getfield      #7          // f:java.util.Formatter$Flags
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c243048897424204c8bea458b750c468b14f50c000000458bda4d8bc349ffc84d3bd80f87090000004585d20f85fd020000498b5760498b4f704181faffffff000f835f020000458bca41d1e1458d49174183e1f84d63c9498bd94803da483bd90f873f02000049895f60410f188411c0000000410f18841100010000410f18841140010000410f188411800100004489520c48c70201000000c74208addeadde488bc24c89442418458bea44897424144d8bf34585ed0f8480000000488d7810498d76f04885f60f8db401000048c7c200000000498d76f8483bd60f8f10000000c5f9efc0c5fa7f0457488d7208488bd6498d76fc483bd60f8f11000000c5f9efc0c4e1f97e0457488d7204488bd6498d76fe483bd60f8f10000000c5f9efc0c5f97e0457488d7202488bd6483b5424180f8f05000000664489245744896c2404448b542414418bfa48c1e703488bf0488d7f10488d7610498bd64889442408e8000000009041ba0000000041bd000000004c8b742408448b5c2404660f1f440000453bdd0f8e66000000430fb7446e10418bf5ffc683f82d0f840e00000083f8300f8427000000e9ae01000048b8addeaddeaddeadde8b400c418bd223d03bc20f8489010000440bd0448beeebb348b8addeaddeaddeadde8b400c418bd223d03bc20f841d010000440bd0448beeeb9148b8addeaddeaddeadde8b400c418bf223f03bc60f8418010000498b4760488d7010493b77700f87bd000000498977600f1880d0000000488b742420488bd048b9addeaddeaddeadde488b89a8000000488908c74008addeadde4489500c488bc248c1e80389461c48c1ee0948b800e01b170100000044882406488bc2488b6c24304883c438850500000000c5f877c3c5f9efc048c7c200000000660f1f440000c5fe7f0457488d5210483bd67ef2e92ffeffff4c8944241844897424144c896c240848baaddeaddeaddeadde488bf2418bd2b9000000004d8bf3458beae80000000090e9d9fdffff448954240448baaddeaddeaddeadde488bf2ba00000000b901000000e80000000090448b542404e922ffffff458bda41baed2dffff4589979c0200004d89a7a8020000e80000000090458bda41baed26ffffebe149baaddeaddeaddeadde41c7879c020000e53bffff4d8997a8020000e80000000090458bda41baed30ffffebb4458bda41baedadffffeba9e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2613e13c slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 56 [rsi:0, r13:0, stack:32]at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 12 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 60 [rsi:0, r13:0, r14:0, stack:32]at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 60 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 68 14 r11|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 71 16 r8|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 77 18 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 80 20 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 86 block B2 null  <||@
  Comment 86 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 28 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 89 30 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B47  <||@
  Comment 95 block B4 null  <||@
  Comment 95 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 38 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 99 40 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 103 42 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 110 44 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 116 block B5 null  <||@
  Comment 116 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 116 48 r9|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 122 50 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 126 52 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 130 54 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 133 56 rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 139 58 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 142 60 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B9 falseDestination: B5 -> B7  <||@
  Comment 148 block B7 null  <||@
  Comment 148 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 148 74 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 152 76 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 161 78 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 170 80 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 179 82 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 188 84 MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 192 86 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 199 88 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 199 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 206 90 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 206 92 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 209 94 stack:40|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 214 96 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 217 98 stack:44|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 222 100 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 225 102 JUMP ~[] destination: B7 -> B10  <||@
  Comment 225 block B10 null  <||@
  Comment 225 132 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 225 134 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 228 136 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B29 falseDestination: B10 -> B12  <||@
  Comment 234 block B12 null  <||@
  Comment 234 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 234 148 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 238 150 rsi|QWORD = LEA [r14|QWORD - 16] size: QWORD  <||@
  Comment 242 152 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 245 154 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 251 block B13 null  <||@
  Comment 251 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 158 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 258 160 JUMP ~[] destination: B13 -> B17  <||@
  Comment 258 block B17 null  <||@
  Comment 258 184 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 258 186 rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD  <||@
  Comment 262 188 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 265 190 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19  <||@
  Comment 271 block B19 null  <||@
  Comment 271 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 271 198 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 275 200 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 280 202 rsi|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 284 204 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 287 206 JUMP ~[] destination: B19 -> B20  <||@
  Comment 287 block B20 null  <||@
  Comment 287 208 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 287 210 rsi|QWORD = LEA [r14|QWORD - 4] size: QWORD  <||@
  Comment 291 212 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 294 214 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 300 block B22 null  <||@
  Comment 300 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 300 222 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 304 224 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 310 226 rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 314 228 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 317 230 JUMP ~[] destination: B22 -> B23  <||@
  Comment 317 block B23 null  <||@
  Comment 317 232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 317 234 rsi|QWORD = LEA [r14|QWORD - 2] size: QWORD  <||@
  Comment 321 236 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 324 238 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 330 block B25 null  <||@
  Comment 330 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 330 246 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 334 248 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 339 250 rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD  <||@
  Comment 343 252 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 346 254 JUMP ~[] destination: B25 -> B26  <||@
  Comment 346 block B26 null  <||@
  Comment 346 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 346 258 CMP (x: rdx|QWORD, y: stack:40|QWORD) size: QWORD  <||@
  Comment 351 260 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 357 block B28 null  <||@
  Comment 357 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 272 MOV (x: [rdi|QWORD[.] + rdx|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 362 278 JUMP ~[] destination: B28 -> B29  <||@
  Comment 362 block B29 null  <||@
  Comment 362 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 362 140 stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 367 142 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 372 282 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@165e1bee encoding: base: 0 shift: 3  <||@
  Comment 379 284 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 379 286 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 382 288 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 386 290 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 390 292 rdx|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 393 294 stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 398 296 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 398 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x105a7dca8, value=0x106812c80]:0x106812c80}  <||@
  Comment 404 298 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 410 300 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 416 302 r14|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 421 304 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 426 306 JUMP ~[] destination: B29 -> B30  <||@
  Comment 426 block B30 loop 1 depth 1 header:27|LoopBegin  <||@
  Comment 426 308 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 432 310 CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 435 312 BRANCH trueDestinationProbability: 0.08986648812571385 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B39  <||@
  Comment 441 block B31 loop 1 depth 1 header:27|LoopBegin  <||@
  Comment 441 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 316 rax|DWORD = MOVZX [r14|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD  <||@
  Comment 447 318 rsi|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 452 320 AMD64HOTSPOTSTRATEGYSWITCH ~rax|DWORD - keyConstants: [int[45|0x2d], int[48|0x30]] keyTargets: [B31 -> B32, B31 -> B35] defaultTarget: B31 -> B38 strategy: SequentialStrategy[avgEffort=1.0064935064935066]  <||@
  Comment 475 block B32 loop 1 depth 1 header:27|LoopBegin  <||@
  Comment 475 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 475 324 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495]  <||@
  Comment 475 {Object[Formatter.Flags@122446495]}  <||@
  Comment 485 326 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 488 328 rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 493 330 CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 495 332 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 501 block B34 loop 1 depth 1 header:27|LoopBegin  <||@
  Comment 501 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 501 344 r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 504 346 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 507 348 JUMP ~[] destination: B34 -> B30  <||@
  Comment 509 block B35 loop 1 depth 1 header:27|LoopBegin  <||@
  Comment 509 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 509 352 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927]  <||@
  Comment 509 {Object[Formatter.Flags@271681927]}  <||@
  Comment 519 354 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 522 356 rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 527 358 CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 529 360 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 535 block B37 loop 1 depth 1 header:27|LoopBegin  <||@
  Comment 535 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 535 372 r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 538 374 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 541 376 JUMP ~[] destination: B37 -> B30  <||@
  Comment 543 block B39 null  <||@
  Comment 543 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 543 388 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@368877813]  <||@
  Comment 543 {Object[Formatter.Flags@368877813]}  <||@
  Comment 553 390 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 556 392 rsi|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 561 394 CMP (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 563 396 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42  <||@
  Comment 569 block B42 null  <||@
  Comment 569 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 569 416 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 573 418 rsi|QWORD = LEA [rax|QWORD + 16] size: QWORD  <||@
  Comment 577 420 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 581 422 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 587 block B44 null  <||@
  Comment 587 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 587 448 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 591 450 AMD64PREFETCH ~[rax|QWORD + 208] instr: 0  <||@
  Comment 598 452 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 598 456 JUMP ~[] destination: B44 -> B45  <||@
  Comment 598 block B45 null  <||@
  Comment 598 458 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 598 454 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 603 460 rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 606 462 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}  <||@
  Comment 606 {meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}}  <||@
  Comment 616 464 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 623 466 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 626 468 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}  <||@
  Comment 626 {meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}}  <||@
  Comment 633 470 MOV (x: [rax|QWORD[*] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 637 472 rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@165e1bee encoding: base: 0 shift: 3  <||@
  Comment 644 474 MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 647 476 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 651 478 rax|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 661 480 MOVB (x: [rsi|QWORD[*] + rax|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 665 482 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 668 484 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 677 12  <||@
  Comment 687 block B14 null  <||@
  Comment 687 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 687 164 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 691 166 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 698 168 JUMP ~[] destination: B14 -> B15  <||@
  Comment 698 block B15 loop 0 depth 1 header:475|LoopBegin  <||@
  Comment 698 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 704 172 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 709 174 rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD  <||@
  Comment 713 176 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 716 178 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B17 falseDestination: B15 -> B15  <||@
  Comment 723 block B9 null  <||@
  Comment 723 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 106 stack:40|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 728 108 stack:44|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 733 110 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 738 116 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 738 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 748 118 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 751 120 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 754 122 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 759 124 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 762 126 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 765 128 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 765 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 770 [stack:8, stack:20, stack:32]at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 771 130 JUMP ~[] destination: B9 -> B10  <||@
  Comment 776 block B43 null  <||@
  Comment 776 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 776 426 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 781 428 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 781 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 791 430 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 794 432 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 799 434 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 804 436 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:16, 2]  <||@
  Comment 804 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 809 [r14:0, stack:32]at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16, duringCall: false, rethrow: false]
              |0  |1             |2                                                |3          |4 
     locals:  |-  |r14|QWORD[.]  |vobject:Formatter$Flags:0{flags=stack:60|DWORD}  |r13|DWORD  |- 
  at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |stack:32|QWORD[.]  |    <||@
  Comment 810 438 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 810 440 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 815 444 JUMP ~[] destination: B43 -> B45  <||@
  Comment 820 block B36 null  <||@
  Comment 820 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 820 364 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 823 366 r10|DWORD = MOVE input: int[-53779|0xffffffffffff2ded]  <||@
  Comment 829 368 JUMP ~[] destination: B36 -> B41  <||@
  Comment 829 block B41 null  <||@
  Comment 829 406 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 829 408 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 836 410 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 843 412 DEOPT info [bci:16, 2]  <||@
  Comment 843 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 848 [r14:0, stack:32]at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16, duringCall: false, rethrow: false]
              |0  |1             |2                                           |3          |4 
     locals:  |-  |r14|QWORD[.]  |vobject:Formatter$Flags:0{flags=r11|DWORD}  |r13|DWORD  |- 
  at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |stack:32|QWORD[.]  |    <||@
  Comment 849 block B40 null  <||@
  Comment 849 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 849 400 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 852 402 r10|DWORD = MOVE input: int[-55571|0xffffffffffff26ed]  <||@
  Comment 858 404 JUMP ~[] destination: B40 -> B41  <||@
  Comment 860 block B47 null  <||@
  Comment 860 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 492 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1559431197]  <||@
  Comment 860 {Object[d.a@1559431197]}  <||@
  Comment 870 494 MOV [r15|QWORD + 668] y: -50203 size: DWORD  <||@
  Comment 881 496 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 888 498 DEOPT info [bci:0]  <||@
  Comment 888 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 893 [rsi:0, r13:0]at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 894 block B33 null  <||@
  Comment 894 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 894 336 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 897 338 r10|DWORD = MOVE input: int[-53011|0xffffffffffff30ed]  <||@
  Comment 903 340 JUMP ~[] destination: B33 -> B41  <||@
  Comment 905 block B38 null  <||@
  Comment 905 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 380 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 908 382 r10|DWORD = MOVE input: int[-21011|0xffffffffffffaded]  <||@
  Comment 914 384 JUMP ~[] destination: B38 -> B41  <||@
  Comment 916 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 916 4  <||@
  Comment 922 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 922 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8492[java.util.Formatter$FormatSpecifier.flags(String)]"
  method "HotSpotCompilation-8492[java.util.Formatter$FormatSpecifier.flags(String)]"
  date 1527005223630
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c26a80 448b560849c1e203493bc20f85cff3bdfe900f1f80000000000f1f800000000089842400c0feff4883ec3848896c243048897424204c8bea458b750c468b14f50c000000458bda4d8bc349ffc84d3bd80f87090000004585d20f85fd020000498b5760498b4f704181faffffff000f835f020000458bca41d1e1458d49174183e1f84d63c9498bd94803da483bd90f873f02000049895f60410f188411c0000000410f18841100010000410f18841140010000410f188411800100004489520c48c70201000000c74208410000f8488bc24c89442418458bea44897424144d8bf34585ed0f8480000000488d7810498d76f04885f60f8db401000048c7c200000000498d76f8483bd60f8f10000000c5f9efc0c5fa7f0457488d7208488bd6498d76fc483bd60f8f11000000c5f9efc0c4e1f97e0457488d7204488bd6498d76fe483bd60f8f10000000c5f9efc0c5f97e0457488d7202488bd6483b5424180f8f05000000664489245744896c2404448b542414418bfa48c1e703488bf0488d7f10488d7610498bd64889442408e86dc0befe9041ba0000000041bd000000004c8b742408448b5c2404660f1f440000453bdd0f8e66000000430fb7446e10418bf5ffc683f82d0f840e00000083f8300f8427000000e9ae01000048b858711ac0060000008b400c418bd223d03bc20f8489010000440bd0448beeebb348b888711ac0060000008b400c418bd223d03bc20f841d010000440bd0448beeeb9148b8b8711ac0060000008b400c418bf223f03bc60f8418010000498b4760488d7010493b77700f87bd000000498977600f1880d0000000488b742420488bd048b9e8160ac007000000488b89a8000000488908c74008dd4201f84489500c488bc248c1e80389461c48c1ee0948b800e01b170100000044882406488bc2488b6c24304883c4388505db82c6fcc5f877c3c5f9efc048c7c200000000660f1f440000c5fe7f0457488d5210483bd67ef2e92ffeffff4c8944241844897424144c896c240848ba080200c007000000488bf2418bd2b9000000004d8bf3458beae85e0037ff90e9d9fdffff448954240448ba680b00c007000000488bf2ba00000000b901000000e8370037ff90448b542404e922ffffff458bda41baed2dffff4589979c0200004d89a7a8020000e82e08befe90458bda41baed26ffffebe149ba60fe60be0700000041c7879c020000e53bffff4d8997a8020000e80108befe90458bda41baed30ffffebb4458bda41baedadffffeba9e8073802ff90e8e106befe90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2613e13c slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 56 [rsi:0, r13:0, stack:32]at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 12 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 60 [rsi:0, r13:0, r14:0, stack:32]at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 60 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 68 14 r11|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 71 16 r8|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 77 18 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 80 20 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 86 block B2 null  <||@
  Comment 86 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 28 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 89 30 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B47  <||@
  Comment 95 block B4 null  <||@
  Comment 95 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 38 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 99 40 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 103 42 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 110 44 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 116 block B5 null  <||@
  Comment 116 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 116 48 r9|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 122 50 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 126 52 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 130 54 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 133 56 rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 139 58 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 142 60 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B9 falseDestination: B5 -> B7  <||@
  Comment 148 block B7 null  <||@
  Comment 148 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 148 74 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 152 76 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 161 78 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 170 80 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 179 82 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 188 84 MOV (x: [rdx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 192 86 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 199 88 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 199 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 206 90 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 206 92 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 209 94 stack:40|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 214 96 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 217 98 stack:44|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 222 100 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 225 102 JUMP ~[] destination: B7 -> B10  <||@
  Comment 225 block B10 null  <||@
  Comment 225 132 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 225 134 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 228 136 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B29 falseDestination: B10 -> B12  <||@
  Comment 234 block B12 null  <||@
  Comment 234 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 234 148 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 238 150 rsi|QWORD = LEA [r14|QWORD - 16] size: QWORD  <||@
  Comment 242 152 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 245 154 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 251 block B13 null  <||@
  Comment 251 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 158 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 258 160 JUMP ~[] destination: B13 -> B17  <||@
  Comment 258 block B17 null  <||@
  Comment 258 184 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 258 186 rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD  <||@
  Comment 262 188 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 265 190 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19  <||@
  Comment 271 block B19 null  <||@
  Comment 271 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 271 198 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 275 200 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 280 202 rsi|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 284 204 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 287 206 JUMP ~[] destination: B19 -> B20  <||@
  Comment 287 block B20 null  <||@
  Comment 287 208 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 287 210 rsi|QWORD = LEA [r14|QWORD - 4] size: QWORD  <||@
  Comment 291 212 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 294 214 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 300 block B22 null  <||@
  Comment 300 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 300 222 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 304 224 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 310 226 rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 314 228 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 317 230 JUMP ~[] destination: B22 -> B23  <||@
  Comment 317 block B23 null  <||@
  Comment 317 232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 317 234 rsi|QWORD = LEA [r14|QWORD - 2] size: QWORD  <||@
  Comment 321 236 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 324 238 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 330 block B25 null  <||@
  Comment 330 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 330 246 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 334 248 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 339 250 rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD  <||@
  Comment 343 252 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 346 254 JUMP ~[] destination: B25 -> B26  <||@
  Comment 346 block B26 null  <||@
  Comment 346 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 346 258 CMP (x: rdx|QWORD, y: stack:40|QWORD) size: QWORD  <||@
  Comment 351 260 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 357 block B28 null  <||@
  Comment 357 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 272 MOV (x: [rdi|QWORD[.] + rdx|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 362 278 JUMP ~[] destination: B28 -> B29  <||@
  Comment 362 block B29 null  <||@
  Comment 362 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 362 140 stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 367 142 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 372 282 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@165e1bee encoding: base: 0 shift: 3  <||@
  Comment 379 284 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 379 286 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 382 288 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 386 290 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 390 292 rdx|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 393 294 stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 398 296 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 398 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x105a7dca8, value=0x106812c80]:0x106812c80}  <||@
  Comment 404 298 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 410 300 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 416 302 r14|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 421 304 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 426 306 JUMP ~[] destination: B29 -> B30  <||@
  Comment 426 block B30 loop 1 depth 1 header:27|LoopBegin  <||@
  Comment 426 308 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 432 310 CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 435 312 BRANCH trueDestinationProbability: 0.08986648812571385 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B39  <||@
  Comment 441 block B31 loop 1 depth 1 header:27|LoopBegin  <||@
  Comment 441 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 316 rax|DWORD = MOVZX [r14|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD  <||@
  Comment 447 318 rsi|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 452 320 AMD64HOTSPOTSTRATEGYSWITCH ~rax|DWORD - keyConstants: [int[45|0x2d], int[48|0x30]] keyTargets: [B31 -> B32, B31 -> B35] defaultTarget: B31 -> B38 strategy: SequentialStrategy[avgEffort=1.0064935064935066]  <||@
  Comment 475 block B32 loop 1 depth 1 header:27|LoopBegin  <||@
  Comment 475 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 475 324 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495]  <||@
  Comment 475 {Object[Formatter.Flags@122446495]}  <||@
  Comment 485 326 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 488 328 rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 493 330 CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 495 332 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 501 block B34 loop 1 depth 1 header:27|LoopBegin  <||@
  Comment 501 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 501 344 r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 504 346 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 507 348 JUMP ~[] destination: B34 -> B30  <||@
  Comment 509 block B35 loop 1 depth 1 header:27|LoopBegin  <||@
  Comment 509 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 509 352 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927]  <||@
  Comment 509 {Object[Formatter.Flags@271681927]}  <||@
  Comment 519 354 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 522 356 rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 527 358 CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 529 360 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 535 block B37 loop 1 depth 1 header:27|LoopBegin  <||@
  Comment 535 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 535 372 r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 538 374 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 541 376 JUMP ~[] destination: B37 -> B30  <||@
  Comment 543 block B39 null  <||@
  Comment 543 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 543 388 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@368877813]  <||@
  Comment 543 {Object[Formatter.Flags@368877813]}  <||@
  Comment 553 390 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 556 392 rsi|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 561 394 CMP (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 563 396 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42  <||@
  Comment 569 block B42 null  <||@
  Comment 569 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 569 416 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 573 418 rsi|QWORD = LEA [rax|QWORD + 16] size: QWORD  <||@
  Comment 577 420 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 581 422 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 587 block B44 null  <||@
  Comment 587 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 587 448 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 591 450 AMD64PREFETCH ~[rax|QWORD + 208] instr: 0  <||@
  Comment 598 452 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 598 456 JUMP ~[] destination: B44 -> B45  <||@
  Comment 598 block B45 null  <||@
  Comment 598 458 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 598 454 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 603 460 rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 606 462 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}  <||@
  Comment 606 {meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}}  <||@
  Comment 616 464 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 623 466 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 626 468 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}  <||@
  Comment 626 {meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}}  <||@
  Comment 633 470 MOV (x: [rax|QWORD[*] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 637 472 rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@165e1bee encoding: base: 0 shift: 3  <||@
  Comment 644 474 MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 647 476 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 651 478 rax|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 661 480 MOVB (x: [rsi|QWORD[*] + rax|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 665 482 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 668 484 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 677 12  <||@
  Comment 687 block B14 null  <||@
  Comment 687 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 687 164 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 691 166 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 698 168 JUMP ~[] destination: B14 -> B15  <||@
  Comment 698 block B15 loop 0 depth 1 header:475|LoopBegin  <||@
  Comment 698 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 704 172 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 709 174 rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD  <||@
  Comment 713 176 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 716 178 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B17 falseDestination: B15 -> B15  <||@
  Comment 723 block B9 null  <||@
  Comment 723 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 106 stack:40|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 728 108 stack:44|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 733 110 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 738 116 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 738 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 748 118 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 751 120 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 754 122 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 759 124 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 762 126 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 765 128 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 765 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 770 [stack:8, stack:20, stack:32]at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 771 130 JUMP ~[] destination: B9 -> B10  <||@
  Comment 776 block B43 null  <||@
  Comment 776 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 776 426 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 781 428 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 781 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 791 430 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 794 432 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 799 434 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 804 436 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:16, 2]  <||@
  Comment 804 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 809 [r14:0, stack:32]at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16, duringCall: false, rethrow: false]
              |0  |1             |2                                                |3          |4 
     locals:  |-  |r14|QWORD[.]  |vobject:Formatter$Flags:0{flags=stack:60|DWORD}  |r13|DWORD  |- 
  at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |stack:32|QWORD[.]  |    <||@
  Comment 810 438 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 810 440 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 815 444 JUMP ~[] destination: B43 -> B45  <||@
  Comment 820 block B36 null  <||@
  Comment 820 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 820 364 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 823 366 r10|DWORD = MOVE input: int[-53779|0xffffffffffff2ded]  <||@
  Comment 829 368 JUMP ~[] destination: B36 -> B41  <||@
  Comment 829 block B41 null  <||@
  Comment 829 406 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 829 408 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 836 410 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 843 412 DEOPT info [bci:16, 2]  <||@
  Comment 843 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 848 [r14:0, stack:32]at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16, duringCall: false, rethrow: false]
              |0  |1             |2                                           |3          |4 
     locals:  |-  |r14|QWORD[.]  |vobject:Formatter$Flags:0{flags=r11|DWORD}  |r13|DWORD  |- 
  at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |stack:32|QWORD[.]  |    <||@
  Comment 849 block B40 null  <||@
  Comment 849 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 849 400 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 852 402 r10|DWORD = MOVE input: int[-55571|0xffffffffffff26ed]  <||@
  Comment 858 404 JUMP ~[] destination: B40 -> B41  <||@
  Comment 860 block B47 null  <||@
  Comment 860 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 492 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1559431197]  <||@
  Comment 860 {Object[d.a@1559431197]}  <||@
  Comment 870 494 MOV [r15|QWORD + 668] y: -50203 size: DWORD  <||@
  Comment 881 496 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 888 498 DEOPT info [bci:0]  <||@
  Comment 888 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 893 [rsi:0, r13:0]at java.util.Formatter$FormatSpecifier.flags(Formatter.java:2640) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 894 block B33 null  <||@
  Comment 894 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 894 336 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 897 338 r10|DWORD = MOVE input: int[-53011|0xffffffffffff30ed]  <||@
  Comment 903 340 JUMP ~[] destination: B33 -> B41  <||@
  Comment 905 block B38 null  <||@
  Comment 905 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 380 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 908 382 r10|DWORD = MOVE input: int[-21011|0xffffffffffffaded]  <||@
  Comment 914 384 JUMP ~[] destination: B38 -> B41  <||@
  Comment 916 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 916 4  <||@
  Comment 922 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 922 5  <||@
  HexCodeFile>>> <|@
end_nmethod
