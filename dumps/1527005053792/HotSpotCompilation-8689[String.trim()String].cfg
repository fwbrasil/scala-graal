begin_compilation
  name " HotSpotCompilation-8689[java.lang.String.trim()]"
  method "HotSpotCompilation-8689[java.lang.String.trim()]"
  date 1527005170600
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a809 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a809  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v820 v62 ?11 ?30 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a809 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.trim(String.java:2868) [bci: 1]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v820 
=== Succesors ===
next: i810 
=== Usages ===
a146 v821 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v820 #next: i810  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.trim()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2868
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
i810 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a809 
=== Succesors ===
=== Usages ===
i810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i810 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.trim(String.java:2868) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v821 
=== Succesors ===
next: v8 
=== Usages ===
?11 v12 i275 i29 v50 v68 v108 i116 v154 v166 
=== Predecessor ===
a809 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v821 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a146 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.trim(String.java:2868) [bci: 1]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a809 
=== Succesors ===
=== Usages ===
v823 ?11 ?30 v824 v822 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a809  <|@  <|@
f <@~|@floating>@ <|@
tid a319 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 v330 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.trim(String.java:2873) [bci: 26]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 v44 v101 i402 a472 a363 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 23]
rawvalue: 33
stableDimension: 0
stamp: i16 [33] ⇊0000000000000021 ⇈0000000000000021
stampKind: i16
value: short[33|0x21]
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 v184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.trim(String.java:2869) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 v105 v502 v399 a426 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
i810 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B4" 
    successors "B2" "B83" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i5 i25 
=== Succesors ===
=== Usages ===
?11 v12 v822 v108 i25 i70 ?30 v31 v117 v44 j289 v154 i275 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v9 values: i5 i25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 6.0188605396413815
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 13]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v8 
=== Succesors ===
next: v200 
=== Usages ===
i10 v20 v26 v199 v204 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v8 #next: v200  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<String.trim()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2872
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i810 i10 a146 
=== Succesors ===
=== Usages ===
v189 v322 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i810 i10 a146  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i810 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i810  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v196 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v196 #falseSuccessor: v199  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 20]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i810 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i810  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 20]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v154 
=== Succesors ===
trueSuccessor: v201 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v154 #trueSuccessor: v201 #falseSuccessor: v204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: i811 
=== Usages ===
i811 
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i811  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a146 
index: i10 
=== Succesors ===
=== Usages ===
i811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a146 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i811 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 20]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v201 
address: v822 
=== Succesors ===
next: v23 
=== Usages ===
v182 
=== Predecessor ===
v201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v201 address: v822 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i811 
y: i181 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i811 y: i181  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 23]
stamp: void
trueSuccessorProbability: 0.8338555955211445
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
i811 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v18 #falseSuccessor: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617336753041426257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2873) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?11 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.trim(String.java:2873) [bci: 26]
stamp: i32
=== Inputs ===
x: i10 
y: i24 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 13]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 40]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B9" 
    successors "B7" "B80" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v28 
values: i810 i34 
=== Succesors ===
=== Usages ===
?30 v31 i34 v68 i70 v50 j818 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v28 values: i810 i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.889231371397819
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 32]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v27 
=== Succesors ===
next: v210 
=== Usages ===
i29 v39 v43 v209 v214 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v27 #next: v210  <|@  <|@
tid ?30 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<String.trim()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2875
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i29 i10 a146 
=== Succesors ===
=== Usages ===
v190 v330 a363 a472 a426 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i29 i10 a146  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i29 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v206 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v206 #falseSuccessor: v209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 40]
stamp: i32
=== Inputs ===
x: i29 
y: i33 
=== Succesors ===
=== Usages ===
v166 i29 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i29 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i810 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i34 y: i810  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v214 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v211 #falseSuccessor: v214  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i812 
=== Usages ===
i812 
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i812  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i29 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i29  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
displacement: 14
scale: Times2
stamp: void*
=== Inputs ===
base: a146 
index: j818 
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a146 index: j818  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 41]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v211 
address: v823 
=== Succesors ===
next: v42 
=== Usages ===
v184 
=== Predecessor ===
v211 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v211 address: v823 #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 44]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i812 
y: i181 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i812 y: i181  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 44]
stamp: void
trueSuccessorProbability: 0.742879786645197
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
i812 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v37 #falseSuccessor: v39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613688389463824590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2876) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?30 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?30 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 32]
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 53]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 54]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i24 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 54]
stamp: void
trueSuccessorProbability: 0.011203796570366187
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v45 #falseSuccessor: v46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577612170780661248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 63]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i810 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i29 y: i810  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 63]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v218 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v218 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -44819
stableDimension: 0
stamp: i32 [-44819] ⇊00000000ffff50ed ⇈00000000ffff50ed
stampKind: i32
value: int[-44819|0xffffffffffff50ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v218 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4577612170780661248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 76]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i810 
y: i29 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i810 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v220 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v222 #falseSuccessor: v220  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45075
stableDimension: 0
stamp: i32 [-45075] ⇊00000000ffff4fed ⇈00000000ffff4fed
stampKind: i32
value: int[-45075|0xffffffffffff4fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1965) [bci: 33]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i32
=== Inputs ===
x: i29 
y: i10 
=== Succesors ===
=== Usages ===
i116 v105 j518 v101 a426 v276 i298 v449 i402 v411 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i29 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i5 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v226 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v226 #falseSuccessor: v224  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45331
stableDimension: 0
stamp: i32 [-45331] ⇊00000000ffff4eed ⇈00000000ffff4eed
stampKind: i32
value: int[-45331|0xffffffffffff4eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B25" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i24 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i810 
y: i10 
=== Succesors ===
=== Usages ===
v231 v273 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i810 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 v496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j488 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v382 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j488 
index: - 
=== Succesors ===
=== Usages ===
j492 j388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j488 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a363 a472 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a363 a472 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j503 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j504 j512 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v102 #falseSuccessor: v103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v228 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v230 #falseSuccessor: v228  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45587
stableDimension: 0
stamp: i32 [-45587] ⇊00000000ffff4ded ⇈00000000ffff4ded
stampKind: i32
value: int[-45587|0xffffffffffff4ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v230 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: j350 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j370 
=== Usages ===
v826 v827 
=== Predecessor ===
v228 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j370  <|@  <|@
f <@~|@floating>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
j370 v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v826 
=== Succesors ===
next: j371 
=== Usages ===
j504 j376 v844 
=== Predecessor ===
j350 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v826 #next: j371  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
j371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v827 
=== Succesors ===
next: v358 
=== Usages ===
v355 
=== Predecessor ===
j370 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v827 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid j504 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j370 
y: j503 
=== Succesors ===
=== Usages ===
v355 v372 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j370 y: j503  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j371 
y: j504 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j371 y: j504  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v356 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
j371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v356 #falseSuccessor: v357  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561606301817256111
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a363 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a363 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?30 
arguments: v348 i361 i24 
=== Succesors ===
next: j364 
=== Usages ===
j364 
=== Predecessor ===
v356 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?30 arguments: v348 i361 i24 #next: j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j364 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a363 
=== Succesors ===
next: v377 
=== Usages ===
j376 
=== Predecessor ===
a363 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a363 #next: v377  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
j364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591213176725842898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v826 
value: j504 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v826 value: j504 stateAfter: - lastLocationAccess: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j370 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j370 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v844 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v844 #next: v375  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
v368 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v374 
values: j370 j364 
=== Succesors ===
=== Usages ===
v829 v828 a239 v845 v846 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v374 values: j370 j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v375 v377 
=== Succesors ===
next: a239 
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v375 v377 #next: a239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a239 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j376 
=== Succesors ===
next: j388 
=== Usages ===
a245 
=== Predecessor ===
v374 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j376 #next: j388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v841 
=== Succesors ===
next: v389 
=== Usages ===
v389 
=== Predecessor ===
a239 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v841 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v828 
value: j388 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
j388 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v828 value: j388 stateAfter: - lastLocationAccess: - #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v829 
value: v508 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v829 value: v508 stateAfter: - lastLocationAccess: - #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a257 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v845 
value: a257 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v845 value: a257 stateAfter: - lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a245 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v846 value: i5 stateAfter: - lastLocationAccess: - #next: a245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a245 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a239 
=== Succesors ===
next: v246 
=== Usages ===
v131 
=== Predecessor ===
v399 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a239 #next: v246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
a245 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a245 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a245 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606254640832671520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i32
=== Inputs ===
x: i810 
y: i70 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i810 y: i70  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i10 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i116 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v232 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v234 #falseSuccessor: v232  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45843
stableDimension: 0
stamp: i32 [-45843] ⇊00000000ffff4ced ⇈00000000ffff4ced
stampKind: i32
value: int[-45843|0xffffffffffff4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606254640832671520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v272 
falseSuccessor: v270 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v272 #falseSuccessor: v270  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B81" 
    xhandlers
    flags 
    probability 4546247086308093308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -70241
stableDimension: 0
stamp: i32 [-70241] ⇊00000000fffeed9f ⇈00000000fffeed9f
stampKind: i32
value: int[-70241|0xfffffffffffeed9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4606253832890542781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: j405 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j405 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j446 
=== Usages ===
v830 v831 
=== Predecessor ===
v270 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
j446 v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v830 
=== Succesors ===
next: j447 
=== Usages ===
j409 v832 v833 a425 v838 v834 v835 v836 v837 
=== Predecessor ===
j405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v830 #next: j447  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v831 
=== Succesors ===
next: v414 
=== Usages ===
v415 
=== Predecessor ===
j446 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v831 #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid i410 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i410 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i70 y: i410  <|@  <|@
f <@~|@floating>@ <|@
tid j401 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 v529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v411 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v412 
=== Usages ===
=== Predecessor ===
j447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v411 #trueSuccessor: v413 #falseSuccessor: v412  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605445971556016145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i70 
y: i24 
=== Succesors ===
=== Usages ===
i434 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i70 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i402 
y: i433 
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i402 y: i433  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i434 
y: i403 
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i434 y: i403  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i404 
=== Succesors ===
=== Usages ===
j409 v834 v835 v836 v837 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i404  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i64
=== Inputs ===
x: j408 
y: j446 
=== Succesors ===
=== Usages ===
v415 v448 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j408 y: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j447 
y: j409 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j447 y: j409  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v415 
=== Succesors ===
trueSuccessor: v420 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v415 #trueSuccessor: v420 #falseSuccessor: v419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575806903067926871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v418  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4605373264035908748
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v830 
value: j409 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v830 value: j409 stateAfter: - lastLocationAccess: - #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j408 
index: j446 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j408 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
address: v834 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v834 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j408 
index: j446 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j408 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
address: v835 
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v835 #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j408 
index: j446 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j408 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
address: v836 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v836 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j408 
index: j446 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j408 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
address: v837 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v837 #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j446 
index: - 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j446 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v832 
value: i70 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v832 value: i70 stateAfter: - lastLocationAccess: - #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j446 
index: - 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j446 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v833 
value: j401 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v833 value: j401 stateAfter: - lastLocationAccess: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j446 
index: - 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j446 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v838 
value: v511 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v838 value: v511 stateAfter: - lastLocationAccess: - #next: v424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: a425 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j446 
=== Succesors ===
next: v427 
=== Usages ===
a430 
=== Predecessor ===
v424 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j446 #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
a425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591127311339378019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v412 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591708971500237198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v416 v418 
=== Succesors ===
next: a426 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v416 v418 #next: a426  <|@  <|@
f <@~|@floating>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a426 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a426 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?30 
arguments: v400 i70 i5 
=== Succesors ===
next: v429 
=== Usages ===
a430 
=== Predecessor ===
v417 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?30 arguments: v400 i70 i5 #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
a426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v428 
values: a425 a426 
=== Succesors ===
=== Usages ===
v850 a302 v825 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v428 values: a425 a426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v427 v429 
=== Succesors ===
next: v659 
=== Usages ===
a430 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v427 v429 #next: v659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v532 
=== Usages ===
j660 j662 
=== Predecessor ===
v428 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 3]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i32
=== Inputs ===
x: i810 
y: i10 
=== Succesors ===
=== Usages ===
v276 i298 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i810 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i275 
y: i70 
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i275 y: i70  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v276 
trueValue: i275 
falseValue: i70 
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v276 trueValue: i275 falseValue: i70  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i298 
=== Succesors ===
=== Usages ===
j724 v850 j523 v529 v656 j706 j712 j716 j720 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i298  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j519 
y: j401 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j519 y: j401  <|@  <|@
f <@~|@floating>@ <|@
tid j723 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j724 j775 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j665 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j679 j742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j720 j772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j688 j748 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j715 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j716 j769 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j754 j696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j711 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j712 j766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 20]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j760 j704 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j705 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j706 j761 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j755 v707 j749 v762 j689 j697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v529 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v531 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v529 #trueSuccessor: v530 #falseSuccessor: v531  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B54" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v549  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a430 
index: - 
=== Succesors ===
=== Usages ===
j662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a430 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j662 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v659 
address: v825 
=== Succesors ===
=== Usages ===
v851 v853 v855 v857 v859 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v659 address: v825  <|@  <|@
f <@~|@floating>@ <|@
tid j289 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at com.oracle.graal.enterprise.I.b.loadVector(JavaKind, char[], int, StructuralInput$Memory) [bci: -1]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:105) [bci: 26]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i10 
=== Succesors ===
=== Usages ===
v824 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a146 
index: j289 
=== Succesors ===
=== Usages ===
j660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a146 index: j289  <|@  <|@
f <@~|@floating>@ <|@
tid j660 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v659 
address: v824 
=== Succesors ===
=== Usages ===
v852 v854 v856 v858 v860 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v659 address: v824  <|@  <|@
f <@~|@floating>@ <|@
tid j706 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j519 
y: j705 
=== Succesors ===
=== Usages ===
v707 v709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j519 y: j705  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j706 
y: j237 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j706 y: j237  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v707 
=== Succesors ===
trueSuccessor: v533 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v707 #trueSuccessor: v533 #falseSuccessor: v534  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B78" 
    successors "B41" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j697 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v537 
values: j237 j704 
=== Succesors ===
=== Usages ===
v860 j704 v859 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: j237 j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v536 
=== Succesors ===
next: v813 
=== Usages ===
v813 v541 v542 j697 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v536 #next: v813  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j660 
index: j697 
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j660 index: j697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v537 
address: v860 
=== Succesors ===
next: v793 
=== Usages ===
v793 
=== Predecessor ===
v537 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v537 address: v860 #next: v793  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j662 
index: j697 
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j662 index: j697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v859 
value: v813 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v859 value: v813 stateAfter: - lastLocationAccess: - #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid j704 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j697 
y: j159 
=== Succesors ===
=== Usages ===
j689 j697 v709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j697 y: j159  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j706 
y: j704 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j706 y: j704  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v541 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v793 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v541 #falseSuccessor: v543  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v537 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v537 #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j689 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v546 
values: j237 j704 
=== Succesors ===
=== Usages ===
v858 j696 j680 v713 v857 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v546 values: j237 j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v545 v547 
=== Succesors ===
next: v569 
=== Usages ===
j689 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v545 v547 #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid j712 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j519 
y: j711 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j519 y: j711  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j712 
y: j689 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j712 y: j689  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v713 
=== Succesors ===
trueSuccessor: v568 
falseSuccessor: v567 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v713 #trueSuccessor: v568 #falseSuccessor: v567  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
v814 
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j660 
index: j689 
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j660 index: j689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v567 
address: v858 
=== Succesors ===
next: v791 
=== Usages ===
v791 
=== Predecessor ===
v567 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v567 address: v858 #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j662 
index: j689 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j662 index: j689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
value: v814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v814 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v857 value: v814 stateAfter: - lastLocationAccess: - #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid j696 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j689 
y: j391 
=== Succesors ===
=== Usages ===
j680 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j689 y: j391  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v791 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j680 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v557 
values: j696 j689 
=== Succesors ===
=== Usages ===
v856 j688 j672 v717 v855 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v557 values: j696 j689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v556 v572 
=== Succesors ===
next: v575 
=== Usages ===
j680 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v556 v572 #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid j716 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j519 
y: j715 
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j519 y: j715  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j716 
y: j680 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j716 y: j680  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v717 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v573 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v717 #trueSuccessor: v574 #falseSuccessor: v573  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v815 
=== Usages ===
v815 
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j660 
index: j680 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j660 index: j680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v573 
address: v856 
=== Succesors ===
next: v789 
=== Usages ===
v789 
=== Predecessor ===
v573 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v573 address: v856 #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j662 
index: j680 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j662 index: j680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v855 
value: v815 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v855 value: v815 stateAfter: - lastLocationAccess: - #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j680 
y: j687 
=== Succesors ===
=== Usages ===
j672 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j680 y: j687  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v789 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j672 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v561 
values: j688 j680 
=== Succesors ===
=== Usages ===
v854 j679 j663 v721 v853 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v561 values: j688 j680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v560 v578 
=== Succesors ===
next: v581 
=== Usages ===
j672 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v560 v578 #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid j720 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j519 
y: j719 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j519 y: j719  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j720 
y: j672 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j720 y: j672  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v721 
=== Succesors ===
trueSuccessor: v580 
falseSuccessor: v579 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v721 #trueSuccessor: v580 #falseSuccessor: v579  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v580 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v816 
=== Usages ===
v816 
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j660 
index: j672 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j660 index: j672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v579 
address: v854 
=== Succesors ===
next: v787 
=== Usages ===
v787 
=== Predecessor ===
v579 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v579 address: v854 #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j662 
index: j672 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j662 index: j672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
value: v816 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v853 value: v816 stateAfter: - lastLocationAccess: - #next: v563  <|@  <|@
f <@~|@floating>@ <|@
tid j679 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j672 
y: j665 
=== Succesors ===
=== Usages ===
j663 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j672 y: j665  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v787 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j663 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v564 
values: j679 j672 
=== Succesors ===
=== Usages ===
v852 v725 v851 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v564 values: j679 j672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v563 v584 
=== Succesors ===
next: v587 
=== Usages ===
j663 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v563 v584 #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid j724 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j519 
y: j723 
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j519 y: j723  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j724 
y: j663 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j724 y: j663  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v725 
=== Succesors ===
trueSuccessor: v586 
falseSuccessor: v585 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v725 #trueSuccessor: v586 #falseSuccessor: v585  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v590  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i817 
=== Usages ===
i817 
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i817  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j660 
index: j663 
=== Succesors ===
=== Usages ===
i817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j660 index: j663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i817 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v585 
address: v852 
=== Succesors ===
next: v785 
=== Usages ===
v785 
=== Predecessor ===
v585 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v585 address: v852 #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j662 
index: j663 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j662 index: j663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v851 
value: i817 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
i817 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v851 value: i817 stateAfter: - lastLocationAccess: - #next: v566  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v785 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B36" "B53" "B52" 
    successors "B55" "B73" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v549 v566 v590 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v549 v566 v590 #next: v728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v597 
=== Usages ===
j730 
=== Predecessor ===
v550 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i70 
=== Succesors ===
=== Usages ===
j523 v656 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i70  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j519 
y: j518 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j519 y: j518  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v656 
=== Succesors ===
trueSuccessor: v596 
falseSuccessor: v595 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v656 #trueSuccessor: v596 #falseSuccessor: v595  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a430 
index: j519 
=== Succesors ===
=== Usages ===
j730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a430 index: j519  <|@  <|@
f <@~|@floating>@ <|@
tid j730 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v728 
address: v850 
=== Succesors ===
=== Usages ===
v861 v862 v863 v864 v865 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v728 address: v850  <|@  <|@
f <@~|@floating>@ <|@
tid j523 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j518 
y: j519 
=== Succesors ===
=== Usages ===
j775 j761 j766 j769 j772 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j518 y: j519  <|@  <|@
f <@~|@floating>@ <|@
tid j761 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j523 
y: j705 
=== Succesors ===
=== Usages ===
v762 v764 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j523 y: j705  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j761 
y: j237 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j761 y: j237  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v599 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v598 #falseSuccessor: v599  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B72" 
    successors "B59" "B72" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j755 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v602 
values: j237 j760 
=== Succesors ===
=== Usages ===
v865 j760 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v602 values: j237 j760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v601 
=== Succesors ===
next: v803 
=== Usages ===
j755 v605 v606 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v601 #next: v803  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j730 
index: j755 
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: j755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
value: v804 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v865 value: v804 stateAfter: - lastLocationAccess: - #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid j760 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j755 
y: j159 
=== Succesors ===
=== Usages ===
j749 j755 v764 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j755 y: j159  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j761 
y: j760 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j761 y: j760  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v764 
=== Succesors ===
trueSuccessor: v605 
falseSuccessor: v607 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v764 #trueSuccessor: v605 #falseSuccessor: v607  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v602 
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v602 #next: v611  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j749 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v610 
values: j237 j760 
=== Succesors ===
=== Usages ===
v864 j754 j743 v767 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v610 values: j237 j760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v609 v611 
=== Succesors ===
next: v632 
=== Usages ===
j749 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v609 v611 #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid j766 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j523 
y: j711 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j523 y: j711  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j766 
y: j749 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j766 y: j749  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v767 
=== Succesors ===
trueSuccessor: v631 
falseSuccessor: v630 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v767 #trueSuccessor: v631 #falseSuccessor: v630  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
v631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j730 
index: j749 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: j749  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
value: v808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v864 value: v808 stateAfter: - lastLocationAccess: - #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j749 
y: j391 
=== Succesors ===
=== Usages ===
j743 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j391  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
v802 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j743 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v621 
values: j754 j749 
=== Succesors ===
=== Usages ===
v863 j748 j737 v770 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v621 values: j754 j749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v620 v635 
=== Succesors ===
next: v638 
=== Usages ===
j743 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v620 v635 #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid j769 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j523 
y: j715 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j523 y: j715  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j769 
y: j743 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j769 y: j743  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v770 
=== Succesors ===
trueSuccessor: v637 
falseSuccessor: v636 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v770 #trueSuccessor: v637 #falseSuccessor: v636  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v641  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v800  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j730 
index: j743 
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: j743  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
value: v807 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v863 value: v807 stateAfter: - lastLocationAccess: - #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j743 
y: j687 
=== Succesors ===
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j743 y: j687  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j737 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v624 
values: j748 j743 
=== Succesors ===
=== Usages ===
v862 j742 j731 v773 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v624 values: j748 j743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v623 v641 
=== Succesors ===
next: v644 
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v623 v641 #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid j772 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j523 
y: j719 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j523 y: j719  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j772 
y: j737 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j772 y: j737  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v773 
=== Succesors ===
trueSuccessor: v643 
falseSuccessor: v642 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v773 #trueSuccessor: v643 #falseSuccessor: v642  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v647  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
v643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j730 
index: j737 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: j737  <|@  <|@
f <@~|@floating>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
value: v806 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v862 value: v806 stateAfter: - lastLocationAccess: - #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j737 
y: j665 
=== Succesors ===
=== Usages ===
j731 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j737 y: j665  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j731 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v627 
values: j742 j737 
=== Succesors ===
=== Usages ===
v861 v776 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v627 values: j742 j737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v626 v647 
=== Succesors ===
next: v650 
=== Usages ===
j731 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v626 v647 #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid j775 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j523 
y: j723 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j523 y: j723  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j775 
y: j731 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j775 y: j731  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v776 
=== Succesors ===
trueSuccessor: v649 
falseSuccessor: v648 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v776 #trueSuccessor: v649 #falseSuccessor: v648  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v653  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
v649 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v796 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j730 
index: j731 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: j731  <|@  <|@
f <@~|@floating>@ <|@
tid i805 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
value: i805 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v861 value: i805 stateAfter: - lastLocationAccess: - #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
v796 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v606  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v602 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v602  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B74" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B71" "B70" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v613 v629 v653 
=== Succesors ===
next: a302 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v613 v629 v653 #next: a302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a430 
=== Succesors ===
next: j461 
=== Usages ===
a252 
=== Predecessor ===
v614 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a430 #next: j461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j476 
=== Usages ===
v839 v840 
=== Predecessor ===
a302 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j476  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
j476 v478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v839 
=== Succesors ===
next: j477 
=== Usages ===
j512 j482 v847 
=== Predecessor ===
j461 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v839 #next: j477  <|@  <|@
f <@~|@floating>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
j477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v840 
=== Succesors ===
next: v469 
=== Usages ===
v466 
=== Predecessor ===
j476 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v840 #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j476 
y: j503 
=== Succesors ===
=== Usages ===
v466 v478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j476 y: j503  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j477 
y: j512 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j477 y: j512  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v466 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v468 
=== Usages ===
=== Predecessor ===
j477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v466 #trueSuccessor: v467 #falseSuccessor: v468  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4576323934322023919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a472 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a472 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?30 
arguments: v348 i361 i24 
=== Succesors ===
next: j473 
=== Usages ===
j473 
=== Predecessor ===
v467 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?30 arguments: v348 i361 i24 #next: j473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j473 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a472 
=== Succesors ===
next: v483 
=== Usages ===
j482 
=== Predecessor ===
a472 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a472 #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
j473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4606173046757090118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v839 
value: j512 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v839 value: j512 stateAfter: - lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j476 
index: - 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j476 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v847 
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v847 #next: v481  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
v475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j482 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v480 
values: j476 j473 
=== Succesors ===
=== Usages ===
v843 v842 a249 v848 v849 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v480 values: j476 j473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v481 v483 
=== Succesors ===
next: a249 
=== Usages ===
j482 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v481 v483 #next: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a249 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j482 
=== Succesors ===
next: j492 
=== Usages ===
a255 
=== Predecessor ===
v480 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j482 #next: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v841 
=== Succesors ===
next: v493 
=== Usages ===
v493 
=== Predecessor ===
a249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v841 #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v842 
value: j492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
j492 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v842 value: j492 stateAfter: - lastLocationAccess: - #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v843 
value: v508 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v843 value: v508 stateAfter: - lastLocationAccess: - #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a252 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a302 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v848 
value: a252 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v848 value: a252 stateAfter: - lastLocationAccess: - #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a255 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v849 value: i5 stateAfter: - lastLocationAccess: - #next: a255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a255 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a249 
=== Succesors ===
next: v256 
=== Usages ===
v132 
=== Predecessor ===
v502 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a249 #next: v256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
a255 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a255 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a255 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v542  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v537 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v537  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42779
stableDimension: 0
stamp: i32 [-42779] ⇊00000000ffff58e5 ⇈00000000ffff58e5
stampKind: i32
value: int[-42779|0xffffffffffff58e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v214 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42003
stableDimension: 0
stamp: i32 [-42003] ⇊00000000ffff5bed ⇈00000000ffff5bed
stampKind: i32
value: int[-42003|0xffffffffffff5bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v209 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B12" "B80" "B79" "B15" "B17" "B20" "B26" "B28" 
    successors 
    xhandlers
    flags 
    probability 4546247086308093308
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-70241 - -42003] ⇊00000000fffe4085
valueDescription: i32
=== Inputs ===
merge: v325 
values: i327 i332 i334 i336 i338 i340 i342 i344 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i327 i332 i334 i336 i338 i340 i342 i344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v326 v331 v333 v335 v337 v339 v341 v345 
=== Succesors ===
next: v330 
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v326 v331 v333 v335 v337 v339 v341 v345 #next: v330  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?30 
actionAndReason: i328 
speculation: a319 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?30 actionAndReason: i328 speculation: a319  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -39707
stableDimension: 0
stamp: i32 [-39707] ⇊00000000ffff64e5 ⇈00000000ffff64e5
stampKind: i32
value: int[-39707|0xffffffffffff64e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38931
stableDimension: 0
stamp: i32 [-38931] ⇊00000000ffff67ed ⇈00000000ffff67ed
stampKind: i32
value: int[-38931|0xffffffffffff67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v199 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-39707 - -38931] ⇊00000000ffff64e5 ⇈00000000ffff67ed
valueDescription: i32
=== Inputs ===
merge: v316 
values: i318 i324 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v316 values: i318 i324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v317 v323 
=== Succesors ===
next: v322 
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v317 v323 #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
actionAndReason: i320 
speculation: a319 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?11 actionAndReason: i320 speculation: a319  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a809 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a809  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v820 v62 ?11 ?30 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a809 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.trim(String.java:2868) [bci: 1]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v820 
=== Succesors ===
next: i810 
=== Usages ===
a146 v821 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v820 #next: i810  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.trim()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2868
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
i810 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a809 
=== Succesors ===
=== Usages ===
i810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i810 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.trim(String.java:2868) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v821 
=== Succesors ===
next: v8 
=== Usages ===
?11 v12 i275 i29 v50 v68 v108 i116 v154 v166 
=== Predecessor ===
a809 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v821 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a146 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.trim(String.java:2868) [bci: 1]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a809 
=== Succesors ===
=== Usages ===
v823 ?11 ?30 v824 v822 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a809  <|@  <|@
f <@~|@floating>@ <|@
tid a319 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 v330 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.trim(String.java:2873) [bci: 26]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 v44 v101 i402 a472 a363 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
result short[33|0x21] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 23]
rawvalue: 33
stableDimension: 0
stamp: i16 [33] ⇊0000000000000021 ⇈0000000000000021
stampKind: i16
value: short[33|0x21]
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 v184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.trim(String.java:2869) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 v105 v502 v399 a426 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
i810 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4b492c08 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2868) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64bcb563 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B4" 
    successors "B2" "B83" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i10 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i5 i25 
=== Succesors ===
=== Usages ===
?11 v12 v822 v108 i25 i70 ?30 v31 v117 v44 j289 v154 i275 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v9 values: i5 i25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 6.0188605396413815
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 13]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v8 
=== Succesors ===
next: v200 
=== Usages ===
i10 v20 v26 v199 v204 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v8 #next: v200  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<String.trim()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2872
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i810 i10 a146 
=== Succesors ===
=== Usages ===
v189 v322 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i810 i10 a146  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i810 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i810  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v196 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v196 #falseSuccessor: v199  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 20]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i810 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i810  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 20]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v154 
=== Succesors ===
trueSuccessor: v201 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v154 #trueSuccessor: v201 #falseSuccessor: v204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: i811 
=== Usages ===
i811 
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i811  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
result [v3|QWORD[.] + v4|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a146 
index: i10 
=== Succesors ===
=== Usages ===
i811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a146 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i811 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 20]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v201 
address: v822 
=== Succesors ===
next: v23 
=== Usages ===
v182 
=== Predecessor ===
v201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v201 address: v822 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i811 
y: i181 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i811 y: i181  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 23]
stamp: void
trueSuccessorProbability: 0.8338555955211445
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
i811 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v18 #falseSuccessor: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v3|QWORD[.] + v4|DWORD * 2 + 16] y: 33 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8338555955211445 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617336753041426257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2873) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?11 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.trim(String.java:2873) [bci: 26]
stamp: i32
=== Inputs ===
x: i10 
y: i24 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 13]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2872) [bci: 13]
locals: v0|QWORD[.] v2|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:13] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|DWORD] destination: B4 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 40]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B9" 
    successors "B7" "B80" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i29 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v28 
values: i810 i34 
=== Succesors ===
=== Usages ===
?30 v31 i34 v68 i70 v50 j818 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v28 values: i810 i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.889231371397819
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 32]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v27 
=== Succesors ===
next: v210 
=== Usages ===
i29 v39 v43 v209 v214 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v27 #next: v210  <|@  <|@
tid ?30 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<String.trim()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2875
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i29 i10 a146 
=== Succesors ===
=== Usages ===
v190 v330 a363 a472 a426 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i29 i10 a146  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i29 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v206 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v206 #falseSuccessor: v209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 40]
stamp: i32
=== Inputs ===
x: i29 
y: i33 
=== Succesors ===
=== Usages ===
v166 i29 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i29 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i810 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i34 y: i810  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v214 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v211 #falseSuccessor: v214  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i812 
=== Usages ===
i812 
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i812  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i29 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i29  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
result [v3|QWORD[.] + v8|QWORD * 2 + 14] <|@
d <@d|@=== Debug Properties ===
displacement: 14
scale: Times2
stamp: void*
=== Inputs ===
base: a146 
index: j818 
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a146 index: j818  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i812 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 41]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v211 
address: v823 
=== Succesors ===
next: v42 
=== Usages ===
v184 
=== Predecessor ===
v211 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v211 address: v823 #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 44]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i812 
y: i181 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i812 y: i181  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 44]
stamp: void
trueSuccessorProbability: 0.742879786645197
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
i812 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v37 #falseSuccessor: v39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v3|QWORD[.] + v8|QWORD * 2 + 14] y: 33 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.742879786645197 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613688389463824590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2876) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?30 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?30 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 32]
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2875) [bci: 32]
locals: v0|QWORD[.] v6|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|DWORD] destination: B9 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 53]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 54]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i24 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 54]
stamp: void
trueSuccessorProbability: 0.011203796570366187
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v45 #falseSuccessor: v46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011203796570366187 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577612170780661248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 63]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i810 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i29 y: i810  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 63]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v218 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v218 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
result int[-44819|0xffffffffffff50ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -44819
stableDimension: 0
stamp: i32 [-44819] ⇊00000000ffff50ed ⇈00000000ffff50ed
stampKind: i32
value: int[-44819|0xffffffffffff50ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v218 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-44819|0xffffffffffff50ed]] destination: B12 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4577612170780661248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 76]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2878) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i810 
y: i29 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i810 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v220 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v222 #falseSuccessor: v220  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
result int[-45075|0xffffffffffff4fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45075
stableDimension: 0
stamp: i32 [-45075] ⇊00000000ffff4fed ⇈00000000ffff4fed
stampKind: i32
value: int[-45075|0xffffffffffff4fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45075|0xffffffffffff4fed]] destination: B15 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1962) [bci: 19]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1965) [bci: 33]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i32
=== Inputs ===
x: i29 
y: i10 
=== Succesors ===
=== Usages ===
i116 v105 j518 v101 a426 v276 i298 v449 i402 v411 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i29 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i5 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v226 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v226 #falseSuccessor: v224  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
result int[-45331|0xffffffffffff4eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45331
stableDimension: 0
stamp: i32 [-45331] ⇊00000000ffff4eed ⇈00000000ffff4eed
stampKind: i32
value: int[-45331|0xffffffffffff4eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45331|0xffffffffffff4eed]] destination: B17 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B25" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1966) [bci: 36]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i24 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i810 
y: i10 
=== Succesors ===
=== Usages ===
v231 v273 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i810 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 v496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j488 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v382 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
result [v10|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j488 
index: - 
=== Succesors ===
=== Usages ===
j492 j388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j488 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a363 a472 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v348 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a363 a472 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j503 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j504 j512 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v102 #falseSuccessor: v103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v228 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v230 #falseSuccessor: v228  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
result int[-45587|0xffffffffffff4ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45587
stableDimension: 0
stamp: i32 [-45587] ⇊00000000ffff4ded ⇈00000000ffff4ded
stampKind: i32
value: int[-45587|0xffffffffffff4ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v230 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45587|0xffffffffffff4ded]] destination: B20 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: j350 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j350 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j370 
=== Usages ===
v826 v827 
=== Predecessor ===
v228 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j370  <|@  <|@
f <@~|@floating>@ <|@
tid v826 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
j370 v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j370 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v826 
=== Succesors ===
next: j371 
=== Usages ===
j504 j376 v844 
=== Predecessor ===
j350 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v826 #next: j371  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
j371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j371 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v827 
=== Succesors ===
next: v358 
=== Usages ===
v355 
=== Predecessor ===
j370 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v827 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid j504 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j370 
y: j503 
=== Succesors ===
=== Usages ===
v355 v372 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j370 y: j503  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j371 
y: j504 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j371 y: j504  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v356 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
j371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v356 #falseSuccessor: v357  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561606301817256111
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a363 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a363 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?30 
arguments: v348 i361 i24 
=== Succesors ===
next: j364 
=== Usages ===
j364 
=== Predecessor ===
v356 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?30 arguments: v348 i361 i24 #next: j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j364 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a363 
=== Succesors ===
next: v377 
=== Usages ===
j376 
=== Predecessor ===
a363 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a363 #next: v377  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
j364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2875) [bci: 32]
locals: v0|QWORD[.] v6|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD[.]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591213176725842898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v826 
value: j504 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v826 value: j504 stateAfter: - lastLocationAccess: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
result [v12|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j370 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j370 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v844 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v844 #next: v375  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
v368 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j376 <|@
result v15|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v374 
values: j370 j364 
=== Succesors ===
=== Usages ===
v829 v828 a239 v845 v846 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v374 values: j370 j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v375 v377 
=== Succesors ===
next: a239 
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v375 v377 #next: a239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a239 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j376 
=== Succesors ===
next: j388 
=== Usages ===
a245 
=== Predecessor ===
v374 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j376 #next: j388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j388 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v841 
=== Succesors ===
next: v389 
=== Usages ===
v389 
=== Predecessor ===
a239 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v841 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
result [v15|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v828 
value: j388 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
j388 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v828 value: j388 stateAfter: - lastLocationAccess: - #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
result [v15|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v829 
value: v508 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v829 value: v508 stateAfter: - lastLocationAccess: - #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v845 <|@
result [v15|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a257 <|@
result NarrowOop[char[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v845 
value: a257 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v845 value: a257 stateAfter: - lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
result [v15|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a245 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v846 value: i5 stateAfter: - lastLocationAccess: - #next: a245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a245 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a239 
=== Succesors ===
next: v246 
=== Usages ===
v131 
=== Predecessor ===
v399 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a239 #next: v246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
a245 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a245 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a245 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*]], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606254640832671520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i32
=== Inputs ===
x: i810 
y: i70 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i810 y: i70  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i10 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i116 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v232 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v234 #falseSuccessor: v232  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
result int[-45843|0xffffffffffff4ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45843
stableDimension: 0
stamp: i32 [-45843] ⇊00000000ffff4ced ⇈00000000ffff4ced
stampKind: i32
value: int[-45843|0xffffffffffff4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45843|0xffffffffffff4ced]] destination: B26 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606254640832671520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v272 
falseSuccessor: v270 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v272 #falseSuccessor: v270  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B81" 
    xhandlers
    flags 
    probability 4546247086308093308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
result int[-70241|0xfffffffffffeed9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -70241
stableDimension: 0
stamp: i32 [-70241] ⇊00000000fffeed9f ⇈00000000fffeed9f
stampKind: i32
value: int[-70241|0xfffffffffffeed9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-70241|0xfffffffffffeed9f]] destination: B28 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4606253832890542781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: j405 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j405 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j446 
=== Usages ===
v830 v831 
=== Predecessor ===
v270 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
j446 v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v830 
=== Succesors ===
next: j447 
=== Usages ===
j409 v832 v833 a425 v838 v834 v835 v836 v837 
=== Predecessor ===
j405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v830 #next: j447  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j405 
index: - 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j447 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v831 
=== Succesors ===
next: v414 
=== Usages ===
v415 
=== Predecessor ===
j446 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v831 #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid i410 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i410 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i70 y: i410  <|@  <|@
f <@~|@floating>@ <|@
tid j401 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 v529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v411 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v412 
=== Usages ===
=== Predecessor ===
j447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v411 #trueSuccessor: v413 #falseSuccessor: v412  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605445971556016145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i70 
y: i24 
=== Succesors ===
=== Usages ===
i434 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i70 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i402 
y: i433 
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i402 y: i433  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i434 
y: i403 
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i434 y: i403  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i404 
=== Succesors ===
=== Usages ===
j409 v834 v835 v836 v837 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i404  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i64
=== Inputs ===
x: j408 
y: j446 
=== Succesors ===
=== Usages ===
v415 v448 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j408 y: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j447 
y: j409 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j447 y: j409  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v415 
=== Succesors ===
trueSuccessor: v420 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v415 #trueSuccessor: v420 #falseSuccessor: v419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SHL v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v21|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = AND v22|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v24|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575806903067926871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v418  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4605373264035908748
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v830 
value: j409 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v830 value: j409 stateAfter: - lastLocationAccess: - #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
result [v24|QWORD + v19|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j408 
index: j446 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j408 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
address: v834 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v834 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
result [v24|QWORD + v19|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j408 
index: j446 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j408 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
address: v835 
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v835 #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
result [v24|QWORD + v19|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j408 
index: j446 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j408 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
address: v836 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v836 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
result [v24|QWORD + v19|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j408 
index: j446 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j408 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
address: v837 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v837 #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
result [v19|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j446 
index: - 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j446 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v832 
value: i70 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v832 value: i70 stateAfter: - lastLocationAccess: - #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v833 <|@
result [v19|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j446 
index: - 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j446 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v833 
value: j401 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v833 value: j401 stateAfter: - lastLocationAccess: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
result [v19|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j446 
index: - 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j446 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v838 
value: v511 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v838 value: v511 stateAfter: - lastLocationAccess: - #next: v424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: a425 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a425 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j446 
=== Succesors ===
next: v427 
=== Usages ===
a430 
=== Predecessor ===
v424 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j446 #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
a425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v24|QWORD + v19|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v24|QWORD + v19|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v24|QWORD + v19|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v24|QWORD + v19|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591127311339378019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v412 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591708971500237198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v416 v418 
=== Succesors ===
next: a426 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v416 v418 #next: a426  <|@  <|@
f <@~|@floating>@ <|@
tid v400 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a426 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a426 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?30 
arguments: v400 i70 i5 
=== Succesors ===
next: v429 
=== Usages ===
a430 
=== Predecessor ===
v417 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?30 arguments: v400 i70 i5 #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
a426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2875) [bci: 32]
locals: v0|QWORD[.] v6|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a430 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v428 
values: a425 a426 
=== Succesors ===
=== Usages ===
v850 a302 v825 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v428 values: a425 a426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v427 v429 
=== Succesors ===
next: v659 
=== Usages ===
a430 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v427 v429 #next: v659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v532 
=== Usages ===
j660 j662 
=== Predecessor ===
v428 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 3]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
stamp: i32
=== Inputs ===
x: i810 
y: i10 
=== Succesors ===
=== Usages ===
v276 i298 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i810 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i275 
y: i70 
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i275 y: i70  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v276 
trueValue: i275 
falseValue: i70 
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v276 trueValue: i275 falseValue: i70  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i298 
=== Succesors ===
=== Usages ===
j724 v850 j523 v529 v656 j706 j712 j716 j720 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i298  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j519 
y: j401 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j519 y: j401  <|@  <|@
f <@~|@floating>@ <|@
tid j723 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j724 j775 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j665 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j679 j742 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j720 j772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j688 j748 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j715 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j716 j769 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j754 j696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j711 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j712 j766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 20]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j760 j704 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j705 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j706 j761 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j755 v707 j749 v762 j689 j697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v529 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v531 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v529 #trueSuccessor: v530 #falseSuccessor: v531  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v2|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v32|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B54" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v549  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
result [v29|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a430 
index: - 
=== Succesors ===
=== Usages ===
j662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a430 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j662 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v659 
address: v825 
=== Succesors ===
=== Usages ===
v851 v853 v855 v857 v859 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v659 address: v825  <|@  <|@
f <@~|@floating>@ <|@
tid j289 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at com.oracle.graal.enterprise.I.b.loadVector(JavaKind, char[], int, StructuralInput$Memory) [bci: -1]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:105) [bci: 26]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i10 
=== Succesors ===
=== Usages ===
v824 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
result [v3|QWORD[.] + v34|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a146 
index: j289 
=== Succesors ===
=== Usages ===
j660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a146 index: j289  <|@  <|@
f <@~|@floating>@ <|@
tid j660 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v659 
address: v824 
=== Succesors ===
=== Usages ===
v852 v854 v856 v858 v860 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v659 address: v824  <|@  <|@
f <@~|@floating>@ <|@
tid j706 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j519 
y: j705 
=== Succesors ===
=== Usages ===
v707 v709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j519 y: j705  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j706 
y: j237 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j706 y: j237  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v707 
=== Succesors ===
trueSuccessor: v533 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v707 #trueSuccessor: v533 #falseSuccessor: v534  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = LEA [v29|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = LEA [v3|QWORD[.] + v34|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v32|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B78" 
    successors "B41" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j697 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v537 
values: j237 j704 
=== Succesors ===
=== Usages ===
v860 j704 v859 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: j237 j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v536 
=== Succesors ===
next: v813 
=== Usages ===
v813 v541 v542 j697 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v536 #next: v813  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
result [v35|QWORD[.] + v37|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j660 
index: j697 
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j660 index: j697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v813 <|@
result v38|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v537 
address: v860 
=== Succesors ===
next: v793 
=== Usages ===
v793 
=== Predecessor ===
v537 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v537 address: v860 #next: v793  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
result [v33|QWORD[.] + v37|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j662 
index: j697 
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j662 index: j697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v859 
value: v813 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v859 value: v813 stateAfter: - lastLocationAccess: - #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid j704 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j697 
y: j159 
=== Succesors ===
=== Usages ===
j689 j697 v709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j697 y: j159  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j706 
y: j704 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j706 y: j704  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v541 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v793 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v541 #falseSuccessor: v543  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|V256_WORD = H [v35|QWORD[.] + v37|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[.] + v37|QWORD * 2], input: v38|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v37|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v537 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v537 #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j689 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v546 
values: j237 j704 
=== Succesors ===
=== Usages ===
v858 j696 j680 v713 v857 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v546 values: j237 j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v545 v547 
=== Succesors ===
next: v569 
=== Usages ===
j689 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v545 v547 #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid j712 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j519 
y: j711 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j519 y: j711  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j712 
y: j689 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j712 y: j689  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v713 
=== Succesors ===
trueSuccessor: v568 
falseSuccessor: v567 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v713 #trueSuccessor: v568 #falseSuccessor: v567  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v32|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
v814 
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
result [v35|QWORD[.] + v40|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j660 
index: j689 
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j660 index: j689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v814 <|@
result v42|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v567 
address: v858 
=== Succesors ===
next: v791 
=== Usages ===
v791 
=== Predecessor ===
v567 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v567 address: v858 #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
result [v33|QWORD[.] + v40|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j662 
index: j689 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j662 index: j689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
value: v814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v814 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v857 value: v814 stateAfter: - lastLocationAccess: - #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid j696 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j689 
y: j391 
=== Succesors ===
=== Usages ===
j680 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j689 y: j391  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v791 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|V128_WORD = H [v35|QWORD[.] + v40|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[.] + v40|QWORD * 2], input: v42|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j680 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v557 
values: j696 j689 
=== Succesors ===
=== Usages ===
v856 j688 j672 v717 v855 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v557 values: j696 j689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v556 v572 
=== Succesors ===
next: v575 
=== Usages ===
j680 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v556 v572 #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid j716 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j519 
y: j715 
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j519 y: j715  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j716 
y: j680 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j716 y: j680  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v717 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v573 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v717 #trueSuccessor: v574 #falseSuccessor: v573  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v32|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v815 
=== Usages ===
v815 
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
result [v35|QWORD[.] + v44|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j660 
index: j680 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j660 index: j680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
result v46|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v573 
address: v856 
=== Succesors ===
next: v789 
=== Usages ===
v789 
=== Predecessor ===
v573 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v573 address: v856 #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
result [v33|QWORD[.] + v44|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j662 
index: j680 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j662 index: j680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v855 
value: v815 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v855 value: v815 stateAfter: - lastLocationAccess: - #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j680 
y: j687 
=== Succesors ===
=== Usages ===
j672 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j680 y: j687  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v789 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|V64_WORD = H [v35|QWORD[.] + v44|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[.] + v44|QWORD * 2], input: v46|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v44|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j672 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v561 
values: j688 j680 
=== Succesors ===
=== Usages ===
v854 j679 j663 v721 v853 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v561 values: j688 j680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v560 v578 
=== Succesors ===
next: v581 
=== Usages ===
j672 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v560 v578 #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid j720 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j519 
y: j719 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j519 y: j719  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j720 
y: j672 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j720 y: j672  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v721 
=== Succesors ===
trueSuccessor: v580 
falseSuccessor: v579 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v721 #trueSuccessor: v580 #falseSuccessor: v579  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v32|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|QWORD, y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v580 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v816 
=== Usages ===
v816 
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
result [v35|QWORD[.] + v48|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j660 
index: j672 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j660 index: j672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
result v50|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v579 
address: v854 
=== Succesors ===
next: v787 
=== Usages ===
v787 
=== Predecessor ===
v579 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v579 address: v854 #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
result [v33|QWORD[.] + v48|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j662 
index: j672 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j662 index: j672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
value: v816 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v853 value: v816 stateAfter: - lastLocationAccess: - #next: v563  <|@  <|@
f <@~|@floating>@ <|@
tid j679 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j672 
y: j665 
=== Succesors ===
=== Usages ===
j663 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j672 y: j665  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
v787 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|V32_WORD = H [v35|QWORD[.] + v48|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[.] + v48|QWORD * 2], input: v50|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v48|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j663 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v564 
values: j679 j672 
=== Succesors ===
=== Usages ===
v852 v725 v851 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v564 values: j679 j672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v563 v584 
=== Succesors ===
next: v587 
=== Usages ===
j663 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v563 v584 #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid j724 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j519 
y: j723 
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j519 y: j723  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j724 
y: j663 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j724 y: j663  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v725 
=== Succesors ===
trueSuccessor: v586 
falseSuccessor: v585 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v725 #trueSuccessor: v586 #falseSuccessor: v585  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = DEC v32|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v590  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i817 
=== Usages ===
i817 
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i817  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
result [v35|QWORD[.] + v52|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j660 
index: j663 
=== Succesors ===
=== Usages ===
i817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j660 index: j663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i817 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v585 
address: v852 
=== Succesors ===
next: v785 
=== Usages ===
v785 
=== Predecessor ===
v585 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v585 address: v852 #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
result [v33|QWORD[.] + v52|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j662 
index: j663 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j662 index: j663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v851 
value: i817 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
i817 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v851 value: i817 stateAfter: - lastLocationAccess: - #next: v566  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v785 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVSX [v35|QWORD[.] + v52|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[.] + v52|QWORD * 2], y: v54|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B36" "B53" "B52" 
    successors "B55" "B73" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v549 v566 v590 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v549 v566 v590 #next: v728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v597 
=== Usages ===
j730 
=== Predecessor ===
v550 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i70 
=== Succesors ===
=== Usages ===
j523 v656 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i70  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j519 
y: j518 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j519 y: j518  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v656 
=== Succesors ===
trueSuccessor: v596 
falseSuccessor: v595 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v656 #trueSuccessor: v596 #falseSuccessor: v595  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVSXD v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
result [v29|QWORD[.] + v32|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a430 
index: j519 
=== Succesors ===
=== Usages ===
j730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a430 index: j519  <|@  <|@
f <@~|@floating>@ <|@
tid j730 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v728 
address: v850 
=== Succesors ===
=== Usages ===
v861 v862 v863 v864 v865 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v728 address: v850  <|@  <|@
f <@~|@floating>@ <|@
tid j523 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j518 
y: j519 
=== Succesors ===
=== Usages ===
j775 j761 j766 j769 j772 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j518 y: j519  <|@  <|@
f <@~|@floating>@ <|@
tid j761 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j523 
y: j705 
=== Succesors ===
=== Usages ===
v762 v764 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j523 y: j705  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j761 
y: j237 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j761 y: j237  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v599 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v598 #falseSuccessor: v599  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = LEA [v29|QWORD[.] + v32|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = SUB (x: v55|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v57|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
result v59|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B72" 
    successors "B59" "B72" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j755 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v602 
values: j237 j760 
=== Succesors ===
=== Usages ===
v865 j760 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v602 values: j237 j760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v601 
=== Succesors ===
next: v803 
=== Usages ===
j755 v605 v606 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v601 #next: v803  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
result [v56|QWORD[.] + v60|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j730 
index: j755 
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: j755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
value: v804 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v865 value: v804 stateAfter: - lastLocationAccess: - #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid j760 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j755 
y: j159 
=== Succesors ===
=== Usages ===
j749 j755 v764 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j755 y: j159  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j761 
y: j760 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j761 y: j760  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v764 
=== Succesors ===
trueSuccessor: v605 
falseSuccessor: v607 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v764 #trueSuccessor: v605 #falseSuccessor: v607  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v56|QWORD[.] + v60|QWORD * 2], input: v59|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v602 
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v602 #next: v611  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j749 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v610 
values: j237 j760 
=== Succesors ===
=== Usages ===
v864 j754 j743 v767 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v610 values: j237 j760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v609 v611 
=== Succesors ===
next: v632 
=== Usages ===
j749 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v609 v611 #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid j766 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j523 
y: j711 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j523 y: j711  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j766 
y: j749 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j766 y: j749  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v767 
=== Succesors ===
trueSuccessor: v631 
falseSuccessor: v630 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v767 #trueSuccessor: v631 #falseSuccessor: v630  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
v631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
result [v56|QWORD[.] + v62|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j730 
index: j749 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: j749  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
result v64|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
value: v808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v864 value: v808 stateAfter: - lastLocationAccess: - #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j749 
y: j391 
=== Succesors ===
=== Usages ===
j743 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j391  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
v802 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v56|QWORD[.] + v62|QWORD * 2], input: v64|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v62|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j743 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v621 
values: j754 j749 
=== Succesors ===
=== Usages ===
v863 j748 j737 v770 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v621 values: j754 j749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v620 v635 
=== Succesors ===
next: v638 
=== Usages ===
j743 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v620 v635 #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid j769 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j523 
y: j715 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j523 y: j715  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j769 
y: j743 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j769 y: j743  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v770 
=== Succesors ===
trueSuccessor: v637 
falseSuccessor: v636 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v770 #trueSuccessor: v637 #falseSuccessor: v636  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v57|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v641  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v800  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
result [v56|QWORD[.] + v66|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j730 
index: j743 
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: j743  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
result v68|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
value: v807 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v863 value: v807 stateAfter: - lastLocationAccess: - #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j743 
y: j687 
=== Succesors ===
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j743 y: j687  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v56|QWORD[.] + v66|QWORD * 2], input: v68|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j737 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v624 
values: j748 j743 
=== Succesors ===
=== Usages ===
v862 j742 j731 v773 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v624 values: j748 j743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v623 v641 
=== Succesors ===
next: v644 
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v623 v641 #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid j772 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j523 
y: j719 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j523 y: j719  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j772 
y: j737 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j772 y: j737  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v773 
=== Succesors ===
trueSuccessor: v643 
falseSuccessor: v642 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v773 #trueSuccessor: v643 #falseSuccessor: v642  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v57|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v647  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
v643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
result [v56|QWORD[.] + v70|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j730 
index: j737 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: j737  <|@  <|@
f <@~|@floating>@ <|@
tid v806 <|@
result v72|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
value: v806 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v862 value: v806 stateAfter: - lastLocationAccess: - #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j737 
y: j665 
=== Succesors ===
=== Usages ===
j731 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j737 y: j665  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v56|QWORD[.] + v70|QWORD * 2], input: v72|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v70|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j731 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v627 
values: j742 j737 
=== Succesors ===
=== Usages ===
v861 v776 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v627 values: j742 j737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v626 v647 
=== Succesors ===
next: v650 
=== Usages ===
j731 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v626 v647 #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid j775 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j523 
y: j723 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j523 y: j723  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j775 
y: j731 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j775 y: j731  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v776 
=== Succesors ===
trueSuccessor: v649 
falseSuccessor: v648 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v776 #trueSuccessor: v649 #falseSuccessor: v648  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = DEC v57|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v653  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
v649 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v796 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
result [v56|QWORD[.] + v74|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j730 
index: j731 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: j731  <|@  <|@
f <@~|@floating>@ <|@
tid i805 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
value: i805 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v861 value: i805 stateAfter: - lastLocationAccess: - #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
v796 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD[.] + v74|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v606  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v602 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v602  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B72 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B74" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B71" "B70" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v613 v629 v653 
=== Succesors ===
next: a302 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v613 v629 v653 #next: a302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a302 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1969) [bci: 75]
at java.lang.String.trim(String.java:2878) [bci: 69]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a430 
=== Succesors ===
next: j461 
=== Usages ===
a252 
=== Predecessor ===
v614 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a430 #next: j461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j461 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j476 
=== Usages ===
v839 v840 
=== Predecessor ===
a302 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j476  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
j476 v478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j476 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v839 
=== Succesors ===
next: j477 
=== Usages ===
j512 j482 v847 
=== Predecessor ===
j461 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v839 #next: j477  <|@  <|@
f <@~|@floating>@ <|@
tid v840 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
j477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j477 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v840 
=== Succesors ===
next: v469 
=== Usages ===
v466 
=== Predecessor ===
j476 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v840 #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j476 
y: j503 
=== Succesors ===
=== Usages ===
v466 v478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j476 y: j503  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j477 
y: j512 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j477 y: j512  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v466 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v468 
=== Usages ===
=== Predecessor ===
j477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v466 #trueSuccessor: v467 #falseSuccessor: v468  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v76|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4576323934322023919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a472 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a472 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?30 
arguments: v348 i361 i24 
=== Succesors ===
next: j473 
=== Usages ===
j473 
=== Predecessor ===
v467 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?30 arguments: v348 i361 i24 #next: j473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j473 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a472 
=== Succesors ===
next: v483 
=== Usages ===
j482 
=== Predecessor ===
a472 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a472 #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
j473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2875) [bci: 32]
locals: v0|QWORD[.] v6|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4606173046757090118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v839 
value: j512 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v839 value: j512 stateAfter: - lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
result [v76|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j476 
index: - 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j476 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v847 
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v847 #next: v481  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
v475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v76|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j482 <|@
result v79|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v480 
values: j476 j473 
=== Succesors ===
=== Usages ===
v843 v842 a249 v848 v849 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v480 values: j476 j473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v481 v483 
=== Succesors ===
next: a249 
=== Usages ===
j482 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v481 v483 #next: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a249 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j482 
=== Succesors ===
next: j492 
=== Usages ===
a255 
=== Predecessor ===
v480 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j482 #next: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j492 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v841 
=== Succesors ===
next: v493 
=== Usages ===
v493 
=== Predecessor ===
a249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v841 #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
result [v79|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v842 
value: j492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
j492 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v842 value: j492 stateAfter: - lastLocationAccess: - #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
result [v79|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v843 
value: v508 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v843 value: v508 stateAfter: - lastLocationAccess: - #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v848 <|@
result [v79|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a252 <|@
result v82|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a302 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v848 
value: a252 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v848 value: a252 stateAfter: - lastLocationAccess: - #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
result [v79|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a255 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v849 value: i5 stateAfter: - lastLocationAccess: - #next: a255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a255 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a249 
=== Succesors ===
next: v256 
=== Usages ===
v132 
=== Predecessor ===
v502 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a249 #next: v256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
a255 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a255 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a255 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*]], y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v79|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = COMPRESSPOINTER (input: v29|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64bcb563 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*] + 12], y: v82|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4599730579926855694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v542  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v537 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v537  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B78 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
result int[-42779|0xffffffffffff58e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42779
stableDimension: 0
stamp: i32 [-42779] ⇊00000000ffff58e5 ⇈00000000ffff58e5
stampKind: i32
value: int[-42779|0xffffffffffff58e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v214 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42779|0xffffffffffff58e5]] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2875) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
result int[-42003|0xffffffffffff5bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42003
stableDimension: 0
stamp: i32 [-42003] ⇊00000000ffff5bed ⇈00000000ffff5bed
stampKind: i32
value: int[-42003|0xffffffffffff5bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v209 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42003|0xffffffffffff5bed]] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B12" "B80" "B79" "B15" "B17" "B20" "B26" "B28" 
    successors 
    xhandlers
    flags 
    probability 4546247086308093308
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i328 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-70241 - -42003] ⇊00000000fffe4085
valueDescription: i32
=== Inputs ===
merge: v325 
values: i327 i332 i334 i336 i338 i340 i342 i344 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v325 values: i327 i332 i334 i336 i338 i340 i342 i344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v326 v331 v333 v335 v337 v339 v341 v345 
=== Succesors ===
next: v330 
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v326 v331 v333 v335 v337 v339 v341 v345 #next: v330  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?30 
actionAndReason: i328 
speculation: a319 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?30 actionAndReason: i328 speculation: a319  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2875) [bci: 32]
locals: v0|QWORD[.] v6|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
result int[-39707|0xffffffffffff64e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -39707
stableDimension: 0
stamp: i32 [-39707] ⇊00000000ffff64e5 ⇈00000000ffff64e5
stampKind: i32
value: int[-39707|0xffffffffffff64e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39707|0xffffffffffff64e5]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.trim(String.java:2872) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result int[-38931|0xffffffffffff67ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38931
stableDimension: 0
stamp: i32 [-38931] ⇊00000000ffff67ed ⇈00000000ffff67ed
stampKind: i32
value: int[-38931|0xffffffffffff67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
v199 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38931|0xffffffffffff67ed]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i320 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-39707 - -38931] ⇊00000000ffff64e5 ⇈00000000ffff67ed
valueDescription: i32
=== Inputs ===
merge: v316 
values: i318 i324 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v316 values: i318 i324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v317 v323 
=== Succesors ===
next: v322 
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v317 v323 #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
actionAndReason: i320 
speculation: a319 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?11 actionAndReason: i320 speculation: a319  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2872) [bci: 13]
locals: v0|QWORD[.] v2|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4b492c08 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2868) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64bcb563 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v3|QWORD[.] + v4|DWORD * 2 + 16] y: 33 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8338555955211445 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617336753041426257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2872) [bci: 13]
locals: v0|QWORD[.] v2|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:13] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|DWORD] destination: B4 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B4" 
    successors "B2" "B83" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v3|QWORD[.] + v8|QWORD * 2 + 14] y: 33 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.742879786645197 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613688389463824590
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2875) [bci: 32]
locals: v0|QWORD[.] v6|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|DWORD] destination: B9 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B9" 
    successors "B7" "B80" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011203796570366187 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B25" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606254640832671520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v2|DWORD, ~y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606254640832671520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4606253832890542781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605445971556016145
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SHL v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v21|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = AND v22|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v24|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4605373264035908748
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v24|QWORD + v19|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v24|QWORD + v19|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v24|QWORD + v19|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v24|QWORD + v19|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v2|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v32|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = LEA [v29|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = LEA [v3|QWORD[.] + v34|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v32|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v32|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|V128_WORD = H [v35|QWORD[.] + v40|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[.] + v40|QWORD * 2], input: v42|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v32|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|V64_WORD = H [v35|QWORD[.] + v44|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[.] + v44|QWORD * 2], input: v46|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v44|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v32|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|QWORD, y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|V32_WORD = H [v35|QWORD[.] + v48|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[.] + v48|QWORD * 2], input: v50|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v48|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = DEC v32|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVSX [v35|QWORD[.] + v52|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[.] + v52|QWORD * 2], y: v54|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B36" "B53" "B52" 
    successors "B55" "B73" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVSXD v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B74" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B71" "B70" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v76|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4606173046757090118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v76|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*]], y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v79|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = COMPRESSPOINTER (input: v29|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64bcb563 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*] + 12], y: v82|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B54" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = LEA [v29|QWORD[.] + v32|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = SUB (x: v55|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v57|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v56|QWORD[.] + v62|QWORD * 2], input: v64|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v62|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v57|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v56|QWORD[.] + v66|QWORD * 2], input: v68|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v57|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v56|QWORD[.] + v70|QWORD * 2], input: v72|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v70|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = DEC v57|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD[.] + v74|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4599730579926855694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B78 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B78" 
    successors "B41" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|V256_WORD = H [v35|QWORD[.] + v37|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[.] + v37|QWORD * 2], input: v38|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v37|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4599730579926855694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B72 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B72" 
    successors "B59" "B72" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v56|QWORD[.] + v60|QWORD * 2], input: v59|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591213176725842898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*]], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591127311339378019
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591708971500237198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2875) [bci: 32]
locals: v0|QWORD[.] v6|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577612170780661248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4577612170780661248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4576323934322023919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2875) [bci: 32]
locals: v0|QWORD[.] v6|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575806903067926871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561606301817256111
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2875) [bci: 32]
locals: v0|QWORD[.] v6|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD[.]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B81" 
    xhandlers
    flags 
    probability 4546247086308093308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-70241|0xfffffffffffeed9f]] destination: B28 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B12" "B80" "B79" "B15" "B17" "B20" "B26" "B28" 
    successors 
    xhandlers
    flags 
    probability 4546247086308093308
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2875) [bci: 32]
locals: v0|QWORD[.] v6|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-44819|0xffffffffffff50ed]] destination: B12 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45075|0xffffffffffff4fed]] destination: B15 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45587|0xffffffffffff4ded]] destination: B20 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39707|0xffffffffffff64e5]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.trim(String.java:2872) [bci: 13]
locals: v0|QWORD[.] v2|DWORD v4|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38931|0xffffffffffff67ed]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42779|0xffffffffffff58e5]] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45331|0xffffffffffff4eed]] destination: B17 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45843|0xffffffffffff4ced]] destination: B26 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42003|0xffffffffffff5bed]] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:char[]
     4: arraylength   
     5: istore_1      
     6: iconst_0      
     7: istore_2      
     8: aload_0       
     9: getfield      #1          // value:char[]
    12: astore_3      
    13: iload_2       
    14: iload_1       
    15: if_icmpge     32
    18: aload_3       
    19: iload_2       
    20: caload        
    21: bipush        32
    23: if_icmpgt     32
    26: iinc          
    29: goto          13
    32: iload_2       
    33: iload_1       
    34: if_icmpge     53
    37: aload_3       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: caload        
    42: bipush        32
    44: if_icmpgt     53
    47: iinc          
    50: goto          32
    53: iload_2       
    54: ifgt          66
    57: iload_1       
    58: aload_0       
    59: getfield      #1          // value:char[]
    62: arraylength   
    63: if_icmpge     75
    66: aload_0       
    67: iload_2       
    68: iload_1       
    69: invokevirtual #60         // substring:(int, int)java.lang.String
    72: goto          76
    75: aload_0       
    76: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4b492c08 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, r13:0]
live-base-pointers: []
java.lang.String.trim(String.java:2868) [bci: 0]
locals: r13|QWORD[.] - - - 
>@ <|@ instruction r14|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64bcb563 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   28  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction CMP [rax|QWORD[.] + r10|DWORD * 2 + 16] y: 33 size: WORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.8338555955211445 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617336753041426257
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2872) [bci: 13]
locals: r13|QWORD[.] r14|DWORD r10|DWORD rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:13] <|@ <|@
      nr   42  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B4" 
    successors "B2" "B83" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   60  <|@ instruction rsi|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMP [rax|QWORD[.] + rdx|QWORD * 2 + 14] y: 33 size: WORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.742879786645197 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613688389463824590
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2875) [bci: 32]
locals: r13|QWORD[.] r11|DWORD r10|DWORD rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:32] <|@ <|@
      nr   78  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B9 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B9" 
    successors "B7" "B80" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   54  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.011203796570366187 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction r8|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B25" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  156  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606254640832671520
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606254640832671520
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4606253832890542781
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605445971556016145
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rcx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  296  <|@ instruction rbx|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4605373264035908748
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  316  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  318  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  320  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  322  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  326  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: r8|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  374  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  376  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  392  <|@ instruction rcx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = LEA [r10|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  396  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  398  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  446  <|@ instruction J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  448  <|@ instruction r11|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  450  <|@ instruction r9|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  458  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  470  <|@ instruction J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  472  <|@ instruction r11|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  474  <|@ instruction r9|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  482  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  494  <|@ instruction J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  496  <|@ instruction r11|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  498  <|@ instruction r9|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  506  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  508  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r9|QWORD * 2] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rdx|QWORD[.] + r9|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B36" "B53" "B52" 
    successors "B55" "B73" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  526  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B74" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B71" "B70" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  672  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4606173046757090118
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  712  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rcx|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  720  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64bcb563 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B54" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B36 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  534  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  574  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  586  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  588  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  598  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  610  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  622  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  634  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  638  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  646  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction MOV (x: [rcx|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B40" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4599730579926855694
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B78 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B78" 
    successors "B41" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4601750233263172286
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  416  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  418  <|@ instruction J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  420  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  552  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4599730579926855694
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B72 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B72" 
    successors "B59" "B72" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4601750233263172286
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  558  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  560  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  562  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591213176725842898
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  216  <|@ instruction rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  230  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr  232  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591127311339378019
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591708971500237198
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  356  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2875) [bci: 32]
locals: stack:48|QWORD[.] stack:36|DWORD r13|DWORD stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577612170780661248
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction CMP (x: r14|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4577612170780661248
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4576323934322023919
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  684  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  688  <|@ st <@st|@reference-map: [r14:0, stack:16, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2875) [bci: 32]
locals: stack:48|QWORD[.] stack:36|DWORD r13|DWORD stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575806903067926871
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561606301817256111
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  198  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2875) [bci: 32]
locals: stack:48|QWORD[.] stack:36|DWORD r13|DWORD stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr  204  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B81" 
    xhandlers
    flags 
    probability 4546247086308093308
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r10|DWORD = MOVE input: int[-70241|0xfffffffffffeed9f] <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B28 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B12" "B80" "B79" "B15" "B17" "B20" "B26" "B28" 
    successors 
    xhandlers
    flags 
    probability 4546247086308093308
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  760  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2875) [bci: 32]
locals: stack:48|QWORD[.] stack:36|DWORD r13|DWORD stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction r10|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B12 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-45075|0xffffffffffff4fed] <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B15 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r10|DWORD = MOVE input: int[-45587|0xffffffffffff4ded] <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-39707|0xffffffffffff64e5] <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  792  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2872) [bci: 13]
locals: stack:48|QWORD[.] r14|DWORD r13|DWORD stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-38931|0xffffffffffff67ed] <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r10|DWORD = MOVE input: int[-42779|0xffffffffffff58e5] <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r10|DWORD = MOVE input: int[-45331|0xffffffffffff4eed] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B17 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B26 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r10|DWORD = MOVE input: int[-42003|0xffffffffffff5bed] <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:char[]
     4: arraylength   
     5: istore_1      
     6: iconst_0      
     7: istore_2      
     8: aload_0       
     9: getfield      #1          // value:char[]
    12: astore_3      
    13: iload_2       
    14: iload_1       
    15: if_icmpge     32
    18: aload_3       
    19: iload_2       
    20: caload        
    21: bipush        32
    23: if_icmpgt     32
    26: iinc          
    29: goto          13
    32: iload_2       
    33: iload_1       
    34: if_icmpge     53
    37: aload_3       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: caload        
    42: bipush        32
    44: if_icmpgt     53
    47: iinc          
    50: goto          32
    53: iload_2       
    54: ifgt          66
    57: iload_1       
    58: aload_0       
    59: getfield      #1          // value:char[]
    62: arraylength   
    63: if_icmpge     75
    66: aload_0       
    67: iload_2       
    68: iload_1       
    69: invokevirtual #60         // substring:(int, int)java.lang.String
    72: goto          76
    75: aload_0       
    76: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4b492c08 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, r13:0]
live-base-pointers: []
java.lang.String.trim(String.java:2868) [bci: 0]
locals: r13|QWORD[.] - - - 
>@ <|@ instruction r14|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64bcb563 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   28  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction CMP [rax|QWORD[.] + r10|DWORD * 2 + 16] y: 33 size: WORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.8338555955211445 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617336753041426257
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2872) [bci: 13]
locals: r13|QWORD[.] r14|DWORD r10|DWORD rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:13] <|@ <|@
      nr   42  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B4" 
    successors "B2" "B83" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618462652948268881
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   60  <|@ instruction rsi|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMP [rax|QWORD[.] + rdx|QWORD * 2 + 14] y: 33 size: WORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.742879786645197 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613688389463824590
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2875) [bci: 32]
locals: r13|QWORD[.] r11|DWORD r10|DWORD rax|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:32] <|@ <|@
      nr   78  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B9 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B9" 
    successors "B7" "B80" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615940189277509838
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   54  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.011203796570366187 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction r8|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B25" 
    xhandlers
    flags 
    probability 4607081503971898536
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  156  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606254640832671520
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606254640832671520
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B34" 
    xhandlers
    flags 
    probability 4606253832890542781
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    probability 4605445971556016145
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rcx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  296  <|@ instruction rbx|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B34 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4605373264035908748
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  316  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  318  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  320  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  322  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  326  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B54" "B37" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: r8|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  374  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  376  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B54 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" "B40" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  392  <|@ instruction rcx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = LEA [r10|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  396  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  398  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B42 falseDestination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B45" "B44" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  446  <|@ instruction J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  448  <|@ instruction r11|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  450  <|@ instruction r9|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B42" 
    successors "B48" "B47" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  458  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B48 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  470  <|@ instruction J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  472  <|@ instruction r11|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  474  <|@ instruction r9|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B45" 
    successors "B51" "B50" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  482  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B51 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  494  <|@ instruction J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  496  <|@ instruction r11|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  498  <|@ instruction r9|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B48" 
    successors "B54" "B53" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  504  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  506  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  508  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B54 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r9|QWORD * 2] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rdx|QWORD[.] + r9|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B35" "B53" "B51" 
    successors "B55" "B74" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  526  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B54" "B71" "B69" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  672  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  674  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4606173046757090118
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors 
    xhandlers
    flags 
    probability 4606253832890542782
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  706  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  712  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rcx|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  720  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64bcb563 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  534  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B63" "B62" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  574  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B63 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  586  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  588  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  590  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B60" 
    successors "B66" "B65" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  598  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B66 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  610  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B63" 
    successors "B69" "B68" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  622  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B69 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  634  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  638  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B66" 
    successors "B74" "B71" 
    xhandlers
    flags 
    probability 4601750233263172286
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  646  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B74 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4599730579926855694
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction MOV (x: [rcx|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B42" "B40" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  416  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  418  <|@ instruction J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  420  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B42 falseDestination: B40 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4592743034008431294
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  552  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B58" 
    successors "B60" "B58" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4601750233263172286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  558  <|@ instruction J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  560  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  562  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B60 falseDestination: B58 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591213176725842898
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  216  <|@ instruction rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 4591279325776981059
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  230  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr  232  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591708971500237198
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  356  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2875) [bci: 32]
locals: stack:48|QWORD[.] stack:36|DWORD r13|DWORD stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577612170780661248
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction CMP (x: r14|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4577612170780661248
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4576323934322023919
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  684  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  688  <|@ st <@st|@reference-map: [r14:0, stack:16, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2875) [bci: 32]
locals: stack:48|QWORD[.] stack:36|DWORD r13|DWORD stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561606301817256111
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  198  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2875) [bci: 32]
locals: stack:48|QWORD[.] stack:36|DWORD r13|DWORD stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr  204  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B81" 
    xhandlers
    flags 
    probability 4546247086308093308
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r10|DWORD = MOVE input: int[-70241|0xfffffffffffeed9f] <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B28 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B12" "B80" "B79" "B15" "B17" "B20" "B26" "B28" 
    successors 
    xhandlers
    flags 
    probability 4546247086308093308
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  760  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2875) [bci: 32]
locals: stack:48|QWORD[.] stack:36|DWORD r13|DWORD stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction r10|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B12 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-45075|0xffffffffffff4fed] <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B15 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r10|DWORD = MOVE input: int[-45587|0xffffffffffff4ded] <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-39707|0xffffffffffff64e5] <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  792  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.lang.String.trim(String.java:2872) [bci: 13]
locals: stack:48|QWORD[.] r14|DWORD r13|DWORD stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-38931|0xffffffffffff67ed] <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r10|DWORD = MOVE input: int[-42779|0xffffffffffff58e5] <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r10|DWORD = MOVE input: int[-45331|0xffffffffffff4eed] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B17 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B26 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r10|DWORD = MOVE input: int[-42003|0xffffffffffff5bed] <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:char[]
     4: arraylength   
     5: istore_1      
     6: iconst_0      
     7: istore_2      
     8: aload_0       
     9: getfield      #1          // value:char[]
    12: astore_3      
    13: iload_2       
    14: iload_1       
    15: if_icmpge     32
    18: aload_3       
    19: iload_2       
    20: caload        
    21: bipush        32
    23: if_icmpgt     32
    26: iinc          
    29: goto          13
    32: iload_2       
    33: iload_1       
    34: if_icmpge     53
    37: aload_3       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: caload        
    42: bipush        32
    44: if_icmpgt     53
    47: iinc          
    50: goto          32
    53: iload_2       
    54: ifgt          66
    57: iload_1       
    58: aload_0       
    59: getfield      #1          // value:char[]
    62: arraylength   
    63: if_icmpge     75
    66: aload_0       
    67: iload_2       
    68: iload_1       
    69: invokevirtual #60         // substring:(int, int)java.lang.String
    72: goto          76
    75: aload_0       
    76: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304c8bee418b450c448b34c50c00000048c1e003488944242041ba00000000e92c0000000f1f8000000000660f1f440000453bf20f86a70400006642837c5010210f831300000085050000000041ffc2453bf27fdce9a9040000458bdee9350000000f1f8400000000000f1f8000000000418bf3ffce443bf60f86940400004963d366837c500e210f8313000000850500000000448bde453bda7fd5e9ba0400004183fa010f8c4c030000453bde0f8f03040000458bc3452bc24585c00f8c6804000049b9addeaddeaddeadde4183f8010f8c8e020000418bf6412bf0443bd60f8f5d040000453bd60f8f99030000498b7760498b57704181f8ffffff000f83bf020000418bc8d1e18d491783e1f84863c9488bd94803de483bda0f87a202000049895f600f188431c00000000f188431000100000f188431400100000f188431800100004489460c48c70601000000c74608addeadde44895c241c4c896c2410488bc6458bea452bf5453bc6418bf0410f4ff64863f64883fe014c8b5424200f8c99000000488d50104963cd498d4c4a104c8d5ef04d85db49c7c1000000000f8d7b0100004c8d5ef84d3bcb0f8f13000000c4a17a6f0449c4a17a7f044a4d8d59084d8bcb4c8d5efc4d3bcb0f8f13000000c4a1f96e0449c4a1f97e044a4d8d59044d8bcb4c8d5efe4d3bcb0f8f13000000c4a1796e0449c4a1797e044a4d8d59024d8bcb4c8bde49ffcb4d3bcb0f8f0a000000420fbf0c496642890c4a4963d0483bd60f8f5c000000498b7760488d5618493b57700f87ed010000498957600f1886d800000049b9addeaddeaddeadde488bd6498b89a800000048890ec74608addeadde48c1e80389460c44896610488bc2488b6c24304883c438850500000000c5f877c3488d4c7010482bd6488d72f04885f60f8d9f00000049c7c300000000488d72f84c3bde0f8f11000000c5f9efc0c4a17a7f0459498d73084c8bde488d72fc4c3bde0f8f11000000c5f9efc0c4a1f97e0459498d73044c8bde488d72fe4c3bde0f8f11000000c5f9efc0c4a1797e0459498d73024c8bde48ffca4c3bda0f8f22ffffff6646892459e918ffffff0f1f80000000000f1f8000000000c4a17e6f0449c4a17e7f044a4d8d49104d3bcb7eebe96bfeffffc5f9efc049c7c3000000006666660f1f840000000000c4a17e7f04594d8d5b104c3bde7ef1e93effffff453bd60f8f5e010000498b7760488d5618493b57700f87d2000000498957600f1886d8000000488bc6488bf0498b91a8000000488910c74008addeaddec7400caddeadde44896010488bc6488b6c24304883c438850500000000c5f877c344895c241c4c896c241048beaddeaddeaddeadde418bd0b900000000448944240c458beae80000000090448b44240ce970fdffff44895c241c4c896c2410458bea4c8bd0443b74241c0f8f9d000000488b442410488b6c24304883c438850500000000c5f877c34c8bf048beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0498bc6e9f6fdffff44895c241c4c896c2410458bea48beaddeaddeaddeaddeba02000000b901000000e8000000009049b9addeaddeaddeaddee906ffffff44895c241c4c896c2410458bea41ba9fedfeff4589979c0200004d89a7a8020000e8000000009041baed50ffffebe444895c241c4c896c2410458bea41baed4fffffebcf44895c241c4c896c2410458bea41baed4dffffebba4c896c2410458bea41bae564ffff4589979c0200004d89a7a8020000e800000000904c896c2410458bea41baed67ffffebdc44895c241c4c896c2410458bea41bae558ffffe970ffffff44895c241c4c896c2410458bea41baed4effffe958ffffff44895c241c4c896c2410458bea41baed4cffffe940ffffff44895c241c4c896c2410458bea41baed5bffffe928ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4b492c08 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 55 10 r14|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 55 [rax:0, r13:0]at java.lang.String.trim(String.java:2868) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 12 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64bcb563 encoding: base: 0 shift: 3  <||@
  Comment 67 14 stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 72 16 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 78 18 JUMP ~[] destination: B0 -> B1  <||@
  Comment 83 block B2 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 83 26 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 96 28 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 99 30 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B82  <||@
  Comment 105 block B3 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 105 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 34 CMP [rax|QWORD[.] + r10|DWORD * 2 + 16] y: 33 size: WORD  <||@
  Comment 112 36 BRANCH trueDestinationProbability: 0.8338555955211445 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 118 block B4 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 118 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 40 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:13]  <||@
  Comment 118 [rax:0, r13:0, stack:32]at java.lang.String.trim(String.java:2872) [bci: 13, duringCall: false, rethrow: false]
              |0             |1          |2          |3            
     locals:  |r13|QWORD[.]  |r14|DWORD  |r10|DWORD  |rax|QWORD[.]   <||@
  Comment 118 {infopoint: SAFEPOINT}  <||@
  Comment 118 11  <||@
  Comment 124 42 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 127 44 JUMP ~[] destination: B4 -> B1  <||@
  Comment 127 block B1 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 127 20 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 127 22 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 130 24 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B83  <||@
  Comment 137 block B5 null  <||@
  Comment 137 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 137 48 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 140 50 JUMP ~[] destination: B5 -> B6  <||@
  Comment 145 block B7 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 145 58 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 60 rsi|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 165 62 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 168 64 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B79  <||@
  Comment 174 block B8 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 174 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 68 rdx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 177 70 CMP [rax|QWORD[.] + rdx|QWORD * 2 + 14] y: 33 size: WORD  <||@
  Comment 183 72 BRANCH trueDestinationProbability: 0.742879786645197 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 189 block B9 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 189 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 189 76 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:32]  <||@
  Comment 189 [rax:0, r13:0, stack:32]at java.lang.String.trim(String.java:2875) [bci: 32, duringCall: false, rethrow: false]
              |0             |1          |2          |3            
     locals:  |r13|QWORD[.]  |r11|DWORD  |r10|DWORD  |rax|QWORD[.]   <||@
  Comment 189 {infopoint: SAFEPOINT}  <||@
  Comment 189 11  <||@
  Comment 195 78 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 198 80 JUMP ~[] destination: B9 -> B6  <||@
  Comment 198 block B6 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 198 52 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 198 54 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 201 56 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B80  <||@
  Comment 208 block B10 null  <||@
  Comment 208 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 84 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 212 86 BRANCH trueDestinationProbability: 0.011203796570366187 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14  <||@
  Comment 218 block B14 null  <||@
  Comment 218 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 218 116 CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 221 118 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 227 block B16 null  <||@
  Comment 227 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 134 r8|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 233 136 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 236 138 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 242 block B18 null  <||@
  Comment 242 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 154 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 242 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 252 156 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 256 158 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B25  <||@
  Comment 262 block B25 null  <||@
  Comment 262 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 262 240 rsi|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 268 242 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 271 244 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 277 block B27 null  <||@
  Comment 277 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 260 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 280 262 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 286 block B29 null  <||@
  Comment 286 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 278 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 290 280 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 294 282 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 301 284 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B34  <||@
  Comment 307 block B30 null  <||@
  Comment 307 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 307 288 rcx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 312 290 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 315 292 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 318 294 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 321 296 rbx|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 327 298 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 330 300 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B34 falseDestination: B30 -> B32  <||@
  Comment 336 block B32 null  <||@
  Comment 336 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 336 312 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 340 314 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 348 316 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 356 318 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 364 320 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 372 322 MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 376 324 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 383 326 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 383 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 390 328 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 390 330 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 395 332 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 400 334 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 403 336 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 406 338 JUMP ~[] destination: B32 -> B35  <||@
  Comment 406 block B35 null  <||@
  Comment 406 366 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 406 368 r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 409 370 CMP (x: r8|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 412 372 rsi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 419 374 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 422 376 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 426 382 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 431 378 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B54 falseDestination: B35 -> B37  <||@
  Comment 437 block B37 null  <||@
  Comment 437 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 437 390 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 441 392 rcx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 444 394 rcx|QWORD[.] = LEA [r10|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 449 396 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 453 398 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 456 404 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 463 400 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B42 falseDestination: B37 -> B40  <||@
  Comment 469 block B42 null  <||@
  Comment 469 430 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 469 432 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 473 434 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 476 436 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44  <||@
  Comment 482 block B44 null  <||@
  Comment 482 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 482 444 xmm0|V128_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 488 446 J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 494 448 r11|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 498 450 r9|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 501 452 JUMP ~[] destination: B44 -> B45  <||@
  Comment 501 block B45 null  <||@
  Comment 501 454 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 501 456 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 505 458 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 508 460 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B48 falseDestination: B45 -> B47  <||@
  Comment 514 block B47 null  <||@
  Comment 514 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 514 468 xmm0|V64_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 520 470 J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 526 472 r11|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 530 474 r9|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 533 476 JUMP ~[] destination: B47 -> B48  <||@
  Comment 533 block B48 null  <||@
  Comment 533 478 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 533 480 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 537 482 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 540 484 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B51 falseDestination: B48 -> B50  <||@
  Comment 546 block B50 null  <||@
  Comment 546 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 546 492 xmm0|V32_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 552 494 J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 558 496 r11|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 562 498 r9|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 565 500 JUMP ~[] destination: B50 -> B51  <||@
  Comment 565 block B51 null  <||@
  Comment 565 502 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 565 504 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 571 506 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 574 508 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B54 falseDestination: B51 -> B53  <||@
  Comment 580 block B53 null  <||@
  Comment 580 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 580 516 rcx|DWORD = MOVSX [rcx|QWORD[.] + r9|QWORD * 2] size: DWORD  <||@
  Comment 585 518 MOV (x: [rdx|QWORD[.] + r9|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 590 520 JUMP ~[] destination: B53 -> B54  <||@
  Comment 590 block B54 null  <||@
  Comment 590 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 524 rdx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 593 526 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 596 528 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B74  <||@
  Comment 602 block B74 null  <||@
  Comment 602 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 670 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 606 672 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 610 674 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 614 676 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 620 block B76 null  <||@
  Comment 620 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 620 700 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 624 702 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 631 704 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 631 708 JUMP ~[] destination: B76 -> B77  <||@
  Comment 631 block B77 null  <||@
  Comment 631 710 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 631 706 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 631 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 641 712 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 644 714 rcx|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 651 716 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 654 718 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 654 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 661 720 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64bcb563 encoding: base: 0 shift: 3  <||@
  Comment 665 722 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 668 724 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 672 726 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 675 728 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 684 12  <||@
  Comment 694 block B55 null  <||@
  Comment 694 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 532 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 699 534 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 702 536 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 706 538 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 709 540 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 715 block B56 null  <||@
  Comment 715 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 715 544 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 722 546 JUMP ~[] destination: B56 -> B60  <||@
  Comment 722 block B60 null  <||@
  Comment 722 570 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 722 572 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 726 574 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 729 576 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B63 falseDestination: B60 -> B62  <||@
  Comment 735 block B62 null  <||@
  Comment 735 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 584 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 739 586 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 745 588 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 749 590 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 752 592 JUMP ~[] destination: B62 -> B63  <||@
  Comment 752 block B63 null  <||@
  Comment 752 594 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 752 596 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 756 598 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 759 600 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B66 falseDestination: B63 -> B65  <||@
  Comment 765 block B65 null  <||@
  Comment 765 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 608 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 769 610 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 775 612 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 779 614 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 782 616 JUMP ~[] destination: B65 -> B66  <||@
  Comment 782 block B66 null  <||@
  Comment 782 618 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 782 620 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 786 622 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 789 624 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B69 falseDestination: B66 -> B68  <||@
  Comment 795 block B68 null  <||@
  Comment 795 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 795 632 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 799 634 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 805 636 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 809 638 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 812 640 JUMP ~[] destination: B68 -> B69  <||@
  Comment 812 block B69 null  <||@
  Comment 812 642 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 812 644 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 815 646 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 818 648 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B74 falseDestination: B69 -> B71  <||@
  Comment 824 block B71 null  <||@
  Comment 824 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 824 656 MOV (x: [rcx|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 829 658 JUMP ~[] destination: B71 -> B74  <||@
  Comment 834 block B40 loop 2 depth 1 header:537|LoopBegin  <||@
  Comment 834 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 848 416 xmm0|V256_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 854 418 J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 860 420 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 864 422 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 867 424 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B42 falseDestination: B40 -> B40  <||@
  Comment 874 block B57 null  <||@
  Comment 874 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 874 550 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 878 552 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 885 554 JUMP ~[] destination: B57 -> B58  <||@
  Comment 885 block B58 loop 3 depth 1 header:602|LoopBegin  <||@
  Comment 885 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 896 558 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 902 560 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 906 562 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 909 564 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B60 falseDestination: B58 -> B58  <||@
  Comment 916 block B19 null  <||@
  Comment 916 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 916 162 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 919 164 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 925 block B21 null  <||@
  Comment 925 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 925 180 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 929 182 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 933 184 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 937 186 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 943 block B23 null  <||@
  Comment 943 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 943 212 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 947 214 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 954 216 rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 957 218 JUMP ~[] destination: B23 -> B24  <||@
  Comment 957 block B24 null  <||@
  Comment 957 220 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 957 222 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 960 224 rdx|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 967 226 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 970 228 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 970 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 977 230 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 977 {NarrowOop[char[0]{}]}  <||@
  Comment 984 232 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 988 234 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 991 236 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1000 12  <||@
  Comment 1010 block B34 null  <||@
  Comment 1010 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 342 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1015 344 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 350 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1020 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1030 352 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1033 354 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1038 356 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1043 358 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1046 360 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32]  <||@
  Comment 1046 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1051 [stack:16, stack:32]at java.lang.String.trim(String.java:2875) [bci: 32, duringCall: false, rethrow: false]
              |0                  |1               |2          |3                 
     locals:  |stack:48|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |stack:32|QWORD[.]   <||@
  Comment 1052 362 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1057 364 JUMP ~[] destination: B34 -> B35  <||@
  Comment 1062 block B11 null  <||@
  Comment 1062 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1062 90 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1067 92 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1072 94 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1075 96 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1078 98 CMP (x: r14|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 1083 100 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 1089 block B13 null  <||@
  Comment 1089 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1089 110 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1094 112 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1103 12  <||@
  Comment 1113 block B75 null  <||@
  Comment 1113 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 680 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1116 682 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1116 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1126 684 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1131 686 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1136 688 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32]  <||@
  Comment 1136 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1141 [r14:0, stack:16, stack:32]at java.lang.String.trim(String.java:2875) [bci: 32, duringCall: false, rethrow: false]
              |0                  |1               |2          |3                 
     locals:  |stack:48|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |stack:32|QWORD[.]   <||@
  Comment 1142 690 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1145 692 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1148 696 JUMP ~[] destination: B75 -> B77  <||@
  Comment 1153 block B22 null  <||@
  Comment 1153 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1153 190 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1158 192 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1163 194 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1166 196 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1166 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1176 198 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1181 200 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1186 202 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32]  <||@
  Comment 1186 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1191 [stack:16, stack:32]at java.lang.String.trim(String.java:2875) [bci: 32, duringCall: false, rethrow: false]
              |0                  |1               |2          |3                 
     locals:  |stack:48|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |stack:32|QWORD[.]   <||@
  Comment 1192 204 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1192 206 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1192 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1202 208 JUMP ~[] destination: B22 -> B24  <||@
  Comment 1207 block B28 null  <||@
  Comment 1207 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1207 266 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1212 268 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1217 270 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1220 272 r10|DWORD = MOVE input: int[-70241|0xfffffffffffeed9f]  <||@
  Comment 1226 274 JUMP ~[] destination: B28 -> B81  <||@
  Comment 1226 block B81 null  <||@
  Comment 1226 758 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1226 760 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1233 762 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1240 764 DEOPT info [bci:32]  <||@
  Comment 1240 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1245 [stack:16, stack:32]at java.lang.String.trim(String.java:2875) [bci: 32, duringCall: false, rethrow: false]
              |0                  |1               |2          |3                 
     locals:  |stack:48|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |stack:32|QWORD[.]   <||@
  Comment 1246 block B12 null  <||@
  Comment 1246 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1246 104 r10|DWORD = MOVE input: int[-44819|0xffffffffffff50ed]  <||@
  Comment 1252 106 JUMP ~[] destination: B12 -> B81  <||@
  Comment 1254 block B15 null  <||@
  Comment 1254 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1254 122 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1259 124 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1264 126 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1267 128 r10|DWORD = MOVE input: int[-45075|0xffffffffffff4fed]  <||@
  Comment 1273 130 JUMP ~[] destination: B15 -> B81  <||@
  Comment 1275 block B20 null  <||@
  Comment 1275 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1275 168 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1280 170 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1285 172 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1288 174 r10|DWORD = MOVE input: int[-45587|0xffffffffffff4ded]  <||@
  Comment 1294 176 JUMP ~[] destination: B20 -> B81  <||@
  Comment 1296 block B82 null  <||@
  Comment 1296 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1296 768 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1301 770 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1304 772 r10|DWORD = MOVE input: int[-39707|0xffffffffffff64e5]  <||@
  Comment 1310 774 JUMP ~[] destination: B82 -> B84  <||@
  Comment 1310 block B84 null  <||@
  Comment 1310 786 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1310 788 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1317 790 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1324 792 DEOPT info [bci:13]  <||@
  Comment 1324 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1329 [stack:16, stack:32]at java.lang.String.trim(String.java:2872) [bci: 13, duringCall: false, rethrow: false]
              |0                  |1          |2          |3                 
     locals:  |stack:48|QWORD[.]  |r14|DWORD  |r13|DWORD  |stack:32|QWORD[.]   <||@
  Comment 1330 block B83 null  <||@
  Comment 1330 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1330 778 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1335 780 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1338 782 r10|DWORD = MOVE input: int[-38931|0xffffffffffff67ed]  <||@
  Comment 1344 784 JUMP ~[] destination: B83 -> B84  <||@
  Comment 1346 block B79 null  <||@
  Comment 1346 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1346 736 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1351 738 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1356 740 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1359 742 r10|DWORD = MOVE input: int[-42779|0xffffffffffff58e5]  <||@
  Comment 1365 744 JUMP ~[] destination: B79 -> B81  <||@
  Comment 1370 block B17 null  <||@
  Comment 1370 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1370 142 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1375 144 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1380 146 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1383 148 r10|DWORD = MOVE input: int[-45331|0xffffffffffff4eed]  <||@
  Comment 1389 150 JUMP ~[] destination: B17 -> B81  <||@
  Comment 1394 block B26 null  <||@
  Comment 1394 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1394 248 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1399 250 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1404 252 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1407 254 r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced]  <||@
  Comment 1413 256 JUMP ~[] destination: B26 -> B81  <||@
  Comment 1418 block B80 null  <||@
  Comment 1418 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1418 748 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1423 750 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1428 752 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1431 754 r10|DWORD = MOVE input: int[-42003|0xffffffffffff5bed]  <||@
  Comment 1437 756 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1442 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1442 4  <||@
  Comment 1448 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1448 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8689[java.lang.String.trim()]"
  method "HotSpotCompilation-8689[java.lang.String.trim()]"
  date 1527005171036
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106c0cae0 448b560849c1e203493bc20f856f93bfff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304c8bee418b450c448b34c50c00000048c1e003488944242041ba00000000e92c0000000f1f8000000000660f1f440000453bf20f86a70400006642837c5010210f83130000008505aa24c8fd41ffc2453bf27fdce9a9040000458bdee9350000000f1f8400000000000f1f8000000000418bf3ffce443bf60f86940400004963d366837c500e210f831300000085056324c8fd448bde453bda7fd5e9ba0400004183fa010f8c4c030000453bde0f8f03040000458bc3452bc24585c00f8c6804000049b9d01600c0070000004183f8010f8c8e020000418bf6412bf0443bd60f8f5d040000453bd60f8f99030000498b7760498b57704181f8ffffff000f83bf020000418bc8d1e18d491783e1f84863c9488bd94803de483bda0f87a202000049895f600f188431c00000000f188431000100000f188431400100000f188431800100004489460c48c70601000000c74608410000f844895c241c4c896c2410488bc6458bea452bf5453bc6418bf0410f4ff64863f64883fe014c8b5424200f8c99000000488d50104963cd498d4c4a104c8d5ef04d85db49c7c1000000000f8d7b0100004c8d5ef84d3bcb0f8f13000000c4a17a6f0449c4a17a7f044a4d8d59084d8bcb4c8d5efc4d3bcb0f8f13000000c4a1f96e0449c4a1f97e044a4d8d59044d8bcb4c8d5efe4d3bcb0f8f13000000c4a1796e0449c4a1797e044a4d8d59024d8bcb4c8bde49ffcb4d3bcb0f8f0a000000420fbf0c496642890c4a4963d0483bd60f8f5c000000498b7760488d5618493b57700f87ed010000498957600f1886d800000049b9d01600c007000000488bd6498b89a800000048890ec74608da0200f848c1e80389460c44896610488bc2488b6c24304883c43885057422c8fdc5f877c3488d4c7010482bd6488d72f04885f60f8d9f00000049c7c300000000488d72f84c3bde0f8f11000000c5f9efc0c4a17a7f0459498d73084c8bde488d72fc4c3bde0f8f11000000c5f9efc0c4a1f97e0459498d73044c8bde488d72fe4c3bde0f8f11000000c5f9efc0c4a1797e0459498d73024c8bde48ffca4c3bda0f8f22ffffff6646892459e918ffffff0f1f80000000000f1f8000000000c4a17e6f0449c4a17e7f044a4d8d49104d3bcb7eebe96bfeffffc5f9efc049c7c3000000006666660f1f840000000000c4a17e7f04594d8d5b104c3bde7ef1e93effffff453bd60f8f5e010000498b7760488d5618493b57700f87d2000000498957600f1886d8000000488bc6488bf0498b91a8000000488910c74008da0200f8c7400c6e7100d844896010488bc6488b6c24304883c43885053821c8fdc5f877c344895c241c4c896c241048be080200c007000000418bd0b900000000448944240c458beae8e59e380090448b44240ce970fdffff44895c241c4c896c2410458bea4c8bd0443b74241c0f8f9d000000488b442410488b6c24304883c4388505d120c8fdc5f877c34c8bf048be680b00c007000000ba02000000b901000000e88b9e380090488bf0498bc6e9f6fdffff44895c241c4c896c2410458bea48be680b00c007000000ba02000000b901000000e8599e38009049b9d01600c007000000e906ffffff44895c241c4c896c2410458bea41ba9fedfeff4589979c0200004d89a7a8020000e841a6bfff9041baed50ffffebe444895c241c4c896c2410458bea41baed4fffffebcf44895c241c4c896c2410458bea41baed4dffffebba4c896c2410458bea41bae564ffff4589979c0200004d89a7a8020000e8eda5bfff904c896c2410458bea41baed67ffffebdc44895c241c4c896c2410458bea41bae558ffffe970ffffff44895c241c4c896c2410458bea41baed4effffe958ffffff44895c241c4c896c2410458bea41baed4cffffe940ffffff44895c241c4c896c2410458bea41baed5bffffe928ffffffe899d5030090e873a4bfff90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4b492c08 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 55 10 r14|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 55 [rax:0, r13:0]at java.lang.String.trim(String.java:2868) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 12 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64bcb563 encoding: base: 0 shift: 3  <||@
  Comment 67 14 stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 72 16 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 78 18 JUMP ~[] destination: B0 -> B1  <||@
  Comment 83 block B2 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 83 26 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 96 28 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 99 30 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B82  <||@
  Comment 105 block B3 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 105 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 34 CMP [rax|QWORD[.] + r10|DWORD * 2 + 16] y: 33 size: WORD  <||@
  Comment 112 36 BRANCH trueDestinationProbability: 0.8338555955211445 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 118 block B4 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 118 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 40 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:13]  <||@
  Comment 118 [rax:0, r13:0, stack:32]at java.lang.String.trim(String.java:2872) [bci: 13, duringCall: false, rethrow: false]
              |0             |1          |2          |3            
     locals:  |r13|QWORD[.]  |r14|DWORD  |r10|DWORD  |rax|QWORD[.]   <||@
  Comment 118 {infopoint: SAFEPOINT}  <||@
  Comment 118 11  <||@
  Comment 124 42 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 127 44 JUMP ~[] destination: B4 -> B1  <||@
  Comment 127 block B1 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 127 20 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 127 22 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 130 24 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B83  <||@
  Comment 137 block B5 null  <||@
  Comment 137 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 137 48 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 140 50 JUMP ~[] destination: B5 -> B6  <||@
  Comment 145 block B7 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 145 58 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 60 rsi|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 165 62 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 168 64 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B79  <||@
  Comment 174 block B8 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 174 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 68 rdx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 177 70 CMP [rax|QWORD[.] + rdx|QWORD * 2 + 14] y: 33 size: WORD  <||@
  Comment 183 72 BRANCH trueDestinationProbability: 0.742879786645197 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 189 block B9 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 189 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 189 76 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:32]  <||@
  Comment 189 [rax:0, r13:0, stack:32]at java.lang.String.trim(String.java:2875) [bci: 32, duringCall: false, rethrow: false]
              |0             |1          |2          |3            
     locals:  |r13|QWORD[.]  |r11|DWORD  |r10|DWORD  |rax|QWORD[.]   <||@
  Comment 189 {infopoint: SAFEPOINT}  <||@
  Comment 189 11  <||@
  Comment 195 78 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 198 80 JUMP ~[] destination: B9 -> B6  <||@
  Comment 198 block B6 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 198 52 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 198 54 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 201 56 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B80  <||@
  Comment 208 block B10 null  <||@
  Comment 208 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 84 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 212 86 BRANCH trueDestinationProbability: 0.011203796570366187 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14  <||@
  Comment 218 block B14 null  <||@
  Comment 218 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 218 116 CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 221 118 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 227 block B16 null  <||@
  Comment 227 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 134 r8|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 233 136 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 236 138 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 242 block B18 null  <||@
  Comment 242 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 154 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 242 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 252 156 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 256 158 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B25  <||@
  Comment 262 block B25 null  <||@
  Comment 262 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 262 240 rsi|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 268 242 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 271 244 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 277 block B27 null  <||@
  Comment 277 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 260 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 280 262 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 286 block B29 null  <||@
  Comment 286 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 278 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 290 280 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 294 282 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 301 284 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B34  <||@
  Comment 307 block B30 null  <||@
  Comment 307 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 307 288 rcx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 312 290 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 315 292 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 318 294 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 321 296 rbx|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 327 298 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 330 300 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B30 -> B34 falseDestination: B30 -> B32  <||@
  Comment 336 block B32 null  <||@
  Comment 336 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 336 312 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 340 314 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 348 316 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 356 318 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 364 320 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 372 322 MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 376 324 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 383 326 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 383 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 390 328 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 390 330 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 395 332 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 400 334 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 403 336 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 406 338 JUMP ~[] destination: B32 -> B35  <||@
  Comment 406 block B35 null  <||@
  Comment 406 366 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 406 368 r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 409 370 CMP (x: r8|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 412 372 rsi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 419 374 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 422 376 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 426 382 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 431 378 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B35 -> B54 falseDestination: B35 -> B37  <||@
  Comment 437 block B37 null  <||@
  Comment 437 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 437 390 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 441 392 rcx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 444 394 rcx|QWORD[.] = LEA [r10|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 449 396 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 453 398 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 456 404 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 463 400 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B37 -> B42 falseDestination: B37 -> B40  <||@
  Comment 469 block B42 null  <||@
  Comment 469 430 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 469 432 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 473 434 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 476 436 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44  <||@
  Comment 482 block B44 null  <||@
  Comment 482 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 482 444 xmm0|V128_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 488 446 J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 494 448 r11|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 498 450 r9|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 501 452 JUMP ~[] destination: B44 -> B45  <||@
  Comment 501 block B45 null  <||@
  Comment 501 454 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 501 456 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 505 458 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 508 460 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B45 -> B48 falseDestination: B45 -> B47  <||@
  Comment 514 block B47 null  <||@
  Comment 514 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 514 468 xmm0|V64_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 520 470 J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 526 472 r11|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 530 474 r9|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 533 476 JUMP ~[] destination: B47 -> B48  <||@
  Comment 533 block B48 null  <||@
  Comment 533 478 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 533 480 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 537 482 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 540 484 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B51 falseDestination: B48 -> B50  <||@
  Comment 546 block B50 null  <||@
  Comment 546 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 546 492 xmm0|V32_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 552 494 J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 558 496 r11|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 562 498 r9|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 565 500 JUMP ~[] destination: B50 -> B51  <||@
  Comment 565 block B51 null  <||@
  Comment 565 502 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 565 504 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 571 506 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 574 508 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B54 falseDestination: B51 -> B53  <||@
  Comment 580 block B53 null  <||@
  Comment 580 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 580 516 rcx|DWORD = MOVSX [rcx|QWORD[.] + r9|QWORD * 2] size: DWORD  <||@
  Comment 585 518 MOV (x: [rdx|QWORD[.] + r9|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 590 520 JUMP ~[] destination: B53 -> B54  <||@
  Comment 590 block B54 null  <||@
  Comment 590 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 524 rdx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 593 526 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 596 528 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B74  <||@
  Comment 602 block B74 null  <||@
  Comment 602 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 670 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 606 672 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 610 674 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 614 676 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 620 block B76 null  <||@
  Comment 620 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 620 700 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 624 702 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 631 704 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 631 708 JUMP ~[] destination: B76 -> B77  <||@
  Comment 631 block B77 null  <||@
  Comment 631 710 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 631 706 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 631 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 641 712 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 644 714 rcx|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 651 716 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 654 718 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 654 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 661 720 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64bcb563 encoding: base: 0 shift: 3  <||@
  Comment 665 722 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 668 724 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 672 726 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 675 728 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 684 12  <||@
  Comment 694 block B55 null  <||@
  Comment 694 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 532 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 699 534 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 702 536 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 706 538 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 709 540 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 715 block B56 null  <||@
  Comment 715 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 715 544 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 722 546 JUMP ~[] destination: B56 -> B60  <||@
  Comment 722 block B60 null  <||@
  Comment 722 570 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 722 572 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 726 574 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 729 576 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B63 falseDestination: B60 -> B62  <||@
  Comment 735 block B62 null  <||@
  Comment 735 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 584 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 739 586 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 745 588 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 749 590 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 752 592 JUMP ~[] destination: B62 -> B63  <||@
  Comment 752 block B63 null  <||@
  Comment 752 594 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 752 596 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 756 598 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 759 600 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B63 -> B66 falseDestination: B63 -> B65  <||@
  Comment 765 block B65 null  <||@
  Comment 765 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 608 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 769 610 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 775 612 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 779 614 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 782 616 JUMP ~[] destination: B65 -> B66  <||@
  Comment 782 block B66 null  <||@
  Comment 782 618 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 782 620 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 786 622 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 789 624 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B69 falseDestination: B66 -> B68  <||@
  Comment 795 block B68 null  <||@
  Comment 795 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 795 632 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 799 634 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 805 636 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 809 638 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 812 640 JUMP ~[] destination: B68 -> B69  <||@
  Comment 812 block B69 null  <||@
  Comment 812 642 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 812 644 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 815 646 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 818 648 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B74 falseDestination: B69 -> B71  <||@
  Comment 824 block B71 null  <||@
  Comment 824 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 824 656 MOV (x: [rcx|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 829 658 JUMP ~[] destination: B71 -> B74  <||@
  Comment 834 block B40 loop 2 depth 1 header:537|LoopBegin  <||@
  Comment 834 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 848 416 xmm0|V256_WORD = H [rcx|QWORD[.] + r9|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 854 418 J (address: [rdx|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 860 420 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 864 422 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 867 424 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B42 falseDestination: B40 -> B40  <||@
  Comment 874 block B57 null  <||@
  Comment 874 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 874 550 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 878 552 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 885 554 JUMP ~[] destination: B57 -> B58  <||@
  Comment 885 block B58 loop 3 depth 1 header:602|LoopBegin  <||@
  Comment 885 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 896 558 J (address: [rcx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 902 560 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 906 562 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 909 564 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B60 falseDestination: B58 -> B58  <||@
  Comment 916 block B19 null  <||@
  Comment 916 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 916 162 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 919 164 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 925 block B21 null  <||@
  Comment 925 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 925 180 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 929 182 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 933 184 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 937 186 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 943 block B23 null  <||@
  Comment 943 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 943 212 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 947 214 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 954 216 rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 957 218 JUMP ~[] destination: B23 -> B24  <||@
  Comment 957 block B24 null  <||@
  Comment 957 220 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 957 222 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 960 224 rdx|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 967 226 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 970 228 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 970 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 977 230 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 977 {NarrowOop[char[0]{}]}  <||@
  Comment 984 232 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 988 234 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 991 236 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1000 12  <||@
  Comment 1010 block B34 null  <||@
  Comment 1010 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 342 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1015 344 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 350 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1020 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1030 352 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1033 354 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1038 356 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1043 358 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1046 360 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32]  <||@
  Comment 1046 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1051 [stack:16, stack:32]at java.lang.String.trim(String.java:2875) [bci: 32, duringCall: false, rethrow: false]
              |0                  |1               |2          |3                 
     locals:  |stack:48|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |stack:32|QWORD[.]   <||@
  Comment 1052 362 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1057 364 JUMP ~[] destination: B34 -> B35  <||@
  Comment 1062 block B11 null  <||@
  Comment 1062 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1062 90 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1067 92 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1072 94 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1075 96 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1078 98 CMP (x: r14|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 1083 100 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 1089 block B13 null  <||@
  Comment 1089 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1089 110 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1094 112 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1103 12  <||@
  Comment 1113 block B75 null  <||@
  Comment 1113 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 680 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1116 682 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1116 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1126 684 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1131 686 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1136 688 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32]  <||@
  Comment 1136 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1141 [r14:0, stack:16, stack:32]at java.lang.String.trim(String.java:2875) [bci: 32, duringCall: false, rethrow: false]
              |0                  |1               |2          |3                 
     locals:  |stack:48|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |stack:32|QWORD[.]   <||@
  Comment 1142 690 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1145 692 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1148 696 JUMP ~[] destination: B75 -> B77  <||@
  Comment 1153 block B22 null  <||@
  Comment 1153 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1153 190 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1158 192 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1163 194 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1166 196 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1166 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1176 198 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1181 200 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1186 202 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32]  <||@
  Comment 1186 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1191 [stack:16, stack:32]at java.lang.String.trim(String.java:2875) [bci: 32, duringCall: false, rethrow: false]
              |0                  |1               |2          |3                 
     locals:  |stack:48|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |stack:32|QWORD[.]   <||@
  Comment 1192 204 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1192 206 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1192 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1202 208 JUMP ~[] destination: B22 -> B24  <||@
  Comment 1207 block B28 null  <||@
  Comment 1207 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1207 266 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1212 268 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1217 270 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1220 272 r10|DWORD = MOVE input: int[-70241|0xfffffffffffeed9f]  <||@
  Comment 1226 274 JUMP ~[] destination: B28 -> B81  <||@
  Comment 1226 block B81 null  <||@
  Comment 1226 758 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1226 760 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1233 762 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1240 764 DEOPT info [bci:32]  <||@
  Comment 1240 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1245 [stack:16, stack:32]at java.lang.String.trim(String.java:2875) [bci: 32, duringCall: false, rethrow: false]
              |0                  |1               |2          |3                 
     locals:  |stack:48|QWORD[.]  |stack:36|DWORD  |r13|DWORD  |stack:32|QWORD[.]   <||@
  Comment 1246 block B12 null  <||@
  Comment 1246 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1246 104 r10|DWORD = MOVE input: int[-44819|0xffffffffffff50ed]  <||@
  Comment 1252 106 JUMP ~[] destination: B12 -> B81  <||@
  Comment 1254 block B15 null  <||@
  Comment 1254 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1254 122 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1259 124 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1264 126 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1267 128 r10|DWORD = MOVE input: int[-45075|0xffffffffffff4fed]  <||@
  Comment 1273 130 JUMP ~[] destination: B15 -> B81  <||@
  Comment 1275 block B20 null  <||@
  Comment 1275 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1275 168 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1280 170 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1285 172 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1288 174 r10|DWORD = MOVE input: int[-45587|0xffffffffffff4ded]  <||@
  Comment 1294 176 JUMP ~[] destination: B20 -> B81  <||@
  Comment 1296 block B82 null  <||@
  Comment 1296 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1296 768 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1301 770 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1304 772 r10|DWORD = MOVE input: int[-39707|0xffffffffffff64e5]  <||@
  Comment 1310 774 JUMP ~[] destination: B82 -> B84  <||@
  Comment 1310 block B84 null  <||@
  Comment 1310 786 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1310 788 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1317 790 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1324 792 DEOPT info [bci:13]  <||@
  Comment 1324 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1329 [stack:16, stack:32]at java.lang.String.trim(String.java:2872) [bci: 13, duringCall: false, rethrow: false]
              |0                  |1          |2          |3                 
     locals:  |stack:48|QWORD[.]  |r14|DWORD  |r13|DWORD  |stack:32|QWORD[.]   <||@
  Comment 1330 block B83 null  <||@
  Comment 1330 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1330 778 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1335 780 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1338 782 r10|DWORD = MOVE input: int[-38931|0xffffffffffff67ed]  <||@
  Comment 1344 784 JUMP ~[] destination: B83 -> B84  <||@
  Comment 1346 block B79 null  <||@
  Comment 1346 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1346 736 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1351 738 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1356 740 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1359 742 r10|DWORD = MOVE input: int[-42779|0xffffffffffff58e5]  <||@
  Comment 1365 744 JUMP ~[] destination: B79 -> B81  <||@
  Comment 1370 block B17 null  <||@
  Comment 1370 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1370 142 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1375 144 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1380 146 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1383 148 r10|DWORD = MOVE input: int[-45331|0xffffffffffff4eed]  <||@
  Comment 1389 150 JUMP ~[] destination: B17 -> B81  <||@
  Comment 1394 block B26 null  <||@
  Comment 1394 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1394 248 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1399 250 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1404 252 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1407 254 r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced]  <||@
  Comment 1413 256 JUMP ~[] destination: B26 -> B81  <||@
  Comment 1418 block B80 null  <||@
  Comment 1418 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1418 748 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1423 750 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1428 752 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1431 754 r10|DWORD = MOVE input: int[-42003|0xffffffffffff5bed]  <||@
  Comment 1437 756 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1442 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1442 4  <||@
  Comment 1448 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1448 5  <||@
  HexCodeFile>>> <|@
end_nmethod
