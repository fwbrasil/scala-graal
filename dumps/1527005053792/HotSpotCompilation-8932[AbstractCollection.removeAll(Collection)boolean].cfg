begin_compilation
  name " HotSpotCompilation-8932[java.util.AbstractCollection.removeAll(Collection)]"
  method "HotSpotCompilation-8932[java.util.AbstractCollection.removeAll(Collection)]"
  date 1527005178684
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v359  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v358 ?214 v353 v357 v356 ?212 v352 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/util/Collection;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?31 v359 ?316 ?15 v245 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractCollection.removeAll(Collection)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 371
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v322 v359 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v358 
=== Succesors ===
next: v272 
=== Usages ===
v342 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v358 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
rawvalue: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v343 
y: v341 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v343 y: v341  <|@  <|@
f <@~|@floating>@ <|@
tid a150 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a157 a210 v322 v334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/LinkedList; target_method=iterator target_method_class=Ljava/util/AbstractSequentialList; position=at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v269 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v269 #falseSuccessor: v271  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/LinkedList; target_method=iterator target_method_class=Ljava/util/AbstractSequentialList; position=at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i344 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i344  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i344 i348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v352 
=== Succesors ===
next: v149 
=== Usages ===
v179 v146 i183 i192 
=== Predecessor ===
v269 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v352 #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:372) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?316 ?31 v146 v32 ?15 v37 v179 i209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i344 
y: i7 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i344 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:894) [bci: 43]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i125 v196 v195 i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
trueSuccessorProbability: 0.47825813677089046
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v147 
falseSuccessor: v273 
=== Usages ===
=== Predecessor ===
i344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v147 #falseSuccessor: v273  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4602287152584099080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
v147 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602874652466920828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i344 
y: i7 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i344 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v148 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v275 #falseSuccessor: v148  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -58387
stableDimension: 0
stamp: i32 [-58387] ⇊00000000ffff1bed ⇈00000000ffff1bed
stampKind: i32
value: int[-58387|0xffffffffffff1bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4602874652466920828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 33]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i344 
y: i124 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i344 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i183 
y: i124 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i183 y: i124  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
trueSuccessorProbability: 0.29396823484529044
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v185 
falseSuccessor: v184 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v185 #falseSuccessor: v184  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4594693956293534040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: i32
=== Inputs ===
x: i344 
y: i191 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i344 y: i191  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i192 
y: i124 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i192 y: i124  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v277 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v277 #falseSuccessor: v279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594693956293534040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a345 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a345  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a345 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v356 
=== Succesors ===
next: v204 
=== Usages ===
a250 
=== Predecessor ===
v277 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v356 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid a250 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a345 
=== Succesors ===
=== Usages ===
a157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a345  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
a345 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -64275
stableDimension: 0
stamp: i32 [-64275] ⇊00000000ffff04ed ⇈00000000ffff04ed
stampKind: i32
value: int[-64275|0xffffffffffff04ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v279 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4600307517759695436
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a346 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a346  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v357 
=== Succesors ===
next: v156 
=== Usages ===
a255 
=== Predecessor ===
v184 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v357 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid a255 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a346 
=== Succesors ===
=== Usages ===
a157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a346  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
a346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v155 
values: a150 a255 a250 
=== Succesors ===
=== Usages ===
a211 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v155 values: a150 a255 a250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v154 v156 v204 
=== Succesors ===
next: i347 
=== Usages ===
a157 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v154 v156 v204 #next: i347  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i347 i349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i347 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 14]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v353 
=== Succesors ===
next: v12 
=== Usages ===
?214 v169 ?212 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v353 #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
i347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B12" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608093403340026825
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i209 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i7 i125 
=== Succesors ===
=== Usages ===
?212 v62 i125 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i7 i125  <|@  <|@
f <@~|@floating>@ <|@
tid a210 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v13 
values: a150 a211 
=== Succesors ===
=== Usages ===
?212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: a150 a211  <|@  <|@
f <@~|@floating>@ <|@
tid a211 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v13 
values: a157 a240 
=== Succesors ===
=== Usages ===
?212 v355 ?214 a210 v354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: a157 a240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2022792022792024
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v12 
=== Succesors ===
next: i348 
=== Usages ===
v34 v21 i209 a210 a211 v294 v284 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v12 #next: i348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:884) [bci: 8]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 13]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v352 
=== Succesors ===
next: v25 
=== Usages ===
v62 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v352 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:884) [bci: 11]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i209 
y: i348 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i209 y: i348  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 18]
stamp: void
trueSuccessorProbability: 0.16824644549763035
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
i348 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v24 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i349 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v353 
=== Succesors ===
next: v285 
=== Usages ===
v169 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v353 #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i347 
y: i349 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i347 y: i349  <|@  <|@
tid a206 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@31e97aec
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/LinkedList$ListItr;
type: HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?214 ?31 ?316 ?212 ?15 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?212 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a206 
values: i209 i347 a210 a211 a1 
=== Succesors ===
=== Usages ===
?15 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a206 values: i209 i347 a210 a211 a1  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<AbstractCollection.removeAll(Collection)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 374
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 i7 a206 
virtualObjectMappings: ?212 
=== Succesors ===
=== Usages ===
v334 a350 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i7 a206 virtualObjectMappings: ?212  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v284 
=== Usages ===
=== Predecessor ===
i349 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v281 #falseSuccessor: v284  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a350 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a350  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a211 
index: - 
=== Succesors ===
=== Usages ===
a350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$Node.item
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:895) [bci: 52]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
nullCheck: true
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v355 
=== Succesors ===
next: a351 
=== Usages ===
a243 
=== Predecessor ===
v281 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v355 #next: a351  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a211 
index: - 
=== Succesors ===
=== Usages ===
a351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:893) [bci: 32]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v354 
=== Succesors ===
next: i30 
=== Usages ===
a240 
=== Predecessor ===
a350 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v354 #next: i30  <|@  <|@
f <@~|@floating>@ <|@
tid a243 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:895) [bci: 52]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a350 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a350  <|@  <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 28]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4c7d72b5
stamp: void
targetMethod: HotSpotMethod<Collection.contains(Object)>
=== Inputs ===
arguments: a2 a243 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a243  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:894) [bci: 44]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
stamp: i32
=== Inputs ===
x: i209 
y: i124 
=== Succesors ===
=== Usages ===
i209 ?214 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i209 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid a240 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:893) [bci: 32]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a351 
=== Succesors ===
=== Usages ===
a211 ?214 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a351  <|@  <|@
tid ?214 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a206 
values: i125 i347 a211 a240 a1 
=== Succesors ===
=== Usages ===
?31 ?316 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a206 values: i125 i347 a211 a240 a1  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<AbstractCollection.removeAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 375
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 i7 a206 
virtualObjectMappings: ?214 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i7 a206 virtualObjectMappings: ?214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Collection.contains
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v245 
stateDuring: ?316 
=== Succesors ===
next: v295 
=== Usages ===
?31 v32 
=== Predecessor ===
a351 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v245 stateDuring: ?316 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i30 
y: i7 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i30 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v291 
falseSuccessor: v294 
=== Usages ===
=== Predecessor ===
i30 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v291 #falseSuccessor: v294  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v292  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<AbstractCollection.removeAll(Collection)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 28]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 375
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 i7 a206 i30 
virtualObjectMappings: ?214 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i7 a206 i30 virtualObjectMappings: ?214  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 246
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?31  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -59923
stableDimension: 0
stamp: i32 [-59923] ⇊00000000ffff15ed ⇈00000000ffff15ed
stampKind: i32
value: int[-59923|0xffffffffffff15ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?15 
actionAndReason: i331 
speculation: a150 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?15 actionAndReason: i331 speculation: a150  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:380) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:380) [bci: 48]
stamp: void
=== Inputs ===
result: i7 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i7 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/LinkedList; target_method=iterator target_method_class=Ljava/util/AbstractSequentialList; position=at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -57395
stableDimension: 0
stamp: i32 [-57395] ⇊00000000ffff1fcd ⇈00000000ffff1fcd
stampKind: i32
value: int[-57395|0xffffffffffff1fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" "B18" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-64275 - -57107] ⇊00000000ffff00cd ⇈00000000ffff3fed
valueDescription: i32
=== Inputs ===
merge: v317 
values: i324 i326 i328 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: i324 i326 i328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v323 v325 v327 
=== Succesors ===
next: v322 
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v323 v325 v327 #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i320 
speculation: a150 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i320 speculation: a150  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v359  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v358 ?214 v353 v357 v356 ?212 v352 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/util/Collection;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?31 v359 ?316 ?15 v245 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractCollection.removeAll(Collection)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 371
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v322 v359 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v358 
=== Succesors ===
next: v272 
=== Usages ===
v342 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v358 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
result meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
rawvalue: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v343 
y: v341 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v343 y: v341  <|@  <|@
f <@~|@floating>@ <|@
tid a150 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a157 a210 v322 v334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/LinkedList; target_method=iterator target_method_class=Ljava/util/AbstractSequentialList; position=at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v269 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v269 #falseSuccessor: v271  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@788ebf10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.removeAll(AbstractCollection.java:371) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/LinkedList; target_method=iterator target_method_class=Ljava/util/AbstractSequentialList; position=at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i344 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i344  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i344 i348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i344 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v352 
=== Succesors ===
next: v149 
=== Usages ===
v179 v146 i183 i192 
=== Predecessor ===
v269 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v352 #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:372) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?316 ?31 v146 v32 ?15 v37 v179 i209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i344 
y: i7 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i344 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:894) [bci: 43]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i125 v196 v195 i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
trueSuccessorProbability: 0.47825813677089046
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v147 
falseSuccessor: v273 
=== Usages ===
=== Predecessor ===
i344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v147 #falseSuccessor: v273  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.47825813677089046 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4602287152584099080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
v147 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602874652466920828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i344 
y: i7 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i344 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v148 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v275 #falseSuccessor: v148  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
result int[-58387|0xffffffffffff1bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -58387
stableDimension: 0
stamp: i32 [-58387] ⇊00000000ffff1bed ⇈00000000ffff1bed
stampKind: i32
value: int[-58387|0xffffffffffff1bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58387|0xffffffffffff1bed]] destination: B4 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4602874652466920828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 33]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i344 
y: i124 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i344 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i183 
y: i124 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i183 y: i124  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
trueSuccessorProbability: 0.29396823484529044
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v185 
falseSuccessor: v184 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v185 #falseSuccessor: v184  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SAR v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.29396823484529044 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4594693956293534040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: i32
=== Inputs ===
x: i344 
y: i191 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i344 y: i191  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i192 
y: i124 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i192 y: i124  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v277 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v277 #falseSuccessor: v279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594693956293534040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a345 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a345  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a345 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v356 
=== Succesors ===
next: v204 
=== Usages ===
a250 
=== Predecessor ===
v277 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v356 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid a250 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a345 
=== Succesors ===
=== Usages ===
a157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a345  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
a345 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
result int[-64275|0xffffffffffff04ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -64275
stableDimension: 0
stamp: i32 [-64275] ⇊00000000ffff04ed ⇈00000000ffff04ed
stampKind: i32
value: int[-64275|0xffffffffffff04ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v279 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64275|0xffffffffffff04ed]] destination: B8 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4600307517759695436
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a346 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a346  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a346 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v357 
=== Succesors ===
next: v156 
=== Usages ===
a255 
=== Predecessor ===
v184 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v357 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid a255 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a346 
=== Succesors ===
=== Usages ===
a157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a346  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
a346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a157 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v155 
values: a150 a255 a250 
=== Succesors ===
=== Usages ===
a211 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v155 values: a150 a255 a250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v154 v156 v204 
=== Succesors ===
next: i347 
=== Usages ===
a157 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v154 v156 v204 #next: i347  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i347 i349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i347 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 14]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v353 
=== Succesors ===
next: v12 
=== Usages ===
?214 v169 ?212 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v353 #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
i347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], Object[null], v9|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B12" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608093403340026825
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i209 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i7 i125 
=== Succesors ===
=== Usages ===
?212 v62 i125 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i7 i125  <|@  <|@
f <@~|@floating>@ <|@
tid a210 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v13 
values: a150 a211 
=== Succesors ===
=== Usages ===
?212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: a150 a211  <|@  <|@
f <@~|@floating>@ <|@
tid a211 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v13 
values: a157 a240 
=== Succesors ===
=== Usages ===
?212 v355 ?214 a210 v354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: a157 a240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2022792022792024
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v12 
=== Succesors ===
next: i348 
=== Usages ===
v34 v21 i209 a210 a211 v294 v284 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v12 #next: i348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i348 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:884) [bci: 8]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 13]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v352 
=== Succesors ===
next: v25 
=== Usages ===
v62 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v352 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:884) [bci: 11]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i209 
y: i348 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i209 y: i348  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 18]
stamp: void
trueSuccessorProbability: 0.16824644549763035
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
i348 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v24 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|QWORD[.], v13|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.16824644549763035 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i349 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i349 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v353 
=== Succesors ===
next: v285 
=== Usages ===
v169 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v353 #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i347 
y: i349 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i347 y: i349  <|@  <|@
tid a206 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@31e97aec
hasIdentity: true
objectId: -1
stamp: a!# Ljava/util/LinkedList$ListItr;
type: HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?214 ?31 ?316 ?212 ?15 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?212 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a206 
values: i209 i347 a210 a211 a1 
=== Succesors ===
=== Usages ===
?15 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a206 values: i209 i347 a210 a211 a1  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<AbstractCollection.removeAll(Collection)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 374
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 i7 a206 
virtualObjectMappings: ?212 
=== Succesors ===
=== Usages ===
v334 a350 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i7 a206 virtualObjectMappings: ?212  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v284 
=== Usages ===
=== Predecessor ===
i349 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v281 #falseSuccessor: v284  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a350 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a350  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
result [v13|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a211 
index: - 
=== Succesors ===
=== Usages ===
a350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a350 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$Node.item
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:895) [bci: 52]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
nullCheck: true
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v355 
=== Succesors ===
next: a351 
=== Usages ===
a243 
=== Predecessor ===
v281 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v355 #next: a351  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
result [v13|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a211 
index: - 
=== Succesors ===
=== Usages ===
a351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a351 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:893) [bci: 32]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v354 
=== Succesors ===
next: i30 
=== Usages ===
a240 
=== Predecessor ===
a350 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v354 #next: i30  <|@  <|@
f <@~|@floating>@ <|@
tid a243 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:895) [bci: 52]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a350 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a350  <|@  <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 28]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4c7d72b5
stamp: void
targetMethod: HotSpotMethod<Collection.contains(Object)>
=== Inputs ===
arguments: a2 a243 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a243  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:894) [bci: 44]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
stamp: i32
=== Inputs ===
x: i209 
y: i124 
=== Succesors ===
=== Usages ===
i209 ?214 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i209 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid a240 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:893) [bci: 32]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a351 
=== Succesors ===
=== Usages ===
a211 ?214 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a351  <|@  <|@
tid ?214 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a206 
values: i125 i347 a211 a240 a1 
=== Succesors ===
=== Usages ===
?31 ?316 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a206 values: i125 i347 a211 a240 a1  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<AbstractCollection.removeAll(Collection)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 375
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 i7 a206 
virtualObjectMappings: ?214 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i7 a206 virtualObjectMappings: ?214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i30 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Collection.contains
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v245 
stateDuring: ?316 
=== Succesors ===
next: v295 
=== Usages ===
?31 v32 
=== Predecessor ===
a351 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v245 stateDuring: ?316 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i30 
y: i7 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i30 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v291 
falseSuccessor: v294 
=== Usages ===
=== Predecessor ===
i30 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v291 #falseSuccessor: v294  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
locals: - v1|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=v11|DWORD,expectedModCount=v10|DWORD,lastReturned=v12|QWORD[.],next=v13|QWORD[.],this$0=v0|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=v11|DWORD,expectedModCount=v10|DWORD,lastReturned=v12|QWORD[.],next=v13|QWORD[.],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; v11|DWORD v10|DWORD v12|QWORD[.] v13|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v15|DWORD[.] = MOV [v13|QWORD[.] + 12] size: DWORD state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 28]
locals: - v1|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=v18|DWORD,expectedModCount=v10|DWORD,lastReturned=v13|QWORD[.],next=v19|QWORD[.],this$0=v0|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=v18|DWORD,expectedModCount=v10|DWORD,lastReturned=v13|QWORD[.],next=v19|QWORD[.],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; v18|DWORD v10|DWORD v13|QWORD[.] v19|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Collection.contains(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD, v13|QWORD[.], v19|QWORD[.]] destination: B14 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v292  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<AbstractCollection.removeAll(Collection)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 28]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 375
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 i7 a206 i30 
virtualObjectMappings: ?214 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i7 a206 i30 virtualObjectMappings: ?214  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 246
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -62995 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
stack: v20|DWORD 
locals: - v1|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=v18|DWORD,expectedModCount=v10|DWORD,lastReturned=v13|QWORD[.],next=v19|QWORD[.],this$0=v0|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=v18|DWORD,expectedModCount=v10|DWORD,lastReturned=v13|QWORD[.],next=v19|QWORD[.],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; v18|DWORD v10|DWORD v13|QWORD[.] v19|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:965) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:888) [bci: 1]
at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
result int[-59923|0xffffffffffff15ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -59923
stableDimension: 0
stamp: i32 [-59923] ⇊00000000ffff15ed ⇈00000000ffff15ed
stampKind: i32
value: int[-59923|0xffffffffffff15ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?15 
actionAndReason: i331 
speculation: a150 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?15 actionAndReason: i331 speculation: a150  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -59923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
locals: - v1|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=v11|DWORD,expectedModCount=v10|DWORD,lastReturned=v12|QWORD[.],next=v13|QWORD[.],this$0=v0|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=v11|DWORD,expectedModCount=v10|DWORD,lastReturned=v12|QWORD[.],next=v13|QWORD[.],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; v11|DWORD v10|DWORD v12|QWORD[.] v13|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:380) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.removeAll(AbstractCollection.java:380) [bci: 48]
stamp: void
=== Inputs ===
result: i7 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i7 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/LinkedList; target_method=iterator target_method_class=Ljava/util/AbstractSequentialList; position=at java.util.AbstractCollection.removeAll(AbstractCollection.java:373) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
result int[-57395|0xffffffffffff1fcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -57395
stableDimension: 0
stamp: i32 [-57395] ⇊00000000ffff1fcd ⇈00000000ffff1fcd
stampKind: i32
value: int[-57395|0xffffffffffff1fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57395|0xffffffffffff1fcd]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" "B18" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i320 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-64275 - -57107] ⇊00000000ffff00cd ⇈00000000ffff3fed
valueDescription: i32
=== Inputs ===
merge: v317 
values: i324 i326 i328 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: i324 i326 i328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v323 v325 v327 
=== Succesors ===
next: v322 
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v323 v325 v327 #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i320 
speculation: a150 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i320 speculation: a150  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.removeAll(AbstractCollection.java:371) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@788ebf10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.removeAll(AbstractCollection.java:371) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.47825813677089046 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602874652466920828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4602874652466920828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SAR v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.29396823484529044 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4600307517759695436
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], Object[null], v9|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
locals: - v1|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=v11|DWORD,expectedModCount=v10|DWORD,lastReturned=v12|QWORD[.],next=v13|QWORD[.],this$0=v0|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=v11|DWORD,expectedModCount=v10|DWORD,lastReturned=v12|QWORD[.],next=v13|QWORD[.],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; v11|DWORD v10|DWORD v12|QWORD[.] v13|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v15|DWORD[.] = MOV [v13|QWORD[.] + 12] size: DWORD state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 28]
locals: - v1|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=v18|DWORD,expectedModCount=v10|DWORD,lastReturned=v13|QWORD[.],next=v19|QWORD[.],this$0=v0|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=v18|DWORD,expectedModCount=v10|DWORD,lastReturned=v13|QWORD[.],next=v19|QWORD[.],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; v18|DWORD v10|DWORD v13|QWORD[.] v19|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Collection.contains(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD, v13|QWORD[.], v19|QWORD[.]] destination: B14 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B12" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608093403340026825
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|QWORD[.], v13|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.16824644549763035 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4602287152584099080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4594693956293534040
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594693956293534040
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58387|0xffffffffffff1bed]] destination: B4 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" "B18" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.removeAll(AbstractCollection.java:371) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -59923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
locals: - v1|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=v11|DWORD,expectedModCount=v10|DWORD,lastReturned=v12|QWORD[.],next=v13|QWORD[.],this$0=v0|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=v11|DWORD,expectedModCount=v10|DWORD,lastReturned=v12|QWORD[.],next=v13|QWORD[.],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; v11|DWORD v10|DWORD v12|QWORD[.] v13|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64275|0xffffffffffff04ed]] destination: B8 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -62995 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
stack: v20|DWORD 
locals: - v1|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=v18|DWORD,expectedModCount=v10|DWORD,lastReturned=v13|QWORD[.],next=v19|QWORD[.],this$0=v0|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=v18|DWORD,expectedModCount=v10|DWORD,lastReturned=v13|QWORD[.],next=v19|QWORD[.],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; v18|DWORD v10|DWORD v13|QWORD[.] v19|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57395|0xffffffffffff1fcd]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #19         // java.util.Objects.requireNonNull:(java.lang.Object)java.lang.Object
     4: pop           
     5: iconst_0      
     6: istore_2      
     7: aload_0       
     8: invokevirtual #2          // iterator:()java.util.Iterator
    11: astore_3      
    12: aload_3       
    13: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    18: ifeq          47
    21: aload_1       
    22: aload_3       
    23: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
    28: invokeinterface#20, 2      // java.util.Collection.contains:(java.lang.Object)boolean
    33: ifeq          12
    36: aload_3       
    37: invokeinterface#15, 1      // java.util.Iterator.remove:()void
    42: iconst_1      
    43: istore_2      
    44: goto          12
    47: iload_2       
    48: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@788ebf10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractCollection.removeAll(AbstractCollection.java:371) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed} <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.47825813677089046 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602874652466920828
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4602874652466920828
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = SAR r10|DWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.29396823484529044 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4600307517759695436
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   84  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   90  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
locals: - rdx|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=stack:44|DWORD,lastReturned=r8|QWORD[.],next=r9|QWORD[.],this$0=stack:32|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=stack:44|DWORD,lastReturned=r8|QWORD[.],next=r9|QWORD[.],this$0=stack:32|QWORD[.]} Ljava/util/LinkedList$ListItr; r10|DWORD stack:44|DWORD r8|QWORD[.] r9|QWORD[.] stack:32|QWORD[.] 
>@ <|@ instruction rcx|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD state [bci:12] <|@ <|@
      nr  112  <|@ instruction r8|DWORD[.] = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 28]
locals: - stack:40|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=stack:60|DWORD,expectedModCount=stack:44|DWORD,lastReturned=stack:56|QWORD[.],next=stack:72|QWORD[.],this$0=stack:32|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=stack:60|DWORD,expectedModCount=stack:44|DWORD,lastReturned=stack:56|QWORD[.],next=stack:72|QWORD[.],this$0=stack:32|QWORD[.]} Ljava/util/LinkedList$ListItr; stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:72|QWORD[.] stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Collection.contains(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28] <|@ <|@
      nr  132  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B14 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B12" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608093403340026825
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.16824644549763035 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4602287152584099080
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4594693956293534040
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594693956293534040
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-58387|0xffffffffffff1bed] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" "B18" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  190  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.AbstractCollection.removeAll(AbstractCollection.java:371) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction MOV [r15|QWORD + 668] y: -59923 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [r8:0, r9:0, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
locals: - stack:40|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=r11|DWORD,lastReturned=r8|QWORD[.],next=r9|QWORD[.],this$0=stack:32|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=r11|DWORD,lastReturned=r8|QWORD[.],next=r9|QWORD[.],this$0=stack:32|QWORD[.]} Ljava/util/LinkedList$ListItr; r10|DWORD r11|DWORD r8|QWORD[.] r9|QWORD[.] stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = MOVE input: int[-64275|0xffffffffffff04ed] <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B8 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [r15|QWORD + 668] y: -62995 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [r8:0, stack:24, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
stack: rax|DWORD 
locals: - stack:40|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=stack:44|DWORD,lastReturned=stack:56|QWORD[.],next=r8|QWORD[.],this$0=stack:32|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=stack:44|DWORD,lastReturned=stack:56|QWORD[.],next=r8|QWORD[.],this$0=stack:32|QWORD[.]} Ljava/util/LinkedList$ListItr; r10|DWORD stack:44|DWORD stack:56|QWORD[.] r8|QWORD[.] stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #19         // java.util.Objects.requireNonNull:(java.lang.Object)java.lang.Object
     4: pop           
     5: iconst_0      
     6: istore_2      
     7: aload_0       
     8: invokevirtual #2          // iterator:()java.util.Iterator
    11: astore_3      
    12: aload_3       
    13: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    18: ifeq          47
    21: aload_1       
    22: aload_3       
    23: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
    28: invokeinterface#20, 2      // java.util.Collection.contains:(java.lang.Object)boolean
    33: ifeq          12
    36: aload_3       
    37: invokeinterface#15, 1      // java.util.Iterator.remove:()void
    42: iconst_1      
    43: istore_2      
    44: goto          12
    47: iload_2       
    48: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@788ebf10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractCollection.removeAll(AbstractCollection.java:371) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed} <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.47825813677089046 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4602874652466920828
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4602874652466920828
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = SAR r10|DWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.29396823484529044 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4600307517759695436
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   82  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   84  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   90  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
locals: - rdx|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=stack:44|DWORD,lastReturned=r8|QWORD[.],next=r9|QWORD[.],this$0=stack:32|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=stack:44|DWORD,lastReturned=r8|QWORD[.],next=r9|QWORD[.],this$0=stack:32|QWORD[.]} Ljava/util/LinkedList$ListItr; r10|DWORD stack:44|DWORD r8|QWORD[.] r9|QWORD[.] stack:32|QWORD[.] 
>@ <|@ instruction rcx|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD state [bci:12] <|@ <|@
      nr  112  <|@ instruction r8|DWORD[.] = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 28]
locals: - stack:40|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=stack:60|DWORD,expectedModCount=stack:44|DWORD,lastReturned=stack:56|QWORD[.],next=stack:72|QWORD[.],this$0=stack:32|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=stack:60|DWORD,expectedModCount=stack:44|DWORD,lastReturned=stack:56|QWORD[.],next=stack:72|QWORD[.],this$0=stack:32|QWORD[.]} Ljava/util/LinkedList$ListItr; stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:72|QWORD[.] stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Collection.contains(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28] <|@ <|@
      nr  132  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596455896610610758
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B14 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B12" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608093403340026825
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.16824644549763035 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4602287152584099080
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4594693956293534040
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594693956293534040
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-58387|0xffffffffffff1bed] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" "B18" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  190  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.AbstractCollection.removeAll(AbstractCollection.java:371) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction MOV [r15|QWORD + 668] y: -59923 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [r8:0, r9:0, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12]
locals: - stack:40|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=r11|DWORD,lastReturned=r8|QWORD[.],next=r9|QWORD[.],this$0=stack:32|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=r11|DWORD,lastReturned=r8|QWORD[.],next=r9|QWORD[.],this$0=stack:32|QWORD[.]} Ljava/util/LinkedList$ListItr; r10|DWORD r11|DWORD r8|QWORD[.] r9|QWORD[.] stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = MOVE input: int[-64275|0xffffffffffff04ed] <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B8 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [r15|QWORD + 668] y: -62995 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [r8:0, stack:24, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33]
stack: rax|DWORD 
locals: - stack:40|QWORD[.] int[0|0x0] vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=stack:44|DWORD,lastReturned=stack:56|QWORD[.],next=r8|QWORD[.],this$0=stack:32|QWORD[.]} 
vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=stack:44|DWORD,lastReturned=stack:56|QWORD[.],next=r8|QWORD[.],this$0=stack:32|QWORD[.]} Ljava/util/LinkedList$ListItr; r10|DWORD stack:44|DWORD stack:56|QWORD[.] r8|QWORD[.] stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #19         // java.util.Objects.requireNonNull:(java.lang.Object)java.lang.Object
     4: pop           
     5: iconst_0      
     6: istore_2      
     7: aload_0       
     8: invokevirtual #2          // iterator:()java.util.Iterator
    11: astore_3      
    12: aload_3       
    13: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    18: ifeq          47
    21: aload_1       
    22: aload_3       
    23: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
    28: invokeinterface#20, 2      // java.util.Collection.contains:(java.lang.Object)boolean
    33: ifeq          12
    36: aload_3       
    37: invokeinterface#15, 1      // java.util.Iterator.remove:()void
    42: iconst_1      
    43: istore_2      
    44: goto          12
    47: iload_2       
    48: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c2440488974243048895424288502817e08addeadde0f8565010000448b56104585d20f84d30000004585d20f8cf3000000458bda41d1fb4183fb010f8cc9000000448b561449c1e203448b5e0c44895c24244d8bca49b8000000000000000041ba00000000e9730000000f1f8400000000008b4e0c413bcb0f85c0000000418b490c458b411048c1e10341ffc249c1e003488bf2488bd14c894c241844895424144c8944240848b8ffffffffffffffff90e8000000009085c00f859f0000004c8b4c24084c8b442418448b542414448b5c2424488b542428488b742430443b56107c8fb800000000488b6c24404883c448850500000000c5f877c349ba0000000000000000e93fffffff41ffca4183fa010f8d3f000000448b561849c1e203e925ffffff41baed1bffff4589979c0200004d89a7a8020000e8000000009041c7879c020000ed15ffff4d89a7a8020000e8000000009041baed04ffffebcc4c8b442408448b54241441c7879c020000ed09ffff4d89a7a8020000e8000000009041bacd1fffffeba2e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@788ebf10 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 58 [rdx:0, rsi:0, stack:40, stack:48]at java.util.AbstractCollection.removeAll(AbstractCollection.java:371) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 12 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}  <||@
  Comment 60 {meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}}  <||@
  Comment 67 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B18  <||@
  Comment 73 block B1 null  <||@
  Comment 73 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 18 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 77 20 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 80 22 BRANCH trueDestinationProbability: 0.47825813677089046 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 86 block B3 null  <||@
  Comment 86 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 32 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 89 34 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 95 block B5 null  <||@
  Comment 95 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 44 r11|DWORD = SAR r10|DWORD size: DWORD  <||@
  Comment 101 46 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 105 48 BRANCH trueDestinationProbability: 0.29396823484529044 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 111 block B9 null  <||@
  Comment 111 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 74 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 115 76 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3  <||@
  Comment 119 78 JUMP ~[] destination: B9 -> B10  <||@
  Comment 119 block B10 null  <||@
  Comment 119 80 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 119 82 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 123 84 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 128 86 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 131 88 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 141 90 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 147 92 JUMP ~[] destination: B10 -> B11  <||@
  Comment 152 block B12 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 152 100 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 102 rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 163 104 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 166 106 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16  <||@
  Comment 172 block B13 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 172 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 172 110 rcx|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD state [bci:12]  <||@
  Comment 172 [rdx:0, r8:0, r9:0, stack:40, stack:48]at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12, duringCall: false, rethrow: false]
              |0  |1             |2           |3                                                                                                                                                    
     locals:  |-  |rdx|QWORD[.]  |int[0|0x0]  |vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=stack:44|DWORD,lastReturned=r8|QWORD[.],next=r9|QWORD[.],this$0=stack:32|QWORD[.]}   <||@
  Comment 172 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 176 112 r8|DWORD[.] = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 180 114 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3  <||@
  Comment 184 116 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 187 118 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3  <||@
  Comment 191 120 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 194 122 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 197 124 stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 202 126 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 207 128 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 212 130 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Collection.contains(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28]  <||@
  Comment 212 6  <||@
  Comment 223 {HotSpotMethod<Collection.contains(Object)>}  <||@
  Comment 228 [stack:8, stack:24, stack:40, stack:48]at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 28, duringCall: true, rethrow: false]
              |0  |1                  |2           |3                                                                                                                                                                     
     locals:  |-  |stack:40|QWORD[.]  |int[0|0x0]  |vobject:LinkedList$ListItr:0{nextIndex=stack:60|DWORD,expectedModCount=stack:44|DWORD,lastReturned=stack:56|QWORD[.],next=stack:72|QWORD[.],this$0=stack:32|QWORD[.]}   <||@
  Comment 229 132 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 231 134 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 237 block B14 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 237 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 138 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 242 140 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 247 142 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 252 144 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 257 146 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 262 148 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 267 150 JUMP ~[] destination: B14 -> B11  <||@
  Comment 267 block B11 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 267 94 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 267 96 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 271 98 BRANCH trueDestinationProbability: 0.16824644549763035 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B17  <||@
  Comment 273 block B17 null  <||@
  Comment 273 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 174 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 278 176 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 287 12  <||@
  Comment 297 block B2 null  <||@
  Comment 297 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 297 26 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 307 28 JUMP ~[] destination: B2 -> B10  <||@
  Comment 312 block B6 null  <||@
  Comment 312 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 312 52 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 315 54 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 319 56 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 325 block B7 null  <||@
  Comment 325 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 325 60 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 329 62 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3  <||@
  Comment 333 64 JUMP ~[] destination: B7 -> B10  <||@
  Comment 338 block B4 null  <||@
  Comment 338 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 338 38 r10|DWORD = MOVE input: int[-58387|0xffffffffffff1bed]  <||@
  Comment 344 40 JUMP ~[] destination: B4 -> B19  <||@
  Comment 344 block B19 null  <||@
  Comment 344 184 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 344 186 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 351 188 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 358 190 DEOPT info [bci:0]  <||@
  Comment 358 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 363 [rdx:0, rsi:0]at java.util.AbstractCollection.removeAll(AbstractCollection.java:371) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 364 block B16 null  <||@
  Comment 364 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 166 MOV [r15|QWORD + 668] y: -59923 size: DWORD  <||@
  Comment 375 168 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 382 170 DEOPT info [bci:12]  <||@
  Comment 382 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 387 [r8:0, r9:0, stack:40, stack:48]at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12, duringCall: false, rethrow: false]
              |0  |1                  |2           |3                                                                                                                                               
     locals:  |-  |stack:40|QWORD[.]  |int[0|0x0]  |vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=r11|DWORD,lastReturned=r8|QWORD[.],next=r9|QWORD[.],this$0=stack:32|QWORD[.]}   <||@
  Comment 388 block B8 null  <||@
  Comment 388 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 68 r10|DWORD = MOVE input: int[-64275|0xffffffffffff04ed]  <||@
  Comment 394 70 JUMP ~[] destination: B8 -> B19  <||@
  Comment 396 block B15 null  <||@
  Comment 396 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 396 154 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 401 156 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 406 158 MOV [r15|QWORD + 668] y: -62995 size: DWORD  <||@
  Comment 417 160 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 424 162 DEOPT info [bci:33]  <||@
  Comment 424 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 429 [r8:0, stack:24, stack:40, stack:48]at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33, duringCall: false, rethrow: false]
              |0          |1                  |2           |3                                                                                                                                                          
     locals:  |-          |stack:40|QWORD[.]  |int[0|0x0]  |vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=stack:44|DWORD,lastReturned=stack:56|QWORD[.],next=r8|QWORD[.],this$0=stack:32|QWORD[.]} 
     stack:   |rax|DWORD  |                   |            |                                                                                                                                                             <||@
  Comment 430 block B18 null  <||@
  Comment 430 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 430 180 r10|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd]  <||@
  Comment 436 182 JUMP ~[] destination: B18 -> B19  <||@
  Comment 438 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 438 4  <||@
  Comment 444 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 444 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8932[java.util.AbstractCollection.removeAll(Collection)]"
  method "HotSpotCompilation-8932[java.util.AbstractCollection.removeAll(Collection)]"
  date 1527005178777
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107a5b720 448b560849c1e203493bc20f852fa7dafe900f1f80000000000f1f800000000089842400c0feff4883ec4848896c2440488974243048895424288502817e083c8600f80f8565010000448b56104585d20f84d30000004585d20f8cf3000000458bda41d1fb4183fb010f8cc9000000448b561449c1e203448b5e0c44895c24244d8bca49b8000000000000000041ba00000000e9730000000f1f8400000000008b4e0c413bcb0f85c0000000418b490c458b411048c1e10341ffc249c1e003488bf2488bd14c894c241844895424144c8944240848b8ffffffffffffffff90e8dcaadafe9085c00f859f0000004c8b4c24084c8b442418448b542414448b5c2424488b542428488b742430443b56107c8fb800000000488b6c24404883c4488505c137e3fcc5f877c349ba0000000000000000e93fffffff41ffca4183fa010f8d3f000000448b561849c1e203e925ffffff41baed1bffff4589979c0200004d89a7a8020000e873bddafe9041c7879c020000ed15ffff4d89a7a8020000e85bbddafe9041baed04ffffebcc4c8b442408448b54241441c7879c020000ed09ffff4d89a7a8020000e831bddafe9041bacd1fffffeba2e845ed1eff90e81fbcdafe90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@788ebf10 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 58 [rdx:0, rsi:0, stack:40, stack:48]at java.util.AbstractCollection.removeAll(AbstractCollection.java:371) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 12 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}  <||@
  Comment 60 {meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}}  <||@
  Comment 67 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B18  <||@
  Comment 73 block B1 null  <||@
  Comment 73 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 18 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 77 20 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 80 22 BRANCH trueDestinationProbability: 0.47825813677089046 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 86 block B3 null  <||@
  Comment 86 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 32 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 89 34 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 95 block B5 null  <||@
  Comment 95 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 44 r11|DWORD = SAR r10|DWORD size: DWORD  <||@
  Comment 101 46 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 105 48 BRANCH trueDestinationProbability: 0.29396823484529044 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 111 block B9 null  <||@
  Comment 111 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 74 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 115 76 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3  <||@
  Comment 119 78 JUMP ~[] destination: B9 -> B10  <||@
  Comment 119 block B10 null  <||@
  Comment 119 80 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 119 82 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 123 84 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 128 86 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 131 88 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 141 90 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 147 92 JUMP ~[] destination: B10 -> B11  <||@
  Comment 152 block B12 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 152 100 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 102 rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 163 104 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 166 106 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16  <||@
  Comment 172 block B13 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 172 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 172 110 rcx|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD state [bci:12]  <||@
  Comment 172 [rdx:0, r8:0, r9:0, stack:40, stack:48]at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12, duringCall: false, rethrow: false]
              |0  |1             |2           |3                                                                                                                                                    
     locals:  |-  |rdx|QWORD[.]  |int[0|0x0]  |vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=stack:44|DWORD,lastReturned=r8|QWORD[.],next=r9|QWORD[.],this$0=stack:32|QWORD[.]}   <||@
  Comment 172 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 176 112 r8|DWORD[.] = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 180 114 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3  <||@
  Comment 184 116 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 187 118 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3  <||@
  Comment 191 120 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 194 122 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 197 124 stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 202 126 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 207 128 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 212 130 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Collection.contains(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28]  <||@
  Comment 212 6  <||@
  Comment 223 {HotSpotMethod<Collection.contains(Object)>}  <||@
  Comment 228 [stack:8, stack:24, stack:40, stack:48]at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 28, duringCall: true, rethrow: false]
              |0  |1                  |2           |3                                                                                                                                                                     
     locals:  |-  |stack:40|QWORD[.]  |int[0|0x0]  |vobject:LinkedList$ListItr:0{nextIndex=stack:60|DWORD,expectedModCount=stack:44|DWORD,lastReturned=stack:56|QWORD[.],next=stack:72|QWORD[.],this$0=stack:32|QWORD[.]}   <||@
  Comment 229 132 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 231 134 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 237 block B14 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 237 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 138 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 242 140 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 247 142 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 252 144 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 257 146 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 262 148 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 267 150 JUMP ~[] destination: B14 -> B11  <||@
  Comment 267 block B11 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 267 94 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 267 96 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 271 98 BRANCH trueDestinationProbability: 0.16824644549763035 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B17  <||@
  Comment 273 block B17 null  <||@
  Comment 273 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 174 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 278 176 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 287 12  <||@
  Comment 297 block B2 null  <||@
  Comment 297 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 297 26 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 307 28 JUMP ~[] destination: B2 -> B10  <||@
  Comment 312 block B6 null  <||@
  Comment 312 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 312 52 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 315 54 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 319 56 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 325 block B7 null  <||@
  Comment 325 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 325 60 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 329 62 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@afc2eba encoding: base: 0 shift: 3  <||@
  Comment 333 64 JUMP ~[] destination: B7 -> B10  <||@
  Comment 338 block B4 null  <||@
  Comment 338 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 338 38 r10|DWORD = MOVE input: int[-58387|0xffffffffffff1bed]  <||@
  Comment 344 40 JUMP ~[] destination: B4 -> B19  <||@
  Comment 344 block B19 null  <||@
  Comment 344 184 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 344 186 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 351 188 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 358 190 DEOPT info [bci:0]  <||@
  Comment 358 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 363 [rdx:0, rsi:0]at java.util.AbstractCollection.removeAll(AbstractCollection.java:371) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 364 block B16 null  <||@
  Comment 364 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 166 MOV [r15|QWORD + 668] y: -59923 size: DWORD  <||@
  Comment 375 168 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 382 170 DEOPT info [bci:12]  <||@
  Comment 382 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 387 [r8:0, r9:0, stack:40, stack:48]at java.util.AbstractCollection.removeAll(AbstractCollection.java:374) [bci: 12, duringCall: false, rethrow: false]
              |0  |1                  |2           |3                                                                                                                                               
     locals:  |-  |stack:40|QWORD[.]  |int[0|0x0]  |vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=r11|DWORD,lastReturned=r8|QWORD[.],next=r9|QWORD[.],this$0=stack:32|QWORD[.]}   <||@
  Comment 388 block B8 null  <||@
  Comment 388 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 68 r10|DWORD = MOVE input: int[-64275|0xffffffffffff04ed]  <||@
  Comment 394 70 JUMP ~[] destination: B8 -> B19  <||@
  Comment 396 block B15 null  <||@
  Comment 396 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 396 154 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 401 156 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 406 158 MOV [r15|QWORD + 668] y: -62995 size: DWORD  <||@
  Comment 417 160 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 424 162 DEOPT info [bci:33]  <||@
  Comment 424 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 429 [r8:0, stack:24, stack:40, stack:48]at java.util.AbstractCollection.removeAll(AbstractCollection.java:375) [bci: 33, duringCall: false, rethrow: false]
              |0          |1                  |2           |3                                                                                                                                                          
     locals:  |-          |stack:40|QWORD[.]  |int[0|0x0]  |vobject:LinkedList$ListItr:0{nextIndex=r10|DWORD,expectedModCount=stack:44|DWORD,lastReturned=stack:56|QWORD[.],next=r8|QWORD[.],this$0=stack:32|QWORD[.]} 
     stack:   |rax|DWORD  |                   |            |                                                                                                                                                             <||@
  Comment 430 block B18 null  <||@
  Comment 430 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 430 180 r10|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd]  <||@
  Comment 436 182 JUMP ~[] destination: B18 -> B19  <||@
  Comment 438 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 438 4  <||@
  Comment 444 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 444 5  <||@
  HexCodeFile>>> <|@
end_nmethod
