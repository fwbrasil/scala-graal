begin_compilation
  name " HotSpotCompilation-9765[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup()]"
  method "HotSpotCompilation-9765[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup()]"
  date 1527005218928
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a204 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a204  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v210 v211 v212 ?20 ?35 v217 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 13]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
=== Succesors ===
next: i205 
=== Usages ===
a75 v213 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v212 #next: i205  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 789
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v189 i205 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a204 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 17]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v213 
=== Succesors ===
next: i206 
=== Usages ===
v114 v128 v103 
=== Predecessor ===
a204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v213 #next: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
=== Succesors ===
next: i207 
=== Usages ===
i5 v30 
=== Predecessor ===
i205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 #next: i207  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
=== Succesors ===
next: v163 
=== Usages ===
i5 
=== Predecessor ===
i206 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 8]
stamp: i32
=== Inputs ===
x: i206 
y: i207 
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i206 y: i207  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i8 i37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 10]
stamp: i32
=== Inputs ===
x: i5 
y: i7 
=== Succesors ===
=== Usages ===
v214 i18 v128 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i5 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i205 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i8 y: i205  <|@  <|@
f <@~|@floating>@ <|@
tid a186 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 v197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v162 
=== Usages ===
=== Predecessor ===
i207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v160 #falseSuccessor: v162  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i208 
=== Usages ===
v136 i208 
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i208  <|@  <|@
f <@~|@floating>@ <|@
tid a75 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 13]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a204 
=== Succesors ===
=== Usages ===
v215 v216 v214 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a204  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a75 
index: i8 
=== Succesors ===
=== Usages ===
i208 v136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a75 index: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 17]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v160 
address: v214 
=== Succesors ===
next: v15 
=== Usages ===
i90 
=== Predecessor ===
v160 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v160 address: v214 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 17]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i208 
=== Succesors ===
=== Usages ===
v12 i19 i58 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i208  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:791) [bci: 20]
rawvalue: 57
stableDimension: 0
stamp: i32 [57] ⇊0000000000000039 ⇈0000000000000039
stampKind: i32
value: int[57|0x39]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:791) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i11 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i90 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:805) [bci: 100]
rawvalue: 1
stableDimension: 0
stamp: i8 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v126 v137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v126 v137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i49 i58 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:791) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0030473692331430824
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
i208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4569173177569048320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors "B4" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4573676777196418816
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v17 
values: i8 i37 
=== Succesors ===
=== Usages ===
?20 v216 v30 v114 ?35 i37 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v17 values: i8 i37  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v17 
values: i90 i111 
=== Succesors ===
=== Usages ===
?20 v40 i49 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v17 values: i90 i111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v16 
=== Succesors ===
next: v168 
=== Usages ===
i18 i19 v24 v39 v177 v167 v172 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v16 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i205 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i18 y: i205  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v167 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v164 #falseSuccessor: v167  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573676777196418816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
v122 v101 
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a75 
index: i18 
=== Succesors ===
=== Usages ===
v122 v101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a75 index: i18  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:796) [bci: 63]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i11 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i19 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v22 #falseSuccessor: v24  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 36]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i206 
y: i18 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i206 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 36]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v169 #falseSuccessor: v172  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 51]
stamp: i32
=== Inputs ===
x: i18 
y: i7 
=== Succesors ===
=== Usages ===
v215 i18 v103 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i18 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 55]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i205 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i37 y: i205  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 55]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v174 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v174 #falseSuccessor: v177  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
i209 
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:793) [bci: 46]
rawvalue: 48
stableDimension: 0
stamp: i16 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i16
value: short[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:793) [bci: 46]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v164 
address: v216 
value: i140 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v164 address: v216 value: i140 stateAfter: - lastLocationAccess: - #next: v154  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 47
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:793) [bci: 46]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 794
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i18 - 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i18 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?35 
=== Succesors ===
next: i209 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?35 #next: i209  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a75 
index: i37 
=== Succesors ===
=== Usages ===
i209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a75 index: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i209 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 55]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v174 
address: v215 
=== Succesors ===
next: v39 
=== Usages ===
i111 
=== Predecessor ===
v154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v174 address: v215 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 55]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i209 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i209  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25]
stamp: void
=== Inputs ===
loopBegin: v17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i209 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 55]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v17 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v17 #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -26651
stableDimension: 0
stamp: i32 [-26651] ⇊00000000ffff97e5 ⇈00000000ffff97e5
stampKind: i32
value: int[-26651|0xffffffffffff97e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v17 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v17 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23315
stableDimension: 0
stamp: i32 [-23315] ⇊00000000ffffa4ed ⇈00000000ffffa4ed
stampKind: i32
value: int[-23315|0xffffffffffffa4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4569173177569048320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:796) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v17 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v17 #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 95]
stamp: i32 [1 - 65536] ⇈000000000001ffff
=== Inputs ===
x: i19 
y: i6 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 96]
resultBits: 16
stamp: i16
=== Inputs ===
value: i49 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i49  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v164 
address: v216 
value: i50 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v164 address: v216 value: i50 stateAfter: - lastLocationAccess: - #next: v126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decimalDigitsRoundedUp
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:805) [bci: 100]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
value: i143 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v217 value: i143 stateAfter: - lastLocationAccess: - #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:806) [bci: 103]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v17 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v17 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38939
stableDimension: 0
stamp: i32 [-38939] ⇊00000000ffff67e5 ⇈00000000ffff67e5
stampKind: i32
value: int[-38939|0xffffffffffff67e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v167 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i195 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-38939 - -23315] ⇊00000000ffff04e5 ⇈00000000fffff7ed
valueDescription: i32
=== Inputs ===
merge: v192 
values: i199 i201 i203 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v192 values: i199 i201 i203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v198 v200 v202 
=== Succesors ===
next: v197 
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v198 v200 v202 #next: v197  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i18 i19 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i18 i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?20 
actionAndReason: i195 
speculation: a186 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?20 actionAndReason: i195 speculation: a186  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607154970538131721
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 95]
stamp: i32 [1 - 65536] ⇈000000000001ffff
=== Inputs ===
x: i90 
y: i6 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i90 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 96]
resultBits: 16
stamp: i16
=== Inputs ===
value: i58 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v160 
address: v214 
value: i59 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v160 address: v214 value: i59 stateAfter: - lastLocationAccess: - #next: v137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decimalDigitsRoundedUp
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:805) [bci: 100]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
value: i143 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v217 value: i143 stateAfter: - lastLocationAccess: - #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:806) [bci: 103]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21275
stableDimension: 0
stamp: i32 [-21275] ⇊00000000fffface5 ⇈00000000fffface5
stampKind: i32
value: int[-21275|0xfffffffffffface5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i191 
speculation: a186 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i191 speculation: a186  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a204 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a204  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v210 v211 v212 ?20 ?35 v217 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a204 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 13]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
=== Succesors ===
next: i205 
=== Usages ===
a75 v213 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v212 #next: i205  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 789
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v189 i205 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a204 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i205 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 17]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v213 
=== Succesors ===
next: i206 
=== Usages ===
v114 v128 v103 
=== Predecessor ===
a204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v213 #next: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i206 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
=== Succesors ===
next: i207 
=== Usages ===
i5 v30 
=== Predecessor ===
i205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 #next: i207  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i207 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
=== Succesors ===
next: v163 
=== Usages ===
i5 
=== Predecessor ===
i206 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 8]
stamp: i32
=== Inputs ===
x: i206 
y: i207 
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i206 y: i207  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i8 i37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 10]
stamp: i32
=== Inputs ===
x: i5 
y: i7 
=== Succesors ===
=== Usages ===
v214 i18 v128 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i5 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i205 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i8 y: i205  <|@  <|@
f <@~|@floating>@ <|@
tid a186 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 v197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v162 
=== Usages ===
=== Predecessor ===
i207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v160 #falseSuccessor: v162  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@109f2c25 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i208 
=== Usages ===
v136 i208 
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i208  <|@  <|@
f <@~|@floating>@ <|@
tid a75 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 13]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a204 
=== Succesors ===
=== Usages ===
v215 v216 v214 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a204  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
result [v6|QWORD[.] + v5|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a75 
index: i8 
=== Succesors ===
=== Usages ===
i208 v136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a75 index: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i208 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 17]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v160 
address: v214 
=== Succesors ===
next: v15 
=== Usages ===
i90 
=== Predecessor ===
v160 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v160 address: v214 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 17]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i208 
=== Succesors ===
=== Usages ===
v12 i19 i58 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i208  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[57|0x39] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:791) [bci: 20]
rawvalue: 57
stableDimension: 0
stamp: i32 [57] ⇊0000000000000039 ⇈0000000000000039
stampKind: i32
value: int[57|0x39]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:791) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i11 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i90 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
result byte[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:805) [bci: 100]
rawvalue: 1
stableDimension: 0
stamp: i8 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v126 v137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
result [v0|QWORD[.] + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v126 v137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i49 i58 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:791) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0030473692331430824
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
i208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5c466f02 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVZX [v6|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 57 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0030473692331430824 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4569173177569048320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|DWORD, v7|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors "B4" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4573676777196418816
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i18 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v17 
values: i8 i37 
=== Succesors ===
=== Usages ===
?20 v216 v30 v114 ?35 i37 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v17 values: i8 i37  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v17 
values: i90 i111 
=== Succesors ===
=== Usages ===
?20 v40 i49 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v17 values: i90 i111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v16 
=== Succesors ===
next: v168 
=== Usages ===
i18 i19 v24 v39 v177 v167 v172 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v16 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i205 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i18 y: i205  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v167 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v164 #falseSuccessor: v167  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573676777196418816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
v122 v101 
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
result [v6|QWORD[.] + v8|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a75 
index: i18 
=== Succesors ===
=== Usages ===
v122 v101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a75 index: i18  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:796) [bci: 63]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i11 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i19 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v22 #falseSuccessor: v24  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 57 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 36]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i206 
y: i18 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i206 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 36]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v169 #falseSuccessor: v172  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 51]
stamp: i32
=== Inputs ===
x: i18 
y: i7 
=== Succesors ===
=== Usages ===
v215 i18 v103 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i18 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 55]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i205 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i37 y: i205  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 55]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v174 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v174 #falseSuccessor: v177  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
i209 
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result short[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:793) [bci: 46]
rawvalue: 48
stableDimension: 0
stamp: i16 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i16
value: short[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:793) [bci: 46]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v164 
address: v216 
value: i140 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v164 address: v216 value: i140 stateAfter: - lastLocationAccess: - #next: v154  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 47
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:793) [bci: 46]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 794
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i18 - 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i18 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?35 
=== Succesors ===
next: i209 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?35 #next: i209  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
result [v6|QWORD[.] + v10|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a75 
index: i37 
=== Succesors ===
=== Usages ===
i209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a75 index: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i209 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 55]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v174 
address: v215 
=== Succesors ===
next: v39 
=== Usages ===
i111 
=== Predecessor ===
v154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v174 address: v215 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 55]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i209 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i209  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25]
stamp: void
=== Inputs ===
loopBegin: v17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i209 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v8|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 47]
locals: v0|QWORD[.] v8|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZX [v6|QWORD[.] + v10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v11|DWORD] destination: B7 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 55]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v17 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v17 #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
result int[-26651|0xffffffffffff97e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -26651
stableDimension: 0
stamp: i32 [-26651] ⇊00000000ffff97e5 ⇈00000000ffff97e5
stampKind: i32
value: int[-26651|0xffffffffffff97e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26651|0xffffffffffff97e5]] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v17 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v17 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result int[-23315|0xffffffffffffa4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23315
stableDimension: 0
stamp: i32 [-23315] ⇊00000000ffffa4ed ⇈00000000ffffa4ed
stampKind: i32
value: int[-23315|0xffffffffffffa4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23315|0xffffffffffffa4ed]] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4569173177569048320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:796) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v17 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v17 #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 95]
stamp: i32 [1 - 65536] ⇈000000000001ffff
=== Inputs ===
x: i19 
y: i6 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 96]
resultBits: 16
stamp: i16
=== Inputs ===
value: i49 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i49  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v164 
address: v216 
value: i50 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v164 address: v216 value: i50 stateAfter: - lastLocationAccess: - #next: v126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decimalDigitsRoundedUp
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:805) [bci: 100]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
value: i143 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v217 value: i143 stateAfter: - lastLocationAccess: - #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:806) [bci: 103]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + v8|DWORD * 2 + 16], y: v12|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 26] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v17 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v17 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
result int[-38939|0xffffffffffff67e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38939
stableDimension: 0
stamp: i32 [-38939] ⇊00000000ffff67e5 ⇈00000000ffff67e5
stampKind: i32
value: int[-38939|0xffffffffffff67e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v167 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38939|0xffffffffffff67e5]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i195 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-38939 - -23315] ⇊00000000ffff04e5 ⇈00000000fffff7ed
valueDescription: i32
=== Inputs ===
merge: v192 
values: i199 i201 i203 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v192 values: i199 i201 i203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v198 v200 v202 
=== Succesors ===
next: v197 
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v198 v200 v202 #next: v197  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i18 i19 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i18 i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?20 
actionAndReason: i195 
speculation: a186 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?20 actionAndReason: i195 speculation: a186  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25]
locals: v0|QWORD[.] v8|DWORD v9|DWORD 
>@ <|@ instruction DEOPT info [bci:25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607154970538131721
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 95]
stamp: i32 [1 - 65536] ⇈000000000001ffff
=== Inputs ===
x: i90 
y: i6 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i90 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 96]
resultBits: 16
stamp: i16
=== Inputs ===
value: i58 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:804) [bci: 97]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v160 
address: v214 
value: i59 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v160 address: v214 value: i59 stateAfter: - lastLocationAccess: - #next: v137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decimalDigitsRoundedUp
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:805) [bci: 100]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
value: i143 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v217 value: i143 stateAfter: - lastLocationAccess: - #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:806) [bci: 103]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + v5|DWORD * 2 + 16], y: v14|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 26] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:790) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result int[-21275|0xfffffffffffface5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21275
stableDimension: 0
stamp: i32 [-21275] ⇊00000000fffface5 ⇈00000000fffface5
stampKind: i32
value: int[-21275|0xfffffffffffface5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i191 
speculation: a186 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i191 speculation: a186  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -21275 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@109f2c25 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5c466f02 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVZX [v6|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 57 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0030473692331430824 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607154970538131721
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + v5|DWORD * 2 + 16], y: v14|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 26] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4569173177569048320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|DWORD, v7|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573676777196418816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 57 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v8|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 47]
locals: v0|QWORD[.] v8|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZX [v6|QWORD[.] + v10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v11|DWORD] destination: B7 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors "B4" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4573676777196418816
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4569173177569048320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + v8|DWORD * 2 + 16], y: v12|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 26] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -21275 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26651|0xffffffffffff97e5]] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25]
locals: v0|QWORD[.] v8|DWORD v9|DWORD 
>@ <|@ instruction DEOPT info [bci:25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38939|0xffffffffffff67e5]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23315|0xffffffffffffa4ed]] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // firstDigitIndex:int
     4: aload_0       
     5: getfield      #10         // nDigits:int
     8: iadd          
     9: iconst_1      
    10: isub          
    11: istore_1      
    12: aload_0       
    13: getfield      #6          // digits:char[]
    16: iload_1       
    17: caload        
    18: istore_2      
    19: iload_2       
    20: bipush        57
    22: if_icmpne     88
    25: iload_2       
    26: bipush        57
    28: if_icmpne     60
    31: iload_1       
    32: aload_0       
    33: getfield      #9          // firstDigitIndex:int
    36: if_icmple     60
    39: aload_0       
    40: getfield      #6          // digits:char[]
    43: iload_1       
    44: bipush        48
    46: castore       
    47: aload_0       
    48: getfield      #6          // digits:char[]
    51: iinc          
    54: iload_1       
    55: caload        
    56: istore_2      
    57: goto          25
    60: iload_2       
    61: bipush        57
    63: if_icmpne     88
    66: aload_0       
    67: dup           
    68: getfield      #8          // decExponent:int
    71: iconst_1      
    72: iadd          
    73: putfield      #8          // decExponent:int
    76: aload_0       
    77: getfield      #6          // digits:char[]
    80: aload_0       
    81: getfield      #9          // firstDigitIndex:int
    84: bipush        49
    86: castore       
    87: return        
    88: aload_0       
    89: getfield      #6          // digits:char[]
    92: iload_1       
    93: iload_2       
    94: iconst_1      
    95: iadd          
    96: i2c           
    97: castore       
    98: aload_0       
    99: iconst_1      
   100: putfield      #5          // decimalDigitsRoundedUp:boolean
   103: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@109f2c25 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5c466f02 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction rcx|DWORD = MOVZX [r10|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction CMP rcx|DWORD y: 57 size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.0030473692331430824 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607154970538131721
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr   38  <|@ instruction MOVB [rsi|QWORD[.] + 26] y: 1 size: BYTE <|@ <|@
      nr   40  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4569173177569048320
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573676777196418816
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   54  <|@ instruction CMP rcx|DWORD y: 57 size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r10|QWORD[.] + r9|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 47]
locals: rsi|QWORD[.] r9|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:47] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = MOVZX [r10|QWORD[.] + rbx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors "B4" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4573676777196418816
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   48  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4569173177569048320
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr   88  <|@ instruction MOVB [rsi|QWORD[.] + 26] y: 1 size: BYTE <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction MOV [r15|QWORD + 668] y: -21275 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26651|0xffffffffffff97e5] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25]
locals: rsi|QWORD[.] r9|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-38939|0xffffffffffff67e5] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23315|0xffffffffffffa4ed] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // firstDigitIndex:int
     4: aload_0       
     5: getfield      #10         // nDigits:int
     8: iadd          
     9: iconst_1      
    10: isub          
    11: istore_1      
    12: aload_0       
    13: getfield      #6          // digits:char[]
    16: iload_1       
    17: caload        
    18: istore_2      
    19: iload_2       
    20: bipush        57
    22: if_icmpne     88
    25: iload_2       
    26: bipush        57
    28: if_icmpne     60
    31: iload_1       
    32: aload_0       
    33: getfield      #9          // firstDigitIndex:int
    36: if_icmple     60
    39: aload_0       
    40: getfield      #6          // digits:char[]
    43: iload_1       
    44: bipush        48
    46: castore       
    47: aload_0       
    48: getfield      #6          // digits:char[]
    51: iinc          
    54: iload_1       
    55: caload        
    56: istore_2      
    57: goto          25
    60: iload_2       
    61: bipush        57
    63: if_icmpne     88
    66: aload_0       
    67: dup           
    68: getfield      #8          // decExponent:int
    71: iconst_1      
    72: iadd          
    73: putfield      #8          // decExponent:int
    76: aload_0       
    77: getfield      #6          // digits:char[]
    80: aload_0       
    81: getfield      #9          // firstDigitIndex:int
    84: bipush        49
    86: castore       
    87: return        
    88: aload_0       
    89: getfield      #6          // digits:char[]
    92: iload_1       
    93: iload_2       
    94: iconst_1      
    95: iadd          
    96: i2c           
    97: castore       
    98: aload_0       
    99: iconst_1      
   100: putfield      #5          // decimalDigitsRoundedUp:boolean
   103: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@109f2c25 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5c466f02 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction rcx|DWORD = MOVZX [r10|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction CMP rcx|DWORD y: 57 size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.0030473692331430824 condition: = trueDestination: B1 -> B3 falseDestination: B1 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607154970538131721
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr   38  <|@ instruction MOVB [rsi|QWORD[.] + 26] y: 1 size: BYTE <|@ <|@
      nr   40  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573676777196418816
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   54  <|@ instruction CMP rcx|DWORD y: 57 size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4569173177569048320
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r10|QWORD[.] + r9|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 47]
locals: rsi|QWORD[.] r9|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:47] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = MOVZX [r10|QWORD[.] + rbx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B7" 
    successors "B4" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4573676777196418816
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   48  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4569173177569048320
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr   88  <|@ instruction MOVB [rsi|QWORD[.] + 26] y: 1 size: BYTE <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction MOV [r15|QWORD + 668] y: -21275 size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26651|0xffffffffffff97e5] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25]
locals: rsi|QWORD[.] r9|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-38939|0xffffffffffff67e5] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23315|0xffffffffffffa4ed] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // firstDigitIndex:int
     4: aload_0       
     5: getfield      #10         // nDigits:int
     8: iadd          
     9: iconst_1      
    10: isub          
    11: istore_1      
    12: aload_0       
    13: getfield      #6          // digits:char[]
    16: iload_1       
    17: caload        
    18: istore_2      
    19: iload_2       
    20: bipush        57
    22: if_icmpne     88
    25: iload_2       
    26: bipush        57
    28: if_icmpne     60
    31: iload_1       
    32: aload_0       
    33: getfield      #9          // firstDigitIndex:int
    36: if_icmple     60
    39: aload_0       
    40: getfield      #6          // digits:char[]
    43: iload_1       
    44: bipush        48
    46: castore       
    47: aload_0       
    48: getfield      #6          // digits:char[]
    51: iinc          
    54: iload_1       
    55: caload        
    56: istore_2      
    57: goto          25
    60: iload_2       
    61: bipush        57
    63: if_icmpne     88
    66: aload_0       
    67: dup           
    68: getfield      #8          // decExponent:int
    71: iconst_1      
    72: iadd          
    73: putfield      #8          // decExponent:int
    76: aload_0       
    77: getfield      #6          // digits:char[]
    80: aload_0       
    81: getfield      #9          // firstDigitIndex:int
    84: bipush        49
    86: castore       
    87: return        
    88: aload_0       
    89: getfield      #6          // digits:char[]
    92: iload_1       
    93: iload_2       
    94: iconst_1      
    95: iadd          
    96: i2c           
    97: castore       
    98: aload_0       
    99: iconst_1      
   100: putfield      #5          // decimalDigitsRoundedUp:boolean
   103: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b561c468b1cd50c000000448b4610458bc844034e1441ffc9453bd90f869d00000049c1e203430fb74c4a1083f9390f8461000000ffc16643894c4a10c6461a01488b6c24104883c418850500000000c5f877c36666660f1f84000000000083f9390f8538000000453bc80f8e88000000418bd9ffcb443bdb0f86580000006643c7444a103000850500000000410fb74c5a10448bcb453bd977c4e951000000ffc16643894c4a10c6461a01488b6c24104883c418850500000000c5f877c341c7879c020000e5acffff4d89a7a8020000e8000000009041bae597ffff4589979c0200004d89a7a8020000e8000000009041bae567ffffebe441baeda4ffffebdce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@109f2c25 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 52 10 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 52 [rsi:0, r10:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 12 r8|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 64 14 r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 71 16 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 74 18 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 77 20 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14  <||@
  Comment 83 block B1 null  <||@
  Comment 83 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 24 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5c466f02 encoding: base: 0 shift: 3  <||@
  Comment 87 26 rcx|DWORD = MOVZX [r10|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD  <||@
  Comment 93 28 CMP rcx|DWORD y: 57 size: DWORD  <||@
  Comment 96 30 BRANCH trueDestinationProbability: 0.0030473692331430824 condition: = trueDestination: B1 -> B3 falseDestination: B1 -> B13  <||@
  Comment 102 block B13 null  <||@
  Comment 102 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 102 34 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 104 36 MOV (x: [r10|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 110 38 MOVB [rsi|QWORD[.] + 26] y: 1 size: BYTE  <||@
  Comment 114 40 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 123 12  <||@
  Comment 133 block B4 loop 0 depth 1 header:17|LoopBegin  <||@
  Comment 133 52 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 144 54 CMP rcx|DWORD y: 57 size: DWORD  <||@
  Comment 147 56 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B10  <||@
  Comment 153 block B5 loop 0 depth 1 header:17|LoopBegin  <||@
  Comment 153 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 60 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 156 62 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 162 block B6 loop 0 depth 1 header:17|LoopBegin  <||@
  Comment 162 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 66 rbx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 167 68 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 170 70 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 176 block B7 loop 0 depth 1 header:17|LoopBegin  <||@
  Comment 176 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 176 74 MOV [r10|QWORD[.] + r9|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 184 76 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:47]  <||@
  Comment 184 [rsi:0, r10:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 47, duringCall: false, rethrow: false]
              |0             |1         |2 
     locals:  |rsi|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 184 {infopoint: SAFEPOINT}  <||@
  Comment 184 11  <||@
  Comment 190 78 rcx|DWORD = MOVZX [r10|QWORD[.] + rbx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 196 -1 r9|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 199 80 JUMP ~[] destination: B7 -> B3  <||@
  Comment 199 block B3 loop 0 depth 1 header:17|LoopBegin  <||@
  Comment 199 46 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 199 48 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 202 50 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B11  <||@
  Comment 209 block B10 null  <||@
  Comment 209 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 84 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 211 86 MOV (x: [r10|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 217 88 MOVB [rsi|QWORD[.] + 26] y: 1 size: BYTE  <||@
  Comment 221 90 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 230 12  <||@
  Comment 240 block B14 null  <||@
  Comment 240 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 94 MOV [r15|QWORD + 668] y: -21275 size: DWORD  <||@
  Comment 251 96 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 258 98 DEOPT info [bci:0]  <||@
  Comment 258 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 263 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 264 block B8 null  <||@
  Comment 264 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 -1 r10|DWORD = MOVE input: int[-26651|0xffffffffffff97e5]  <||@
  Comment 270 102 JUMP ~[] destination: B8 -> B12  <||@
  Comment 270 block B12 null  <||@
  Comment 270 112 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 270 114 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 277 116 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 284 118 DEOPT info [bci:25]  <||@
  Comment 284 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 289 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25, duringCall: false, rethrow: false]
              |0             |1         |2         
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rcx|DWORD   <||@
  Comment 290 block B11 null  <||@
  Comment 290 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 290 -1 r10|DWORD = MOVE input: int[-38939|0xffffffffffff67e5]  <||@
  Comment 296 106 JUMP ~[] destination: B11 -> B12  <||@
  Comment 298 block B9 null  <||@
  Comment 298 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 -1 r10|DWORD = MOVE input: int[-23315|0xffffffffffffa4ed]  <||@
  Comment 304 110 JUMP ~[] destination: B9 -> B12  <||@
  Comment 306 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 306 4  <||@
  Comment 312 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 312 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9765[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup()]"
  method "HotSpotCompilation-9765[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup()]"
  date 1527005218992
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c04ea0 448b560849c1e203493bc20f85af0fc0fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b561c468b1cd50c000000448b4610458bc844034e1441ffc9453bd90f869d00000049c1e203430fb74c4a1083f9390f8461000000ffc16643894c4a10c6461a01488b6c24104883c4188505e5a0c8fcc5f877c36666660f1f84000000000083f9390f8538000000453bc80f8e88000000418bd9ffcb443bdb0f86580000006643c7444a1030008505a8a0c8fc410fb74c5a10448bcb453bd977c4e951000000ffc16643894c4a10c6461a01488b6c24104883c41885057aa0c8fcc5f877c341c7879c020000e5acffff4d89a7a8020000e85726c0fe9041bae597ffff4589979c0200004d89a7a8020000e83d26c0fe9041bae567ffffebe441baeda4ffffebdce8495604ff90e82325c0fe90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@109f2c25 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 52 10 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 52 [rsi:0, r10:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 12 r8|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 64 14 r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 71 16 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 74 18 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 77 20 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14  <||@
  Comment 83 block B1 null  <||@
  Comment 83 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 24 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5c466f02 encoding: base: 0 shift: 3  <||@
  Comment 87 26 rcx|DWORD = MOVZX [r10|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD  <||@
  Comment 93 28 CMP rcx|DWORD y: 57 size: DWORD  <||@
  Comment 96 30 BRANCH trueDestinationProbability: 0.0030473692331430824 condition: = trueDestination: B1 -> B3 falseDestination: B1 -> B13  <||@
  Comment 102 block B13 null  <||@
  Comment 102 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 102 34 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 104 36 MOV (x: [r10|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 110 38 MOVB [rsi|QWORD[.] + 26] y: 1 size: BYTE  <||@
  Comment 114 40 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 123 12  <||@
  Comment 133 block B4 loop 0 depth 1 header:17|LoopBegin  <||@
  Comment 133 52 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 144 54 CMP rcx|DWORD y: 57 size: DWORD  <||@
  Comment 147 56 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B10  <||@
  Comment 153 block B5 loop 0 depth 1 header:17|LoopBegin  <||@
  Comment 153 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 60 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 156 62 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 162 block B6 loop 0 depth 1 header:17|LoopBegin  <||@
  Comment 162 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 66 rbx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 167 68 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 170 70 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 176 block B7 loop 0 depth 1 header:17|LoopBegin  <||@
  Comment 176 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 176 74 MOV [r10|QWORD[.] + r9|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 184 76 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:47]  <||@
  Comment 184 [rsi:0, r10:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:794) [bci: 47, duringCall: false, rethrow: false]
              |0             |1         |2 
     locals:  |rsi|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 184 {infopoint: SAFEPOINT}  <||@
  Comment 184 11  <||@
  Comment 190 78 rcx|DWORD = MOVZX [r10|QWORD[.] + rbx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 196 -1 r9|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 199 80 JUMP ~[] destination: B7 -> B3  <||@
  Comment 199 block B3 loop 0 depth 1 header:17|LoopBegin  <||@
  Comment 199 46 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 199 48 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 202 50 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B11  <||@
  Comment 209 block B10 null  <||@
  Comment 209 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 84 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 211 86 MOV (x: [r10|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 217 88 MOVB [rsi|QWORD[.] + 26] y: 1 size: BYTE  <||@
  Comment 221 90 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 230 12  <||@
  Comment 240 block B14 null  <||@
  Comment 240 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 94 MOV [r15|QWORD + 668] y: -21275 size: DWORD  <||@
  Comment 251 96 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 258 98 DEOPT info [bci:0]  <||@
  Comment 258 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 263 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:789) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 264 block B8 null  <||@
  Comment 264 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 -1 r10|DWORD = MOVE input: int[-26651|0xffffffffffff97e5]  <||@
  Comment 270 102 JUMP ~[] destination: B8 -> B12  <||@
  Comment 270 block B12 null  <||@
  Comment 270 112 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 270 114 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 277 116 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 284 118 DEOPT info [bci:25]  <||@
  Comment 284 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 289 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.roundup(FloatingDecimal.java:792) [bci: 25, duringCall: false, rethrow: false]
              |0             |1         |2         
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rcx|DWORD   <||@
  Comment 290 block B11 null  <||@
  Comment 290 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 290 -1 r10|DWORD = MOVE input: int[-38939|0xffffffffffff67e5]  <||@
  Comment 296 106 JUMP ~[] destination: B11 -> B12  <||@
  Comment 298 block B9 null  <||@
  Comment 298 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 -1 r10|DWORD = MOVE input: int[-23315|0xffffffffffffa4ed]  <||@
  Comment 304 110 JUMP ~[] destination: B9 -> B12  <||@
  Comment 306 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 306 4  <||@
  Comment 312 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 312 5  <||@
  HexCodeFile>>> <|@
end_nmethod
